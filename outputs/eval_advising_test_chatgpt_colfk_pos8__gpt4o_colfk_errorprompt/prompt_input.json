{"7657aca393ebd61d586e05c7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses started after 2016-09-05 in fall 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 AND COURSE_OFFERINGalias0.START_TIME > '2016-09-05'\nAnswer: ", "863af96bf50521f9c8079b00": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was STDABRD 306 section 354 being offered in Summer 2003 semester?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.SECTION_NUMBER = 354 AND COURSEalias0.DEPARTMENT = \"STDABRD\" AND COURSEalias0.NUMBER = 306 AND SEMESTERalias0.SEMESTER = \"SU\" AND SEMESTERalias0.YEAR = 2003 \nAnswer: ", "3786ba2a804749d7dc2586a6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the courses that could've been used for my MDE?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%MDE%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "10d06cdabd018675e0e60f73": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many undergraduate students have returned damaged?\nPredicted SQL: SELECT COUNT(*) FROM STUDENT WHERE STUDENT.DEGREE = \"Undergraduate\" AND STUDENT.RETURNED_AS = \"Damaged\"\nAnswer: ", "71baf4d71266304df8c85b56": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you tell me if EECS 334 in 2016 was only offered on Mondays and Wednesdays?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSE_OFFERINGalias0.MONDAY = \"Y\" AND COURSE_OFFERINGalias0.THURSDAY = \"N\" AND COURSE_OFFERINGalias0.TUESDAY = \"N\" AND COURSE_OFFERINGalias0.WEDNESDAY = \"Y\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 334 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "cd026018d8d60b39c04e3348": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Organize a professor's teaching schedule considering their availability and course offerings.\nPredicted SQL: SELECT INSTRUCTOR.NAME, COURSE_OFFERING.SEMESTER, COURSE_OFFERING.START_TIME, COURSE_OFFERING.END_TIME, COURSE_OFFERING.MONDAY, COURSE_OFFERING.TUESDAY, COURSE_OFFERING.WEDNESDAY, COURSE_OFFERING.THURSDAY, COURSE_OFFERING.FRIDAY, COURSE_OFFERING.SATURDAY, COURSE_OFFERING.SUNDAY\nFROM INSTRUCTOR\nINNER JOIN OFFERING_INSTRUCTOR ON INSTRUCTOR.INSTRUCTOR_ID = OFFERING_INSTRUCTOR.INSTRUCTOR_ID\nINNER JOIN COURSE_OFFERING ON OFFERING_INSTRUCTOR.OFFERING_ID = COURSE_OFFERING.OFFERING_ID\nAnswer: ", "ce8bdb64fd63a205d763101f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of all the Organogenesis:  Stem Cells to Regenerative Biology courses, which ones had no prerequisites?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Organogenesis: Stem Cells to Regenerative Biology%\" AND COURSEalias0.COURSE_ID NOT IN (SELECT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0) \nAnswer: ", "f7b9029fbf2ae063e4586c71": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was the SOC 515 course in Winter 2012 taught by instructor Frederick Fitzgerald Wherry?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"SOC\" AND COURSEalias0.NUMBER = 515 AND SEMESTERalias0.SEMESTER = \"Winter\" AND SEMESTERalias0.YEAR = 2012 AND INSTRUCTORalias0.NAME LIKE \"%Frederick Fitzgerald Wherry%\" \nAnswer: ", "ab1aa5b0047b6962ceb1d976": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the upper-level CS courses that don't require EECS 546.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0, PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias1.COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITEalias0.PRE_COURSE_ID FROM COURSE AS COURSEalias0, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 546 AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "9836bd2f84da6729b8363320": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What Sociocultural Laboratory courses did not require prerequisites?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Sociocultural Laboratory%\" AND COURSEalias0.ADVISORY_REQUIREMENT IS NULL AND COURSEalias0.ENFORCED_REQUIREMENT IS NULL\nAnswer: ", "c3a668c676c18e166d9db685": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of courses that taught intelligent systems.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%intelligent systems%\" \nAnswer: ", "3edd97e32360b66f5d033916": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses were available in Spring or Summer 2016 that meet the PreMajor requirement?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" , \"SU\" ) AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "be3a0354cc8a487c0de0f1e3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the list of 100-level EECS courses offered in the Fall 2016 or Winter 2016 term?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 100 + 100 AND COURSEalias0.NUMBER >= 100 AND SEMESTERalias0.SEMESTER IN ( \"FA\" , \"WN\" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "5d53fa82383110ceb26f4bb0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses were there for CS major to take in Fall 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE \"%CS%\" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "720e933760a2be4b858f92ac": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Do SPANISH 278 courses recurrently occur every semester?\nPredicted SQL: SELECT COUNT( * ) = 0 FROM SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER NOT IN ( SELECT DISTINCT SEMESTERalias1.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias1 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"SPANISH\" AND COURSEalias0.NUMBER = 278 AND SEMESTERalias1.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ) \nAnswer: ", "2edfdc7b55f9a0e1da37db7e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Propose relevant internships for eecs juniors.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 , STUDENT AS STUDENTalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND STUDENTalias0.DECLARE_MAJOR = \"EECS\" AND STUDENTalias0.ENTERED_AS = \"Junior\" AND STUDENTalias0.INTERNSHIP = \"Yes\"\nAnswer: ", "c2b1ccce9414404f60ba0e5f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which student has made the most standing tackles?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "18b39d5d95345a34f91877b0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of upper-level CS courses that do not require EECS 792 as a prerequisite.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0, PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias1.COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITEalias0.PRE_COURSE_ID FROM COURSE AS COURSEalias0, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 792 AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "999d38bb1618e177f2520e16": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the courses on hardware in Spring or Summer 2014?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%hardware%\" AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SU\" , \"SS\" ) AND SEMESTERalias0.YEAR = 2014 \nAnswer: ", "4f9ad5ac6c78b1f72dcb4ab8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the role of mentorship in higher education.\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "b9648b4b15b45ce70ef8d487": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the life expectancy of the student named sarah williams?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.PREDICTED_GRADUATION_SEMESTER FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.LASTNAME = \"Williams\" AND STUDENTalias0.FIRSTNAME = \"Sarah\"\nAnswer: ", "a19af5d0508ab739c160f22d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Show me the average workload for all the courses offered by the CS-LSA program.\nPredicted SQL: SELECT AVG( PROGRAM_COURSEalias0.WORKLOAD ) FROM COURSE AS COURSEalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE \"CS-LSA\" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID \nAnswer: ", "ea946b71be9661e69228ec03": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What type of ship does student alice brown have?\nPredicted SQL: SELECT STUDENTalias0.DEGREE FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.LASTNAME = \"brown\" AND STUDENTalias0.FIRSTNAME = \"alice\"\nAnswer: ", "8291352dc80b043502eef1fa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course in EECS has the most workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT, COURSEalias0.NUMBER \nFROM COURSE as COURSEalias0, PROGRAM_COURSE AS PROGRAM_COURSEalias0 \nWHERE COURSEalias0.DEPARTMENT = \"EECS\" \nAND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAND PROGRAM_COURSEalias0.WORKLOAD = ( \n    SELECT MAX (PROGRAM_COURSEalias1.WORKLOAD) \n    FROM COURSE as COURSEalias1, PROGRAM_COURSE AS PROGRAM_COURSEalias1 \n    WHERE COURSEalias1.DEPARTMENT = \"EECS\" \n    AND PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID \n)\nAnswer: ", "76d29d02bd93fecbdfc68fd8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the benefits of taking interdisciplinary courses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION LIKE \"%interdisciplinary%\"\nAnswer: ", "c576c3937fc7ce62db371f04": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: The lab-free EECS courses were taught by which instructors?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 , COURSE AS COURSEalias1 , COURSE_OFFERING AS COURSE_OFFERINGalias1 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias1 WHERE COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.HAS_LAB = \"N\" AND COURSE_OFFERINGalias1.OFFERING_ID = OFFERING_INSTRUCTORalias1.OFFERING_ID AND INSTRUCTORalias0.INSTRUCTOR_ID = OFFERING_INSTRUCTORalias1.INSTRUCTOR_ID\nAnswer: ", "0cc5925e42b2950f5275b276": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Guide a student to their next 'software development' class location from the current campus spot.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.CLASS_ADDRESS FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" AND STUDENT_RECORDalias0.STUDENT_ID = [current_student_id]\nAnswer: ", "e29835af50e2c1a843739426": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the last names of students who studied abroad and took a course in the computing infrastructure area.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME FROM STUDENT AS STUDENTalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID INNER JOIN AREA AS AREAalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computing infrastructure%\" AND STUDENTalias0.INTERSHIP = \"abroad\" \nAnswer: ", "894ec98ac93767399374a1c0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors do not have their website urls?\nPredicted SQL: SELECT COUNT(DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.WEBSITE_URL IS NULL\nAnswer: ", "dd976414a9684c5bf4c4cb23": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which upper-level CS courses for Fall 2016 didn't have lectures on Monday or Friday?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nJOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nJOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nJOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" \nAND COURSE_OFFERINGalias0.MONDAY = \"N\" \nAND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND SEMESTERalias0.SEMESTER = \"FA\" \nAND SEMESTERalias0.YEAR = 2016\nAnswer: ", "19782350e37fe308122f2d3c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which student has the highest volume?\nPredicted SQL: SELECT STUDENT_ID FROM STUDENT ORDER BY TOTAL_CREDIT DESC LIMIT 1\nAnswer: ", "c0632fce24d406459e08d1e9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors do not have any reviews on RateMyProfessors?\nPredicted SQL: SELECT COUNT(DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.INSTRUCTOR_ID NOT IN (SELECT DISTINCT OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID FROM OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.NUM_REVIEWS = 0)\nAnswer: ", "d95c8dcffac32a93e70c6db5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What challenges come with maintaining academic standards in large courses?\nPredicted SQL: This question cannot be directly answered with the provided tables. Additional information related to academic standards, course sizes, and potential challenges would be needed to provide a meaningful response.\nAnswer: ", "314e7200eb640cfeb6247369": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many student athletes have participated in internships?\nPredicted SQL: SELECT COUNT(*) FROM STUDENT WHERE INTERNSHIP = 1\nAnswer: ", "61c4264d7317aa8ba3c70f33": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In what ways do universities address student housing affordability?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables related to student housing affordability and university policies would be needed to provide a comprehensive answer.\nAnswer: ", "9cf125441c96b2e08c25a0d0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support do universities offer for developing time management skills?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION LIKE \"%time management%\"\nAnswer: ", "813419ab78f5fb7f9fecb2cf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you tell me who has taught the courses in computing infrastructure?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computing infrastructure%\" \nAnswer: ", "34437554a63cc9b299f76fa9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me which course, among those fulfilling ULCS, had the smallest workload and the largest class size?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT PROGRAM_COURSEalias0.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY LIKE \"%ULCS%\" ) ) AND COURSEalias0.NUM_ENROLLED = ( SELECT MAX( COURSEalias1.NUM_ENROLLED ) FROM COURSE AS COURSEalias1 WHERE COURSEalias1.COURSE_ID IN ( SELECT PROGRAM_COURSEalias2.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias2 WHERE PROGRAM_COURSEalias2.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias3.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias3 WHERE PROGRAM_COURSEalias3.CATEGORY = \"ULCS\" ) ) ) \nAnswer: ", "2bb1740d47f1955799ef2a28": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses were there for CS major to take in Winter 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE \"%CS%\" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "ea1b31a4a7bd64f7f2d0c0a3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you provide the count of instructors who have not taught INTMED course 320 before?\nPredicted SQL: SELECT COUNT ( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME NOT IN ( SELECT INSTRUCTORalias1.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"INTMED\" AND COURSEalias0.NUMBER = 320 ) \nAnswer: ", "306619d3b94880446fb363b5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the total number of 17-credit upper-level CS courses.\nPredicted SQL: SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.CREDITS = \"17\" AND PROGRAM_COURSEalias0.CATEGORY LIKE \"ULCS\" \nAnswer: ", "659a7840b570e73992a02afd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you list the courses student 4 has taken, specifically those in web technology and application?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%web technology and application%\" AND STUDENT_RECORDalias0.STUDENT_ID = 4 \nAnswer: ", "e32b4fe1b0aa4ebfe0165797": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many course offerings were provided for AOSS 567?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"AOSS\" AND COURSEalias0.NUMBER = 567 \nAnswer: ", "52214552fc518e9ed90453b4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Do NERS 673 courses recurrently occur every semester?\nPredicted SQL: SELECT COUNT( * ) = 0 FROM SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER NOT IN ( SELECT DISTINCT SEMESTERalias1.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias1 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"NERS\" AND COURSEalias0.NUMBER = 673 AND SEMESTERalias1.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ) \nAnswer: ", "237c6f198ea0e90a63f8a3b5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find the average total gpa of students whose mother's maiden name is miller.\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) \nFROM STUDENT AS STUDENTalias0 \nWHERE STUDENTalias0.LASTNAME = 'Miller'\nAnswer: ", "c56e34c2ae93dfff84d5a8d5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Low-Income Taxpayer Clinic, who were the teachers that had ever taught it?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE \"%Low-Income Taxpayer Clinic%\" \nAnswer: ", "bc67a18ab07d54da8c800e0d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of PreMajor courses available in Winter 2013.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2013 \nAnswer: ", "80739a0653b5d2206d97d143": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: With regards to the PreMajor, what courses could've worked?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "281773201c228da6a81a07df": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Before 12:00, were there any classes for MFG 990?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME < \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"MFG\" AND COURSEalias0.NUMBER = 990 \nAnswer: ", "253bfd2b9c0679337948b418": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses are offered in french?\nPredicted SQL: SELECT DISTINCT COUNT ( COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"FRENCH\" \nAnswer: ", "a6bad97dcab2b3e309221daa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all course offerings with a course rating above 4.5.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.OFFERING_ID FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 , COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND ( COURSEalias0.CLARITY_SCORE + COURSEalias0.EASINESS_SCORE + COURSEalias0.HELPFULNESS_SCORE ) / 3 > 4.5\nAnswer: ", "2d0f2e64a9bbc900422bae68": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all classes held on friday with a capacity of more than 50 students.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = \"Y\" AND COURSE_OFFERINGalias0.NUM_ENROLLED > 50\nAnswer: ", "c2bbf96bdbfbc30915f8bb82": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the minimum humidities of the instructors in ascending order?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME, INSTRUCTORalias0.UNIQNAME FROM INSTRUCTOR AS INSTRUCTORalias0 ORDER BY INSTRUCTORalias0.HUMIDITY ASC\nAnswer: ", "e173161ab71f9c44fbd87e8c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Display a heatmap of course offerings throughout the day.\nPredicted SQL: This question cannot be answered with the provided tables and columns.\nAnswer: ", "b37ad1459df42a649b7b61de": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average salary of the courses that end before noon?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "e5bf36f9fefa86a4ea7896d2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the section numbers for ENGLISH 270 courses offered in Spring 2015 that started after 09:00?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.SECTION_NUMBER FROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME > \"09:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ENGLISH\" AND COURSEalias0.NUMBER = 270 AND SEMESTERalias0.SEMESTER = \"SP\" AND SEMESTERalias0.YEAR = 2015\nAnswer: ", "66632230ec1a71f48d0c9cd2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What MDE course is in EECS?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%MDE%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\"\nAnswer: ", "43cf202fa4b5e54511140e6d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Analyze trends in course enrollment numbers across different years.\nPredicted SQL: SELECT SEMESTERalias0.YEAR, COUNT(DISTINCT COURSE_OFFERINGalias0.COURSE_ID) AS num_courses, SUM(COURSE_OFFERINGalias0.NUM_ENROLLED) AS total_enrollment\nFROM COURSE_OFFERING AS COURSE_OFFERINGalias0\nJOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER\nGROUP BY SEMESTERalias0.YEAR\nAnswer: ", "0045c719df52afaa8189aa3c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the department where Plato: Meno and other Early Dialogues can be found?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Plato: Meno and other Early Dialogues%\" \nAnswer: ", "589ae81817c34a4f997a6575": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average total gpa of the students who made more than 20 standing tackles?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "3360af6e2184ba7baef119f6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the 400-level EECS courses offered in Fall 2016 or Winter 2016 term.\nPredicted SQL: SELECT DISTINCT course.department, course.number \nFROM course \nJOIN course_offering ON course.course_id = course_offering.course_id \nJOIN semester ON course_offering.semester = semester.semester_id \nWHERE course.department = 'EECS' \nAND course.number >= 400 \nAND course.number < 500 \nAND (semester.semester = 'FA' OR semester.semester = 'WN') \nAND semester.year = 2016\nAnswer: ", "c0cf9a3c41c9b637f45e1dbf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Visualize the grade distribution of courses over the past three years.\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information on the grade distribution of courses over the past three years would be needed in order to create a visualization.\nAnswer: ", "f1aa1e375a67dff1877248f0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Transform the course requirements of a 'computer hardware' class into a simple guide.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.CREDITS , COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" \nAnswer: ", "43aa86e80294eb3dfab8a59d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the room counts of the students who took more than 100 credits in ascending order?\nPredicted SQL: SELECT COUNT(student_record.offering_id) AS room_count FROM student_record INNER JOIN course_offering ON student_record.offering_id = course_offering.offering_id WHERE student_record.student_id IN (SELECT student_id FROM student WHERE total_credit > 100) GROUP BY student_record.student_id ORDER BY room_count ASC\nAnswer: ", "cdc3949212eed9afc6cef87c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you give me a list of courses that fell under computing infrastructure?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computing infrastructure%\" \nAnswer: ", "c9375ee6d2ec9fb782eaa94a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who is the physician for theory 805?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"theory\" AND COURSEalias0.NUMBER = 805\nAnswer: ", "813d17cf49e2a19b6f49d74e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Start a relaxing playlist for students studying in the 'computer hardware' lab.\nPredicted SQL: This question does not involve querying the database and would require a different approach, such as creating a playlist on a music streaming platform.\nAnswer: ", "73a030bd3df8567307e64a91": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all students with the mother's maiden name smith.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME , STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.LASTNAME = \"Smith\" \nAnswer: ", "04c04836e8a4d96c3656d856": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many PreMajor or MDE course offerings were provided in Fall 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY IN ( \"PreMajor\" , \"MDE\" ) AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "17fcf8ef58c8d843cc6b3568": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Generate a pie chart showing the distribution of different course types (labs, discussions, projects) in the eecs department.\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information on the course types (labs, discussions, projects) for each course in the EECS department would be needed to generate a pie chart showing the distribution of different course types.\nAnswer: ", "01558a03ae6b58432a73769c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you list the courses other than 116 that instructor Emily Elspeth Witt taught?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Emily Elspeth Witt%\" AND COURSEalias0.NUMBER <> 116 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "361f1a3f87aa6dbec30f279e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Does eecs 494 allow pets in the course?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 494 AND COURSEalias0.DESCRIPTION LIKE \"%pets%\" \nAnswer: ", "8e6b3305f060aa8deb22d380": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What was the number of RCNSCI 104 course offerings after 10:00 in Winter 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"RCNSCI\" AND COURSEalias0.NUMBER = 104 AND COURSE_OFFERINGalias0.START_TIME > \"10:00\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "f5748568f6ddef4b52e77c21": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What semester was the next available course 409 with instructor Raymond A Silverman teaching after Fall 2010?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NUMBER = 409 AND INSTRUCTORalias0.NAME LIKE \"%Raymond A Silverman%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR > 2010 ORDER BY SEMESTERalias0.YEAR ASC LIMIT 1 \nAnswer: ", "a315013736c9984ec7050ee4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please provide me with the courses that instructor Marcus M Darden once taught.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Marcus M Darden%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "a990658affd1811b9bf2c552": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Play energetic music in the student lounge on the last day of school.\nPredicted SQL: This question is not related to the data provided in the tables.\nAnswer: ", "506fd7b5159be412fa1f82ac": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses have more than 20 students who have made standing tackles?\nPredicted SQL: SELECT COUNT(DISTINCT COURSEalias0.COURSE_ID) FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON COURSEalias0.COURSE_ID = STUDENT_RECORDalias0.COURSE_ID WHERE STUDENT_RECORDalias0.HOW = \"standing tackle\" GROUP BY COURSEalias0.COURSE_ID HAVING COUNT(DISTINCT STUDENT_RECORDalias0.STUDENT_ID) > 20\nAnswer: ", "4e629bb99ba483ced082eeea": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were there any CLCIV 499 classes before 12:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME < \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"CLCIV\" AND COURSEalias0.NUMBER = 499 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "0111d6c4e9aa2f007700bfab": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Convert a 'software development' lab guide into japanese.\nPredicted SQL: SELECT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA = \"software development\" AND COURSEalias0.DEPARTMENT = \"JAPANESE\" AND COURSEalias0.HAS_LAB = \"Y\"\nAnswer: ", "f976c86a0edbfeb888f075fc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What instructors were assigned to teach Manufacturing and Supply Operations courses in Winter 2014?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%Manufacturing and Supply Operations%\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2014 \nAnswer: ", "5ac8194488a5c6c590af5039": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the impact of student organizations on campus life.\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables related to student organizations and campus life would be needed to provide information on the impact of student organizations on campus life.\nAnswer: ", "22bae9251ad2d656c6d56f59": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Generate a relaxing playlist for students during the course registration period.\nPredicted SQL: This question is not related to the provided database schema and tables.\nAnswer: ", "3ee9865ddfc7cdcee4e81e87": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In what ways does student feedback influence curriculum changes?\nPredicted SQL: This question cannot be directly answered with the provided tables. Additional tables related to student feedback and curriculum changes would be needed to provide a comprehensive answer.\nAnswer: ", "a8e85355795832604073e448": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which student has the highest salary?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "854d17ebadfba66b7246d900": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the students who have peanut allergies?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ALLERGIES LIKE \"%peanut%\" \nAnswer: ", "d7aa48b87d4fe535406818be": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: When were the semesters in which EECS 183 was offered after Winter 2016?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 183 AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND SEMESTERalias0.SEMESTER_ID > ( SELECT SEMESTERalias1.SEMESTER_ID FROM SEMESTER AS SEMESTERalias1 WHERE SEMESTERalias1.SEMESTER = \"WN\" AND SEMESTERalias1.YEAR = 2016 ) \nAnswer: ", "2e6dca896c6c76311efbfe53": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the physicians for courses with more than 1 credit?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.CREDITS > 1\nAnswer: ", "1939bf2586f81b2b285fbc73": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What methods do universities use to recognize prior learning?\nPredicted SQL: This question is not directly related to the provided tables and cannot be answered with the given data.\nAnswer: ", "7dd9494d89595a2d3ba8c69c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What methods do universities use to measure the success of their graduates?\nPredicted SQL: This question is not directly related to the provided tables and cannot be answered using the data in the database.\nAnswer: ", "935e74e33f52c664e92a315e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What was the course rating for eecs 475 in spring 2015?\nPredicted SQL: SELECT COURSEalias0.CLARITY_SCORE, COURSEalias0.EASINESS_SCORE, COURSEalias0.HELPFULNESS_SCORE FROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 475 AND SEMESTERalias0.SEMESTER = \"SP\" AND SEMESTERalias0.YEAR = 2015 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER\nAnswer: ", "5df6564c63d3a966f3114670": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you provide the count of instructors who have not taught ENS course 347 before?\nPredicted SQL: SELECT COUNT ( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME NOT IN ( SELECT INSTRUCTORalias1.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"ENS\" AND COURSEalias0.NUMBER = 347 ) \nAnswer: ", "f111704349d64b39dea861ed": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the list of upper-level CS courses that ended before 12:00 in Winter 2016.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.END_TIME <= \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "63ab51ebab7ebe230648f8f5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common pixel aspect ratio among the courses?\nPredicted SQL: SELECT COURSEalias0.PIXEL_ASPECT_RATIO, COUNT(COURSEalias0.PIXEL_ASPECT_RATIO) AS COUNT FROM COURSE AS COURSEalias0 GROUP BY COURSEalias0.PIXEL_ASPECT_RATIO ORDER BY COUNT DESC LIMIT 1\nAnswer: ", "5f82940123c413e94d6b529b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the password for student michael marshall?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "db29aa2b1c5569ffc00de6a8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the people that taught PreMajor courses in Winter 2016?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "f9d35035ff61716d1edcb591": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were UP 650 and UP 634 in prerequisite relations?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.DEPARTMENT = \"UP\" AND COURSEalias0.NUMBER = 634 AND COURSEalias1.DEPARTMENT = \"UP\" AND COURSEalias1.NUMBER = 650 AND ( ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) OR ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) ) \nAnswer: ", "e3f42c75a0f885ea7c1ae805": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the description of NERS 583.\nPredicted SQL: SELECT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"NERS\" AND COURSEalias0.NUMBER = 583\nAnswer: ", "40dd8d83e2873e478a7e889f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average salary of students with a total gpa higher than 3.3?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_GPA > 3.3\nAnswer: ", "d62058bda2facaba63ec543a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Retrieve the latest news about a new course addition in the eecs department.\nPredicted SQL: SELECT COURSEalias0.NAME, COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" ORDER BY COURSEalias0.COURSE_ID DESC LIMIT 1\nAnswer: ", "b487d196fb6c6936175e4dbc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses were taught by instructor Bernard Arps in 2007?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Bernard Arps%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2007 \nAnswer: ", "64440e127013cd09c3808af0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which 400 / 500-level courses in POLSCI have the lightest workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"POLSCI\" AND (COURSEalias0.NUMBER LIKE \"4%\" OR COURSEalias0.NUMBER LIKE \"5%\") AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY = \"POLSCI\" ) \nAnswer: ", "0f248fc5799fc5536fb3e3be": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Show all course offerings that allow pass or fail and do not have a final project.\nPredicted SQL: SELECT * FROM COURSE_OFFERING WHERE ALLOW_AUDIT = 1 AND HAS_FINAL_PROJECT = 0\nAnswer: ", "8e114916df56f375c08bf08e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the minimum humidity for andrea siegel?\nPredicted SQL: SELECT DISTINCT COURSEalias0.ADVISORY_REQUIREMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"RCHUMS\" AND COURSEalias0.NUMBER = 381 \nAnswer: ", "67fbb65cc6e9b75e85be2310": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the instructors for the courses on Manufacturing and Supply Operations in Winter 2014.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%Manufacturing and Supply Operations%\" AND SEMESTERalias0.SEMESTER = \"WI\" AND SEMESTERalias0.YEAR = 2014 \nAnswer: ", "10d9f6c6b34367528d4ded5f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How high is student 2's current GPA?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_GPA FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 2 \nAnswer: ", "6d65cd7ec77b7ba75a52d054": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are DHYGRACK 682 courses available in every semester?\nPredicted SQL: SELECT COUNT( * ) = 0 FROM SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER NOT IN ( SELECT DISTINCT SEMESTERalias1.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias1 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"DHYGRACK\" AND COURSEalias0.NUMBER = 682 AND SEMESTERalias1.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ) \nAnswer: ", "94336acecc8e63d991418b98": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses that satisfy the Core requirement and are offered in Fall or Winter 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%Core%\" AND SEMESTERalias0.SEMESTER IN ( \"FA\" , \"WN\" ) AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "2564b4a5b35d363db2e16ab1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the benefits of community service learning?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "5a920e7769dfb1f0bfa3c049": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List instructors who started in the spring 2016 term.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON INSTRUCTORalias0.INSTRUCTOR_ID = OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID WHERE SEMESTERalias0.SEMESTER = \"SP\" AND SEMESTERalias0.YEAR = 2016\nAnswer: ", "90e4d932e435c41200a2d29d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the 200-level EECS courses offered in the Spring or Summer 2016 term?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 200 + 100 AND COURSEalias0.NUMBER >= 200 AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" , \"SU\" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "b7f730605a364fd1290da050": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the top 5 courses in terms of enrollment by students who studied abroad.\nPredicted SQL: SELECT COURSEalias0.NAME, COURSEalias0.NUM_ENROLLED \nFROM COURSE AS COURSEalias0 \nINNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON COURSEalias0.COURSE_ID = STUDENT_RECORDalias0.COURSE_ID \nINNER JOIN STUDENT AS STUDENTalias0 ON STUDENT_RECORDalias0.STUDENT_ID = STUDENTalias0.STUDENT_ID \nWHERE STUDENTalias0.STUDY_ABROAD = \"Yes\" \nORDER BY COURSEalias0.NUM_ENROLLED DESC \nLIMIT 5\nAnswer: ", "4e24c7df0efa49365d82758e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support is available for veterans transitioning to civilian life?\nPredicted SQL: This question does not have a direct SQL query as the provided tables do not contain information related to support services for veterans.\nAnswer: ", "2cf9c1f5f7bc10821a6add1e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me the student advisors?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE \"%advisor%\" \nAnswer: ", "a122ec6425fd772537a0095d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In what ways do universities foster a culture of academic excellence?\nPredicted SQL: This question cannot be directly answered with the provided tables. It would require additional tables or data related to university culture and practices.\nAnswer: ", "540b3b863c06413a054efb41": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Identify and remove any outliers in the clarity_score and easiness_score.\nPredicted SQL: SELECT * FROM COURSE WHERE CLARITY_SCORE NOT BETWEEN (SELECT AVG(CLARITY_SCORE) - (2 * STDDEV(CLARITY_SCORE)) AND (SELECT AVG(CLARITY_SCORE) + (2 * STDDEV(CLARITY_SCORE))) AND EASINESS_SCORE NOT BETWEEN (SELECT AVG(EASINESS_SCORE) - (2 * STDDEV(EASINESS_SCORE)) AND (SELECT AVG(EASINESS_SCORE) + (2 * STDDEV(EASINESS_SCORE))) \nAnswer: ", "52eacafb2949871253603635": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the career benefits of majoring in computer science?\nPredicted SQL: This question cannot be answered directly from the provided tables. Additional information or data would be needed to determine the career benefits of majoring in computer science.\nAnswer: ", "d71f1694aeaf58a81f7b2939": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the minimum number of horses working for a student?\nPredicted SQL: SELECT MIN(PROGRAM_COURSE.WORKLOAD) FROM PROGRAM_COURSE\nAnswer: ", "1dfb80b931cd41c2986594ca": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the website url for the instructor teaching course ID 2?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.WEBSITE_URL FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID WHERE COURSE_OFFERINGalias0.COURSE_ID = 2\nAnswer: ", "7f970abccd7d04b59ff7240e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was teaching NRE 558 courses in the Winter 2010 semester?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"NRE\" AND COURSEalias0.NUMBER = 558 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2010 \nAnswer: ", "01538fd4f1e1848bd503bed1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is Friday included when instructor Robin M Queen's classes always meet?\nPredicted SQL: SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.FRIDAY = \"Y\" AND INSTRUCTORalias0.NAME LIKE \"%Robin M Queen%\" \nAnswer: ", "28d0c2ef270d5b26a36c060a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me, EECS 557 offered how many credits?\nPredicted SQL: SELECT DISTINCT COURSEalias0.CREDITS FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 557\nAnswer: ", "58ed0344c68eae7f46f9e5da": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses were 3-credit in the LACS 400-level?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = \"3\" AND COURSEalias0.DEPARTMENT = \"LACS\" AND COURSEalias0.NUMBER < 400 + 100 AND COURSEalias0.NUMBER >= 400\nAnswer: ", "84def886d3becbbec7d1112f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What role does diversity play in enhancing educational experiences?\nPredicted SQL: This question is not directly related to the data provided in the tables.\nAnswer: ", "ebde33a540ccb0676b24539b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the operating systems for courses that start before noon?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.START_TIME < \"12:00:00\" AND COURSEalias0.NAME LIKE \"%Operating Systems%\" \nAnswer: ", "15fb13d48f98eb314846892c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the SSNs and total credits of students with internships?\nPredicted SQL: SELECT STUDENTalias0.STUDENT_ID, STUDENTalias0.TOTAL_CREDIT FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.INTERNSHIP IS NOT NULL\nAnswer: ", "ead291a69e0f9ada531bafea": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which 400 / 500-level courses in RACKHAM have the lightest workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.NUMBER LIKE \"4%\" OR COURSEalias0.NUMBER LIKE \"5%\" AND PROGRAM_COURSEalias0.CATEGORY = \"RACKHAM\" AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY = \"RACKHAM\" ) \nAnswer: ", "7d33671001d197d3363fc216": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you confirm whether EECS 644 had a project assignment?\nPredicted SQL: SELECT COURSE_OFFERING.HAS_FINAL_PROJECT FROM COURSE_OFFERING, COURSE WHERE COURSE_OFFERING.COURSE_ID = COURSE.COURSE_ID AND COURSE.DEPARTMENT = \"EECS\" AND COURSE.NUMBER = 644\nAnswer: ", "6986b9fcfffd0389a323b219": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What EECS courses in Winter 2016 were prerequisites for most others?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nJOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID \nJOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nJOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE COURSEalias0.DEPARTMENT = \"EECS\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016\nAnswer: ", "dabace89ea8704906df03526": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses offered by the chem department that are held online?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.DEPARTMENT = \"CHEM\" AND COURSE_OFFERINGalias0.CLASS_ADDRESS = \"online\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID\nAnswer: ", "94012f69dbc9e8479e58b28d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List remote course offerings with an easiness score above 7.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.OFFERING_ID FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 , COURSE AS COURSEalias0 WHERE COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID AND COURSEalias0.EASINESS_SCORE > 7\nAnswer: ", "0462e0df2785d52af34a2d36": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Provide a map showing the class locations for a student's schedule.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.CLASS_ADDRESS FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON COURSE_OFFERINGalias0.OFFERING_ID = STUDENT_RECORDalias0.OFFERING_ID WHERE STUDENT_RECORDalias0.STUDENT_ID = [student_id]\nAnswer: ", "53436860831f2d1bbc4d0142": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you provide information on whether instructor Ruby Christina-marie Tapia was the exclusive teacher for Gender and Sexuality Studies in Literature?\nPredicted SQL: SELECT COUNT( * ) = 1 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NAME = \"Gender and Sexuality Studies in Literature\" AND INSTRUCTORalias0.NAME LIKE \"%Ruby Christina-marie Tapia%\" \nAnswer: ", "15382a21db6258d14ee3627f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all students advised by dr. smith.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME , STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 , PROGRAM AS PROGRAMalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE STUDENTalias0.PROGRAM_ID = PROGRAMalias0.PROGRAM_ID AND PROGRAMalias0.INTRODUCTION = INSTRUCTORalias0.UNIQNAME AND INSTRUCTORalias0.NAME LIKE \"%dr. smith%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "37d2207d8238c8bcad746bb8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the students with salaries lower than the average of the salaries of the students who took more than 100 credits?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_CREDIT > 100 AND STUDENTalias0.SALARY < (SELECT AVG(STUDENTalias1.SALARY) FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.TOTAL_CREDIT > 100) \nAnswer: ", "a111f65edce5323241427247": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the students who got admitted in the 1860 semester who are quieter than 70 dB?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 INNER JOIN SEMESTER AS SEMESTERalias0 ON STUDENTalias0.ADMIT_TERM = SEMESTERalias0.SEMESTER_ID WHERE SEMESTERalias0.SEMESTER = \"1860\" AND STUDENTalias0.ENTERED_AS < 70\nAnswer: ", "79c6fa1ab2260fdb29280df9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were there classes on Fridays for 115 with instructor David J Winter?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NUMBER = 115 AND COURSE_OFFERINGalias0.FRIDAY = \"Y\" AND INSTRUCTORalias0.NAME LIKE \"%David J Winter%\" \nAnswer: ", "6cc5c2504208adaad805dd8d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Transform the eecs course schedule into a descriptive paragraph.\nPredicted SQL: To transform the EECS course schedule into a descriptive paragraph, we would need to gather information from the course_offering table for all EECS courses. This would include details such as the course name, department, semester, section number, start time, end time, days of the week the course meets, whether it has a final project or exam, textbook information, class address, and if auditing is allowed. By compiling this information, we can create a detailed description of the EECS course schedule, including course offerings, meeting times, locations, and any additional requirements or information for each course.\nAnswer: ", "c54623dec3ec99fa87fdb107": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the people that taught PreMajor courses in Winter 2010?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2010 \nAnswer: ", "da138fa4265c3cb2ba0d6f08": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses from EECS at 300-level were provided in Fall 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 300 + 100 AND COURSEalias0.NUMBER >= 300 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "f93b03d640ced5380d37049e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the number of course offerings for EMBA 640?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EMBA\" AND COURSEalias0.NUMBER = 640 \nAnswer: ", "1ad04056da8aefb0d2d842b3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses have a prerequisite of EECS 376?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 376 \nAnswer: ", "f1a877b3be3d1692eff2b218": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What initiatives address the needs of transfer students?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 INNER JOIN PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENTalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_REQUIREMENTalias0.PROGRAM_ID WHERE PROGRAM_REQUIREMENTalias0.ADDITIONAL_REQ LIKE \"%transfer students%\"\nAnswer: ", "abf7c7f407b4eb1f0bc4123c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Read aloud the course description of the newest eecs class.\nPredicted SQL: SELECT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" ORDER BY COURSEalias0.COURSE_ID DESC LIMIT 1\nAnswer: ", "913003bc4966ae4a970b68bb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the list of 4-credit upper-level CS courses available in Fall 2010.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 \nWHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nAND COURSEalias0.CREDITS = \"4\" \nAND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAND SEMESTERalias0.SEMESTER = \"FA\" \nAND SEMESTERalias0.YEAR = 2010\nAnswer: ", "1ed92a279f89fc136b22594b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the password of instructor richard d. mann?\nPredicted SQL: This question cannot be answered with the provided tables and columns.\nAnswer: ", "dfb5e7f9f3433e22a244e973": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the department with the most instructors with unique phone numbers?\nPredicted SQL: SELECT DEPARTMENT, COUNT(DISTINCT INSTRUCTOR_ID) AS NUM_INSTRUCTORS\nFROM COURSE\nINNER JOIN COURSE_OFFERING ON COURSE.COURSE_ID = COURSE_OFFERING.COURSE_ID\nINNER JOIN OFFERING_INSTRUCTOR ON COURSE_OFFERING.OFFERING_ID = OFFERING_INSTRUCTOR.OFFERING_ID\nINNER JOIN INSTRUCTOR ON OFFERING_INSTRUCTOR.INSTRUCTOR_ID = INSTRUCTOR.INSTRUCTOR_ID\nGROUP BY DEPARTMENT\nORDER BY NUM_INSTRUCTORS DESC\nLIMIT 1\nAnswer: ", "1334bc3cbdc7d343adf48b54": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the support universities offer to student entrepreneurs.\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "b6c4a914e1354586cda38b11": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List courses with pearson textbooks in descending order of course credits.\nPredicted SQL: SELECT COURSEalias0.NAME, COURSEalias0.CREDITS FROM COURSE AS COURSEalias0 WHERE COURSEalias0.TEXTBOOK LIKE \"%Pearson%\" ORDER BY COURSEalias0.CREDITS DESC\nAnswer: ", "d602902a7180c58c9e79c6e3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the name of the youngest student who has a minor?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.FIRSTNAME, STUDENTalias0.LASTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MINOR IS NOT NULL ORDER BY STUDENTalias0.STUDENT_ID ASC LIMIT 1\nAnswer: ", "9aec2a4193f3c532e6b8717f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students were born before january 1, 2000?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "4a62ff0b77f7cc8036c8a858": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which program has MATH 116?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM AS PROGRAMalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID WHERE COURSEalias0.DEPARTMENT = \"MATH\" AND COURSEalias0.NUMBER = 116\nAnswer: ", "c26b9a1585869d6572722d09": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How do universities support students in developing leadership skills?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables related to student leadership programs, extracurricular activities, or student support services would be needed to provide a comprehensive answer.\nAnswer: ", "3cb6e0bd047d9937739264f3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: By whom were the computing infrastructure courses taught?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computing infrastructure%\" \nAnswer: ", "61db718419b5c2cf9564aa83": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the top-rated programming languages for software development in 2023?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%programming languages%\" AND SEMESTERalias0.YEAR = 2023\nAnswer: ", "ae9f4686fa5b68e6db906693": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the number of remote courses that have a final project component?\nPredicted SQL: SELECT COUNT(DISTINCT COURSE_OFFERINGalias0.OFFERING_ID) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.CLASS_ADDRESS = \"Remote\" AND COURSE_OFFERINGalias0.HAS_FINAL_PROJECT = 1\nAnswer: ", "e7f3b9a057794cbcbdcd4722": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In the past, who have taught EDCURINS 575?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EDCURINS\" AND COURSEalias0.NUMBER = 575 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "23182bdb72d7fc7ddbd0fa0b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average number of courses per textbook publisher?\nPredicted SQL: SELECT AVG(num_courses) FROM (SELECT COUNT(DISTINCT course_id) AS num_courses FROM course_offering GROUP BY textbook) AS course_counts\nAnswer: ", "895cdc88795fba6eb1f504af": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Implement an association rule mining technique to find common course sequences.\nPredicted SQL: This question cannot be directly translated into SQL using the provided tables. Association rule mining is a data mining technique used to find patterns in data, specifically looking for frequent itemsets or sequences. This would require a different approach using algorithms and tools specifically designed for association rule mining, such as Apriori or FP-growth.\nAnswer: ", "1020b86cf6def35b3c8e8a64": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Analyze which course aspects have the most significant impact on the easiness score.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.CREDITS, COURSEalias0.NUM_ENROLLED, COURSEalias0.HAS_DISCUSSION, COURSEalias0.HAS_LAB, COURSEalias0.HAS_PROJECTS, COURSEalias0.HAS_EXAMS, COURSEalias0.NUM_REVIEWS, COURSEalias0.CLARITY_SCORE, COURSEalias0.EASINESS_SCORE, COURSEalias0.HELPFULNESS_SCORE FROM COURSE AS COURSEalias0 ORDER BY COURSEalias0.EASINESS_SCORE DESC\nAnswer: ", "01467757e014ecac9774a5d4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find courses in the mde category offered in greek.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%MDE%\" AND COURSEalias0.DEPARTMENT = \"GREEK\"\nAnswer: ", "29097261b559eaee11fa29b3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What instructors were assigned to teach Screenwriting III courses in Fall 2012?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NAME LIKE \"%Screenwriting III%\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2012 \nAnswer: ", "b089619203bea17689d127ed": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many eecs courses allow pets?\nPredicted SQL: SELECT COUNT( * ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.DESCRIPTION LIKE \"%pets%\"\nAnswer: ", "c883e117bd9d15efa0112bbf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did instructor Seth Pettie provide teaching for any upper-level CS courses?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE INSTRUCTORalias0.NAME LIKE \"%Seth Pettie%\" AND PROGRAM_COURSEalias0.CATEGORY LIKE \"ULCS\" \nAnswer: ", "786ab6b7fc0b44fd10dacb58": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses did Vincent A Mountain teach course 461?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NUMBER = 461 AND INSTRUCTORalias0.NAME LIKE \"%Vincent A Mountain%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "dc4abe9d7308f41967482794": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses were 3-credit in the ANTHRBIO 500-level?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = \"3\" AND COURSEalias0.DEPARTMENT = \"ANTHRBIO\" AND COURSEalias0.NUMBER < 500 + 100 AND COURSEalias0.NUMBER >= 500 \nAnswer: ", "04f4affe6110bf1a77e41c25": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please tell me the courses that instructor Ronald Dreslinski Jr taught in the past before Fall 2015.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Ronald Dreslinski Jr%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND (SEMESTERalias0.YEAR < 2015 OR (SEMESTERalias0.YEAR = 2015 AND SEMESTERalias0.SEMESTER != 'Fall')) \nAnswer: ", "60a04728e54a947a3ceb3183": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the department with the most diverse pixel aspect ratio in their courses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT DISTINCT COURSEalias1.COURSE_ID FROM COURSE AS COURSEalias1 WHERE COURSEalias1.COURSE_ID IN ( SELECT DISTINCT COURSEalias2.COURSE_ID FROM COURSE AS COURSEalias2 WHERE COURSEalias2.COURSE_ID IN ( SELECT DISTINCT COURSEalias3.COURSE_ID FROM COURSE AS COURSEalias3 WHERE COURSEalias3.COURSE_ID IN ( SELECT DISTINCT COURSEalias4.COURSE_ID FROM COURSE AS COURSEalias4 WHERE COURSEalias4.COURSE_ID IN ( SELECT DISTINCT COURSEalias5.COURSE_ID FROM COURSE AS COURSEalias5 WHERE COURSEalias5.COURSE_ID IN ( SELECT DISTINCT COURSEalias6.COURSE_ID FROM COURSE AS COURSEalias6 WHERE COURSEalias6.COURSE_ID IN ( SELECT DISTINCT COURSEalias7.COURSE_ID FROM COURSE AS COURSEalias7 WHERE COURSEalias7.COURSE_ID IN ( SELECT DISTINCT COURSEalias8.COURSE_ID FROM COURSE AS COURSEalias8 WHERE COURSEalias8.COURSE_ID IN ( SELECT DISTINCT COURSEalias9.COURSE_ID FROM COURSE AS COURSEalias9 WHERE COURSEalias9.COURSE_ID IN ( SELECT DISTINCT COURSEalias10.COURSE_ID FROM COURSE AS COURSEalias10 WHERE COURSEalias10.COURSE_ID IN ( SELECT DISTINCT COURSEalias11.COURSE_ID FROM COURSE AS COURSEalias11 WHERE COURSEalias11.COURSE_ID IN ( SELECT DISTINCT COURSEalias12.COURSE_ID FROM COURSE AS COURSEalias12 WHERE COURSEalias12.COURSE_ID IN ( SELECT DISTINCT COURSEalias13.COURSE_ID FROM COURSE AS COURSEalias13 WHERE COURSEalias13.COURSE_ID IN ( SELECT DISTINCT COURSEalias14.COURSE_ID FROM COURSE AS COURSEalias14 WHERE COURSEalias14.COURSE_ID IN ( SELECT DISTINCT COURSEalias15.COURSE_ID FROM COURSE AS COURSEalias15 WHERE COURSEalias15.COURSE_ID IN ( SELECT DISTINCT COURSEalias16.COURSE_ID FROM COURSE AS COURSEalias16 WHERE COURSEalias16.COURSE_ID IN ( SELECT DISTINCT COURSEalias17.COURSE_ID FROM COURSE AS COURSEalias17 WHERE COURSEalias17.COURSE_ID IN ( SELECT DISTINCT COURSEalias18.COURSE_ID FROM COURSE AS COURSEalias18 WHERE COURSEalias18.COURSE_ID\nAnswer: ", "b17c1552a4b4b9740f4bb18f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me, EECS 540 offered how many credits?\nPredicted SQL: SELECT DISTINCT COURSEalias0.CREDITS FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 540\nAnswer: ", "675f186f28864d66bb349c3c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In all departments in Fall 2016, how many course offerings were there?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "ed4ed6efcf1a975d576ca509": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What 3-credit courses can I find in the SWC 400-level?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = \"3\" AND COURSEalias0.DEPARTMENT = \"SWC\" AND COURSEalias0.NUMBER < 400 + 100 AND COURSEalias0.NUMBER >= 400 \nAnswer: ", "ab6169bb60a4f561000f8a2f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the 300-level EECS courses offered in Fall 2016 or Winter 2016 term.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 300 + 100 AND COURSEalias0.NUMBER >= 300 AND SEMESTERalias0.SEMESTER IN ( \"FA\" , \"WN\" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "863eb24a8e6664efb6d4d8ad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: The EECS 445 course was how many credits?\nPredicted SQL: SELECT CREDITS FROM COURSE WHERE DEPARTMENT = \"EECS\" AND NUMBER = 445\nAnswer: ", "f49bff847b2aaf95148b1b2a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For EECS 281, what did student 6 take as prerequisites?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 281 AND STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND STUDENT_RECORDalias0.STUDENT_ID = 6 \nAnswer: ", "696000a0c8c02987864e5cc4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students with more than 100 total credits have received financial aid?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENTalias0.STUDENT_ID) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_CREDIT > 100 AND STUDENTalias0.FINANCIAL_AID = \"Yes\"\nAnswer: ", "a094a75c563cd3cc3e18623d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support do universities offer for career planning?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "7bacec34bddd8c2084f360d5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the authors who wrote for more than 2 students?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID GROUP BY INSTRUCTORalias0.NAME HAVING COUNT(DISTINCT STUDENT_RECORDalias0.STUDENT_ID) > 2\nAnswer: ", "01b568c16a3be512bcaef74d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What role does technology play in modernizing university administration?\nPredicted SQL: This question is not directly related to the provided tables and columns, so it cannot be translated into SQL.\nAnswer: ", "4fd982f07b95baad02c851ae": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you confirm whether EECS 554 had a project assignment?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_PROJECTS = \"Y\" AND COURSEalias0.NUMBER = 554 \nAnswer: ", "61bf6e2c7608827ebe9d05ff": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please tell me the number of EECS courses that 2 or more faculty members taught.\nPredicted SQL: SELECT COUNT(DISTINCT COURSE_OFFERINGalias0.COURSE_ID) \nFROM COURSE_OFFERING AS COURSE_OFFERINGalias0 \nJOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON COURSE_OFFERINGalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID \nJOIN COURSE AS COURSEalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID \nWHERE COURSEalias0.DEPARTMENT = \"EECS\" \nGROUP BY COURSE_OFFERINGalias0.COURSE_ID \nHAVING COUNT(DISTINCT OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID) >= 2\nAnswer: ", "66c31f4cfc1ab9de18cd6d6a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the programs containing MATH 116?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM COURSE AS COURSEalias0 \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nINNER JOIN PROGRAM AS PROGRAMalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID \nWHERE COURSEalias0.DEPARTMENT = \"MATH\" AND COURSEalias0.NUMBER = 116\nAnswer: ", "5886a15fcaa8c65d0a450dbd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses with the highest enrollment of student athletes?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON COURSEalias0.COURSE_ID = STUDENT_RECORDalias0.COURSE_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID WHERE STUDENTalias0.MINOR = \"Athlete\" ORDER BY COURSEalias0.NUM_ENROLLED DESC\nAnswer: ", "cb1dabfacc0dffcac780fe8e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was EECS 495 lectures starting after 12:00 in Fall 2005?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME >= \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 495 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2005 \nAnswer: ", "7178994b3c523f0bf10f8675": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average total gpa of the students who have peanut allergies?\nPredicted SQL: This question cannot be answered with the provided tables and columns.\nAnswer: ", "c87c85bd9b37406683ebf552": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the instructors who taught courses that satisfy PreMajor?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" \nAnswer: ", "f8c51d7418a445e43eb35d18": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Winter 2001, did EECS 595 begin after 12:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME >= \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 595 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2001 \nAnswer: ", "bac3ec071c1141ea8d914c50": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What benefits come from faculty-student research collaborations?\nPredicted SQL: SELECT DISTINCT INSTRUCTOR.NAME, COURSE.NAME, COURSE.DESCRIPTION FROM INSTRUCTOR INNER JOIN OFFERING_INSTRUCTOR ON INSTRUCTOR.INSTRUCTOR_ID = OFFERING_INSTRUCTOR.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING ON OFFERING_INSTRUCTOR.OFFERING_ID = COURSE_OFFERING.OFFERING_ID INNER JOIN COURSE ON COURSE_OFFERING.COURSE_ID = COURSE.COURSE_ID WHERE COURSE.DESCRIPTION LIKE \"%faculty-student research collaborations%\"\nAnswer: ", "149424bd41d9add283ec6699": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What semester was the next available course 422 with instructor Elizabeth R Wingrove teaching after Winter 2014?\nPredicted SQL: SELECT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Elizabeth R Wingrove%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR > 2014 AND SEMESTERalias0.SEMESTER != \"WI\" \nAnswer: ", "f8eeef20a40c92795b4085a1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Rank departments based on the average number of RateMyProfessor reviews for their instructors.\nPredicted SQL: SELECT COURSEalias0.DEPARTMENT, AVG(COURSEalias0.NUM_REVIEWS) AS avg_reviews\nFROM COURSE AS COURSEalias0\nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID\nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON COURSE_OFFERINGalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID\nGROUP BY COURSEalias0.DEPARTMENT\nORDER BY avg_reviews DESC\nAnswer: ", "ae4be21adc46c5fa47d5f2c4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Determine the key attributes that lead to high enrollment in eecs department courses.\nPredicted SQL: SELECT COURSEalias0.DEPARTMENT, COURSEalias0.NUM_ENROLLED, COURSEalias0.NUM_REVIEWS, COURSEalias0.CLARITY_SCORE, COURSEalias0.EASINESS_SCORE, COURSEalias0.HELPFULNESS_SCORE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" ORDER BY COURSEalias0.NUM_ENROLLED DESC\nAnswer: ", "f0d30799ec2564def7144929": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me if EECS 594 is among the courses with a lab.\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 594 \nAnswer: ", "0c0dc96ae40a26f22d01c554": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course has the most horses working?\nPredicted SQL: This question does not have a direct translation into SQL as it does not relate to the data provided in the tables.\nAnswer: ", "d85eb902c11e79ea433be858": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of departments that include Advanced Seminars in Survey Methodology.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Advanced Seminars in Survey Methodology%\" \nAnswer: ", "a6ddd694f1cd7e517fd30f29": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you provide the count of instructors who have not taught CLIMATE course 380 before?\nPredicted SQL: SELECT COUNT ( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME NOT IN ( SELECT INSTRUCTORalias1.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"CLIMATE\" AND COURSEalias0.NUMBER = 380 ) \nAnswer: ", "0628388a15e73125272faa63": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the section numbers for DANCE 100 courses offered in Fall 2016 that started after 08:00?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.SECTION_NUMBER \nFROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 \nWHERE COURSE_OFFERINGalias0.START_TIME > \"08:00\" \nAND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nAND COURSEalias0.DEPARTMENT = \"DANCE\" \nAND COURSEalias0.NUMBER = 100 \nAND SEMESTERalias0.SEMESTER = \"FA\" \nAND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "a9273447eabe53f7db30cb6b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: With regards to the MDE, what courses could've worked?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%MDE%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "4d8ea90cc8f8f7cecf23eda9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students don't have any allergies?\nPredicted SQL: SELECT COUNT(student_id) FROM student WHERE student_id NOT IN (SELECT student_id FROM student_record WHERE how = 'allergy')\nAnswer: ", "9249041fa0b79973c89c5b54": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all department chairs who are teaching courses with final projects in the latest semester.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME \nFROM INSTRUCTOR AS INSTRUCTORalias0 \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nINNER JOIN COURSE AS COURSEalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nINNER JOIN PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENTalias0 ON PROGRAM_REQUIREMENTalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE COURSE_OFFERINGalias0.HAS_FINAL_PROJECT = 1 \nAND SEMESTERalias0.SEMESTER = (SELECT MAX(SEMESTER_ID) FROM SEMESTER) \nAnswer: ", "ce4ab2148de04c4c24125e97": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please tell me if MATH 417 has always been taught by either Igor Dolgachev or Carolyn A Dean.\nPredicted SQL: SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"MATH\" AND COURSEalias0.NUMBER = 417 AND INSTRUCTORalias0.NAME NOT IN (\"Igor Dolgachev\",\"Carolyn A Dean\") AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "4c6276bcdeee768eee5f5953": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How do universities prepare students for the global job market?\nPredicted SQL: This question cannot be answered directly with the provided tables. It would require additional information or data related to university programs, courses, and initiatives aimed at preparing students for the global job market.\nAnswer: ", "006ac659216f9299d689eb2e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you give me the course number of the Mental Health and Mental Disorders of Children and Youth classes?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Mental Health and Mental Disorders of Children and Youth%\" \nAnswer: ", "f6bdbb62acbd6a4c5a7ef8d5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Determine which factors most influence a student's decision to enroll in a 'software development' course.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER, STUDENT_RECORDalias0.GRADE, STUDENT_RECORDalias0.HOW, STUDENT_RECORDalias0.TRANSFER_SOURCE, STUDENT_RECORDalias0.EARN_CREDIT, STUDENT_RECORDalias0.REPEAT_TERM, STUDENT_RECORDalias0.TEST_ID FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" \nAnswer: ", "ef49ea5525b9137ab5e107cc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the instructors who taught courses that satisfy ULCS?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nWHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAnswer: ", "77392a0b4d41eced8b99190e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the physicians in the stats department.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"STATS\" \nAnswer: ", "feeea9ed79d0c1e314f1c514": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses that instructor Frederick Fitzgerald Wherry taught in 2012?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Frederick Fitzgerald Wherry%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2012 \nAnswer: ", "fe0ad536559c2c6b6ccea658": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the email addresses of the instructors?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.UNIQNAME FROM INSTRUCTOR AS INSTRUCTORalias0\nAnswer: ", "7615eae0e6b88a0e7d5d53fa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were some 300-level EECS courses that had workload smaller than 3?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER LIKE \"3%\" AND PROGRAM_COURSEalias0.WORKLOAD < 3\nAnswer: ", "24743a9fd41882bdacfccee5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Track the variation in the number of courses offered by the eecs department each semester for the past three years.\nPredicted SQL: SELECT SEMESTERalias0.YEAR, SEMESTERalias0.SEMESTER, COUNT(DISTINCT COURSE_OFFERINGalias0.OFFERING_ID) \nFROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 \nWHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nAND COURSEalias0.DEPARTMENT = \"EECS\" \nAND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAND SEMESTERalias0.YEAR >= 2014 \nGROUP BY SEMESTERalias0.YEAR, SEMESTERalias0.SEMESTER\nAnswer: ", "17db6c5416c48987f629f8c5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Call a student to notify them of an urgent advisory meeting regarding their academic standing.\nPredicted SQL: This question does not require a SQL query as it is a task related to contacting a student, not retrieving data from the database.\nAnswer: ", "ce9c865e58ec5352c50b9c3e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the leading companies and startups influencing the computer hardware industry today?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables containing information about companies and startups influencing the computer hardware industry would be needed to answer this question.\nAnswer: ", "94c3bf80c6869c38d2e30a15": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the capacity and course ID of all offerings that allow auditing?\nPredicted SQL: SELECT COURSE_OFFERINGalias0.OFFERING_ID, COURSE_OFFERINGalias0.COURSE_ID FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.ALLOW_AUDIT = TRUE\nAnswer: ", "5c31b287def21bf22941713a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did instructor Richard D Cureton teach ENGLISH 403 in Fall 2009?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ENGLISH\" AND COURSEalias0.NUMBER = 403 AND INSTRUCTORalias0.NAME LIKE \"%Richard D Cureton%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2009 AND SEMESTERalias0.SEMESTER = \"Fall\"\nAnswer: ", "c3fef8f5cd675a82870e2398": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the support universities provide for students with disabilities.\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME , PROGRAMalias0.COLLEGE , PROGRAMalias0.INTRODUCTION FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.NAME LIKE \"%support for students with disabilities%\"\nAnswer: ", "9ee4c6b5b8c0f3771f0d83b6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which department has the highest average life expectancy?\nPredicted SQL: SELECT DEPARTMENT\nFROM (\n    SELECT COURSE.DEPARTMENT, AVG(COURSE.NUM_ENROLLED) AS AVG_ENROLLED\n    FROM COURSE\n    GROUP BY COURSE.DEPARTMENT\n    ORDER BY AVG_ENROLLED DESC\n    LIMIT 1\n) AS DEPARTMENT_WITH_HIGHEST_AVG_ENROLLED\nAnswer: ", "9718e93557103c0ea1e97626": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which 400 / 500-level courses in MILSCI have the lightest workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%MILSCI%\" AND COURSEalias0.NUMBER LIKE \"4%\" OR COURSEalias0.NUMBER LIKE \"5%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY LIKE \"%MILSCI%\" ) \nAnswer: ", "aaeca50fe50d1ea238061ccf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses with the most swedish students enrolled?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE STUDENTalias0.DECLARE_MAJOR = \"Swedish\" ORDER BY COURSEalias0.NUM_ENROLLED DESC\nAnswer: ", "de89c142925eee7e656c7419": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What prerequisites were required to be passed to take EECS 376?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 376\nAnswer: ", "45165e3edce323dcefde169f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: When did the instructor with the most courses taught since 2010 start their term?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME, MIN(SEMESTERalias0.YEAR) AS START_YEAR\nFROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nINNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER\nWHERE SEMESTERalias0.YEAR >= 2010\nGROUP BY INSTRUCTORalias0.NAME\nORDER BY COUNT(COURSEalias0.COURSE_ID) DESC\nLIMIT 1\nAnswer: ", "c03ed5f9732a8ea37a749664": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the Elementary Persian II courses that had 4 credits?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Elementary Persian II%\" AND COURSEalias0.CREDITS = \"4\" \nAnswer: ", "34138fbfcb32a20f67042bd9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common allergy among the students?\nPredicted SQL: This question is not relevant to the provided tables and cannot be answered with the given data.\nAnswer: ", "70c20ebdbcff0545f1cf1dcd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Develop a graduation timeline for student 1.\nPredicted SQL: SELECT SEMESTER.semester, SEMESTER.year FROM STUDENT AS STUDENTalias0 INNER JOIN SEMESTER AS SEMESTERalias0 ON STUDENTalias0.PREDICTED_GRADUATION_SEMESTER = SEMESTERalias0.SEMESTER_ID WHERE STUDENTalias0.STUDENT_ID = 1\nAnswer: ", "9052f2163ccbe544be90cae2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which 500-level EECS courses were there for Spring or Summer 2016 terms?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 500 + 100 AND COURSEalias0.NUMBER >= 500 AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" , \"SU\" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "3a55aaa9339915ef2cce3607": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Summarize a semester's eecs course offerings into a guide for students.\nPredicted SQL: SELECT COURSEalias0.NAME, COURSEalias0.NUMBER, COURSEalias0.CREDITS, COURSE_OFFERINGalias0.SEMESTER, COURSE_OFFERINGalias0.START_TIME, COURSE_OFFERINGalias0.END_TIME, COURSE_OFFERINGalias0.CLASS_ADDRESS\nFROM COURSE AS COURSEalias0\nJOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID\nWHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSE_OFFERINGalias0.SEMESTER = [semester_id]\nAnswer: ", "014d086b43420ec2d9cde39c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which upper-level CS courses in Winter 2016 finished before 12:00?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.END_TIME <= \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "0808280772b17b940a0f75a6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the count of instructors who have not taught DENT 840?\nPredicted SQL: SELECT COUNT ( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME NOT IN ( SELECT INSTRUCTORalias1.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"DENT\" AND COURSEalias0.NUMBER = 840 ) \nAnswer: ", "c8da51daa5e0bbd6a5823393": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me the names and permanent addresses of students who have transferred credits?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME, STUDENTalias0.PERMANENT_ADDRESS FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TRANSFER_SOURCE IS NOT NULL\nAnswer: ", "05614f61d50d86717a0bf812": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What options did CS majors have for courses in Winter 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE \"%CS%\" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "58bdf05ca149a3f2b9f20cdc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the minimum grades required for prerequisite courses in the polsci department?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER , STUDENT_RECORDalias0.GRADE FROM COURSE AS COURSEalias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"polsci\" \nAnswer: ", "e6a3e2268aaa19d5028e6444": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Among the courses that student 1 has taken, what were the courses related to software development?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" AND STUDENT_RECORDalias0.STUDENT_ID = 1 \nAnswer: ", "5b85d7496d492e034c1ab013": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the ULCS courses offered in Winter 2012?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2012 \nAnswer: ", "f72b1a76921c576c424112ab": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses were there for CS major to take in Summer 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE \"%CS%\" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID AND SEMESTERalias0.SEMESTER = \"SU\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "440f0eb57e59c683e4d890be": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the highest number of credits taken among the students who returned damaged?\nPredicted SQL: SELECT MAX(STUDENTalias0.TOTAL_CREDIT) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.DAMAGE = 'returned' \nAnswer: ", "931e89858f37aca623de2be5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the easiest 'graduate' level course based on easiness scores?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY = \"Graduate\" AND COURSEalias0.EASINESS_SCORE = ( SELECT MIN( COURSEalias1.EASINESS_SCORE ) FROM COURSE AS COURSEalias1 WHERE COURSEalias1.COURSE_ID IN ( SELECT PROGRAM_COURSEalias2.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias2 WHERE PROGRAM_COURSEalias2.CATEGORY = \"Graduate\" ) ) \nAnswer: ", "eb2c82ff25d0f2a2a90a0bfd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course has the instructor with the highest number of RateMyProfessor reviews?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME \nFROM COURSE AS COURSEalias0 \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.COURSE_ID = COURSEalias0.COURSE_ID \nINNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nWHERE INSTRUCTORalias0.INSTRUCTOR_ID = (SELECT INSTRUCTOR_ID \n                                         FROM (SELECT INSTRUCTOR_ID, SUM(NUM_REVIEWS) AS TOTAL_REVIEWS \n                                               FROM OFFERING_INSTRUCTOR \n                                               GROUP BY INSTRUCTOR_ID \n                                               ORDER BY TOTAL_REVIEWS DESC \n                                               LIMIT 1) AS MAX_REVIEWS) \nAnswer: ", "8417e2115f95eb5cfbeeb130": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the department where History of Arabic Literature in English can be found?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%History of Arabic Literature in English%\" \nAnswer: ", "af8a19cccb8803a6aa9bb321": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which was the least workload course to be taken in the Other category?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%Other%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY LIKE \"%Other%\" ) \nAnswer: ", "ea4afa96a078c13003b887dd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses were offered from THEORY in Fall 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"THEORY\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "fe1ef327cc3c8349e3709005": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the count of instructors who have not taught ORALPATH 696?\nPredicted SQL: SELECT COUNT ( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME NOT IN ( SELECT INSTRUCTORalias1.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"ORALPATH\" AND COURSEalias0.NUMBER = 696 ) \nAnswer: ", "3957af4dc6963b41794f5f06": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In which semesters did EECS 560 take place after Winter 2016?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 560 AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND SEMESTERalias0.SEMESTER_ID > ( SELECT SEMESTERalias1.SEMESTER_ID FROM SEMESTER AS SEMESTERalias1 WHERE SEMESTERalias1.SEMESTER = \"WN\" AND SEMESTERalias1.YEAR = 2016 ) \nAnswer: ", "301d7e73d65baf4faab0d925": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What effect does student body diversity have on campus culture?\nPredicted SQL: This question cannot be answered directly with the provided tables and columns. It would require additional data related to student body diversity and campus culture, which are not present in the given tables.\nAnswer: ", "ac5cd38b84ede595817cee69": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please tell me if THEORY 560 has always been taught by either Walter T Everett or Marion A Guck.\nPredicted SQL: SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"THEORY\" AND COURSEalias0.NUMBER = 560 AND INSTRUCTORalias0.NAME NOT IN (\"Walter T Everett\", \"Marion A Guck\") AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "8dd9f683be4eb48d9f54f151": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In the Spring 2019 semester, did ANTHRARC 494 offer section 692?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.SECTION_NUMBER = 692 AND COURSEalias0.DEPARTMENT = \"ANTHRARC\" AND COURSEalias0.NUMBER = 494 AND SEMESTERalias0.SEMESTER = \"SP\" AND SEMESTERalias0.YEAR = 2019 \nAnswer: ", "136df9abef2aba351bef872c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the course number for the Marine Geochemistry class given in the past.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NUMBER FROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.NAME LIKE \"%Marine Geochemistry%\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND SEMESTERalias0.YEAR < YEAR(CURDATE()) \nAnswer: ", "800f9163b5565eae82628d6a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses are there except the ones that the ARTDES department offers?\nPredicted SQL: SELECT DISTINCT COUNT ( COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT <> \"ARTDES\" \nAnswer: ", "584f7b76220e360667135bdc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Other than instructor Beth-ellen Pennell, who else has taught PSYCH 688?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"PSYCH\" AND COURSEalias0.NUMBER = 688 AND INSTRUCTORalias0.NAME NOT LIKE \"%Beth-ellen Pennell%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "9175bd63e6b2d9faa8419fd4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many 200-level EECS course offerings, in spring and summer 2016, were there?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 200 + 100 AND COURSEalias0.NUMBER >= 200 AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" , \"SU\" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "9aa992cb61c74487d911034f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Apply a ridge regression model to predict student 1's total gpa.\nPredicted SQL: This question cannot be answered directly with the provided tables. It would require additional information on the ridge regression model and the data used for prediction.\nAnswer: ", "386a5631ce2c772ef877ae3a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses in the histart department that have office hours starting at 13:00:00?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"HISTART\" AND COURSE_OFFERINGalias0.START_TIME = \"13:00:00\"\nAnswer: ", "32f9dfbd58570b066eb1137d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the preferred names of students who have enrolled in courses that allow auditing at least once?\nPredicted SQL: SELECT DISTINCT STUDENT.LASTNAME, STUDENT.FIRSTNAME FROM STUDENT INNER JOIN STUDENT_RECORD ON STUDENT.STUDENT_ID = STUDENT_RECORD.STUDENT_ID INNER JOIN COURSE_OFFERING ON STUDENT_RECORD.COURSE_ID = COURSE_OFFERING.COURSE_ID WHERE COURSE_OFFERING.ALLOW_AUDIT = 1\nAnswer: ", "f3ac72b56d3fcb96fe88582c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was the last instructor for MEDCHEM 617 before 2016?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.SEMESTER = ( SELECT MAX( SEMESTERalias0.SEMESTER_ID ) FROM SEMESTER AS SEMESTERalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias1 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias1.SEMESTER INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"MEDCHEM\" AND COURSEalias1.NUMBER = 617 AND SEMESTERalias0.YEAR < 2016 ) AND COURSEalias0.DEPARTMENT = \"MEDCHEM\" AND COURSEalias0.NUMBER = 617 \nAnswer: ", "7215aab39486220e64cc7e64": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the top three most common preferred names among students?\nPredicted SQL: SELECT PREFERRED_NAME, COUNT(PREFERRED_NAME) AS COUNT FROM STUDENT GROUP BY PREFERRED_NAME ORDER BY COUNT DESC LIMIT 3\nAnswer: ", "161bbe32c7442e4fdee10184": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Before 12:00, were there any classes for MENAS 334?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME < \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"MENAS\" AND COURSEalias0.NUMBER = 334 \nAnswer: ", "c5d2145e2e134194d28f5c96": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the semesters with minimum humidity lower than 25 percent?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "ddb878a8ba8279546af14e59": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What role do community colleges play in higher education?\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "20af9884291ea2e83d51e978": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the best-selling textbooks in the histart department?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.TEXTBOOK FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN COURSE AS COURSEalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"histart\" \nAnswer: ", "8080ce7a6a54664f09527ca9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses that student 1 took that fulfill the PreMajor requirement?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON STUDENT_RECORDalias0.COURSE_ID = PROGRAM_COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND STUDENT_RECORDalias0.STUDENT_ID = 1 \nAnswer: ", "ff6efc7039ab4a1f6bdbf70a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors share the same office addresses?\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID WHERE INSTRUCTORalias0.INSTRUCTOR_ID IN (SELECT INSTRUCTOR_ID FROM INSTRUCTOR GROUP BY CLASS_ADDRESS HAVING COUNT(*) > 1) \nAnswer: ", "5b1867f20990981e6043e76a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you confirm if the only teacher for Economic Sociology and Organizations was instructor Frederick Fitzgerald Wherry?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NAME LIKE \"%Economic Sociology and Organizations%\" AND INSTRUCTORalias0.NAME LIKE \"%Frederick Fitzgerald Wherry%\" \nAnswer: ", "597b0b9b5dd29c933f3ed3e9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please tell me the courses that instructor Yopie Prins taught in the past before Fall 2010.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Yopie Prins%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND (SEMESTERalias0.YEAR < 2010 OR (SEMESTERalias0.YEAR = 2010 AND SEMESTERalias0.SEMESTER < \"Fall\")) \nAnswer: ", "01fd568b2c89a2e976f20733": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the people that taught PreMajor courses in Winter 2008?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2008 \nAnswer: ", "0d04e63030ce9ddfd6092fc9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Transcribe an interview with a 'computer hardware' industry expert for student reference.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME, INSTRUCTORalias0.UNIQNAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" \nAnswer: ", "9dcf035b9cf3cc132e54f18f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me which course, among those fulfilling Core, had the smallest workload and the largest class size?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT PROGRAM_COURSEalias0.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY LIKE \"%Core%\" ) ) AND COURSEalias0.NUM_ENROLLED = ( SELECT MAX( COURSEalias1.NUM_ENROLLED ) FROM COURSE AS COURSEalias1 WHERE COURSEalias1.COURSE_ID IN ( SELECT PROGRAM_COURSEalias2.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias2 WHERE PROGRAM_COURSEalias2.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias3.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias3 WHERE PROGRAM_COURSEalias3.CATEGORY = \"Core\" ) ) ) \nAnswer: ", "0dd23d0ae1853279e01d097b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course completed by student 10 has the highest workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE STUDENT_RECORDalias1.STUDENT_ID = 10 ) AND STUDENT_RECORDalias0.STUDENT_ID = 10 \nAnswer: ", "a79f3636d2df9105d40fbf18": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What impact do peer mentoring programs have on students?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information or data on peer mentoring programs and their impact on students would be needed to provide a meaningful answer.\nAnswer: ", "b381242b9d0c205bcda3b97b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all course offerings that allow remote participation.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.OFFERING_ID FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.CLASS_ADDRESS LIKE \"%remote%\" \nAnswer: ", "80bcb22bab64864159f64b75": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the impact of class size on the quality of education?\nPredicted SQL: This question cannot be directly answered with the provided tables and columns. The impact of class size on the quality of education would require additional data such as student feedback, instructor ratings, and course evaluations.\nAnswer: ", "eab33b540397d87709bb6bff": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are there any courses with a clarity score above 4 taught in japanese?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CATEGORY = \"Japanese\" AND COURSEalias0.CLARITY_SCORE > 4\nAnswer: ", "1361a41929ab3c1a6227b413": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What practices ensure fair grading at universities?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION LIKE \"%fair grading%\" OR COURSEalias0.DESCRIPTION LIKE \"%grading practices%\" OR COURSEalias0.DESCRIPTION LIKE \"%grading policies%\" OR COURSEalias0.DESCRIPTION LIKE \"%grading standards%\"\nAnswer: ", "8138794e3b4480d67795741b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the advisory requirement to know before taking THEORY 543?\nPredicted SQL: SELECT DISTINCT COURSEalias0.ADVISORY_REQUIREMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"THEORY\" AND COURSEalias0.NUMBER = 543 \nAnswer: ", "7b8cd36abacd4cd268f97715": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What challenges do first-generation college students face?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information or tables related to student demographics and challenges faced by first-generation college students would be needed to answer this question.\nAnswer: ", "79df66a7054362b1f57cbeb2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did 415 have classes on Fridays when instructor Daniel M Burns Jr taught it?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NUMBER = 415 AND COURSE_OFFERINGalias0.FRIDAY = \"Y\" AND INSTRUCTORalias0.NAME LIKE \"%Daniel M Burns Jr%\" \nAnswer: ", "381e647675e80d432627da39": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the authors of the students who entered as first-year undergraduates?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.PROGRAM_ID = PROGRAMalias0.PROGRAM_ID WHERE STUDENTalias0.ENTERED_AS = \"first-year undergraduate\"\nAnswer: ", "24ec984b26594c8dfbb8d64c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of PreMajor courses available in Winter 2012.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nWHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2012 \nAnswer: ", "f8447c14508690203df21d2b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What was the workload intensity in EECS 373?\nPredicted SQL: SELECT DISTINCT PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 373 AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "13e1c2685081614c806bb651": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Count how many duplicate student SSNs are in the database.\nPredicted SQL: SELECT COUNT(*) FROM (SELECT STUDENTalias0.SSN, COUNT(*) FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.SSN HAVING COUNT(*) > 1) AS DUPLICATES\nAnswer: ", "a086376f6ff7e4b9ad5f8af7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of upper-level CS courses that do not require EECS 516 as a prerequisite.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0, PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias1.COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITEalias0.PRE_COURSE_ID FROM COURSE AS COURSEalias0, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 516 AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "9d69ae3779aa57d690268569": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course with an honors track has the highest enrollment?\nPredicted SQL: SELECT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT PROGRAM_COURSEalias0.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY = \"Honors\" ) AND COURSEalias0.NUM_ENROLLED = ( SELECT MAX( COURSEalias1.NUM_ENROLLED ) FROM COURSE AS COURSEalias1 WHERE COURSEalias1.COURSE_ID IN ( SELECT PROGRAM_COURSEalias2.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias2 WHERE PROGRAM_COURSEalias2.CATEGORY = \"Honors\" ) ) \nAnswer: ", "f8330d71b0935dc880b77046": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the Histopathology I and II courses that had 4 credits?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Histopathology I and II%\" AND COURSEalias0.CREDITS = \"4\" \nAnswer: ", "c8d938855aed5f9323fb5591": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the start dates of courses that are offered on tuesday in fall 2016.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.START_TIME FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 , COURSE AS COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.TUESDAY = \"Y\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "b324492d9df1cbfd05967320": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the most important skills for students to develop in college.\nPredicted SQL: This question cannot be answered directly with the provided tables. It would require additional information or a different table that specifies the skills students are expected to develop in college.\nAnswer: ", "12fa71e56ab7376b77f78a4e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Inform a student about a change in their course schedule due to a room update.\nPredicted SQL: UPDATE COURSE_OFFERING SET CLASS_ADDRESS = \"new_room_number\" WHERE COURSE_OFFERING.OFFERING_ID = \"offering_id\" AND COURSE_OFFERING.COURSE_ID = \"course_id\"\nAnswer: ", "9a6ad2c81bb9b27c561ffd5a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Offer a portuguese translation of eecs 493 materials.\nPredicted SQL: SELECT COURSE.DESCRIPTION FROM COURSE WHERE COURSE.NUMBER = 493 AND COURSE.DEPARTMENT = \"EECS\"\nAnswer: ", "45d99ad31ca5f55e891fd7a6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the sum of waitlist counts of courses offered in fall 2016?\nPredicted SQL: SELECT SUM(waitlist_count) FROM course_offering WHERE semester = 'Fall 2016'\nAnswer: ", "23c9dcd479d385ab9332a144": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Fill in missing text in the course description based on the course name.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME = \"Creative Writing-Poetry\" \nAnswer: ", "1abfb79c21c4282f8327953f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the textbooks used in the courses that own a boeing 737?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.TEXTBOOK FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.TEXTBOOK LIKE \"%boeing 737%\" \nAnswer: ", "3ea962e96002b6f78653d0b6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support is available for mental health and wellness on campus?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "e09c57ea3e618723d941203a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Search for career advice articles for eecs students nearing graduation.\nPredicted SQL: SELECT * FROM COURSE WHERE DEPARTMENT = \"EECS\" AND DESCRIPTION LIKE \"%career advice%\" AND DESCRIPTION LIKE \"%graduation%\"\nAnswer: ", "dfd00f96fc30dec3585dd9a1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: I want to know the total number of credits student 6 has earned thus far.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_CREDIT FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 6\nAnswer: ", "cabb0c98171d3e112bc29a78": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of PreMajor courses available in Fall 2015.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2015 \nAnswer: ", "71855d9f0f061a9cdb2fa4f3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students with the mother's maiden name moore have a total credit above 100?\nPredicted SQL: SELECT DISTINCT COUNT(STUDENTalias0.STUDENT_ID) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.LASTNAME = \"moore\" AND STUDENTalias0.TOTAL_CREDIT > 100\nAnswer: ", "795d3939d1f1004b6914e85c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What 3-credit courses can I find in the SOC 400-level?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = \"3\" AND COURSEalias0.DEPARTMENT = \"SOC\" AND COURSEalias0.NUMBER < 400 + 100 AND COURSEalias0.NUMBER >= 400 \nAnswer: ", "20eb9ca33c61a8d651ee3092": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Determine the sentiment of eecs students towards online exams.\nPredicted SQL: This question cannot be answered directly with the provided tables. Sentiment analysis would require additional data on student feedback or reviews specifically related to online exams in EECS courses.\nAnswer: ", "867be4d4f3e7272d764aeb7e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of the prerequisite courses for RCIDIV 319, how many did student 1 participate in?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.DEPARTMENT = \"RCIDIV\" AND COURSEalias0.NUMBER = 319 AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND STUDENT_RECORDalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND STUDENT_RECORDalias0.STUDENT_ID = 1\nAnswer: ", "17e65b03521eef4e1edd53f5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What has student 8 taken as prerequisites for EECS 370?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 370 AND STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND STUDENT_RECORDalias0.STUDENT_ID = 8 \nAnswer: ", "a59f0bec2d9768850a429988": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Cluster eecs students by their elective choices and academic performance.\nPredicted SQL: SELECT STUDENT.PROGRAM_ID, STUDENT.TOTAL_GPA, PROGRAM_COURSE.CATEGORY\nFROM STUDENT\nINNER JOIN PROGRAM_COURSE ON STUDENT.PROGRAM_ID = PROGRAM_COURSE.PROGRAM_ID\nINNER JOIN COURSE ON PROGRAM_COURSE.COURSE_ID = COURSE.COURSE_ID\nWHERE COURSE.DEPARTMENT = \"EECS\"\nAnswer: ", "d6f861a50c2f5658cd5d8f2e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many physicians are in charge of more than 3 courses?\nPredicted SQL: SELECT COUNT(DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID) \nFROM INSTRUCTOR AS INSTRUCTORalias0 \nJOIN OFFERING_INSTRUCTOR ON INSTRUCTORalias0.INSTRUCTOR_ID = OFFERING_INSTRUCTOR.INSTRUCTOR_ID \nJOIN COURSE_OFFERING ON OFFERING_INSTRUCTOR.OFFERING_ID = COURSE_OFFERING.OFFERING_ID \nGROUP BY INSTRUCTORalias0.INSTRUCTOR_ID \nHAVING COUNT(COURSE_OFFERING.COURSE_ID) > 3\nAnswer: ", "28427a92f4fcfaac74315009": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: I want to know the total number of credits student 10 has earned thus far.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_CREDIT FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 10\nAnswer: ", "4ca41b646a7037ce5b05626d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses use the best-selling textbook in each area as their textbook?\nPredicted SQL: SELECT COUNT(DISTINCT COURSE_OFFERINGalias0.COURSE_ID) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.TEXTBOOK IN (SELECT TEXTBOOK FROM (SELECT AREA, TEXTBOOK, COUNT(TEXTBOOK) AS COUNT FROM COURSE_OFFERING GROUP BY AREA, TEXTBOOK ORDER BY COUNT DESC) AS BEST_SELLING_TEXTBOOKS GROUP BY AREA) \nAnswer: ", "203bf15964e944e03fe3975e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the allergies that students have?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "f6a3fd85e578a11e888318da": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses have a minimum grade requirement of 'a' in their prerequisites?\nPredicted SQL: SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSE_PREREQUISITEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID IN (SELECT COURSE_ID FROM COURSE WHERE DESCRIPTION LIKE \"%minimum grade requirement of 'a'%\") \nAnswer: ", "189b15812bd08e822574f2f0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the available upper-level CS courses in Fall 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "0400712c47a2ebe49f1984fd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course has the heaviest workload among those taken by student 8?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE STUDENT_RECORDalias1.STUDENT_ID = 8 ) AND STUDENT_RECORDalias0.STUDENT_ID = 8 \nAnswer: ", "8168184edb5e0ad68c428a05": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which instructors, besides Jean-thomas Dominique Arrighi De Casanova, taught INTLSTD 401 classes?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"INTLSTD\" AND COURSEalias0.NUMBER = 401 AND INSTRUCTORalias0.NAME NOT LIKE \"%Jean-thomas Dominique Arrighi De Casanova%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "66909d53c5d6c93edd1dc198": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the 400-level EECS courses offered in the Spring or Summer 2016 term?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 400 + 100 AND COURSEalias0.NUMBER >= 400 AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" , \"SU\" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "c068193d39cf460dfd96c6de": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average number of financial aids received by students in the eecs department?\nPredicted SQL: SELECT AVG(STUDENTalias0.FINANCIAL_AID) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.DEPARTMENT = \"EECS\"\nAnswer: ", "d10b47eeff7f0bbd6d6e6f5b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was the instructor for MATH 419 in Fall 2004?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"MATH\" AND COURSEalias0.NUMBER = 419 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2004\nAnswer: ", "cd65c3401d0de7db507e36b0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses with a prerequisite waiver option allow for auditing?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias1 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID AND COURSE_OFFERINGalias1.ALLOW_AUDIT = TRUE\nAnswer: ", "be1c509a5692097dffce5298": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors have their courses of area and their main research area the same?\nPredicted SQL: SELECT COUNT(DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID) FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = PROGRAM_COURSEalias0.COURSE_ID WHERE INSTRUCTORalias0.AREA = COURSEalias0.DEPARTMENT\nAnswer: ", "e9b2a234f3929dd9891c05ad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Other than 681, what courses did instructor Phoebe C Ellsworth teach?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Phoebe C Ellsworth%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND COURSEalias0.NUMBER != 681\nAnswer: ", "c9760abc01483d8c1bcc750e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who has the longest email address among the instructors?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE LENGTH(INSTRUCTORalias0.UNIQNAME) = (SELECT MAX(LENGTH(INSTRUCTORalias1.UNIQNAME)) FROM INSTRUCTOR AS INSTRUCTORalias1)\nAnswer: ", "266df166d447ac1976c33edd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was the instructor who taught NESLANG 435 most recently before 2016?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nINNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nWHERE COURSE_OFFERINGalias0.SEMESTER = ( \n    SELECT MAX(SEMESTERalias0.SEMESTER_ID) \n    FROM SEMESTER AS SEMESTERalias0 \n    INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias1 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias1.SEMESTER \n    INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID \n    WHERE COURSEalias1.DEPARTMENT = \"NESLANG\" AND COURSEalias1.NUMBER = 435 AND SEMESTERalias0.YEAR < 2016 \n) \nAND COURSEalias0.DEPARTMENT = \"NESLANG\" AND COURSEalias0.NUMBER = 435 \nAnswer: ", "354767e781b6ace77c19f9ad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the course number for the Creative Writing-Poetry class given in the past.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Creative Writing-Poetry%\" \nAnswer: ", "a0b471fd0df27288d8f037a3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many uk students have a total gpa above 3.5?\nPredicted SQL: SELECT COUNT(*) FROM STUDENT WHERE TOTAL_GPA > 3.5 AND DEGREE = 'uk'\nAnswer: ", "ecc9e3b58e652274c51940a5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many credits does student 4 have now?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_CREDIT FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 4 \nAnswer: ", "06f3ea512d8772a115499d2c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was the instructor who taught EARTH 159 most recently before 2016?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.SEMESTER = ( SELECT MAX( SEMESTERalias0.SEMESTER_ID ) FROM SEMESTER AS SEMESTERalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias1 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias1.SEMESTER INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EARTH\" AND COURSEalias1.NUMBER = 159 AND SEMESTERalias0.YEAR < 2016 ) AND COURSEalias0.DEPARTMENT = \"EARTH\" AND COURSEalias0.NUMBER = 159 \nAnswer: ", "7cebdb65c83340fb71aaf4b1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you list the courses other than 313 that instructor Jeffrey G Heath taught?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Jeffrey G Heath%\" AND COURSEalias0.NUMBER != 313 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "f149ed864bd9ff61ad0b1518": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the PreMajor courses offered in Winter 2013?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nWHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2013 \nAnswer: ", "4f68ce26eb10bb61c2b1fcbe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses with honors track availability were offered in winter 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"HONORS\" AND SEMESTERalias0.SEMESTER = \"WI\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "fb348e3b3b2db8ed3d5757db": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors have a main research area in computer hardware and have taught the courses with the same area for more than two semesters?\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" GROUP BY INSTRUCTORalias0.INSTRUCTOR_ID HAVING COUNT(DISTINCT COURSE_OFFERINGalias0.SEMESTER) > 2\nAnswer: ", "fd64c42ca93d7a8b6b28cefc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Analyze student forum posts for sentiments about student advising services.\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables related to student forum posts and sentiment analysis would be needed for this analysis.\nAnswer: ", "44ad4f88d8f1165010e84a95": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In which semesters did EECS 501 take place after Winter 2016?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 501 AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND SEMESTERalias0.SEMESTER_ID > ( SELECT SEMESTERalias1.SEMESTER_ID FROM SEMESTER AS SEMESTERalias1 WHERE SEMESTERalias1.SEMESTER = \"WN\" AND SEMESTERalias1.YEAR = 2016 ) \nAnswer: ", "0ee7de694688c895da0dd03f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average number of room counts among the students with a total gpa lower than 3.4?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_CREDIT) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_GPA < 3.4\nAnswer: ", "ee3b2cbce1040155833c6c2c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who in the past has taught BCS 533?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"BCS\" AND COURSEalias0.NUMBER = 533 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "6e6e7ea382edb217a295fbc6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the last names of students who have a total gpa below 2.0 and have received a scholarship greater than 0?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME \nFROM STUDENT AS STUDENTalias0 \nWHERE STUDENTalias0.TOTAL_GPA < 2.0 \nAND STUDENTalias0.SCHOLARSHIP > 0\nAnswer: ", "4096a226bf97258e8f31f877": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please provide the courses that were offered in Fall or Winter 2016 that fulfill the Core requirement.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%Core%\" AND SEMESTERalias0.SEMESTER IN ( \"FA\" , \"WN\" ) AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "0cddfda93e79d5ae1b1e026a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For 4-credit courses, what is the average course rating?\nPredicted SQL: SELECT AVG(clarity_score) FROM COURSE WHERE credits = 4\nAnswer: ", "d336ee24735530ad447be24a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Group eecs courses based on the number of students enrolled over the past ten semesters.\nPredicted SQL: SELECT COURSEalias0.DEPARTMENT, COURSEalias0.NUMBER, SUM(COURSEalias0.NUM_ENROLLED) AS TOTAL_ENROLLED\nFROM COURSE AS COURSEalias0\nJOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID\nJOIN SEMESTER AS SEMESTERalias0 ON COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID\nWHERE SEMESTERalias0.SEMESTER_ID IN (SELECT SEMESTER_ID FROM SEMESTER ORDER BY SEMESTER_ID DESC LIMIT 10)\nAND COURSEalias0.DEPARTMENT = \"EECS\"\nGROUP BY COURSEalias0.DEPARTMENT, COURSEalias0.NUMBER\nAnswer: ", "0316407bcf14847357b738f6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which student has the most horses working for them?\nPredicted SQL: This question does not seem to be related to the provided tables and columns. Please provide a question that can be answered using the given database schema.\nAnswer: ", "40fabf6f30edaacdd01afad3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which hardware courses were offered in Spring or Summer 2014?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%hardware%\" AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SU\" , \"SS\" ) AND SEMESTERalias0.YEAR = 2014 \nAnswer: ", "9b6925fe1b063eb7df72a975": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common operating system among the courses offered on monday and wednesday?\nPredicted SQL: SELECT COURSEalias0.NAME, COUNT(*) AS NUM_OFFERINGS\nFROM COURSE AS COURSEalias0\nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID\nWHERE COURSE_OFFERINGalias0.MONDAY = \"Y\" AND COURSE_OFFERINGalias0.WEDNESDAY = \"Y\"\nGROUP BY COURSEalias0.NAME\nORDER BY NUM_OFFERINGS DESC\nLIMIT 1\nAnswer: ", "6178f202188238d86e087ddc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the students advised by 'Professor Scott' who have repeated a course.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME , STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID INNER JOIN COURSE AS COURSEalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON STUDENT_RECORDalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE INSTRUCTORalias0.NAME = 'Professor Scott' AND STUDENT_RECORDalias0.HOW = 'repeat_term' \nAnswer: ", "a13160047c0434c10e4e4061": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses that instructor Ruby Christina-marie Tapia taught in 2014?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Ruby Christina-marie Tapia%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2014 \nAnswer: ", "3726df7f7be1f6b4764d09ec": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did james garcia return damaged?\nPredicted SQL: This question does not seem to be related to the provided tables and data.\nAnswer: ", "90f99be2bb0e9e1d789693f5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: When did jessica marglin start teaching courses?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Jessica Marglin%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER\nAnswer: ", "3739277c32a1925d422e87aa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the programs containing MATH 115?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM AS PROGRAMalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID WHERE COURSEalias0.DEPARTMENT = \"MATH\" AND COURSEalias0.NUMBER = 115 \nAnswer: ", "b5934e94f445f9604ca5a8f5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the instructors' office addresses?\nPredicted SQL: SELECT DISTINCT INSTRUCTOR.NAME, INSTRUCTOR.OFFICE_ADDRESS FROM INSTRUCTOR\nAnswer: ", "819b65cabf9854b9ec497908": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find the student SSN and name of students with a total credit greater than 200.\nPredicted SQL: SELECT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_CREDIT > 200\nAnswer: ", "6554ec33f16fcb598af27705": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the number of course offerings for SI 644?\nPredicted SQL: SELECT COUNT(DISTINCT course_offering.offering_id) \nFROM course \nJOIN course_offering ON course.course_id = course_offering.course_id \nWHERE course.department = 'SI' AND course.number = 644\nAnswer: ", "58278c0186820b22667026cf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were there any ENGR 151 classes before 12:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME < \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ENGR\" AND COURSEalias0.NUMBER = 151 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "3a1f7ea37ca8c5ec36a1a183": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support do universities offer to students in creative arts?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION LIKE \"%creative arts%\"\nAnswer: ", "433e01912c67ad58c2e57fa9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What contributions do international students make to the university community?\nPredicted SQL: This question cannot be answered directly with the provided tables and columns.\nAnswer: ", "4950aede59cb9a1070178a47": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses were taught by instructor Raymond A Silverman in 2010?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Raymond A Silverman%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2010 \nAnswer: ", "f2219b2bc0b57827f34de0fb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the number of remote courses with a discussion component?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.HAS_DISCUSSION = 1\nAnswer: ", "2b48f45ded7f2bbdddc4e67f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of departments that include Thermodynamics of Materials.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Thermodynamics of Materials%\" \nAnswer: ", "5fcce6d07f3a9ef13d95a547": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you provide me with a list of sections in MILSCI 402 for Winter 2015 that started after 12:00?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.SECTION_NUMBER FROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME > \"12:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"MILSCI\" AND COURSEalias0.NUMBER = 402 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2015 \nAnswer: ", "a06cca9ef8bb374c5c5498b0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What approaches do universities take to address issues of equity and inclusion?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information or tables related to university approaches to equity and inclusion would be needed to answer this question.\nAnswer: ", "575b2b55b166ccec172ece8a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses of the upper-level CS are 17 credits?\nPredicted SQL: SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.CREDITS = \"17\" AND PROGRAM_COURSEalias0.CATEGORY LIKE \"ULCS\" \nAnswer: ", "9cb456147e4f0774aa35d94b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Kindly inform me about the courses that instructor Gregory H Wakefield taught.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Gregory H Wakefield%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "e51e492391299de6af03b484": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For which courses is EECS 281 a prerequisite?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 281\nAnswer: ", "41d38aca9c606a2408efb9a3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Translate eecs internship descriptions into hindi.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.INTERNSHIP = \"Yes\"\nAnswer: ", "67148f45d465b8d7399b82dc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the number of unique common preferred names among students?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENTalias0.FIRSTNAME) FROM STUDENT AS STUDENTalias0\nAnswer: ", "da9f260c7d601a8688ab5686": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Search for the most active online forums for eecs students to discuss circuit design.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.DESCRIPTION FROM COURSE as COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.DESCRIPTION LIKE \"%circuit design%\" AND COURSEalias0.HAS_DISCUSSION = \"Y\" \nAnswer: ", "868c0efbf393739e66778ff2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How much workload, on average, do PreMajor courses involve?\nPredicted SQL: SELECT AVG(WORKLOAD) FROM PROGRAM_COURSE WHERE CATEGORY = 'PreMajor'\nAnswer: ", "a7f9c3cbcafdc9306a07976a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support do universities offer for developing communication skills?\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "5537e04c395510613b8c2429": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Spring or Summer 2016, what courses meet the PreMajor requirement?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" , \"SU\" ) AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "2459164e50a7887f3c83888c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Provide me with the ULCS courses student 4 took.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON STUDENT_RECORDalias0.COURSE_ID = PROGRAM_COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND STUDENT_RECORDalias0.STUDENT_ID = 4 \nAnswer: ", "dab2febb10dc00d8164eabe3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the advisory comments for enrolling in CDB 685?\nPredicted SQL: SELECT DISTINCT COURSEalias0.ADVISORY_REQUIREMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"CDB\" AND COURSEalias0.NUMBER = 685 \nAnswer: ", "496be37dc26621842da38912": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What initiatives foster innovation and entrepreneurship at universities?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables related to university initiatives, innovation, and entrepreneurship would be needed to provide an accurate answer.\nAnswer: ", "77bf820917b5ba1c178db846": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is Friday included when instructor Victor Rodriguez-pereira's classes always meet?\nPredicted SQL: SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND INSTRUCTORalias0.NAME LIKE \"%Victor Rodriguez-pereira%\" \nAnswer: ", "5535dc3c467b13dca81b16e7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were there any MCDB 680 lectures that were not on Mondays in Fall 2016?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.MONDAY = \"N\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"MCDB\" AND COURSEalias0.NUMBER = 680 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "64d533fdaf10c7155bcd0950": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: I would like to know how many prerequisite courses for NURS 549 have been taught to student 1.\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"NURS\" AND COURSEalias0.NUMBER = 549\nAnswer: ", "e3c7e1f7cde95882f690a130": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are you aware if EECS 554 did include a project?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_PROJECTS = \"Y\" AND COURSEalias0.NUMBER = 554 \nAnswer: ", "869d3e93b230a90c34800699": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses that don't have ships?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION NOT LIKE \"%ship%\" \nAnswer: ", "8d261bd9072cb0105557c412": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the name of the BIOLCHEM 576 course.\nPredicted SQL: SELECT DISTINCT name FROM course WHERE department = \"BIOLCHEM\" AND number = 576\nAnswer: ", "b6e79c87a1df51815e2f79a7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you verify if BIOMEDE 481 was available in Fall 2016?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"BIOMEDE\" AND COURSEalias0.NUMBER = 481 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "bdb873175ff426eba19de814": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is RCARTS 285 a prerequisite for RCARTS 289?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.DEPARTMENT = \"RCARTS\" AND COURSEalias0.NUMBER = 289 AND COURSEalias1.DEPARTMENT = \"RCARTS\" AND COURSEalias1.NUMBER = 285 AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID\nAnswer: ", "90805e6e858a97ee5e163e18": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was the MATH 417 course always taught by either Igor Dolgachev or Carolyn A Dean?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"MATH\" AND COURSEalias0.NUMBER = 417 AND (INSTRUCTORalias0.NAME LIKE \"%Igor Dolgachev%\" OR INSTRUCTORalias0.NAME LIKE \"%Carolyn A Dean%\") \nAnswer: ", "b6bd5929bc9e60f0992584cf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the pixel aspect ratios of the software courses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software%\" AND COURSEalias0.DESCRIPTION LIKE \"%pixel aspect ratio%\"\nAnswer: ", "5c3b6cb7b9dd4eeb812d2372": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the advisory comments for enrolling in MATH 471?\nPredicted SQL: SELECT DISTINCT COURSEalias0.ADVISORY_REQUIREMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"MATH\" AND COURSEalias0.NUMBER = 471\nAnswer: ", "a32652d8b1c8332861afb0ec": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What processes do universities use to handle academic misconduct cases?\nPredicted SQL: This question is not directly related to the provided tables and columns.\nAnswer: ", "9c5fc8ff0577fdfa62222272": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In what time did the MECHENG 513 lectures start in Fall 2016?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.START_TIME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"MECHENG\" AND COURSEalias0.NUMBER = 513 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "97e9f601f00dac6ebfca3581": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Recommend study strategies for a software development course.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" \nAnswer: ", "8a3c58346283c9ed17389945": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the salary of abby gonzalez?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "476ede064a0869d929320dbf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses with honors track availability have a lab component?\nPredicted SQL: SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.DESCRIPTION LIKE \"%honors track%\" \nAnswer: ", "82a52fc6a55b7f5da87d9ffe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the spring semesters that used more than one currency?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND SEMESTERalias0.SEMESTER = \"SP\" AND ( SELECT COUNT( DISTINCT COURSEalias1.CURRENCY ) FROM COURSE AS COURSEalias1 , COURSE_OFFERING AS COURSE_OFFERINGalias1 , SEMESTER AS SEMESTERalias1 WHERE COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID AND COURSE_OFFERINGalias1.SEMESTER = SEMESTERalias1.SEMESTER_ID AND SEMESTERalias1.SEMESTER = \"SP\" AND SEMESTERalias1.YEAR = SEMESTERalias0.YEAR ) > 1 \nAnswer: ", "9d730f408ad81940d26a5604": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the most common start dates for courses offered in spring 2016?\nPredicted SQL: SELECT COURSE_OFFERINGalias0.START_TIME, COUNT(COURSE_OFFERINGalias0.START_TIME) AS num_courses FROM COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER = \"SP\" AND SEMESTERalias0.YEAR = 2016 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER GROUP BY COURSE_OFFERINGalias0.START_TIME ORDER BY num_courses DESC\nAnswer: ", "bea57264bf29c0a9c1434894": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In what ways do universities collaborate with industries for research and development?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables or information related to university-industry collaborations would be needed to answer this question.\nAnswer: ", "e3f1d7f78ead4f20f46b80e1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Create a graph showing the trend in student enrollments per course over semesters.\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables or data on student enrollments per course over semesters would be needed to create a graph showing the trend in student enrollments per course over semesters.\nAnswer: ", "d561ccce5f24277b5e2bd4e1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: The EECS 634 course was how many credits?\nPredicted SQL: SELECT CREDITS FROM COURSE WHERE DEPARTMENT = \"EECS\" AND NUMBER = 634\nAnswer: ", "5a5f742753e5f393f48e80d3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: During Summer semesters, what ARMENIAN courses were offered?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"ARMENIAN\" AND SEMESTERalias0.SEMESTER IN (\"SU\", \"SS\") \nAnswer: ", "27a6cd59f6ac084da9f8f2cf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the details about UKR 450.\nPredicted SQL: SELECT * FROM COURSE WHERE DEPARTMENT = \"UKR\" AND NUMBER = 450\nAnswer: ", "f86d6b72cf058eaba104d244": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students have returned damaged?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "84302804397cea9bbdbdbf42": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please provide a list of the EECS courses with the least workload.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nWHERE COURSEalias0.DEPARTMENT = \"EECS\" \nAND PROGRAM_COURSEalias0.WORKLOAD = (SELECT MIN(PROGRAM_COURSEalias1.WORKLOAD) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1)\nAnswer: ", "537b4729dfe46c0466c3cc3b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What was the number of AAPTIS 102 course offerings after 10:00 in Winter 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"AAPTIS\" AND COURSEalias0.NUMBER = 102 AND COURSE_OFFERINGalias0.START_TIME > \"10:00\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "ab706e0a6c8ec9eac0465a21": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What benefits do undergraduate research opportunities offer?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.INTRODUCTION LIKE \"%undergraduate research opportunities%\"\nAnswer: ", "281625035d31365604202843": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses with the highest enrollment of students from south africa?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON COURSEalias0.COURSE_ID = STUDENT_RECORDalias0.COURSE_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENT_RECORDalias0.STUDENT_ID = STUDENTalias0.STUDENT_ID WHERE STUDENTalias0.COUNTRY = \"South Africa\" ORDER BY COURSEalias0.NUM_ENROLLED DESC\nAnswer: ", "87f62f3ce1f7b36d2519b93b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses were available in Spring or Summer 2016 that meet the Core requirement?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%Core%\" AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" , \"SU\" ) AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "4b3983dfc8ba52367060bfdf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Assess the emotional responses to a new eecs internship program.\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables related to emotional responses or feedback on internship programs would be needed to assess emotional responses to a new EECS internship program.\nAnswer: ", "6b500c45d09bb1ef72641ea6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the 500-level EECS courses offered in the Spring or Summer 2016 term?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 500 + 100 AND COURSEalias0.NUMBER >= 500 AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" , \"SU\" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "23fcd6568dca85b387acd9ed": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What was the name of CSP 100 course again?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"CSP\" AND COURSEalias0.NUMBER = 100 \nAnswer: ", "4ae9d7a1e28addef3d8b5206": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of the prerequisite courses for ANATOMY 800, how many did student 1 participate in?\nPredicted SQL: SELECT COUNT(DISTINCT COURSEalias0.COURSE_ID) FROM COURSE AS COURSEalias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSE_PREREQUISITEalias0.PRE_COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID WHERE COURSE_PREREQUISITEalias0.COURSE_ID = \"ANATOMY 800\" AND STUDENT_RECORDalias0.STUDENT_ID = 1\nAnswer: ", "3b2ac81fe34281f0fcddce6d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In EECS, which courses had the highest workload for student 2?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias1.STUDENT_ID = 2 ) AND COURSEalias0.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias0.STUDENT_ID = 2 \nAnswer: ", "57eaee415b3bd3e1b124ac6b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the number of students enrolled in courses with final exams in june?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENT_RECORDalias0.STUDENT_ID) FROM STUDENT_RECORD AS STUDENT_RECORDalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 WHERE STUDENT_RECORDalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER AND SEMESTERalias0.SEMESTER = \"JU\" AND STUDENT_RECORDalias0.GRADE = \"FE\"\nAnswer: ", "6e545e80d2b44d74896dcfad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses are there except the ones that the ROMLANG department offers?\nPredicted SQL: SELECT DISTINCT COUNT ( COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT <> \"ROMLANG\" \nAnswer: ", "374c4c2aa281e62619e6a7f6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the speeds in knots of students who took more than 100 credits?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_CREDIT FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_CREDIT > 100\nAnswer: ", "91049c0e54676cd98534bc59": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What effect does the availability of campus resources have on student success?\nPredicted SQL: This question cannot be directly answered with the provided tables. Additional information on campus resources and student success metrics would be needed to analyze the effect of campus resources on student success.\nAnswer: ", "65283384fc96bac3629a0a82": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me the names of courses that allow pass or fail in spring 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.ALLOW_AUDIT = 1 AND SEMESTERalias0.SEMESTER = \"SP\" AND SEMESTERalias0.YEAR = 2016\nAnswer: ", "881de7a162219b209c22c2ae": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses are required before taking EECS 482 and 492?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE ( COURSEalias1.NUMBER = 482 OR COURSEalias1.NUMBER = 492 ) AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" \nAnswer: ", "3932a7cbbf093654c56be787": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the phone number of the instructor with the highest easiness score?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "d550c6287b72847ec5bfa2c6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Provide me with the PreMajor courses student 7 took.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON STUDENT_RECORDalias0.COURSE_ID = PROGRAM_COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND STUDENT_RECORDalias0.STUDENT_ID = 7 \nAnswer: ", "f341ec56250dd063771b2ea7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the email addresses of students with a total gpa below 2.0?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.EMAIL_ADDRESS \nFROM STUDENT AS STUDENTalias0 \nWHERE STUDENTalias0.TOTAL_GPA < 2.0\nAnswer: ", "de9e71c8c32515098ec20469": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Kindly inform me about the courses that instructor David R Paoletti taught.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%David R Paoletti%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "bbce45a84dfe428acc135433": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses in Fall 2016 were upper-level CS and did not meet on Fridays?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 \nWHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" \nAND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nAND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAND SEMESTERalias0.SEMESTER = \"FA\" \nAND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "3e2688ed88dbef9856576d11": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average number of publications for instructors teaching courses with final projects?\nPredicted SQL: SELECT AVG(num_publications) FROM instructor WHERE instructor_id IN (SELECT DISTINCT offering_instructor.instructor_id FROM course_offering INNER JOIN offering_instructor ON course_offering.offering_id = offering_instructor.offering_id WHERE course_offering.has_final_project = true)\nAnswer: ", "d63be785c7e9d19287a5331c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses were taught by instructors who started in fall 2017?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON COURSE_OFFERINGalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE INSTRUCTORalias0.STARTED_IN = 2017 AND SEMESTERalias0.SEMESTER = \"FA\" \nAnswer: ", "3682302cb33dd40f48f7cedc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What was the workload intensity in EECS 388?\nPredicted SQL: SELECT DISTINCT PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 388 AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "6f84c7cfb6664722913d079c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: When were the semesters in which EECS 554 was offered after Winter 2016?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 554 AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND SEMESTERalias0.SEMESTER_ID > ( SELECT SEMESTERalias1.SEMESTER_ID FROM SEMESTER AS SEMESTERalias1 WHERE SEMESTERalias1.SEMESTER = \"WN\" AND SEMESTERalias1.YEAR = 2016 ) \nAnswer: ", "70b09c07c24508605ffb7f34": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What was the name of MCDB 501 course again?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"MCDB\" AND COURSEalias0.NUMBER = 501 \nAnswer: ", "e70ea32fc17bc7ed91978e38": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the lowest total gpa among instructors who have taught for more than 5 semesters?\nPredicted SQL: SELECT MIN(INSTRUCTORalias0.TOTAL_GPA) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.INSTRUCTOR_ID IN (SELECT OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID FROM OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 GROUP BY OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID HAVING COUNT(DISTINCT OFFERING_INSTRUCTORalias0.OFFERING_ID) > 5) \nAnswer: ", "8a5f9dc8074d480852ab74b0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the best-selling textbooks used in more than one area?\nPredicted SQL: SELECT DISTINCT CO.TEXTBOOK\nFROM COURSE_OFFERING CO\nWHERE CO.TEXTBOOK IN (\n    SELECT TEXTBOOK\n    FROM COURSE_OFFERING\n    GROUP BY TEXTBOOK\n    HAVING COUNT(DISTINCT AREA) > 1\n)\nAnswer: ", "8b47d200c5f076b61f1a9e95": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the allergies found in the courses offered on weekends.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.SATURDAY = \"Y\" OR COURSE_OFFERINGalias0.SUNDAY = \"Y\"\nAnswer: ", "1998683b0d2fbe7a61dffd8e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of all the courses in Fall 2015, which ones were taught by instructor Jules Rowan Metcalf-burton?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"Fall\" AND SEMESTERalias0.YEAR = 2015 AND INSTRUCTORalias0.NAME LIKE \"%Jules Rowan Metcalf-burton%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID\nAnswer: ", "0df00b67dcd60b4f3d6795ed": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Generate a textual summary of student 1's academic record.\nPredicted SQL: SELECT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME, STUDENTalias0.TOTAL_CREDIT, STUDENTalias0.TOTAL_GPA FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 1\nAnswer: ", "8b525d94b481ae9f8867c679": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you tell me computer hardware courses that had smaller workloads than the average workload of EECS 373?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" AND PROGRAM_COURSEalias0.WORKLOAD < (SELECT AVG(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 373 ) \nAnswer: ", "080d49db16298b86eaf3f25c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What processes do universities use to handle credit transfers between institutions?\nPredicted SQL: This question is not directly related to the provided tables and cannot be answered with the given data.\nAnswer: ", "7f973216ef4cdd7c84808da7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many 500-level EECS course offerings, in spring and summer 2016, were there?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 500 + 100 AND COURSEalias0.NUMBER >= 500 AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" ) AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "3906cb7727c49f67fcc36fd6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Conduct a survival analysis to determine the probability of a student dropping out based on their total credits and total gpa.\nPredicted SQL: This question cannot be answered directly with the provided tables. A survival analysis requires time-to-event data, which is not available in the tables provided. Additional data on when students drop out or leave the program would be needed to conduct a survival analysis.\nAnswer: ", "ad2b671dd1311f6dd14abdc4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses were offered from SPACE in Fall 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"SPACE\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "0f9818197e5ec2ffdf2e84cd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What MDE courses are in the EECS department?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%MDE%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\"\nAnswer: ", "fd22c6815c85e520166ae18d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the advisory requirement to know before taking SOC 311?\nPredicted SQL: SELECT DISTINCT COURSEalias0.ADVISORY_REQUIREMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"SOC\" AND COURSEalias0.NUMBER = 311\nAnswer: ", "74502a226caf5cea448e4382": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many rooms does jane johnson have?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.CLASS_ADDRESS ) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON COURSE_OFFERINGalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE INSTRUCTORalias0.NAME LIKE \"%Jane Johnson%\" \nAnswer: ", "8363555fe0208e8ed32865a4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What qualities make an effective university president?\nPredicted SQL: This question cannot be answered directly using the provided tables and columns.\nAnswer: ", "7282eec607183e5533bc9529": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the role of cultural competency in higher education.\nPredicted SQL: This question does not directly relate to the provided tables and columns.\nAnswer: ", "336cd09503587a4f4592e08c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the upper-level CS courses offered in Fall and Winter in 2016.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND (SEMESTERalias0.SEMESTER = \"FA\" OR SEMESTERalias0.SEMESTER = \"WN\") \nAND SEMESTERalias0.YEAR = 2016\nAnswer: ", "96fea02ccedb7820921879ba": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Search for supplemental online resources on data structures.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.TEXTBOOK FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN COURSE AS COURSEalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%data structures%\" \nAnswer: ", "8497fb576e1043224b05798d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Name the SAC courses that were offered in Summer semesters.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%SAC%\" AND COURSEalias0.COURSE_ID IN (SELECT COURSE_OFFERINGalias0.COURSE_ID FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE SEMESTERalias0.SEMESTER IN ( \"SU\" , \"SS\" )) \nAnswer: ", "a356cefbe7c74040a9afaf85": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Retrieve updates on upcoming guest lectures in the software development area.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.START_TIME, COURSE_OFFERINGalias0.END_TIME, COURSE_OFFERINGalias0.CLASS_ADDRESS FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN COURSE AS COURSEalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" AND COURSE_OFFERINGalias0.SEMESTER > CURRENT_DATE \nAnswer: ", "0210f302e2b3cc07cc327026": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: When was the first year that PERIODON 790 was offered?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.YEAR \nFROM COURSE AS COURSEalias0 \nJOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nJOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE COURSEalias0.DEPARTMENT = \"PERIODON\" \nAND COURSEalias0.NUMBER = 790 \nORDER BY SEMESTERalias0.YEAR ASC \nLIMIT 1\nAnswer: ", "4b0856a1ef1b20028981c7f6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average life expectancy among students with a total gpa lower than 3.5?\nPredicted SQL: SELECT AVG(TOTAL_GPA) FROM STUDENT WHERE TOTAL_GPA < 3.5\nAnswer: ", "e44f74343a275322d0c84946": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What influence does internship participation have on career prospects?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information on career prospects and internship participation would be needed to analyze the influence.\nAnswer: ", "bf9992d3b9ab0428e6ac7c88": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the support universities offer to students interested in public service careers.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME , COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION LIKE \"%public service%\"\nAnswer: ", "c127f3f67d2bd01c8bcd30d1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the department with the most courses that allow pets?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT, COUNT(COURSEalias0.COURSE_ID) AS num_courses FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION LIKE \"%allow pets%\" GROUP BY COURSEalias0.DEPARTMENT ORDER BY num_courses DESC LIMIT 1\nAnswer: ", "d00df8cd32d85b2cb4f6a501": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average financial aid count for students who took any courses with labs?\nPredicted SQL: SELECT AVG( STUDENTalias0.FINANCIAL_AID_COUNT ) FROM STUDENT AS STUDENTalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 , COURSE AS COURSEalias0 WHERE STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID AND STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND COURSEalias0.HAS_LAB = \"Y\" \nAnswer: ", "433b88949df0a6536503dcfc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me the names of instructors with a master's degree who have taught more than 5 courses?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE INSTRUCTORalias0.DEGREE = \"master's\" GROUP BY INSTRUCTORalias0.NAME HAVING COUNT(*) > 5\nAnswer: ", "c4fc264e05f46a2cfb8c28dd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Count the number of instructors who taught ARTDES 210 in Spring-Summer 2017.\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ARTDES\" AND COURSEalias0.NUMBER = 210 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER = \"SS\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2017 \nAnswer: ", "016f4b216b051572cd886a6c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many times did instructor Alexandra Katharina Maria Gajewski conduct 240 courses?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NUMBER = 240 AND INSTRUCTORalias0.NAME LIKE \"%Alexandra Katharina Maria Gajewski%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "22592b310dcdac9c0faee940": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average total gpa of the students who have more than 10 percent market shares?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_GPA > 10\nAnswer: ", "58947145fc26c1db4a927eb1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the nationality of student 1?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "c2ae4fea0cd7a7bc69065ca2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the last names and total gpa of students enrolled in courses that allow pass or fail at least once.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.TOTAL_GPA FROM STUDENT AS STUDENTalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON STUDENT_RECORDalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID WHERE COURSE_OFFERINGalias0.ALLOW_AUDIT = 1\nAnswer: ", "cc184718be2aa7219710f689": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses have 16:9 as their pixel aspect ratio?\nPredicted SQL: This question cannot be answered with the given tables and columns.\nAnswer: ", "b4095de88a3ecd426661a8e8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were there classes on Fridays for 595 with instructor Frederick Fitzgerald Wherry?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NUMBER = 595 AND COURSE_OFFERINGalias0.FRIDAY = \"Y\" AND INSTRUCTORalias0.NAME LIKE \"%Frederick Fitzgerald Wherry%\" \nAnswer: ", "eaafd8265c7ba2e1de9882f8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all the computer hardware courses that had a lighter workload than the average workload of EECS 373.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nWHERE AREAalias0.AREA LIKE \"%computer hardware%\" \nAND PROGRAM_COURSEalias0.WORKLOAD < (SELECT AVG(PROGRAM_COURSEalias1.WORKLOAD) \n                                    FROM COURSE AS COURSEalias1 \n                                    INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID \n                                    WHERE COURSEalias1.DEPARTMENT = \"EECS\" \n                                    AND COURSEalias1.NUMBER = 373 ) \nAnswer: ", "6c5226e2e1a0516a9ecb5ae1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average total gpa of the students whose author is charles bukowski?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) \nFROM STUDENT AS STUDENTalias0 \nWHERE STUDENTalias0.LASTNAME = 'bukowski' AND STUDENTalias0.FIRSTNAME = 'charles'\nAnswer: ", "f1840ddeac124c94d948b6f2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the courses with the highest workload that student 9 took in EECS.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias1.STUDENT_ID = 9 ) AND COURSEalias0.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias0.STUDENT_ID = 9 \nAnswer: ", "0c036a56b9373a90e8cc0301": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were there any RELIGION 347 classes before 12:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME < \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"RELIGION\" AND COURSEalias0.NUMBER = 347 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "82ab470c703cfb9c12a895a8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What methods do universities use to address plagiarism issues?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "59ace8ebf94da99d2a7b6852": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors are department chairs?\nPredicted SQL: SELECT COUNT(DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.INSTRUCTOR_ID IN (SELECT DISTINCT INSTRUCTOR_ID FROM OFFERING_INSTRUCTOR WHERE OFFERING_ID IN (SELECT DISTINCT OFFERING_ID FROM COURSE_OFFERING WHERE COURSE_ID IN (SELECT COURSE_ID FROM COURSE WHERE DEPARTMENT = \"CHAIR\"))) \nAnswer: ", "a2cb0af63d26ad2e7b2556b4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Plan a course schedule for a new student majoring in eecs.\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "3c545a15a4d5563296184a90": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the courses with the highest workload that student 2 took in EECS.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias1.STUDENT_ID = 2 ) AND COURSEalias0.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias0.STUDENT_ID = 2 \nAnswer: ", "d5e69c5ef73af65be232fbff": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average total gpa of the students who earn more than 5000 dollars a year?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) \nFROM STUDENT AS STUDENTalias0 \nWHERE STUDENTalias0.TOTAL_CREDIT > 5000\nAnswer: ", "9d704780550499f8ac8c30df": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Out of the upper-level CS courses, which ones were offered in Fall and Winter in 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE ( SEMESTERalias0.SEMESTER = \"FA\" OR SEMESTERalias0.SEMESTER = \"WN\" ) AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "7f187e9ac15ef2d9c52acf55": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses conducted offline?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.CLASS_ADDRESS IS NOT NULL\nAnswer: ", "bb0bed2ea8cd0392ae166cb0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the semesters that use dollars as their currency?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.SEMESTER FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND COURSE_OFFERINGalias0.CLASS_ADDRESS LIKE \"%dollars%\" \nAnswer: ", "bfbfb4f23fe70f326b47dc73": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What benefits do honors programs offer?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME , PROGRAMalias0.INTRODUCTION FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.NAME LIKE \"%Honors%\"\nAnswer: ", "856a5dc6d51b5fb58d1790ec": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Fall 2016, was any CEE 650 class being taught not on Monday?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.MONDAY = \"N\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"CEE\" AND COURSEalias0.NUMBER = 650 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "e42594af13e4a642bf2f1d77": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Convert spoken explanations in a tutorial video in eecs 541 into text.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias1.TEXTBOOK FROM COURSE AS COURSEalias1 , COURSE_OFFERING AS COURSE_OFFERINGalias1 WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 541 AND COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID\nAnswer: ", "6734d99a4d126c215cc43491": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average capacity of all course offerings?\nPredicted SQL: SELECT AVG(num_enrolled) FROM course\nAnswer: ", "2cb89e6b1d6b2a926a20361b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What year was EEB 800 first offered?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.YEAR \nFROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 \nWHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nAND COURSEalias0.DEPARTMENT = \"EEB\" \nAND COURSEalias0.NUMBER = 800 \nAND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nORDER BY SEMESTERalias0.YEAR ASC \nLIMIT 1 \nAnswer: ", "8c25197873142818395e94b3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was the AMCULT 231 course in Fall 2009 taught by instructor Kristin Ann Hass?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"AMCULT\" AND COURSEalias0.NUMBER = 231 AND INSTRUCTORalias0.NAME LIKE \"%Kristin Ann Hass%\" AND SEMESTERalias0.SEMESTER = \"Fall\" AND SEMESTERalias0.YEAR = 2009 \nAnswer: ", "8fc1ba4bd3c87f67f5692cf7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the phone number of the instructor who teaches the most courses?\nPredicted SQL: This question cannot be answered with the provided tables. The tables do not contain information about phone numbers of instructors.\nAnswer: ", "0ecf561c64a0d954968a6b41": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Guide new students to various department buildings based on their course enrollment.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT, COURSE_OFFERINGalias0.CLASS_ADDRESS \nFROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON COURSEalias0.COURSE_ID = STUDENT_RECORDalias0.COURSE_ID \nINNER JOIN STUDENT AS STUDENTalias0 ON STUDENT_RECORDalias0.STUDENT_ID = STUDENTalias0.STUDENT_ID \nWHERE STUDENTalias0.STUDENT_ID = [student_id]\nAnswer: ", "1c4d657e577ee9a02f8ea411": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students have received more than 3 financial aids?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENTalias0.STUDENT_ID) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.FINANCIAL_AID > 3\nAnswer: ", "087b10984a12e4e2902cf35b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the count of the courses not belonging to the ROMLANG department.\nPredicted SQL: SELECT DISTINCT COUNT (COURSEalias0.COURSE_ID) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT <> \"ROMLANG\"\nAnswer: ", "624fbd7503b4c7f0c40ec7e5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses have office hours starting at 12:00:00?\nPredicted SQL: SELECT COUNT(*) FROM COURSE_OFFERING WHERE START_TIME = \"12:00:00\"\nAnswer: ", "e704226c14e046d67d4650d0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who has taught the Elementary Persian II course?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE \"%Elementary Persian II%\" \nAnswer: ", "12874692bb6a942934e6f800": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors have published more than 10 publications?\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.INSTRUCTOR_ID IN ( SELECT OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID FROM OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 GROUP BY OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID HAVING COUNT(OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID) > 10 ) \nAnswer: ", "d8fcc2dac7053092632b09f4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Generate a descriptive report of a program's structure and course offerings.\nPredicted SQL: SELECT PROGRAM.NAME, PROGRAM.INTRODUCTION, PROGRAM_REQUIREMENT.CATEGORY, PROGRAM_REQUIREMENT.MIN_CREDIT, PROGRAM_REQUIREMENT.ADDITIONAL_REQ, PROGRAM_COURSE.WORKLOAD, COURSE.NAME, COURSE.DEPARTMENT, COURSE.NUMBER, COURSE.CREDITS, COURSE.DESCRIPTION\nFROM PROGRAM\nINNER JOIN PROGRAM_REQUIREMENT ON PROGRAM.PROGRAM_ID = PROGRAM_REQUIREMENT.PROGRAM_ID\nINNER JOIN PROGRAM_COURSE ON PROGRAM.PROGRAM_ID = PROGRAM_COURSE.PROGRAM_ID\nINNER JOIN COURSE ON PROGRAM_COURSE.COURSE_ID = COURSE.COURSE_ID\nAnswer: ", "3a976b676d284f5b5cdf13cf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was the last instructor for RUSSIAN 859 before 2016?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.SEMESTER = ( SELECT MAX( SEMESTERalias0.SEMESTER_ID ) FROM SEMESTER AS SEMESTERalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias1 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias1.SEMESTER INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"RUSSIAN\" AND COURSEalias1.NUMBER = 859 AND SEMESTERalias0.YEAR < 2016 ) AND COURSEalias0.DEPARTMENT = \"RUSSIAN\" AND COURSEalias0.NUMBER = 859 \nAnswer: ", "0455d7707b02633d5574b6fa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Name the PATH courses that were offered in Fall semesters.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"PATH\" AND SEMESTERalias0.SEMESTER = \"FA\" \nAnswer: ", "fe48b0f0476a0eac135c9f8d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the aircraft used for the courses offered on monday and wednesday.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.MONDAY = \"Y\" AND COURSE_OFFERINGalias0.WEDNESDAY = \"Y\"\nAnswer: ", "66af6778a660895570582535": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find the total number of students enrolled in courses taught by the department chairs in the latest semester.\nPredicted SQL: SELECT SUM(COURSEalias0.NUM_ENROLLED) FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON COURSE_OFFERINGalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE INSTRUCTORalias0.NAME IN (SELECT DISTINCT INSTRUCTORalias1.NAME FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE INSTRUCTORalias1.UNIQNAME = \"department_chair\") AND COURSE_OFFERINGalias0.SEMESTER = (SELECT MAX(SEMESTERalias0.SEMESTER_ID) FROM SEMESTER AS SEMESTERalias0) \nAnswer: ", "31feb9b974e9b1c56af8235a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What factors contribute to high clarity scores for instructors?\nPredicted SQL: SELECT DISTINCT INSTRUCTOR.NAME, COURSE.CLARITY_SCORE FROM INSTRUCTOR INNER JOIN OFFERING_INSTRUCTOR ON INSTRUCTOR.INSTRUCTOR_ID = OFFERING_INSTRUCTOR.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING ON OFFERING_INSTRUCTOR.OFFERING_ID = COURSE_OFFERING.OFFERING_ID INNER JOIN COURSE ON COURSE_OFFERING.COURSE_ID = COURSE.COURSE_ID ORDER BY COURSE.CLARITY_SCORE DESC\nAnswer: ", "198d2915ba1394ff5d899c3c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the pixel aspect ratios of the math department?\nPredicted SQL: This question cannot be answered with the provided tables and columns.\nAnswer: ", "d877b0c773c8bcecd14ae91d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the students who have more than 3 rooms?\nPredicted SQL: SELECT DISTINCT STUDENT.LASTNAME, STUDENT.FIRSTNAME FROM STUDENT WHERE STUDENT.TOTAL_ROOMS > 3\nAnswer: ", "6d258a0be6f3cfc2178b52aa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For EECS 280, what did student 9 take as prerequisites?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 280 AND STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND STUDENT_RECORDalias0.STUDENT_ID = 9 \nAnswer: ", "9d29f817ce3096ebaf63ab28": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the name of the instructor with the highest course rating on average?\nPredicted SQL: SELECT INSTRUCTOR.NAME\nFROM INSTRUCTOR\nINNER JOIN OFFERING_INSTRUCTOR ON INSTRUCTOR.INSTRUCTOR_ID = OFFERING_INSTRUCTOR.INSTRUCTOR_ID\nINNER JOIN COURSE_OFFERING ON OFFERING_INSTRUCTOR.OFFERING_ID = COURSE_OFFERING.OFFERING_ID\nINNER JOIN COURSE ON COURSE_OFFERING.COURSE_ID = COURSE.COURSE_ID\nGROUP BY INSTRUCTOR.NAME\nORDER BY AVG(COURSE.CLARITY_SCORE + COURSE.EASINESS_SCORE + COURSE.HELPFULNESS_SCORE) DESC\nLIMIT 1\nAnswer: ", "2549f7d030e6865b495379ea": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the total number of enrolled students in courses taught by instructors who started in winter 2016?\nPredicted SQL: SELECT SUM(COURSE.NUM_ENROLLED) \nFROM COURSE \nJOIN COURSE_OFFERING ON COURSE.COURSE_ID = COURSE_OFFERING.COURSE_ID \nJOIN OFFERING_INSTRUCTOR ON COURSE_OFFERING.OFFERING_ID = OFFERING_INSTRUCTOR.OFFERING_ID \nJOIN INSTRUCTOR ON OFFERING_INSTRUCTOR.INSTRUCTOR_ID = INSTRUCTOR.INSTRUCTOR_ID \nJOIN SEMESTER ON COURSE_OFFERING.SEMESTER = SEMESTER.SEMESTER_ID \nWHERE SEMESTER.SEMESTER = \"WI\" AND SEMESTER.YEAR = 2016\nAnswer: ", "82dcf8a48144dcc95045f301": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the email addresses of instructors whose names start with 'j'.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.UNIQNAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE \"j%\" \nAnswer: ", "e56e44a8d1ac34065e79419b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which was the least workload course to be taken in the ULCS category?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 \nWHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAND PROGRAM_COURSEalias0.WORKLOAD = ( \n    SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) \n    FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 \n    WHERE PROGRAM_COURSEalias1.CATEGORY LIKE \"%ULCS%\" \n) \nAnswer: ", "75b851eb5e860e80eb79d3b5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Gather images depicting historical milestones in 'theory of computation'.\nPredicted SQL: This question cannot be answered with the provided tables as they do not contain image data.\nAnswer: ", "1f2b534a897616150febe6fe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the advantages of attending a liberal arts college?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about the advantages of attending a liberal arts college.\nAnswer: ", "8f6e83d12b12cddb7ef2492c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the preferred names of students who are predicted to graduate in the semester of 2210?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.FIRSTNAME, STUDENTalias0.LASTNAME FROM STUDENT AS STUDENTalias0 INNER JOIN SEMESTER AS SEMESTERalias0 ON STUDENTalias0.PREDICTED_GRADUATION_SEMESTER = SEMESTERalias0.SEMESTER_ID WHERE SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2210\nAnswer: ", "38be0fe9b39e6485ef86f0ec": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses of the upper-level CS are 14 credits?\nPredicted SQL: SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.CREDITS = \"14\" AND PROGRAM_COURSEalias0.CATEGORY LIKE \"ULCS\" \nAnswer: ", "42b7a9c28c02c690b68c0bad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Generate a pie chart of the different areas of study within a program.\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information about the program and its courses would be needed to generate a pie chart of the different areas of study within the program.\nAnswer: ", "0dd1cb3cc55b5aac869cd8b8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the section numbers for POLSCI 827 courses offered in Summer 2016 that started after 12:00?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.SECTION_NUMBER FROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME > \"12:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"POLSCI\" AND COURSEalias0.NUMBER = 827 AND SEMESTERalias0.SEMESTER = \"SU\" AND SEMESTERalias0.YEAR = 2016\nAnswer: ", "d5cc22ba45feaebe9ec0e2f5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the current challenges and open problems in intelligent systems?\nPredicted SQL: This question cannot be answered directly using the provided tables. It would require additional information or data related to the current challenges and open problems in intelligent systems.\nAnswer: ", "2687440b784d64fdb32ef456": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you give me the course number of the Sociocultural Laboratory classes?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Sociocultural Laboratory%\" \nAnswer: ", "5e34a165554d71adec8c85e8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What strategies are best for teaching critical thinking skills?\nPredicted SQL: This question cannot be answered directly with the provided tables. It would require additional data on teaching strategies and their effectiveness in teaching critical thinking skills.\nAnswer: ", "ff5977d3585bf3a04b63c09f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the number of course offerings for INSTHUM 411?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"INSTHUM\" AND COURSEalias0.NUMBER = 411 \nAnswer: ", "06198683b64f1e7c6e10ac74": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Cluster courses into categories based on their workload and credits.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER , PROGRAM_COURSEalias0.WORKLOAD , COURSEalias0.CREDITS FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID\nAnswer: ", "d223116e70f5a2466a0c6a7b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How high is student 4's current GPA?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_GPA FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 4 \nAnswer: ", "7540486f2cd8506ea27d5d88": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For CS-LSA courses, show me the average workload.\nPredicted SQL: SELECT AVG( PROGRAM_COURSEalias0.WORKLOAD ) FROM COURSE AS COURSEalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE \"CS-LSA\" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID \nAnswer: ", "79736dff2753c0177ded0946": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Read aloud the math department's announcement of a guest speaker series.\nPredicted SQL: SELECT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"MATH\" AND COURSEalias0.DESCRIPTION LIKE \"%guest speaker series%\" \nAnswer: ", "f39497736528cb392f090fc1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did instructor robert m ziff return unharmed?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE \"%robert m ziff%\" \nAnswer: ", "e8f6e57d3f34b957d02c0e30": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support is available for international students?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information about support services for international students would need to be included in the database in order to provide an accurate answer.\nAnswer: ", "6eaa6733292eca154ef92507": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Show the preferred names of students with a total gpa greater than 3.5 and a total credit greater than 200.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.FIRSTNAME, STUDENTalias0.LASTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_GPA > 3.5 AND STUDENTalias0.TOTAL_CREDIT > 200\nAnswer: ", "58bda6a3355cc323f66665a3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What exactly were the prerequisites for the course EECS 270?\nPredicted SQL: SELECT DISTINCT COURSEalias1.DEPARTMENT , COURSEalias1.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 270\nAnswer: ", "0d9b41d9b1573f1ad25504c7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the upper-level CS courses that don't require EECS 545.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0, PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias1.COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITEalias0.PRE_COURSE_ID FROM COURSE AS COURSEalias0, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 545 AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "eeec126bc95728d9ab861500": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who are the instructors whose main research area is intelligent systems?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%intelligent systems%\" \nAnswer: ", "f1bc9362728e5ac8a914d411": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students have a permanent address in lansing?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENTalias0.STUDENT_ID) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ADDRESS = \"Lansing\"\nAnswer: ", "73efac48ce492c13c243689b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which 4-credit courses have final exams in december?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.CREDITS = \"4\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSE_OFFERINGalias0.HAS_FINAL_EXAM = \"YES\" AND COURSE_OFFERINGalias0.SEMESTER = \"FA\" AND COURSE_OFFERINGalias0.YEAR = 2011 \nAnswer: ", "c4a6eb74088f42983615c7bc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find circuit diagrams and schematics for a 'computer hardware' course.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" AND (COURSEalias0.DESCRIPTION LIKE \"%circuit diagrams%\" OR COURSEalias0.DESCRIPTION LIKE \"%schematics%\")\nAnswer: ", "63e0205c74d595bc08aa163f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses that don't allow pets?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION NOT LIKE \"%pets%\" \nAnswer: ", "65112fa9c49d128ae1b84e6e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What ENS courses at 400 / 500-level have the least workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"ENS\" AND COURSEalias0.NUMBER IN ('400','500') AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 ) \nAnswer: ", "2078c07cd41309923efd7a46": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support do universities offer for developing professional skills?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME , PROGRAMalias0.INTRODUCTION FROM PROGRAM AS PROGRAMalias0 INNER JOIN PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENTalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_REQUIREMENTalias0.PROGRAM_ID WHERE PROGRAM_REQUIREMENTalias0.CATEGORY LIKE \"%professional skills%\"\nAnswer: ", "9e316f4b68efe94eab6e1618": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Point out which Second Year Chinese I courses offered 5 credits.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Second Year Chinese I%\" AND COURSEalias0.CREDITS = \"5\" \nAnswer: ", "166c5f7c3474cd07c17e6cdb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are there identical passwords for different students?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.STUDENT_ID, STUDENTalias1.STUDENT_ID FROM STUDENT AS STUDENTalias0, STUDENT AS STUDENTalias1 WHERE STUDENTalias0.STUDENT_ID <> STUDENTalias1.STUDENT_ID AND STUDENTalias0.PASSWORD = STUDENTalias1.PASSWORD\nAnswer: ", "2ab49395ed40629bde3c34d0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the details about MECHENG 499.\nPredicted SQL: SELECT * FROM COURSE WHERE DEPARTMENT = \"MECHENG\" AND NUMBER = 499\nAnswer: ", "8adb4208e72b63b9b052e3ec": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the most effective study strategies for science courses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"Science\" AND COURSEalias0.HELPFULNESS_SCORE = (SELECT MAX(COURSEalias1.HELPFULNESS_SCORE) FROM COURSE AS COURSEalias1 WHERE COURSEalias1.DEPARTMENT = \"Science\")\nAnswer: ", "4a0dc2e1dd67b29a944e0789": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Select calming music tracks during student advisory sessions.\nPredicted SQL: This question is not related to the provided tables and cannot be answered with the given data.\nAnswer: ", "0dd5ba1978540c6ffd9596a0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you list the courses other than 322 that instructor Norbert Schwarz taught?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Norbert Schwarz%\" AND COURSEalias0.NUMBER != 322 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "0fc32847b8ca1aa1a04158a9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all students with a student ssn ending in '123'.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID LIKE \"%123\" \nAnswer: ", "4ed127b51e74cbedeeb19ac0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did EECS 484 and 487 in Winter 2011 end by 17:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias1 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.END_TIME <= \"17:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 484 AND COURSE_OFFERINGalias1.END_TIME <= \"17:00:00\" AND COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 487 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2011\nAnswer: ", "ddfb29af0ccfcad6b6932b55": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Describe the impact of study abroad programs on student development.\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "5fa7750177fbd42f09dd8c2a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What impact do athletics have on university culture and finances?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables related to athletics, university culture, and finances would be needed to provide a comprehensive answer.\nAnswer: ", "6114cdac5a3ba3e2c5c2955a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which program has EECS 376?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM AS PROGRAMalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 376 \nAnswer: ", "dadacacb22dcf2f887586698": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Convert prof. zuzana srostlik's oral instructions into text for a lab manual.\nPredicted SQL: Please follow the SQL query below to determine if there is a lab for a specific course taught by a particular instructor:\n\nSELECT COUNT( * ) > 0 \nFROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nINNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nWHERE COURSEalias0.DEPARTMENT = \"DESIRED_DEPARTMENT\" \nAND COURSEalias0.HAS_LAB = \"Y\" \nAND COURSEalias0.NUMBER = DESIRED_COURSE_NUMBER \nAND INSTRUCTORalias0.NAME LIKE \"%DESIRED_INSTRUCTOR_NAME%\" \nAnswer: ", "4459b114dd69cc687b11fab0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average total gpa of the students who did not return damaged?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.RETURN_DAMAGED = 'No'\nAnswer: ", "3204cd4046a56697ff60a626": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of all the courses in Fall 2013, which ones were taught by instructor Sari Michelle Van Anders?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Sari Michelle Van Anders%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2013 \nAnswer: ", "cc318c2c1651806d249261c6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students who have a predicted graduation semester of 2210 studied abroad?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENTalias0.STUDENT_ID) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.PREDICTED_GRADUATION_SEMESTER = 2210 AND STUDENTalias0.INTERNSHIP = \"study abroad\"\nAnswer: ", "2aaf7e739a72299a63b27fde": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is anthrbio 472 waived AP or IB credit?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID WHERE COURSEalias0.DEPARTMENT = \"ANTHRBIO\" AND COURSEalias0.NUMBER = 472 AND STUDENT_RECORDalias0.HOW IN (\"AP\",\"IB\") \nAnswer: ", "add44483198365b6b38be50e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Automatically tag course descriptions in courses with keywords extracted using LDA.\nPredicted SQL: This question requires a more complex solution involving natural language processing and machine learning techniques, such as Latent Dirichlet Allocation (LDA). The process involves extracting keywords from course descriptions using LDA and then tagging the course descriptions with these keywords. This process would typically involve text processing and analysis outside of traditional SQL queries.\nAnswer: ", "29f331e3dabe10923e56b666": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me the names and course IDs of computing infrastructure courses taught by instructors in the same research area?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.COURSE_ID \nFROM COURSE AS COURSEalias0 \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nINNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID \nINNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nWHERE AREAalias0.AREA = (SELECT AREA FROM AREA WHERE COURSE_ID = COURSEalias0.COURSE_ID) AND AREAalias0.AREA LIKE \"%computing infrastructure%\" \nAnswer: ", "9faf503110638c843f4830d4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Count the number of all upper-level CS courses.\nPredicted SQL: SELECT COUNT ( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "25b7c7d67c363c8b1af09199": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Suggest courses for an eecs sophomore interested in intelligent systems.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID WHERE AREAalias0.AREA LIKE \"%intelligent systems%\" AND STUDENTalias0.DECLARE_MAJOR = \"EECS\" AND STUDENTalias0.ENTERED_AS = \"Sophomore\" \nAnswer: ", "afa107ddd9e859957bb1ddfd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses did Yopie Prins teach course 322?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NUMBER = 322 AND INSTRUCTORalias0.NAME LIKE \"%Yopie Prins%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "eb6dcafeb84fee35d5accfa2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What impact does faculty research have on teaching quality?\nPredicted SQL: This question cannot be directly answered with the provided tables. Additional tables or data related to faculty research and teaching quality would be needed to answer this question.\nAnswer: ", "ba6aa58710c7ac92b598b73d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What year was FRENCH 241 first offered?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"FRENCH\" AND COURSEalias0.NUMBER = 241 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ORDER BY SEMESTERalias0.YEAR ASC LIMIT 1 \nAnswer: ", "2763e28f675b745ffc538876": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who were the instructors that did not teach EECS courses with labs?\nPredicted SQL: SELECT DISTINCT INSTRUCTOR.name \nFROM instructor \nWHERE instructor.instructor_id NOT IN (\n    SELECT DISTINCT offering_instructor.instructor_id \n    FROM course \n    JOIN course_offering ON course.course_id = course_offering.course_id \n    JOIN offering_instructor ON course_offering.offering_id = offering_instructor.offering_id \n    WHERE course.department = \"EECS\" AND course.has_lab = \"Y\"\n)\nAnswer: ", "374f928f6786605ac5576da7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find email addresses of students who have enrolled in any course with 'has_lab' marked as 'y'.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.EMAIL FROM STUDENT AS STUDENTalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.HAS_LAB = 'y'\nAnswer: ", "2760feea84d9606fe977a22b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who has taught the Second Year Chinese I course?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE \"%Second Year Chinese I%\" \nAnswer: ", "f962bfc0c8a7f83f78fb3dc8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Turn a theory of computation seminar's audio recording into a written transcript.\nPredicted SQL: UPDATE COURSE SET DESCRIPTION = \"Written transcript of theory of computation seminar's audio recording\" WHERE NAME = \"Theory of Computation Seminar\"\nAnswer: ", "92a8634cf5abe7b435807cb4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the number of publications for each instructor teaching theory courses?\nPredicted SQL: SELECT INSTRUCTORalias0.NAME, COUNT(DISTINCT COURSEalias0.COURSE_ID) AS NUM_PUBLICATIONS\nFROM INSTRUCTOR AS INSTRUCTORalias0 \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nINNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID \nWHERE AREAalias0.AREA LIKE \"%theory%\" \nGROUP BY INSTRUCTORalias0.NAME\nAnswer: ", "570002c2f04aa95bd65f9e1d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me if NATIVEAM 222 has been offered during the Spring-Summer term.\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"NATIVEAM\" AND COURSEalias0.NUMBER = 222 AND SEMESTERalias0.SEMESTER = \"SS\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "3a8a625263443c03cf1abd21": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Recommend online resources for eecs students struggling with programming concepts.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.DESCRIPTION LIKE \"%programming%\" AND COURSEalias0.DESCRIPTION LIKE \"%struggling%\" \nAnswer: ", "885b2e4a0fdcd1d29a2c860e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did 240 have classes on Fridays when instructor J Edward Chamberlin taught it?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NUMBER = 240 AND COURSE_OFFERINGalias0.FRIDAY = \"Y\" AND INSTRUCTORalias0.NAME LIKE \"%J Edward Chamberlin%\" \nAnswer: ", "200ecc3b5f2472622e83a12d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses offered on weekends have aircraft?\nPredicted SQL: SELECT COUNT(DISTINCT COURSEalias0.COURSE_ID) FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.SATURDAY = \"Y\" OR COURSE_OFFERINGalias0.SUNDAY = \"Y\" AND COURSEalias0.DESCRIPTION LIKE \"%aircraft%\"\nAnswer: ", "852d5f7e1849201e622fd7ec": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Fall 2016, was any REES 289 class being taught not on Monday?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.MONDAY = \"N\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"REES\" AND COURSEalias0.NUMBER = 289 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "befd13c953002cad821d2fe7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What kind of workload did the EECS 481 course have?\nPredicted SQL: SELECT DISTINCT PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 481 AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "89308de6949aa45e058ba38d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: When was the first year that EEB 800 was offered?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.YEAR \nFROM COURSE AS COURSEalias0 \nJOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nJOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE COURSEalias0.DEPARTMENT = \"EEB\" AND COURSEalias0.NUMBER = 800 \nORDER BY SEMESTERalias0.YEAR ASC \nLIMIT 1\nAnswer: ", "1c126c997ff75ab2ad5f7f34": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course completed by student 8 has the highest workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE STUDENT_RECORDalias1.STUDENT_ID = 8 ) AND STUDENT_RECORDalias0.STUDENT_ID = 8 \nAnswer: ", "86090640efd83275912978f1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: I would like to know if there were any 500-level EECS courses offered in Fall 2016 or Winter 2017.\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 WHERE ((SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016) OR (SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2017)) AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 500 + 100 AND COURSEalias0.NUMBER >= 500 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "2282bbd2cbf818ad03d36764": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What benefits do small class sizes offer?\nPredicted SQL: Small class sizes offer benefits such as increased student engagement, personalized attention from instructors, opportunities for active participation, better relationships with peers and instructors, and a more conducive learning environment for discussion and collaboration.\nAnswer: ", "c952d18d8390373745a5e2cc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Discretize the total_gpa field in the student table.\nPredicted SQL: SELECT DISTINCT ROUND(STUDENTalias0.TOTAL_GPA, 2) AS DISCRETIZED_GPA FROM STUDENT AS STUDENTalias0\nAnswer: ", "13dc3a8323c0435aa473c9c4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you tell me intelligent systems courses that had smaller workloads than the average workload of EECS 442?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%intelligent systems%\" AND PROGRAM_COURSEalias0.WORKLOAD < (SELECT AVG(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 442 ) \nAnswer: ", "b1957aa33402b861738806ca": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please list the courses that instructor Ronald Dreslinski Jr has taught previously before Fall 2015.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Ronald Dreslinski Jr%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND (SEMESTERalias0.YEAR < 2015 OR (SEMESTERalias0.YEAR = 2015 AND SEMESTERalias0.SEMESTER < \"Fall\")) \nAnswer: ", "b1ae985458eb4674777a6919": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What benefits do peer tutoring programs offer?\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "35236d609f92c6a49eb5075f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Convert math courses' online lecture notes into an audio format.\nPredicted SQL: UPDATE COURSE SET DESCRIPTION = \"Audio format lecture notes available\" WHERE DEPARTMENT = \"MATH\" AND DESCRIPTION = \"Online lecture notes\"\nAnswer: ", "344db8c94000a7459f27329b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the pixel aspect ratio of bob jones?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%bob jones%\" \nAnswer: ", "01fdaded4ef1384e55377e95": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Group eecs courses based on the similarity of their advisory prerequisites.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER , COURSEalias0.ADVISORY_REQUIREMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" ORDER BY COURSEalias0.ADVISORY_REQUIREMENT\nAnswer: ", "ec91b8e25a0a52a0ae2f73f1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most popular course among students from canada?\nPredicted SQL: SELECT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.PROGRAM_ID = COURSEalias0.COURSE_ID WHERE STUDENTalias0.COUNTRY = \"Canada\" ORDER BY COURSEalias0.NUM_ENROLLED DESC LIMIT 1\nAnswer: ", "2f4f467a904ddabeeb81c4ad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Out of all the 400-level EECS courses, which ones do not have labs?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_LAB = \"N\" AND COURSEalias0.NUMBER < 400 + 100 AND COURSEalias0.NUMBER >= 400 \nAnswer: ", "5411505669a88a55174da2d4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please provide the courses that were offered in Fall or Winter 2016 that fulfill the ULCS requirement.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nWHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND SEMESTERalias0.SEMESTER IN ( \"FA\" , \"WN\" ) \nAND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "6c7a875444ad3368e62edfd2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses waived with AP or IB credit have been offered since winter 2007?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON COURSEalias0.COURSE_ID = STUDENT_RECORDalias0.COURSE_ID WHERE STUDENT_RECORDalias0.HOW IN ( \"AP\" , \"IB\" ) AND STUDENT_RECORDalias0.SEMESTER >= (SELECT SEMESTER_ID FROM SEMESTER WHERE SEMESTER = \"WN\" AND YEAR = 2007) \nAnswer: ", "7b7ef0b880e48ae17e96a4f2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average total gpa of the instructors in the polsci department?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) \nFROM STUDENT AS STUDENTalias0 \nWHERE STUDENTalias0.PROGRAM_ID = (SELECT PROGRAM_ID FROM PROGRAM WHERE NAME = 'Political Science')\nAnswer: ", "42de3a7cc6e9cf501a1b258d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the top 5 instructors with the least number of reviews on RateMyProfessor?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME, COUNT(INSTRUCTORalias0.NAME) AS NUM_REVIEWS FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE INSTRUCTORalias0.NAME NOT IN (SELECT INSTRUCTORalias1.NAME FROM COURSE AS COURSEalias1 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias1.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias1 ON OFFERING_INSTRUCTORalias1.OFFERING_ID = COURSE_OFFERINGalias1.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias1.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID WHERE INSTRUCTORalias1.NUM_REVIEWS IS NOT NULL) GROUP BY INSTRUCTORalias0.NAME ORDER BY NUM_REVIEWS ASC LIMIT 5\nAnswer: ", "f5f3ae980aa2261518a333bc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Determine the semester-by-semester changes in total enrolled students in the software development courses.\nPredicted SQL: SELECT SEMESTER.semester, COUNT(DISTINCT STUDENT_RECORD.student_id) AS total_enrolled\nFROM STUDENT_RECORD\nINNER JOIN COURSE ON STUDENT_RECORD.course_id = COURSE.course_id\nINNER JOIN AREA ON COURSE.course_id = AREA.course_id\nINNER JOIN SEMESTER ON STUDENT_RECORD.semester = SEMESTER.semester_id\nWHERE AREA.area LIKE \"%software development%\"\nGROUP BY SEMESTER.semester\nAnswer: ", "003a2a3c3a20206a7c7cc09b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the name of the instructor who has the longest office address?\nPredicted SQL: SELECT INSTRUCTOR.NAME\nFROM INSTRUCTOR\nWHERE LENGTH(INSTRUCTOR.OFFICE_ADDRESS) = (SELECT MAX(LENGTH(INSTRUCTOR.OFFICE_ADDRESS)) FROM INSTRUCTOR)\nAnswer: ", "d5d2724d1dccb9794a0158d8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For Fall 2016, give me the number of PreMajor or MDE course offerings.\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY IN ( \"PreMajor\" , \"MDE\" ) AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "d14867f64d06d4c4fcb5e460": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many study abroad students have a total gpa above 3.5?\nPredicted SQL: SELECT COUNT(*) FROM STUDENT WHERE PROGRAM_ID = (SELECT PROGRAM_ID FROM PROGRAM WHERE NAME = 'Study Abroad') AND TOTAL_GPA > 3.5\nAnswer: ", "c609bbe04654f1e0fc67106d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of 500-level EECS courses available in the Fall 2016 or Winter 2017 term.\nPredicted SQL: SELECT DISTINCT course.name\nFROM course\nJOIN course_offering ON course.course_id = course_offering.course_id\nJOIN semester ON course_offering.semester = semester.semester_id\nWHERE (semester.semester = 'FA' AND semester.year = 2016) OR (semester.semester = 'WN' AND semester.year = 2017)\nAND course.department = 'EECS'\nAND course.number >= 500\nAND course.number < 600\nAnswer: ", "1f5f26947db7a14b57eaf205": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the prerequisites for EECS 484 and 487?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE ( COURSEalias1.NUMBER = 484 OR COURSEalias1.NUMBER = 487 ) AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" \nAnswer: ", "84e6e2f8aac0941296352b6a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the start times for POLSCI 827 in Summer 2016?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.START_TIME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"POLSCI\" AND COURSEalias0.NUMBER = 827 AND SEMESTERalias0.SEMESTER = \"SU\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "c762f16dfac26c1e6ce5f9f9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which instructors with a ph.d. degree are teaching software development courses?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" AND INSTRUCTORalias0.NAME IN (SELECT DISTINCT INSTRUCTORalias1.NAME FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE INSTRUCTORalias1.DEGREE = \"ph.d.\") \nAnswer: ", "f308a8d183203c8c29546a8b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many offerings were there for 200-level EECS courses during Spring and Summer of 2016?\nPredicted SQL: SELECT COUNT(DISTINCT COURSE_OFFERINGalias0.OFFERING_ID) \nFROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 \nWHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nAND COURSEalias0.DEPARTMENT = \"EECS\" \nAND COURSEalias0.NUMBER < 200 + 100 \nAND COURSEalias0.NUMBER >= 200 \nAND SEMESTERalias0.SEMESTER IN (\"SP\", \"SS\", \"SU\") \nAND SEMESTERalias0.YEAR = 2016 \nAND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER\nAnswer: ", "04b40dde314a5ac5faa81b84": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please provide me with the courses that instructor Yuchong Zhang once taught.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Yuchong Zhang%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "b85afc764956e143788c600f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In the Summer 2013 semester, did GEOSCI 511 offer section 202?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.SECTION_NUMBER = 202 AND COURSEalias0.DEPARTMENT = \"GEOSCI\" AND COURSEalias0.NUMBER = 511 AND SEMESTERalias0.SEMESTER = \"SU\" AND SEMESTERalias0.YEAR = 2013 \nAnswer: ", "ef17d5ec715fed01e3df4bfa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Retrieve updates on internship opportunities for eecs students.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.DESCRIPTION LIKE \"%internship%\" \nAnswer: ", "740100c8f6f8400e588001cd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What role do ethics play in higher education?\nPredicted SQL: This question is not directly related to the data provided in the tables.\nAnswer: ", "bdd4713acc61961ef6922c52": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses were necessary for a declared major in MATH?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT LIKE \"%MATH%\" AND PROGRAM_COURSEalias0.CATEGORY LIKE \"PreMajor\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "a6ae22f217951e0f046f959b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you tell me if EECS 376 in 2016 was only offered on Mondays and Wednesdays?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSE_OFFERINGalias0.MONDAY = \"Y\" AND COURSE_OFFERINGalias0.THURSDAY = \"N\" AND COURSE_OFFERINGalias0.TUESDAY = \"N\" AND COURSE_OFFERINGalias0.WEDNESDAY = \"Y\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 376 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "18a33d89cec24cae4273cf10": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average market share among the students who took less than 160 credits?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_CREDIT) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_CREDIT < 160\nAnswer: ", "1e7f56400614ee80484a1931": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Spring or Summer 2016, what courses meet the Core requirement?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%Core%\" AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" , \"SU\" ) AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "a49c5a373381c63b0c135658": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What impact does campus safety have on student well-being?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information on campus safety measures, student well-being metrics, and their relationship would be needed to analyze the impact of campus safety on student well-being.\nAnswer: ", "769c39919cb5b5348287c91d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of all the courses in Fall 2007, which ones were taught by instructor Emily Elspeth Witt?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Emily Elspeth Witt%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2007 AND SEMESTERalias0.SEMESTER = \"Fall\"\nAnswer: ", "63b1a7da4fd3d0d21baafe76": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the start times for MECHENG 513 in Fall 2016?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.START_TIME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"MECHENG\" AND COURSEalias0.NUMBER = 513 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "50826559c85b1e6f2a55793f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What Other course is in EECS?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT, COURSEalias0.NUMBER FROM COURSE as COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER != 281\nAnswer: ", "c49e2743a3553d0f324ebae5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How do universities support students preparing for standardized tests?\nPredicted SQL: This question cannot be answered with the given tables and schema.\nAnswer: ", "c3d23938204612f712a6dafd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course has the heaviest workload among those taken by student 3?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE STUDENT_RECORDalias1.STUDENT_ID = 3 ) AND STUDENT_RECORDalias0.STUDENT_ID = 3 \nAnswer: ", "4805440c6deb69e7b62c0618": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Assess the overall sentiment of students regarding the workload in the eecs course.\nPredicted SQL: SELECT AVG(PROGRAM_COURSEalias0.WORKLOAD) FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\"\nAnswer: ", "4a2f8bdd186049a72a2c0a42": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses in computer hardware along with their best-selling textbooks?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER, COURSE_OFFERINGalias0.TEXTBOOK FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" \nAnswer: ", "fd0e38a733bef14310d69896": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the upper-level CS courses that don't require EECS 511.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0, PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias1.COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITEalias0.PRE_COURSE_ID FROM COURSE AS COURSEalias0, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 511 AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "241c6ea6b38ba5c39266c941": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please list the courses that instructor Philip C Stevenson has taught previously before Fall 2011.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Philip C Stevenson%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR < 2011 AND SEMESTERalias0.SEMESTER NOT LIKE \"%Fall%\" \nAnswer: ", "aa3c20fca824b794081a587d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the theory courses offered during Winter or Fall of 2011.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%theory%\" AND SEMESTERalias0.SEMESTER IN ( \"WN\" , \"FA\" ) AND SEMESTERalias0.YEAR = 2011 \nAnswer: ", "825dddc2aeceb67993a83d4f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who in the past has taught ARMENIAN 101?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ARMENIAN\" AND COURSEalias0.NUMBER = 101 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "782c8b3794ad3d23de70da70": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many standing tackles did the students make in total?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "549fd0ef2f1868cdbfc1b340": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the phone numbers of all instructors teaching in the fall semester?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.PHONE_NUMBER FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE SEMESTERalias0.SEMESTER = \"FA\"\nAnswer: ", "f87aea0eb2ec650676d37a9c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Fall 2002, how many instructors taught ROMLANG 377?\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ROMLANG\" AND COURSEalias0.NUMBER = 377 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2002 \nAnswer: ", "1c262321694a5ba4a471a252": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the course names and textbook requirements for courses that allow pass or fail.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSE_OFFERINGalias0.TEXTBOOK FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.ALLOW_AUDIT = 1\nAnswer: ", "3b4773c78c3d15b9c5c2a8bc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: During Spring semesters, what UC courses were offered?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%UC%\" AND SEMESTERalias0.SEMESTER IN ( \"SP\" ) \nAnswer: ", "7e1a6added6422941e084854": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was the LAW 657 course always taught by either Laura Nyantung Beny or Vikramaditya S Khanna?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"LAW\" AND COURSEalias0.NUMBER = 657 AND (INSTRUCTORalias0.NAME LIKE \"%Laura Nyantung Beny%\" OR INSTRUCTORalias0.NAME LIKE \"%Vikramaditya S Khanna%\") \nAnswer: ", "03e33b022a6b10e738b26c6e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who has the shortest life expectancy among students admitted in fall 2016?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 INNER JOIN SEMESTER AS SEMESTERalias0 ON STUDENTalias0.ADMIT_TERM = SEMESTERalias0.SEMESTER_ID WHERE SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016 ORDER BY STUDENTalias0.PREDICTED_GRADUATION_SEMESTER ASC LIMIT 1\nAnswer: ", "84b70dee0cc79a08adad5d54": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find the student names and their SSNs of those enrolled in course 1242.\nPredicted SQL: SELECT STUDENT.LASTNAME, STUDENT.FIRSTNAME, STUDENT.SSN\nFROM STUDENT\nINNER JOIN STUDENT_RECORD ON STUDENT_RECORD.STUDENT_ID = STUDENT.STUDENT_ID\nWHERE STUDENT_RECORD.COURSE_ID = 1242\nAnswer: ", "4929303c63a3c1bc5d6f801e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the website of the instructor jeffrey veidlinger?\nPredicted SQL: There is no table or column provided in the database schema for the website of an instructor.\nAnswer: ", "04afee4284f9a7df6a67361e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors graduated with a total gpa higher than 3.5?\nPredicted SQL: SELECT COUNT(DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.INSTRUCTOR_ID IN (SELECT DISTINCT OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID FROM OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON COURSE_OFFERINGalias0.OFFERING_ID = STUDENT_RECORDalias0.OFFERING_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENT_RECORDalias0.STUDENT_ID = STUDENTalias0.STUDENT_ID WHERE STUDENTalias0.TOTAL_GPA > 3.5)\nAnswer: ", "e26c8d17e85d0dad56d6b866": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of all the Design for Mfg courses, which ones had no prerequisites?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID \nWHERE COURSEalias0.DEPARTMENT LIKE \"%Design for Mfg%\" AND COURSE_PREREQUISITEalias0.PRE_COURSE_ID IS NULL\nAnswer: ", "21bef841e8668ba9eba18ce9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Convert a 'software development' course's grading rubric into a spoken explanation.\nPredicted SQL: SELECT DESCRIPTION FROM COURSE WHERE NAME = 'Software Development'\nAnswer: ", "09d7a09aa092d8eb0e879f70": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What benefits do cooperative education programs provide?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME, PROGRAMalias0.INTRODUCTION FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.NAME LIKE \"%cooperative education%\"\nAnswer: ", "4a03c32c85c7fd7272a273f8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the software courses offered during Winter or Fall of 2014.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%software%\" AND SEMESTERalias0.SEMESTER IN ( \"WN\" , \"FA\" ) AND SEMESTERalias0.YEAR = 2014 \nAnswer: ", "1b1204ac3f9d9baaba9105f6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Schedule a series of tutoring sessions for a student struggling in eecs courses.\nPredicted SQL: INSERT INTO TUTORING_SESSION (student_id, course_id, start_time, end_time, location) VALUES (student_id, course_id, start_time, end_time, location)\nAnswer: ", "f4c2ae532fdc4317155d005c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about initiatives that promote lifelong learning at universities.\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.INTRODUCTION LIKE \"%lifelong learning%\"\nAnswer: ", "76fbbf7b207cf17a1c891dda": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about trends in university enrollment over the past decade.\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional data on university enrollment over the past decade would be needed to analyze trends.\nAnswer: ", "6506ed4f1ea35cde2490496d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the aircraft used by the instructors?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%aircraft%\" \nAnswer: ", "0881ddd199e14080cbbd8cf3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Show the average total gpa of students who have been awarded any scholarships.\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) \nFROM STUDENT AS STUDENTalias0 \nWHERE STUDENTalias0.SCHOLARSHIP = 'Yes'\nAnswer: ", "59643ec939378325bbeff6ce": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the undergraduate student authors?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.FIRSTNAME, STUDENTalias0.LASTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.DEGREE = \"undergraduate\" \nAnswer: ", "adb1a4d01d938980275b327c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What Core course is in EECS?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0, PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY = \"Core\"\nAnswer: ", "565fa7764acd57f6e374b8a1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students with a total gpt below 2.5 are advised by professor young?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENTalias0.STUDENT_ID) FROM STUDENT AS STUDENTalias0, INSTRUCTOR AS INSTRUCTORalias0, OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, COURSE AS COURSEalias0 WHERE STUDENTalias0.TOTAL_GPA < 2.5 AND STUDENTalias0.STUDENT_ID = OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID AND INSTRUCTORalias0.NAME = \"professor young\"\nAnswer: ", "f1f0ef6624f40492ee9b88fa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about trends in graduate school enrollment.\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "4b005ed8a27b7e6a2623e831": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For Winter 2005, which courses were taught by instructor Jennifer S Barber?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Jennifer S Barber%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2005 AND SEMESTERalias0.SEMESTER = \"Winter\"\nAnswer: ", "52d02408470b16c3019ee53b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me which departments have courses taught in spanish at least once.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT IN (SELECT DISTINCT COURSEalias1.DEPARTMENT FROM COURSE AS COURSEalias1 WHERE COURSEalias1.NAME LIKE \"%Spanish%\") \nAnswer: ", "071b80e0b9693d312a017bcb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which 300-level EECS courses were there for Spring or Summer 2016 terms?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 300 + 100 AND COURSEalias0.NUMBER >= 300 AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SS\" , \"SU\" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "3e332d2dff021f1af920ca24": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of the prerequisite courses for PHIL 427, how many did student 1 participate in?\nPredicted SQL: SELECT COUNT(DISTINCT COURSE_PREREQUISITEalias0.PRE_COURSE_ID) FROM COURSE AS COURSEalias0, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0, STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"PHIL\" AND COURSEalias0.NUMBER = 427 AND STUDENT_RECORDalias0.STUDENT_ID = 1 AND STUDENT_RECORDalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID\nAnswer: ", "ae0be8ac7cf9002f92b3df56": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the students who have a speed of more than 2 knots?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID INNER JOIN COURSE AS COURSEalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DESCRIPTION LIKE \"%more than 2 knots%\" \nAnswer: ", "da62470472914e746d92c3d5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are there any remote course offerings in computer hardware?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.CLASS_ADDRESS FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" AND COURSE_OFFERINGalias0.CLASS_ADDRESS = \"remote\" \nAnswer: ", "abbe438e1a67c6e05a6b6842": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses were available for theory in Winter or Fall 2011?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%theory%\" AND SEMESTERalias0.SEMESTER IN ( \"WN\" , \"FA\" ) AND SEMESTERalias0.YEAR = 2011 \nAnswer: ", "854b8e2e82b5043a659d414a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find the preferred names of students who have taken courses with instructor stephen miller.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.FIRSTNAME , STUDENTalias0.LASTNAME FROM STUDENT AS STUDENTalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON COURSE_OFFERINGalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE INSTRUCTORalias0.NAME LIKE \"%stephen miller%\" \nAnswer: ", "18d803b0a8496057a4298132": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses were there in Fall 2016 from EECS at 300-level?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 300 + 100 AND COURSEalias0.NUMBER >= 300 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "dc4d39a5e2b25043a77fdc3f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students who declared a major have received financial aid at least once?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENTalias0.STUDENT_ID) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.DECLARE_MAJOR = 1 AND STUDENTalias0.FINANCIAL_AID > 0\nAnswer: ", "7d95976ad5d1e29b75f41007": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Retrieve recent announcements about scholarship opportunities.\nPredicted SQL: SELECT * FROM ANNOUNCEMENT WHERE CATEGORY = \"Scholarship\" ORDER BY DATE_POSTED DESC\nAnswer: ", "1aa09804ecdc5d3e22e6be62": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What upper-level CS courses with 4 credits were available in Fall 2013?\nPredicted SQL: SELECT DISTINCT course.department, course.number \nFROM course \nJOIN course_offering ON course.course_id = course_offering.course_id \nJOIN program_course ON program_course.course_id = course.course_id \nJOIN semester ON course_offering.semester = semester.semester_id \nWHERE course.credits = 4 \nAND program_course.category LIKE '%ULCS%' \nAND semester.semester = 'FA' \nAND semester.year = 2013\nAnswer: ", "932873ff2711838cda86ea1e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find the course offerings with the highest waitlist count.\nPredicted SQL: SELECT COURSE_OFFERINGalias0.OFFERING_ID FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.OFFERING_ID IN ( SELECT COURSE_OFFERINGalias1.OFFERING_ID FROM COURSE_OFFERING AS COURSE_OFFERINGalias1 GROUP BY COURSE_OFFERINGalias1.OFFERING_ID ORDER BY SUM( COURSE_OFFERINGalias1.WAITLIST_COUNT ) DESC LIMIT 1 ) \nAnswer: ", "827a77f250028a3b09a90e4a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the upper-level CS courses for Fall 2016 without Monday or Friday classes.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 \nWHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSE_OFFERINGalias0.MONDAY = \"N\" \nAND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nAND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAND SEMESTERalias0.SEMESTER = \"FA\" \nAND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "c127f57d541038cb7b3d644f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the oldest student's name and their program of study?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME, PROGRAMalias0.NAME \nFROM STUDENT AS STUDENTalias0 \nINNER JOIN PROGRAM AS PROGRAMalias0 ON STUDENTalias0.PROGRAM_ID = PROGRAMalias0.PROGRAM_ID \nORDER BY STUDENTalias0.ENTERED_AS ASC \nLIMIT 1\nAnswer: ", "4c8fc5f8dd336b0abdf35b2b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me if MUSED 371 was offered during any past Spring semesters?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"MUSED\" AND COURSEalias0.NUMBER = 371 AND SEMESTERalias0.SEMESTER = \"SP\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "e25bd448b139254f97c87019": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was LING 997 available in Fall 2016?\nPredicted SQL: SELECT COUNT(*) > 0 FROM course AS c, course_offering AS co, semester AS s WHERE c.course_id = co.course_id AND c.department = \"LING\" AND c.number = 997 AND s.semester = \"FA\" AND s.semester_id = co.semester AND s.year = 2016\nAnswer: ", "49be4211b6ef7341c4434f48": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all course offerings with a waitlist count greater than 10.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.OFFERING_ID FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.NUM_ENROLLED > 10\nAnswer: ", "bb8b6e8bf65ef6f696c3006c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the advisory requirement to know before taking CMBIOL 681?\nPredicted SQL: SELECT DISTINCT COURSEalias0.ADVISORY_REQUIREMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"CMBIOL\" AND COURSEalias0.NUMBER = 681 \nAnswer: ", "e4f6ae71c47d4c0ef331785a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the authors of the students who received an a in at least one course?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE STUDENT_RECORDalias0.GRADE = \"A\"\nAnswer: ", "706d07df6987e4ee54ce7f6b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the best-selling textbook in the area of software development?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.TEXTBOOK FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN COURSE AS COURSEalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" ORDER BY COURSE_OFFERINGalias0.NUM_ENROLLED DESC LIMIT 1\nAnswer: ", "0a8eae6e295932750701cf88": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses taught by instructors whose main research is computer hardware?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" AND INSTRUCTORalias0.NAME IN (SELECT DISTINCT INSTRUCTORalias1.NAME FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE INSTRUCTORalias1.RESEARCH_AREA LIKE \"%computer hardware%\") \nAnswer: ", "9efe62b21b08342119dcfa47": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many course offerings were provided for CSP 101?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"CSP\" AND COURSEalias0.NUMBER = 101 \nAnswer: ", "680b4ec7854f62d594afa6fe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of EECS 477 and EECS 570 which had a smaller workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 \nON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nWHERE ( COURSEalias0.NUMBER = 477 OR COURSEalias0.NUMBER = 570 ) \nAND PROGRAM_COURSEalias0.WORKLOAD = \n( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) \nFROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 \nINNER JOIN COURSE AS COURSEalias1 \nON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID \nWHERE ( COURSEalias1.NUMBER = 477 OR COURSEalias1.NUMBER = 570 ) \nAND COURSEalias1.DEPARTMENT = \"EECS\" ) \nAnswer: ", "3d8776d2778a37cf905ab954": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find instructors whose main research area and courses taught are both in cryptography.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%cryptography%\" AND INSTRUCTORalias0.RESEARCH_AREA LIKE \"%cryptography%\" \nAnswer: ", "46c913f6c1bab0d554c2da2f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who is the physician for student mike lee?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID WHERE STUDENTalias0.LASTNAME = \"lee\" AND STUDENTalias0.FIRSTNAME = \"mike\"\nAnswer: ", "e95859f124827890d9489662": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me the names of instructors with a total gpa higher than the department average?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN (SELECT AVG(total_gpa) AS dept_avg FROM STUDENT) AS dept_avg_table WHERE INSTRUCTORalias0.NAME IN (SELECT INSTRUCTORalias1.NAME FROM INSTRUCTOR AS INSTRUCTORalias1 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias1.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias1 ON OFFERING_INSTRUCTORalias1.OFFERING_ID = COURSE_OFFERINGalias1.OFFERING_ID INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID INNER JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.PROGRAM_ID = COURSEalias1.COURSE_ID WHERE STUDENTalias0.TOTAL_GPA > dept_avg_table.dept_avg) \nAnswer: ", "37b9ee2d6a6bbdcbdb834622": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What kind of workload did the EECS 373 course have?\nPredicted SQL: SELECT DISTINCT PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 373 AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "b027a2511480c8b29fe04ea2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses in the software development area are eligible for AP/IB credit waiver?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" AND COURSEalias0.ADVISORY_REQUIREMENT LIKE \"%AP/IB credit waiver%\" \nAnswer: ", "35d950bf38addb3842d33e4a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Cluster courses based on clarity_score, easiness_score, and helpfulness_score.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.CLARITY_SCORE, COURSEalias0.EASINESS_SCORE, COURSEalias0.HELPFULNESS_SCORE FROM COURSE AS COURSEalias0\nAnswer: ", "620084add9d0eb801b48bc16": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: I want to know the total number of credits student 5 has earned thus far.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_CREDIT FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 5\nAnswer: ", "1c05027256e19910bd9c34aa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did instructor Vincent E Castagnacci's ARTDES 100 have a lab?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"ARTDES\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 100 AND INSTRUCTORalias0.NAME LIKE \"%Vincent E Castagnacci%\" \nAnswer: ", "caf6daea615f46f9236d8395": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the email addresses of the students who have earned more than 100 credits?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.EMAIL FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_CREDIT > 100\nAnswer: ", "a91dfd665d67289d83c25eb6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What semester did instructor Raymond A Silverman teach 409 after the Fall 2010 semester?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.SEMESTER, SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NUMBER = 409 AND INSTRUCTORalias0.NAME LIKE \"%Raymond A Silverman%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID > (SELECT SEMESTER_ID FROM SEMESTER WHERE SEMESTER = \"FALL\" AND YEAR = 2010) \nAnswer: ", "ba8501a59349728a871b967e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What options did CS majors have for courses in Fall 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE \"%CS%\" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "8a00ef358031cb1542e12109": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What effect do faculty-student relationships have on learning outcomes?\nPredicted SQL: This question cannot be answered directly with the provided tables. It would require additional data on faculty-student relationships and learning outcomes to be included in the database.\nAnswer: ", "10e6d0ef1d0ff1ffecde7302": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Play a motivational audio track for students during exam preparation.\nPredicted SQL: This question does not require a SQL query as it is not related to retrieving data from the database.\nAnswer: ", "de21a3e14bc08607ee0c9a67": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of all the Theory of Neural Computation courses, which ones had no prerequisites?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID \nLEFT JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID \nWHERE AREAalias0.AREA LIKE \"%Theory of Neural Computation%\" AND COURSE_PREREQUISITEalias0.PRE_COURSE_ID IS NULL\nAnswer: ", "44866e43537f3a7d234a0d65": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How much workload, on average, do Other courses involve?\nPredicted SQL: SELECT AVG(WORKLOAD) FROM PROGRAM_COURSE WHERE CATEGORY = 'Other'\nAnswer: ", "52e512e4937db7d0a12508ae": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Show the top 5 instructors with the most publications.\nPredicted SQL: SELECT INSTRUCTORalias0.NAME, COUNT( DISTINCT COURSEalias0.COURSE_ID ) AS PUBLICATIONS FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID GROUP BY INSTRUCTORalias0.NAME ORDER BY PUBLICATIONS DESC LIMIT 5\nAnswer: ", "72bde26a4b5d1a8638ddabca": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were EECS 481 and 470 in Fall 2015 completed by 17:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias1 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.END_TIME <= \"17:00:00\" AND COURSE_OFFERINGalias1.END_TIME <= \"17:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 481 AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 470 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2015\nAnswer: ", "5db643bf901b8daf0c1c8de7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In ASIANLAN 126, was there a lab when instructor Kenji Endo taught it?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"ASIANLAN\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 126 AND INSTRUCTORalias0.NAME LIKE \"%Kenji Endo%\" \nAnswer: ", "0f94e4a38d235682e11b0905": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Do you know who was teaching PreMajor courses in Winter 2016?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "de0bc8ee598f91a8898ad7c0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For PreMajor courses, what is the average workload?\nPredicted SQL: SELECT AVG( PROGRAM_COURSEalias0.WORKLOAD ) FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID\nAnswer: ", "4eb49e30dbcae3fa1d069efe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the effect of final exams versus final projects on student stress levels?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information on student stress levels and how they are affected by final exams versus final projects would be needed in order to formulate an appropriate SQL query.\nAnswer: ", "af5edda95e686f1c34a1b452": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What challenges arise in implementing a universal curriculum?\nPredicted SQL: This question does not directly relate to the data provided in the tables.\nAnswer: ", "f4f737229e7437ca08a38611": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all the software development courses that had a lighter workload than the average workload of EECS 481.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" AND PROGRAM_COURSEalias0.WORKLOAD < (SELECT AVG(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 481 ) \nAnswer: ", "a5b78a2f7689e20e42569dbd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the latest job market trends for graduates in software development?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables containing job market trend data for graduates in software development would be needed to provide an accurate answer.\nAnswer: ", "aaf6eb8f1f989ce2ac273efc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support do universities offer to non-traditional students?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.INTRODUCTION LIKE \"%non-traditional students%\"\nAnswer: ", "c8be46c7b6e88293a71b6758": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please tell me the courses that instructor Philip C Stevenson taught in the past before Fall 2011.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Philip C Stevenson%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND (SEMESTERalias0.YEAR < 2011 OR (SEMESTERalias0.YEAR = 2011 AND SEMESTERalias0.SEMESTER < \"Fall\")) \nAnswer: ", "9d416d6b454665ae2c1cd0af": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the students who have a life expectancy higher than 70?\nPredicted SQL: This question cannot be answered with the provided tables and columns.\nAnswer: ", "3b2d51975c518da451793413": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Fall 2007, did EECS 662 begin after 12:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME >= \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 662 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2007 \nAnswer: ", "f69cc37ac0e2a6336a8397db": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are FILMVID 604 courses available in every semester?\nPredicted SQL: SELECT COUNT( * ) = 0 FROM SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER NOT IN ( SELECT DISTINCT SEMESTERalias1.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias1 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"FILMVID\" AND COURSEalias0.NUMBER = 604 AND SEMESTERalias1.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ) \nAnswer: ", "cbbdb737aa32faffb0f34c92": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course has the heaviest workload among those taken by student 4?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE STUDENT_RECORDalias0.STUDENT_ID = 4 AND STUDENT_RECORDalias0.WORKLOAD = (SELECT MAX(STUDENT_RECORDalias1.WORKLOAD) FROM STUDENT_RECORD AS STUDENT_RECORDalias1 WHERE STUDENT_RECORDalias1.STUDENT_ID = 4)\nAnswer: ", "ad0dbc10c9d1c0dc6bea94a5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which instructors have taught the most student athletes?\nPredicted SQL: SELECT INSTRUCTORalias0.NAME, COUNT(DISTINCT STUDENT_RECORDalias0.STUDENT_ID) AS NUM_STUDENT_ATHLETES\nFROM INSTRUCTOR AS INSTRUCTORalias0\nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID\nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID\nINNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID\nINNER JOIN STUDENT AS STUDENTalias0 ON STUDENT_RECORDalias0.STUDENT_ID = STUDENTalias0.STUDENT_ID\nWHERE STUDENTalias0.MINOR = \"Athletics\"\nGROUP BY INSTRUCTORalias0.NAME\nORDER BY NUM_STUDENT_ATHLETES DESC\nAnswer: ", "2ba3182c28a2d27adb3e0d82": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Transform a 'software development' professor's research paper into spoken word.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME, INSTRUCTORalias0.RESEARCH_PAPER FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" \nAnswer: ", "aa99034f3d71bb660a247d7d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the software courses offered during Winter or Fall of 2013.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE AREAalias0.AREA LIKE \"%software%\" \nAND SEMESTERalias0.SEMESTER IN ( \"WN\" , \"FA\" ) \nAND SEMESTERalias0.YEAR = 2013\nAnswer: ", "3834823db7da8638d9026220": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: When was the first year that DUTCH 111 was offered?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"DUTCH\" AND COURSEalias0.NUMBER = 111 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ORDER BY SEMESTERalias0.YEAR ASC LIMIT 1 \nAnswer: ", "8fb8c3d8d50dcc32b99cc89e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors have the same phone number?\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) \nFROM INSTRUCTOR AS INSTRUCTORalias0 \nINNER JOIN INSTRUCTOR AS INSTRUCTORalias1 \nON INSTRUCTORalias0.PHONE_NUMBER = INSTRUCTORalias1.PHONE_NUMBER \nWHERE INSTRUCTORalias0.INSTRUCTOR_ID <> INSTRUCTORalias1.INSTRUCTOR_ID\nAnswer: ", "e97c1417102ee6b9e0c8ad5c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Fall 2013, what upper-level CS courses began after 10:30?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME > \"10:30:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2013 \nAnswer: ", "18b575168560ed9164480bba": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: The EECS 595 course was how many credits?\nPredicted SQL: SELECT CREDITS FROM COURSE WHERE DEPARTMENT = \"EECS\" AND NUMBER = 595\nAnswer: ", "75914e330bc990aa314525fc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which instructors, besides Susan H Brown, taught MOVESCI 320 classes?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"MOVESCI\" AND COURSEalias0.NUMBER = 320 AND INSTRUCTORalias0.NAME NOT LIKE \"%Susan H Brown%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "799cb21923728af2ee6da560": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are SOCADMIN 995 courses available in every semester?\nPredicted SQL: SELECT COUNT(*) = 0 \nFROM SEMESTER AS SEMESTERalias0 \nWHERE SEMESTERalias0.SEMESTER NOT IN \n(SELECT DISTINCT SEMESTERalias1.SEMESTER \nFROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias1 \nWHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nAND COURSEalias0.DEPARTMENT = \"SOCADMIN\" \nAND COURSEalias0.NUMBER = 995 \nAND SEMESTERalias1.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER)\nAnswer: ", "6795b3979a0c39c588b8965f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Analyze the effect of course workload on student total gpa using regression models.\nPredicted SQL: This question requires a more complex analysis that involves regression models, which cannot be directly answered with the provided tables and SQL queries. To perform this analysis, you would need to use statistical software or programming languages like R or Python to build regression models that predict student total GPA based on course workload.\nAnswer: ", "abef880dc57da0f3eb7396be": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What prerequisites were required to be passed to take EECS 489?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias1.NUMBER = 489 AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" \nAnswer: ", "82f96d432227daf452bd4fbc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you confirm if the only teacher for Topics in Religion was instructor Bernard Arps?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NAME LIKE \"%Topics in Religion%\" AND INSTRUCTORalias0.NAME LIKE \"%Bernard Arps%\" \nAnswer: ", "cdc8a584a17b18d127437a84": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you tell me if EECS 373 in 2016 was only offered on Mondays and Wednesdays?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSE_OFFERINGalias0.MONDAY = \"Y\" AND COURSE_OFFERINGalias0.THURSDAY = \"N\" AND COURSE_OFFERINGalias0.TUESDAY = \"N\" AND COURSE_OFFERINGalias0.WEDNESDAY = \"Y\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 373 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "edf00d7d41c24f5c2fe0b5b2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which instructors, besides Beth-ellen Pennell, taught PSYCH 688 classes?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"PSYCH\" AND COURSEalias0.NUMBER = 688 AND INSTRUCTORalias0.NAME NOT LIKE \"%Beth-ellen Pennell%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "8399be6aef2073ac6ba51ab2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did instructor Harlan Mark Kadish have any upper-level CS courses he/she taught?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE INSTRUCTORalias0.NAME LIKE \"%Harlan Mark Kadish%\" AND PROGRAM_COURSEalias0.CATEGORY LIKE \"ULCS\" \nAnswer: ", "c96d0ae866c744e0f37e34df": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Analyze the trends in course clarity scores over semesters.\nPredicted SQL: SELECT SEMESTER.SEMESTER, AVG(COURSE.CLARITY_SCORE) AS AVERAGE_CLARITY_SCORE\nFROM COURSE\nINNER JOIN STUDENT_RECORD ON COURSE.COURSE_ID = STUDENT_RECORD.COURSE_ID\nINNER JOIN SEMESTER ON STUDENT_RECORD.SEMESTER = SEMESTER.SEMESTER_ID\nGROUP BY SEMESTER.SEMESTER\nORDER BY SEMESTER.SEMESTER\nAnswer: ", "a0863e276d6b04b3c758e0eb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the courses that could've been used for my PreMajor?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "59cc6781ee99adfae0b0ddae": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Fall 2016, was any ORALHEAL 602 class being taught not on Monday?\nPredicted SQL: SELECT COUNT(*) > 0 FROM course AS c, course_offering AS co, semester AS s \nWHERE co.monday = 'N' \nAND c.course_id = co.course_id \nAND c.department = 'ORALHEAL' \nAND c.number = 602 \nAND s.semester = 'FA' \nAND s.year = 2016 \nAND s.semester_id = co.semester\nAnswer: ", "3c552074e2c80063e486ecef": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What IOE courses at 400 / 500-level have the least workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"IOE\" AND (COURSEalias0.NUMBER LIKE \"4%\" OR COURSEalias0.NUMBER LIKE \"5%\") AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 ) \nAnswer: ", "87928fcc243c4814fecb3353": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Provide me with the ULCS courses student 6 took.\nPredicted SQL: SELECT DISTINCT c.department, c.number \nFROM course c \nINNER JOIN student_record sr ON c.course_id = sr.course_id \nINNER JOIN program_course pc ON sr.course_id = pc.course_id \nWHERE pc.category LIKE \"%ULCS%\" AND sr.student_id = 6\nAnswer: ", "b1299cfff2374a314e103c85": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the volume of michael marshall?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE \"%Michael Marshall%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "b695170fa304234a15a9e636": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What MILSCI courses at 400 / 500-level have the least workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%MILSCI%\" AND COURSEalias0.NUMBER IN (\"400\",\"500\") AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY LIKE \"%MILSCI%\" ) \nAnswer: ", "410c0797a543167ff093c111": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me if BIOMEDE 599 has been offered during the Winter term.\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"BIOMEDE\" AND COURSEalias0.NUMBER = 599 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "307fb8bd57b23b77a7ff4b10": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course with a final exam is taught by the instructor who started earliest in the database?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON COURSE_OFFERINGalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.HAS_FINAL_EXAM = 1 AND INSTRUCTORalias0.NAME = ( SELECT INSTRUCTORalias1.NAME FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE INSTRUCTORalias1.INSTRUCTOR_ID = ( SELECT MIN( INSTRUCTOR_ID ) FROM INSTRUCTOR ) ) \nAnswer: ", "c42f2e9884ef846037da9244": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are there any courses in the jazz department with 'b' as minimum grade requirements in prerequisites?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"JAZZ\" AND COURSE_PREREQUISITEalias0.MIN_GRADE = \"b\" \nAnswer: ", "b3916a04b7011bb06624e803": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Remove HTML tags and special characters in the description text in the course table.\nPredicted SQL: UPDATE COURSE SET DESCRIPTION = REGEXP_REPLACE(DESCRIPTION, '<[^>]*>', '') \nAnswer: ", "d08aaf1e5d73f74d0d291a6c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common office address among instructors?\nPredicted SQL: SELECT OFFICE_ADDRESS FROM INSTRUCTOR GROUP BY OFFICE_ADDRESS ORDER BY COUNT(*) DESC LIMIT 1\nAnswer: ", "9740438928bfc6a8987986ec": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of EECS courses with the most workload.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT, COURSEalias0.NUMBER FROM COURSE as COURSEalias0, PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MAX (PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE as COURSEalias1, PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID ) \nAnswer: ", "ec15999a1abd81976754b916": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the count of the courses not belonging to the LING department.\nPredicted SQL: SELECT DISTINCT COUNT ( COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT <> \"LING\" \nAnswer: ", "0f6b4a8e9bb2d68cc3b6de58": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Transcribe eecs 634's recorded lecture.\nPredicted SQL: SELECT COURSE_OFFERINGalias0.CLASS_ADDRESS FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 634\nAnswer: ", "e620dd47a6c4f1cb560876bf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How high is student 3's current GPA?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_GPA FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 3 \nAnswer: ", "7713d44cd428a7f471d1f04d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which semester has the highest course rating on average?\nPredicted SQL: SELECT SEMESTERalias0.SEMESTER, SEMESTERalias0.YEAR FROM SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER_ID IN (SELECT STUDENT_RECORDalias0.SEMESTER FROM STUDENT_RECORD AS STUDENT_RECORDalias0, COURSE AS COURSEalias0 WHERE STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID GROUP BY STUDENT_RECORDalias0.SEMESTER ORDER BY AVG(COURSEalias0.CLARITY_SCORE + COURSEalias0.EASINESS_SCORE + COURSEalias0.HELPFULNESS_SCORE) DESC LIMIT 1) \nAnswer: ", "60aad4f99c8ecead584fbf57": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me a list of RCLANG courses in Winter 2016 that didn't meet on Fridays.\nPredicted SQL: SELECT DISTINCT c.department, c.number \nFROM course c \nINNER JOIN course_offering co ON c.course_id = co.course_id \nINNER JOIN semester s ON co.semester = s.semester_id \nWHERE c.department = 'RCLANG' \nAND s.semester = 'WN' \nAND s.year = 2016 \nAND co.friday = 'N'\nAnswer: ", "fa3be0d848f1ae985e45c83d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses with lab sessions start office hours after noon?\nPredicted SQL: SELECT COUNT( * ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.HAS_LAB = \"Y\" AND COURSE_OFFERINGalias0.START_TIME >= \"12:00:00\" \nAnswer: ", "a6402316ed724bf159e0cbdd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Currently, what is the GPA of student 3?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_GPA FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 3 \nAnswer: ", "3dbbccdd160c544ea3fd9bee": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average course rating for courses offered in fall 2015?\nPredicted SQL: SELECT AVG(clarity_score), AVG(easiness_score), AVG(helpfulness_score) FROM COURSE WHERE COURSE_ID IN (SELECT DISTINCT COURSE_ID FROM COURSE_OFFERING WHERE SEMESTER = \"FA\" AND YEAR = 2015)\nAnswer: ", "9db9dfa4cb9fae5457e915ab": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many PSYCH courses were available for the Fall 2016 semester?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"PSYCH\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "16bc3697ddc484022b5f9313": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In the past, who have taught CMPLXSYS 270?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"CMPLXSYS\" AND COURSEalias0.NUMBER = 270 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "734b8a6c4589e669fc57355f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In what time did the POLSCI 827 lectures start in Summer 2016?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.START_TIME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"POLSCI\" AND COURSEalias0.NUMBER = 827 AND SEMESTERalias0.SEMESTER = \"SU\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "e68534956d73e722891a0766": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many standing tackles did emma lopez make?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about standing tackles made by individuals.\nAnswer: ", "e5d8206eb6470deeae7f580b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students have passwords longer than 8 characters?\nPredicted SQL: SELECT COUNT(*) FROM STUDENT WHERE LENGTH(PASSWORD) > 8\nAnswer: ", "ba7913697db8118f31c66da6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Narrate a 'computer hardware' lab manual for students with visual impairments.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" AND COURSEalias0.DESCRIPTION LIKE \"%lab manual%\" AND COURSEalias0.DESCRIPTION LIKE \"%visual impairments%\" \nAnswer: ", "88a806d9fe634299cdad7ca2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the support universities provide for students with learning disabilities.\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "f8495eba146aca86df5615ba": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was ACABS 470 available in Fall 2016?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ACABS\" AND COURSEalias0.NUMBER = 470 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "35a1741d71a3b985553a734b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What 3-credit courses can I find in the AT 200-level?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = \"3\" AND COURSEalias0.DEPARTMENT = \"AT\" AND COURSEalias0.NUMBER < 200 + 100 AND COURSEalias0.NUMBER >= 200 \nAnswer: ", "14334f8d089648e4a8035c49": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How fast is emma lopez in knots?\nPredicted SQL: This question cannot be answered with the given tables and columns.\nAnswer: ", "fd3c057dfd9f6066aec1b0ea": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Among EECS 487 and EECS 521, which had a smaller workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE ( COURSEalias0.NUMBER = 487 OR COURSEalias0.NUMBER = 521 ) AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 INNER JOIN COURSE AS COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE ( COURSEalias1.NUMBER = 487 OR COURSEalias1.NUMBER = 521 ) AND COURSEalias1.DEPARTMENT = \"EECS\" ) \nAnswer: ", "592a587d8a79ad9a61e1306c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of EECS 481 and EECS 575 which had a smaller workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE ( COURSEalias0.NUMBER = 481 OR COURSEalias0.NUMBER = 575 ) AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 INNER JOIN COURSE AS COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE ( COURSEalias1.NUMBER = 481 OR COURSEalias1.NUMBER = 575 ) AND COURSEalias1.DEPARTMENT = \"EECS\" ) \nAnswer: ", "a94084f96459a43bfd377741": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What has student 9 taken as prerequisites for EECS 376?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 376 AND STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND STUDENT_RECORDalias0.STUDENT_ID = 9 \nAnswer: ", "58b0bcdb7631f8e01de272b3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: When were the semesters in which EECS 501 was offered after Winter 2016?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.SEMESTER , SEMESTERalias0.YEAR FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 501 AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND SEMESTERalias0.SEMESTER_ID > ( SELECT SEMESTERalias1.SEMESTER_ID FROM SEMESTER AS SEMESTERalias1 WHERE SEMESTERalias1.SEMESTER = \"WN\" AND SEMESTERalias1.YEAR = 2016 ) \nAnswer: ", "2eab4f3b5fb7cc64c9fbaeb8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses with a prerequisite waiver option that do not include a lab component?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.ADVISORY_REQUIREMENT = \"Prerequisite waiver\" AND COURSEalias0.HAS_LAB = \"N\" \nAnswer: ", "0f0a01cac65dc2bddb8b5a3e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the courses with the highest workload that student 7 took in EECS.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias1.STUDENT_ID = 7 ) AND COURSEalias0.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias0.STUDENT_ID = 7 \nAnswer: ", "f6a31e06dbce01cb4658bab6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were there any UP 566 lectures that were not on Mondays in Fall 2016?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.MONDAY = \"N\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"UP\" AND COURSEalias0.NUMBER = 566 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "4afbe185ba5b058913115806": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were EECS 493 and 494 in Winter 2013 completed by 17:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.END_TIME <= \"17:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND (COURSEalias0.NUMBER = 493 OR COURSEalias0.NUMBER = 494) AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2013 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER\nAnswer: ", "cfc7be3f862d2c87ab64011c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses that student 6 took that fulfill the ULCS requirement?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON STUDENT_RECORDalias0.COURSE_ID = PROGRAM_COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND STUDENT_RECORDalias0.STUDENT_ID = 6 \nAnswer: ", "1c1834a1a2fed6d639051bad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average total credit earned by study abroad students?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_CREDIT) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ENTERED_AS = \"study abroad\" \nAnswer: ", "a58fc059722321de49eb7a80": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many REES courses were available for the Fall 2016 semester?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"REES\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "b5a2a87012b8a93636bc4855": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How do financial aid packages influence student enrollment decisions?\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "69220c9acc6a30966c3b1b54": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who is the author of student john smith?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM STUDENT AS STUDENTalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID INNER JOIN COURSE AS COURSEalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE STUDENTalias0.LASTNAME = \"smith\" AND STUDENTalias0.FIRSTNAME = \"john\" \nAnswer: ", "360e66f0d572c3fda5c54220": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average speed among the instructors?\nPredicted SQL: SELECT AVG(speed) FROM instructor\nAnswer: ", "709f1a707e4fbb5550fa4af7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which instructors have 'edu' in their email addresses?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.UNIQNAME LIKE \"%edu%\" \nAnswer: ", "89bdfcb545ead6ffe8445357": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common currency used among the courses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.CURRENCY FROM COURSE AS COURSEalias0 GROUP BY COURSEalias0.CURRENCY ORDER BY COUNT(COURSEalias0.CURRENCY) DESC LIMIT 1\nAnswer: ", "ae35f3d63255dc57ebf8b021": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Create a weekly study plan for eecs students, based on their current course enrollments and class timings.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME, COURSEalias0.NAME, COURSE_OFFERINGalias0.START_TIME, COURSE_OFFERINGalias0.END_TIME, COURSE_OFFERINGalias0.MONDAY, COURSE_OFFERINGalias0.TUESDAY, COURSE_OFFERINGalias0.WEDNESDAY, COURSE_OFFERINGalias0.THURSDAY, COURSE_OFFERINGalias0.FRIDAY, COURSE_OFFERINGalias0.SATURDAY, COURSE_OFFERINGalias0.SUNDAY\nFROM STUDENT AS STUDENTalias0\nINNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.STUDENT_ID = STUDENTalias0.STUDENT_ID\nINNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = STUDENT_RECORDalias0.COURSE_ID\nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID\nWHERE COURSEalias0.DEPARTMENT = \"EECS\"\nAnswer: ", "8257378422e75dab687c4c83": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was the instructor for ENGLISH 125 in Summer 2013?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"ENGLISH\" AND COURSEalias0.NUMBER = 125 AND SEMESTERalias0.SEMESTER = \"SU\" AND SEMESTERalias0.YEAR = 2013\nAnswer: ", "2feff817429271ef61b4a76e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses that student 5 took that fulfill the MDE requirement?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON STUDENT_RECORDalias0.COURSE_ID = PROGRAM_COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%MDE%\" AND STUDENT_RECORDalias0.STUDENT_ID = 5 \nAnswer: ", "f6f4b741fb543c4d708afa61": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did instructor Alla Karnovsky's BIOINF 602 have a lab?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"BIOINF\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 602 AND INSTRUCTORalias0.NAME LIKE \"%Alla Karnovsky%\" \nAnswer: ", "e734374581f4f6ecbb878cef": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you verify if NATIVEAM 389 was available in Fall 2016?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"NATIVEAM\" AND COURSEalias0.NUMBER = 389 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "959258fb8a7000ce96c96397": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Count the number of instructors who taught LING 446 in Spring-Summer 2001.\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"LING\" AND COURSEalias0.NUMBER = 446 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER = \"SS\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2001 \nAnswer: ", "a540380f8579ec1f0a91ef39": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many offerings were there for 500-level EECS courses during Spring and Summer of 2016?\nPredicted SQL: SELECT COUNT(DISTINCT course_offering.offering_id) \nFROM course \nJOIN course_offering ON course.course_id = course_offering.course_id \nJOIN semester ON course_offering.semester = semester.semester_id \nWHERE course.department = 'EECS' \nAND course.number >= 500 \nAND course.number < 600 \nAND semester.semester IN ('SP', 'SS', 'SU') \nAND semester.year = 2016\nAnswer: ", "1e5955c2bc9a0bcba2db912b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which instructors with a ph.d. have taught the same course for all semesters?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE INSTRUCTORalias0.NAME IN ( SELECT INSTRUCTORalias1.NAME FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE INSTRUCTORalias1.NAME LIKE \"%Ph.D%\" ) GROUP BY INSTRUCTORalias0.INSTRUCTOR_ID HAVING COUNT( DISTINCT STUDENT_RECORDalias0.SEMESTER ) = ( SELECT COUNT( DISTINCT SEMESTERalias0.SEMESTER_ID ) FROM SEMESTER AS SEMESTERalias0 ) \nAnswer: ", "3770ee1f10ab2f6bf38182af": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Apply a bayesian approach to infer the probability of a student completing a program.\nPredicted SQL: This question cannot be directly translated into SQL as it involves a statistical analysis method (Bayesian approach) that is not typically implemented in SQL queries. This type of analysis would require a separate statistical software or programming language such as R or Python.\nAnswer: ", "2d423f673a062d04b651ffc5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many 'advanced' level courses include a final project?\nPredicted SQL: SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DESCRIPTION LIKE \"%advanced%\" AND COURSE_OFFERINGalias0.HAS_FINAL_PROJECT = 1\nAnswer: ", "c85bbb97fb855b9aad6c3bc3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the EECS courses available in Spring-Summer 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND (SEMESTERalias0.SEMESTER = \"SP\" OR SEMESTERalias0.SEMESTER = \"SU\") AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "0ad912b8c82edcb147a0a887": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which department has the course with the highest market share?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NUM_ENROLLED = ( SELECT MAX( COURSEalias1.NUM_ENROLLED ) FROM COURSE AS COURSEalias1 ) \nAnswer: ", "ce49df9eff2efc8829d20cf7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many PreMajor or MDE course offerings were provided in Spring-Summer 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY IN ( \"PreMajor\" , \"MDE\" ) AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"SS\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "fd714352539e5efc793b68d2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please provide me with the courses that instructor Ariel Shnidman once taught.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Ariel Shnidman%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "e9a1434e472bc8e0a358eb38": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List students with at least two scholarships who have not taken any courses.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME , STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID WHERE STUDENTalias0.SCHOLARSHIPS >= 2 AND STUDENT_RECORDalias0.COURSE_ID IS NULL\nAnswer: ", "9fe396bdc61cece0945091dc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the benefits of experiential learning?\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "b2d6558d71a224207367357d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who has taught the Histopathology I and II course?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE \"%Histopathology I and II%\" \nAnswer: ", "050a0be711d8ccb6c52b3e1c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses that instructor Bernard Arps taught in 2007?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Bernard Arps%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2007 \nAnswer: ", "17a341143acdddc875b78abf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find the average easiness score of all 'graduate' level courses.\nPredicted SQL: SELECT AVG(COURSEalias0.EASINESS_SCORE) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NUM_SEMESTERS > 4\nAnswer: ", "8ee986d12fa91ec3e4a39516": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What measures ensure academic integrity in online courses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION LIKE \"%academic integrity%\" AND COURSEalias0.DESCRIPTION LIKE \"%online courses%\"\nAnswer: ", "b3483f359716acdca9f6e09a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who is the instructor for histart 299, and what is their website URL?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME, INSTRUCTORalias0.WEBSITE_URL FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"histart\" AND COURSEalias0.NUMBER = 299 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "16655f61ecdaa1a21050ff97": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For Spring-Summer 2016, give me the number of PreMajor or MDE course offerings.\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY IN ( \"PreMajor\" , \"MDE\" ) AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"SS\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "5c2634dc5b57db7ef711abc0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Other than 105, what courses did instructor Jules Rowan Metcalf-burton teach?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Jules Rowan Metcalf-burton%\" AND COURSEalias0.NUMBER != 105 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "c1949116f6b7aedd269cb169": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please tell me who has taught upper-level CS courses.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAnswer: ", "2d24b6a08342896649dabe2d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me the instructors' highest degrees?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME, INSTRUCTORalias0.DEGREE FROM INSTRUCTOR AS INSTRUCTORalias0\nAnswer: ", "7d059f1222c529b5aca39fa9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Provide navigation assistance to a freshman for finding the eecs department office.\nPredicted SQL: SELECT CLASS_ADDRESS FROM COURSE_OFFERING WHERE COURSE_ID IN (SELECT COURSE_ID FROM COURSE WHERE DEPARTMENT = \"EECS\") AND CLASS_ADDRESS IS NOT NULL\nAnswer: ", "210d4f92ca826b86b643731f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you explain the impact of course difficulty on student retention rates?\nPredicted SQL: This question cannot be directly answered with the provided tables and columns. The impact of course difficulty on student retention rates would require additional data on student retention rates, which is not available in the provided tables.\nAnswer: ", "91a370e4b61b3655b761718a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses are required before taking EECS 493 and 494?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE ( COURSEalias1.NUMBER = 493 OR COURSEalias1.NUMBER = 494 ) AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" \nAnswer: ", "beed8ac5573b888bffbb4dc8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How much workload, on average, do ULCS courses involve?\nPredicted SQL: SELECT AVG(PROGRAM_COURSE.WORKLOAD) FROM PROGRAM_COURSE WHERE PROGRAM_COURSE.CATEGORY = \"ULCS\"\nAnswer: ", "9a343f408f240b2496b9aa72": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the most effective strategies for reducing student loan debt?\nPredicted SQL: This question is not related to the provided database schema and tables.\nAnswer: ", "28a67e507d967081afc22e31": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Currently, what is the GPA of student 5?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_GPA FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 5 \nAnswer: ", "56733af43430a430adfb3fe1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the impact of community engagement on student learning.\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "1151e1a94769f0c083d252bb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me the names of instructors who are department chairs?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.INSTRUCTOR_ID IN (SELECT DISTINCT INSTRUCTOR_ID FROM OFFERING_INSTRUCTOR WHERE INSTRUCTOR_ID IN (SELECT DISTINCT INSTRUCTOR_ID FROM INSTRUCTOR WHERE NAME LIKE \"%chair%\"))\nAnswer: ", "e03fbdbc721a4455452972b9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were EECS 482 and 492 in Winter 2012 completed by 17:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.END_TIME <= \"17:00:00\" AND COURSEalias0.COURSE_ID IN (482, 492) AND COURSEalias0.DEPARTMENT = \"EECS\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2012 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER\nAnswer: ", "d4bedd70a9f78d97f7ebfcf0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses were offered from MKT in Fall 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"MKT\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "7a53322d570e9e1b6a191a59": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In regards to upper-level CS courses, who was in charge of teaching them?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAnswer: ", "f11ed383a04f4287f17b1369": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Do NAVSCI 101 courses recurrently occur every semester?\nPredicted SQL: SELECT COUNT( * ) = 0 FROM SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER NOT IN ( SELECT DISTINCT SEMESTERalias1.SEMESTER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias1 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"NAVSCI\" AND COURSEalias0.NUMBER = 101 AND SEMESTERalias1.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER ) \nAnswer: ", "07c38b50b47221fdf1c27cc6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the ship types of the software courses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software%\"\nAnswer: ", "061494a1bf0ce1188148e529": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Other than instructor Susan H Brown, who else has taught MOVESCI 320?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"MOVESCI\" AND COURSEalias0.NUMBER = 320 AND INSTRUCTORalias0.NAME NOT LIKE \"%Susan H Brown%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "35cd9075ea26aac493d089ae": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What exactly were the prerequisites for the course EECS 482?\nPredicted SQL: SELECT COURSEalias0.DEPARTMENT, COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nJOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 \nON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID \nWHERE COURSE_PREREQUISITEalias0.COURSE_ID = (SELECT COURSE_ID FROM COURSE WHERE DEPARTMENT = \"EECS\" AND NUMBER = 482)\nAnswer: ", "50259556fad6ade870f3ec64": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Show me some 300-level EECS courses that used to have workload less than 3.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER LIKE \"3%\" AND PROGRAM_COURSEalias0.WORKLOAD < 3\nAnswer: ", "1b0a834d6a1a08840099fbbd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me if SCAND 460 was offered during any past Winter semesters?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"SCAND\" AND COURSEalias0.NUMBER = 460 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "f4504790076b3b959aecb0f4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Call a student to remind them of their upcoming course enrollment deadline.\nPredicted SQL: This question does not require a SQL query as it is a task to be performed outside of the database system.\nAnswer: ", "c4ae0419e76d111771f154fd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses with norton textbooks also have labs?\nPredicted SQL: SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.TEXTBOOK LIKE \"%Norton%\" AND COURSEalias0.HAS_LAB = \"Y\"\nAnswer: ", "e983fee97cb1f381dbb89581": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many department chairs have taught more than 4 courses so far?\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , COURSE AS COURSEalias0 WHERE INSTRUCTORalias0.UNIQNAME = COURSEalias0.DEPARTMENT AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID GROUP BY INSTRUCTORalias0.INSTRUCTOR_ID HAVING COUNT( DISTINCT COURSEalias0.COURSE_ID ) > 4\nAnswer: ", "4b94ff3b42011f56c49a850d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which theory courses were offered in Spring or Summer 2006?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE AREAalias0.AREA LIKE \"%theory%\" \nAND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SU\" ) \nAND SEMESTERalias0.YEAR = 2006 \nAnswer: ", "8bddf0fcb023b4fc07031aa8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which program has MATH 115?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM AS PROGRAMalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID WHERE COURSEalias0.DEPARTMENT = \"MATH\" AND COURSEalias0.NUMBER = 115\nAnswer: ", "f6164b889c73f23ef4ee8da4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which Core course with the workload had the largest class size?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nWHERE COURSEalias0.COURSE_ID IN \n( \n    SELECT PROGRAM_COURSEalias0.COURSE_ID \n    FROM PROGRAM_COURSE AS PROGRAM_COURSEalias0 \n    WHERE PROGRAM_COURSEalias0.CATEGORY = \"Core\" \n) \nAND COURSEalias0.NUM_ENROLLED = \n( \n    SELECT MAX(COURSEalias1.NUM_ENROLLED) \n    FROM COURSE AS COURSEalias1 \n    WHERE COURSEalias1.COURSE_ID IN \n    ( \n        SELECT PROGRAM_COURSEalias2.COURSE_ID \n        FROM PROGRAM_COURSE AS PROGRAM_COURSEalias2 \n        WHERE PROGRAM_COURSEalias2.CATEGORY = \"Core\" \n    ) \n) \nAnswer: ", "ddf3f7325d1cbf16d651fa30": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What role does academic publishing play in higher education?\nPredicted SQL: This question is not directly related to the provided tables and cannot be answered with the given data.\nAnswer: ", "6271f11704bd5ca98416ebdc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the instructors with minimum humidity lower than the average?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME IN (SELECT INSTRUCTORalias1.NAME FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE INSTRUCTORalias1.HUMIDITY < (SELECT AVG(INSTRUCTORalias2.HUMIDITY) FROM INSTRUCTOR AS INSTRUCTORalias2)) \nAnswer: ", "f4a359480ee011bb4f9c7268": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses waived with AP or IB credit were offered in 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 , SEMESTER AS SEMESTERalias0 WHERE STUDENT_RECORDalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND STUDENT_RECORDalias0.EARN_CREDIT = \"AP\" OR STUDENT_RECORDalias0.EARN_CREDIT = \"IB\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "52e46b9d26dab6f300d683f8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Offer directions to the nearest study spaces based on a student's current location and class schedule.\nPredicted SQL: This question requires a different set of tables and columns that are not provided in the initial list. To answer this question, we would need additional information on study spaces, student locations, and class schedules.\nAnswer: ", "45fb98ac666d72ca5af29464": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What Other courses are in the EECS department?\nPredicted SQL: SELECT DISTINCT DEPARTMENT, NUMBER FROM COURSE WHERE DEPARTMENT = \"EECS\"\nAnswer: ", "862e6ea20a54b26300e8b087": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the count of instructors who have not taught CHEM 567?\nPredicted SQL: SELECT COUNT ( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) \nFROM INSTRUCTOR AS INSTRUCTORalias0 \nWHERE INSTRUCTORalias0.NAME NOT IN \n( \n    SELECT INSTRUCTORalias1.NAME \n    FROM COURSE AS COURSEalias0 \n    INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \n    INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \n    INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID \n    WHERE COURSEalias0.DEPARTMENT = \"CHEM\" AND COURSEalias0.NUMBER = 567 \n) \nAnswer: ", "786b37cc7e81dc348a56e358": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of upper-level CS courses that do not require EECS 662 as a prerequisite.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT, COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0, COURSE AS COURSEalias1, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0, PROGRAM_COURSE AS PROGRAM_COURSEalias0 \nWHERE COURSEalias1.COURSE_ID NOT IN \n(SELECT COURSE_PREREQUISITEalias0.PRE_COURSE_ID \nFROM COURSE AS COURSEalias0, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 \nWHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID) \nAND COURSEalias1.DEPARTMENT = \"EECS\" \nAND COURSEalias1.NUMBER = 662 \nAND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID\nAnswer: ", "f981335bc118e55d676287f3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the passwords of the students who got admitted in Fall 2016?\nPredicted SQL: This question cannot be answered with the provided tables as there is no information about student passwords in the schema.\nAnswer: ", "9d581564fe640e9a91940a5c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you list the courses student 2 has taken, specifically those in software development?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" AND STUDENT_RECORDalias0.STUDENT_ID = 2 \nAnswer: ", "bc5e2521333bdee7a4790731": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which ULCS course with the workload had the largest class size?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT PROGRAM_COURSEalias0.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MAX( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY LIKE \"%ULCS%\" ) ) AND COURSEalias0.NUM_ENROLLED = ( SELECT MAX( COURSEalias1.NUM_ENROLLED ) FROM COURSE AS COURSEalias1 WHERE COURSEalias1.COURSE_ID IN ( SELECT PROGRAM_COURSEalias2.COURSE_ID FROM PROGRAM_COURSE AS PROGRAM_COURSEalias2 WHERE PROGRAM_COURSEalias2.WORKLOAD = ( SELECT MAX( PROGRAM_COURSEalias3.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias3 WHERE PROGRAM_COURSEalias3.CATEGORY = \"ULCS\" ) ) ) \nAnswer: ", "999ba7d5d52d33f3925ca3bb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Set up automated calls to remind students of course enrollment deadlines.\nPredicted SQL: This question does not involve querying the database, but rather setting up a system for automated calls. This would require a separate system to be implemented outside of the database.\nAnswer: ", "6daba321743db62631569de8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Other than instructor Ronald Dreslinski Jr, who else has taught EECS 370?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 370 AND INSTRUCTORalias0.NAME NOT LIKE \"%Ronald Dreslinski Jr%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "bdac104083bc219347acf4c1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What upper-level CS courses with 4 credits were available in Fall 2011?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 \nWHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nAND COURSEalias0.CREDITS = \"4\" \nAND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAND SEMESTERalias0.SEMESTER = \"FA\" \nAND SEMESTERalias0.YEAR = 2011\nAnswer: ", "1530b8864d3134f286d0f243": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common ship type in the asianlan department?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"ASIANLAN\" GROUP BY COURSEalias0.DESCRIPTION ORDER BY COUNT(COURSEalias0.DESCRIPTION) DESC LIMIT 1\nAnswer: ", "4c29f24f8ceab7b21c02bff9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the currencies used by the semesters between 2005 and 2006?\nPredicted SQL: This question cannot be answered with the provided tables and columns.\nAnswer: ", "476398223bd6f811463fb4c3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How does the location of a university affect student life and learning experiences?\nPredicted SQL: This question cannot be answered directly using the provided tables and schema. It would require additional data related to the location of the university, student feedback, campus facilities, and other factors that are not present in the current database.\nAnswer: ", "512c27286463020e580b029c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Name the ITALIAN courses that were offered in Fall semesters.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"ITALIAN\" AND SEMESTERalias0.SEMESTER = \"FA\" \nAnswer: ", "cb633b62fbd94ae223194c40": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find photographs of computer components for a 'computer hardware' lab manual.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "c9a756e8e7e9424b84901902": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What benefits do accelerated degree programs offer?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.INTRODUCTION FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.NAME LIKE \"%Accelerated Degree%\"\nAnswer: ", "bf26a1fef33f2c3003d4c4d8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many RateMyProfessors reviews do the instructors have on average?\nPredicted SQL: SELECT AVG(num_reviews) FROM instructor\nAnswer: ", "573410b12728622970404aac": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the impact of online courses on traditional education models?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional data on online courses and traditional education models would be needed to analyze their impact.\nAnswer: ", "ff58b610338c262a248059d4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Use survival analysis to study the duration students take to graduate across different programs.\nPredicted SQL: This question cannot be directly answered with the provided tables. Additional data on the duration of students' enrollment in programs would be needed to conduct survival analysis.\nAnswer: ", "e6543b3231e3d6dc76286375": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What course was the one with the least workload in the MDE category?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 \nWHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%MDE%\" \nAND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAND PROGRAM_COURSEalias0.WORKLOAD = ( \n    SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) \n    FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 \n    WHERE PROGRAM_COURSEalias1.CATEGORY LIKE \"%MDE%\" \n) \nAnswer: ", "f4968d73e19a27aa57fcbc9b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses with labs and at least 50 enrolled students that are taught in japanese?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUM_ENROLLED >= 50 AND COURSE_OFFERINGalias0.CLASS_ADDRESS LIKE \"%Japanese%\" \nAnswer: ", "d03cd974374f180f3a585f72": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the Financial Economics courses that had 4 credits?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Financial Economics%\" AND COURSEalias0.CREDITS = \"4\" \nAnswer: ", "8b55db42e9c7993f17e10059": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Of EECS 578 and EECS 280 which had a smaller workload?\nPredicted SQL: SELECT DISTINCT c1.department, c1.number \nFROM course c1 \nINNER JOIN program_course pc1 ON c1.course_id = pc1.course_id \nWHERE (c1.number = 578 OR c1.number = 280) \nAND pc1.workload = (\n    SELECT MIN(pc2.workload) \n    FROM program_course pc2 \n    INNER JOIN course c2 ON pc2.course_id = c2.course_id \n    WHERE (c2.number = 578 OR c2.number = 280) \n    AND c2.department = \"EECS\"\n)\nAnswer: ", "8ea0381bb7dd932bb571729b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses were taught by instructor Kristin Ann Hass in 2009?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Kristin Ann Hass%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2009 \nAnswer: ", "1a516755d5d05c276ab3e15c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors teach courses with honors track availability?\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.INSTRUCTOR_ID IN ( SELECT OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID WHERE COURSEalias0.ADVISORY_REQUIREMENT = \"HONORS\" OR COURSEalias0.ENFORCED_REQUIREMENT = \"HONORS\" ) \nAnswer: ", "e6cb67d10ebf7807fad1104a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me a list of ENVIRON courses in Winter 2016 that didn't meet on Fridays.\nPredicted SQL: SELECT DISTINCT course.department, course.number \nFROM course \nINNER JOIN course_offering ON course.course_id = course_offering.course_id \nINNER JOIN semester ON course_offering.semester = semester.semester_id \nWHERE course_offering.friday = \"N\" \nAND course.department = \"ENVIRON\" \nAND semester.semester = \"WN\" \nAND semester.year = 2016\nAnswer: ", "d559bd9231fd5e2dc6f036e5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the aircraft of the courses that don't have final exams?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.HAS_FINAL_EXAM = 0\nAnswer: ", "cdd56b7a989910ead132b9ec": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support is available for students with dependents?\nPredicted SQL: SELECT DISTINCT PROGRAM.NAME FROM PROGRAM WHERE PROGRAM.NAME LIKE \"%support for students with dependents%\"\nAnswer: ", "f3f4934bfcfe286393e28303": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Show me the names of the students, their permanent addresses, and the number of courses in which they were enrolled in the latest term.\nPredicted SQL: SELECT STUDENT.LASTNAME, STUDENT.FIRSTNAME, STUDENT.PERMANENT_ADDRESS, COUNT(STUDENT_RECORD.COURSE_ID) AS NUM_COURSES_ENROLLED\nFROM STUDENT\nINNER JOIN STUDENT_RECORD ON STUDENT.STUDENT_ID = STUDENT_RECORD.STUDENT_ID\nWHERE STUDENT_RECORD.SEMESTER = (SELECT MAX(SEMESTER_ID) FROM SEMESTER)\nGROUP BY STUDENT.LASTNAME, STUDENT.FIRSTNAME, STUDENT.PERMANENT_ADDRESS\nAnswer: ", "ea1c40c69f8bcc85d950fc2a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you provide information on whether instructor Rhonda Lorraine Mccaffery was the exclusive teacher for Technical Communication for Electrical and Computer Science?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NAME = \"Technical Communication for Electrical and Computer Science\" AND INSTRUCTORalias0.NAME LIKE \"%Rhonda Lorraine Mccaffery%\" \nAnswer: ", "f0e8bbd6e9d001208a4ef96b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Identify the attributes of courses that are most predictive of high enrollment.\nPredicted SQL: SELECT COURSE.COURSE_ID, COURSE.NAME, COURSE.DEPARTMENT, COURSE.NUMBER, COURSE.CREDITS, COURSE.DESCRIPTION, COURSE.NUM_ENROLLED, COURSE.NUM_REVIEWS, COURSE.CLARITY_SCORE, COURSE.EASINESS_SCORE, COURSE.HELPFULNESS_SCORE FROM COURSE ORDER BY COURSE.NUM_ENROLLED DESC\nAnswer: ", "5e0d437b4bbfc405845d2c55": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who in the past has taught LATIN 802?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"LATIN\" AND COURSEalias0.NUMBER = 802 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "788defca2112b3ad441c7f46": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about common themes in student reviews of computer science courses.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer science%\"\nAnswer: ", "8db95ae65585309bb9023bff": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you tell me software development courses that had smaller workloads than the average workload of EECS 481?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" AND PROGRAM_COURSEalias0.WORKLOAD < (SELECT AVG(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 481 ) \nAnswer: ", "2c78823287c9b2bfd4f42fbd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the total number of 1-credit upper-level CS courses.\nPredicted SQL: SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.CREDITS = \"1\" AND PROGRAM_COURSEalias0.CATEGORY LIKE \"ULCS\" \nAnswer: ", "87449603c8b8a35b4cec8b7a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the number of unique email addresses among the students?\nPredicted SQL: SELECT COUNT(DISTINCT student.email) FROM student\nAnswer: ", "0b73e8bb0a452b25f2e391a3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What methods do universities use to measure the effectiveness of their teaching methods?\nPredicted SQL: This question is not directly related to the provided tables and columns. It may require additional information or a different database schema to answer accurately.\nAnswer: ", "6211884bbf5bb2b4bfca7568": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses were necessary to declare a major in MATH?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT LIKE \"%MATH%\" AND PROGRAM_COURSEalias0.CATEGORY LIKE \"PreMajor\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "399b50ab29aeab52a500becd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many credits does student 10 have now?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_CREDIT FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 10 \nAnswer: ", "da3a5ce607788c120e867184": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Track the change in students' total gpa over semesters.\nPredicted SQL: This question would require a more complex query that involves joining multiple tables and aggregating data over semesters. Here is a possible SQL query to track the change in students' total GPA over semesters:\n\nSELECT STUDENT.student_id, SEMESTER.semester, STUDENT.total_gpa\nFROM STUDENT\nJOIN SEMESTER ON STUDENT.admit_term = SEMESTER.semester_id\nJOIN STUDENT_RECORD ON STUDENT.student_id = STUDENT_RECORD.student_id\nWHERE STUDENT.student_id = [student_id]\nORDER BY SEMESTER.year, SEMESTER.semester\nAnswer: ", "bb8846783606d847b5eb1416": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was the instructor for NRE 558 in Winter 2010?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"NRE\" AND COURSEalias0.NUMBER = 558 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2010\nAnswer: ", "139910f470c1b0d56dd04473": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of 100-level EECS courses available in the Fall 2016 or Winter 2017 term.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 100 + 100 AND COURSEalias0.NUMBER >= 100 AND ((SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016) OR (SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2017)) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "ed2d9a6806aa622f8abb988f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common final exam date for fall semester courses?\nPredicted SQL: SELECT COURSE_OFFERINGalias0.FINAL_EXAM_DATE, COUNT(*) AS NUM_COURSES FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.SEMESTER = \"FA\" GROUP BY COURSE_OFFERINGalias0.FINAL_EXAM_DATE ORDER BY NUM_COURSES DESC LIMIT 1\nAnswer: ", "55240e34a44d2a692708b3f9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the name of the MATH 216 course.\nPredicted SQL: SELECT NAME FROM COURSE WHERE DEPARTMENT = \"MATH\" AND NUMBER = 216\nAnswer: ", "176e92ce3daee4f32cb1c612": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List EECS courses for Winter 2016.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "3fa8165a2a703dff31ddbb52": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which instructors offer courses that fulfill the Core requirement?\nPredicted SQL: SELECT DISTINCT INSTRUCTOR.NAME FROM INSTRUCTOR \nINNER JOIN OFFERING_INSTRUCTOR ON INSTRUCTOR.INSTRUCTOR_ID = OFFERING_INSTRUCTOR.INSTRUCTOR_ID \nINNER JOIN COURSE_OFFERING ON OFFERING_INSTRUCTOR.OFFERING_ID = COURSE_OFFERING.OFFERING_ID \nINNER JOIN PROGRAM_COURSE ON PROGRAM_COURSE.COURSE_ID = COURSE_OFFERING.COURSE_ID \nWHERE PROGRAM_COURSE.CATEGORY LIKE \"%Core%\"\nAnswer: ", "6514993c0d23619f520e5de8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Perspectives on Bilingualism, who were the teachers that had ever taught it?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE \"%Perspectives on Bilingualism%\" \nAnswer: ", "8905111f309fcba06937a2d9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Summarize a course's evaluation data, including clarity, easiness, and helpfulness scores.\nPredicted SQL: SELECT COURSEalias0.NAME, COURSEalias0.CLARITY_SCORE, COURSEalias0.EASINESS_SCORE, COURSEalias0.HELPFULNESS_SCORE FROM COURSE AS COURSEalias0\nAnswer: ", "1f2a3ca3c5a2da3928126429": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did EECS 493 and 494 in Winter 2013 end by 17:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.END_TIME <= \"17:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND (COURSEalias0.NUMBER = 493 OR COURSEalias0.NUMBER = 494) AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2013 \nAnswer: ", "affcd035a8ff99967bd56d1a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me if NAVARCH 483 was offered during any past Spring-Summer semesters?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"NAVARCH\" AND COURSEalias0.NUMBER = 483 AND SEMESTERalias0.SEMESTER = \"SS\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "a5abeb064c80601adf74d1a8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses that satisfy the Other requirement and are offered in Fall or Winter 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nWHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%Other%\" \nAND SEMESTERalias0.SEMESTER IN ( \"FA\" , \"WN\" ) \nAND SEMESTERalias0.YEAR = 2016\nAnswer: ", "98f34a8f81a9f5fc7466777c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average number of room counts for the courses offered by the eecs department?\nPredicted SQL: SELECT AVG(course_offering.class_address) FROM course_offering JOIN course ON course_offering.course_id = course.course_id WHERE course.department = \"EECS\"\nAnswer: ", "4d6241f3de5b24cac88a7b5b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did EECS 442 and 482 in Winter 2015 end by 17:00?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.END_TIME <= \"17:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND ((COURSEalias0.NUMBER = 442 OR COURSEalias0.NUMBER = 482) AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2015) \nAnswer: ", "346c693b08d7243830216f03": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course completed by student 9 has the highest workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE STUDENT_RECORDalias1.STUDENT_ID = 9 ) AND STUDENT_RECORDalias0.STUDENT_ID = 9 \nAnswer: ", "10ff4c2e83497e0150a34e8e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses have allowed pass or fail?\nPredicted SQL: SELECT COUNT(DISTINCT COURSEalias0.COURSE_ID) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.ADVISORY_REQUIREMENT LIKE \"%pass or fail%\" OR COURSEalias0.ENFORCED_REQUIREMENT LIKE \"%pass or fail%\"\nAnswer: ", "6169bbe7428b9cbc4437c324": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the last names of students who have received financial aid and have a 'b-' grade in at least one eecs course.\nPredicted SQL: SELECT DISTINCT STUDENT.LASTNAME \nFROM STUDENT \nJOIN STUDENT_RECORD ON STUDENT.STUDENT_ID = STUDENT_RECORD.STUDENT_ID \nJOIN COURSE ON STUDENT_RECORD.COURSE_ID = COURSE.COURSE_ID \nWHERE STUDENT.RECEIVED_FINANCIAL_AID = TRUE \nAND STUDENT_RECORD.GRADE = 'B-' \nAND COURSE.DEPARTMENT = 'EECS'\nAnswer: ", "472523d73c9784bd8a63e8a3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common first name among students with the mother's maiden name robinson?\nPredicted SQL: SELECT FIRSTNAME FROM STUDENT WHERE LASTNAME = \"robinson\" GROUP BY FIRSTNAME ORDER BY COUNT(*) DESC LIMIT 1\nAnswer: ", "3156c7d5de3a7d07a68b89ed": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In EECS, which courses had the highest workload for student 1?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias1.STUDENT_ID = 1 ) AND COURSEalias0.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias0.STUDENT_ID = 1 \nAnswer: ", "aa1d6179b81d58cfcb562c86": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which department offers the most in-person courses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.CLASS_ADDRESS IS NOT NULL GROUP BY COURSEalias0.DEPARTMENT ORDER BY COUNT(COURSE_OFFERINGalias0.OFFERING_ID) DESC LIMIT 1\nAnswer: ", "051376576d4f9f74d7fc35a1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many semesters did not use dollars as their currency?\nPredicted SQL: SELECT DISTINCT COUNT(SEMESTERalias0.SEMESTER_ID) FROM SEMESTER AS SEMESTERalias0 WHERE SEMESTERalias0.SEMESTER NOT LIKE \"%dollars%\"\nAnswer: ", "527079e008a0d6497da9d3a5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Provide infographics that explain complex concepts in any algorithms courses.\nPredicted SQL: This question cannot be answered directly with the given tables. Additional information on the content of the algorithms courses and the availability of infographics would be needed to provide a specific SQL query.\nAnswer: ", "bcd4c2672c174a3ce028bc63": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In what ways do universities adapt to changing educational demands?\nPredicted SQL: This question cannot be answered directly with the provided tables. It would require additional information on university policies, strategies, and practices related to adapting to changing educational demands.\nAnswer: ", "74a904b92d78ad47a6a88c0f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What role do alumni networks play in supporting current students?\nPredicted SQL: This question cannot be answered directly with the provided tables. It would require additional tables or information related to alumni networks and their interactions with current students.\nAnswer: ", "ffc2d2905da41fa502d67ed6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the start times for MILSCI 402 in Winter 2015?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.START_TIME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"MILSCI\" AND COURSEalias0.NUMBER = 402 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2015 \nAnswer: ", "450c345147a9c7a37e885b0d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of departments that include Biomatr Prosthodont.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Biomatr Prosthodont%\" \nAnswer: ", "ba0041f346bd1dfda62a4e38": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What benefits does interdisciplinary research offer?\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "3b74426dd4d2c247bf904948": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were there classes on Fridays for 646 with instructor Elizabeth L Sears?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NUMBER = 646 AND COURSE_OFFERINGalias0.FRIDAY = \"Y\" AND INSTRUCTORalias0.NAME LIKE \"%Elizabeth L Sears%\" \nAnswer: ", "4641ac734924762287e3eb08": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was the last instructor for EARTH 159 before 2016?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.SEMESTER = ( SELECT MAX( SEMESTERalias0.SEMESTER_ID ) FROM SEMESTER AS SEMESTERalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias1 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias1.SEMESTER INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EARTH\" AND COURSEalias1.NUMBER = 159 AND SEMESTERalias0.YEAR < 2016 ) AND COURSEalias0.DEPARTMENT = \"EARTH\" AND COURSEalias0.NUMBER = 159 \nAnswer: ", "31b9df7ea82de85b780238da": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Categorize the area field in the area table into broader academic disciplines.\nPredicted SQL: SELECT DISTINCT AREA, \nCASE \n    WHEN AREA LIKE \"%Science%\" THEN \"Science\"\n    WHEN AREA LIKE \"%Math%\" THEN \"Mathematics\"\n    WHEN AREA LIKE \"%Engineering%\" THEN \"Engineering\"\n    WHEN AREA LIKE \"%Humanities%\" THEN \"Humanities\"\n    WHEN AREA LIKE \"%Social%\" THEN \"Social Sciences\"\n    ELSE \"Other\"\nEND AS Discipline\nFROM AREA\nAnswer: ", "a216ae92f41846726f086761": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Show the average gpa of students under dr. martinez's advisement.\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) \nFROM STUDENT AS STUDENTalias0 \nWHERE STUDENTalias0.PROGRAM_ID = (SELECT DISTINCT PROGRAM_ID \n                                   FROM INSTRUCTOR \n                                   WHERE NAME = 'Dr. Martinez')\nAnswer: ", "76f5470feb9f0d7c0d32adce": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the advisory comments for enrolling in NAVSCI 402?\nPredicted SQL: SELECT DISTINCT COURSEalias0.ADVISORY_REQUIREMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"NAVSCI\" AND COURSEalias0.NUMBER = 402 \nAnswer: ", "b636cc06acc2d46e9481824e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In the Winter 2000 semester, did LHC 510 offer section 688?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"LHC\" AND COURSEalias0.NUMBER = 510 AND COURSE_OFFERINGalias0.SECTION_NUMBER = 688 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2000 \nAnswer: ", "0d53beefa3bdfd1dd933682d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In what time did the DANCE 100 lectures start in Fall 2016?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.START_TIME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"DANCE\" AND COURSEalias0.NUMBER = 100 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016\nAnswer: ", "829970adf165562d8cefa1a3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common ship type among the courses?\nPredicted SQL: SELECT SHIP_TYPE, COUNT(SHIP_TYPE) AS SHIP_TYPE_COUNT\nFROM COURSE\nGROUP BY SHIP_TYPE\nORDER BY SHIP_TYPE_COUNT DESC\nLIMIT 1\nAnswer: ", "a1373c0171ce4cf89fd884b3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Navigate students to their examination halls during finals.\nPredicted SQL: SELECT STUDENT.lastname, STUDENT.firstname, COURSE_OFFERING.class_address \nFROM STUDENT \nINNER JOIN STUDENT_RECORD ON STUDENT.student_id = STUDENT_RECORD.student_id \nINNER JOIN COURSE_OFFERING ON STUDENT_RECORD.offering_id = COURSE_OFFERING.offering_id \nWHERE COURSE_OFFERING.has_final_exam = 1\nAnswer: ", "3bf2d0c43071179665d09404": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What challenges do undergraduates face when conducting research?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information or tables related to student challenges or research experiences would be needed to answer this question.\nAnswer: ", "fb858d7fbb39d7bc8bfd1d9c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which instructors offer courses that fulfill the Other requirement?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nWHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%Other%\" \nAnswer: ", "e1632bedaa1a79cf94436ba7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is SCAND 349 a prerequisite for SCAND 103?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , COURSE AS COURSEalias0 , COURSE AS COURSEalias1 WHERE COURSEalias0.DEPARTMENT = \"SCAND\" AND COURSEalias0.NUMBER = 349 AND COURSEalias1.DEPARTMENT = \"SCAND\" AND COURSEalias1.NUMBER = 103 AND ( ( COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) OR ( COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) ) \nAnswer: ", "b02976ef58739a8d49ed55c1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What was the number of PEDDENT 598 course offerings after 10:00 in Winter 2016?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"PEDDENT\" AND COURSEalias0.NUMBER = 598 AND COURSE_OFFERINGalias0.START_TIME > \"10:00\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "abe1e6eb133758d77b5a27dd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What support is available for students with chronic illnesses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION LIKE \"%support for students with chronic illnesses%\"\nAnswer: ", "ce7fb40461d81b9d4915507e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which department offers the most 'introductory' level courses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NUMBER = \"introductory\" GROUP BY COURSEalias0.DEPARTMENT ORDER BY COUNT(COURSEalias0.COURSE_ID) DESC LIMIT 1\nAnswer: ", "8f7e130c875475741a5d47eb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find the course descriptions for courses with a waitlist count greater than 20 in spring 2017.\nPredicted SQL: SELECT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSE_OFFERINGalias0.NUM_ENROLLED > 20 AND SEMESTERalias0.SEMESTER = \"SP\" AND SEMESTERalias0.YEAR = 2017 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER\nAnswer: ", "50e63007c604b93d2e6367b0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did 595 have classes on Fridays when instructor Frederick Fitzgerald Wherry taught it?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NUMBER = 595 AND COURSE_OFFERINGalias0.FRIDAY = \"Y\" AND INSTRUCTORalias0.NAME LIKE \"%Frederick Fitzgerald Wherry%\" \nAnswer: ", "03bd33a9f10bf9cb77187f09": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors with a bachelor's degree are in the computer hardware area?\nPredicted SQL: SELECT COUNT(DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID) FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" AND INSTRUCTORalias0.DEGREE = \"bachelor's degree\"\nAnswer: ", "1558910b56b9cb4401bc446b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the impact of studying abroad on cultural competency.\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "3801404d71bd51861da11cb7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In ARTDES 100, was there a lab when instructor Vincent E Castagnacci taught it?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"ARTDES\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 100 AND INSTRUCTORalias0.NAME LIKE \"%Vincent E Castagnacci%\" \nAnswer: ", "cb0cfcd8c32dec3fe1f0541d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are you aware if EECS 644 did include a project?\nPredicted SQL: SELECT HAS_PROJECTS FROM COURSE WHERE DEPARTMENT = \"EECS\" AND NUMBER = 644\nAnswer: ", "fb8125761c6474a197b4b191": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What measures do universities take to address the needs of commuter students?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables or information related to university measures for commuter students would be needed to provide a comprehensive answer.\nAnswer: ", "5a3a7fa3d67795a27e8da884": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What prerequisites were required to be passed to take EECS 270?\nPredicted SQL: SELECT DISTINCT COURSEalias1.DEPARTMENT , COURSEalias1.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 270 \nAnswer: ", "a987c8436c440241e7a8e978": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List courses with final exams in december in winter 2016.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.HAS_FINAL_EXAM = 1 AND COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016 AND MONTH(COURSE_OFFERINGalias0.END_TIME) = 12\nAnswer: ", "9bdffbbfca49ade14adc9962": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What impact do study groups have on academic performance?\nPredicted SQL: This question cannot be directly answered with the provided tables. Additional information on study groups and academic performance would be needed in order to formulate an SQL query to answer this question.\nAnswer: ", "9f12c6afce7593073b0e9b19": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What role does academic freedom play in higher education?\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "0faa32aff85d9a41024e6d56": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the list of upper-level CS courses for the Fall 2016 semester?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "eac2f7a1e9bf9795648b912d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Winter 2016, which EECS courses were prerequisites for most others?\nPredicted SQL: SELECT COURSEalias0.DEPARTMENT, COURSEalias0.NUMBER, COUNT(COURSE_PREREQUISITEalias0.PRE_COURSE_ID) AS NUM_PREREQUISITES\nFROM COURSE AS COURSEalias0\nJOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID\nJOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID\nJOIN SEMESTER AS SEMESTERalias0 ON COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID\nWHERE COURSEalias0.DEPARTMENT = \"EECS\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016\nGROUP BY COURSEalias0.DEPARTMENT, COURSEalias0.NUMBER\nORDER BY NUM_PREREQUISITES DESC\nAnswer: ", "0a162daaa41e76b860413120": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Count the number of instructors who taught ROMLANG 500 in Spring 2020.\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ROMLANG\" AND COURSEalias0.NUMBER = 500 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER = \"SP\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2020 \nAnswer: ", "bc4f128af054965a5a7b8b3a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What upper-level CS courses with 4 credits were available in Fall 2009?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 \nWHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nAND COURSEalias0.CREDITS = \"4\" \nAND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAND SEMESTERalias0.SEMESTER = \"FA\" \nAND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAND SEMESTERalias0.YEAR = 2009 \nAnswer: ", "ee79e81ab40db33e9e762d0f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In AOSS 171, was there a lab when instructor George W Kling taught it?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"AOSS\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 171 AND INSTRUCTORalias0.NAME LIKE \"%George W Kling%\" \nAnswer: ", "a813c69eb59b57357474c12f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In the past, who have taught UKRAINE 152?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"UKRAINE\" AND COURSEalias0.NUMBER = 152 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "7b40bc59ade1400287d60601": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you provide me with a list of sections in DANCE 100 for Fall 2016 that started after 08:00?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.SECTION_NUMBER FROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0, SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME > \"08:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"DANCE\" AND COURSEalias0.NUMBER = 100 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016\nAnswer: ", "cc99ec57223b503ec245150d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which department chairs are teaching courses with the highest credits in the latest semester?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME \nFROM INSTRUCTOR AS INSTRUCTORalias0 \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nINNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE COURSEalias0.CREDITS = (SELECT MAX(CREDITS) FROM COURSE) \nAND SEMESTERalias0.SEMESTER = (SELECT MAX(SEMESTER) FROM SEMESTER) \nAnswer: ", "ecbc5bbe83d473c202a199db": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Fall 2015, what upper-level CS courses began after 11:30?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME > \"11:30:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2015 \nAnswer: ", "27f29bf55a0c604e1af7c446": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Display the youngest student's name in each department.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.FIRSTNAME , STUDENTalias0.LASTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = (SELECT MIN(STUDENTalias1.STUDENT_ID) FROM STUDENT AS STUDENTalias1) GROUP BY STUDENTalias0.DEPARTMENT\nAnswer: ", "2eecdf2d797b511a23c9904c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What Discrete Event Systems courses did not require prerequisites?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias1.COURSE_ID NOT IN ( SELECT COURSE_PREREQUISITEalias0.PRE_COURSE_ID FROM COURSE AS COURSEalias0, COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) AND COURSEalias1.NAME LIKE \"%Discrete Event Systems%\" \nAnswer: ", "e05534bde0def8fd99254974": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many online courses offer more than 2 credits?\nPredicted SQL: SELECT COUNT(DISTINCT COURSEalias0.COURSE_ID) FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.CREDITS > 2 AND COURSE_OFFERINGalias0.CLASS_ADDRESS = \"Online\"\nAnswer: ", "9e9058a43bc4ca71a07b1f81": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which course has instructors with the highest total publications?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.INSTRUCTOR_ID IN ( SELECT OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID FROM OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM AS PROGRAMalias0 ON PROGRAM_COURSEalias0.PROGRAM_ID = PROGRAMalias0.PROGRAM_ID INNER JOIN PROGRAM_REQUIREMENT AS PROGRAM_REQUIREMENTalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_REQUIREMENTalias0.PROGRAM_ID WHERE PROGRAM_REQUIREMENTalias0.CATEGORY = \"Publication\" ) ORDER BY INSTRUCTORalias0.NAME\nAnswer: ", "e3cf6ad700b201db285a2692": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Please list the courses that instructor Beth-ellen Pennell has taught previously before Spring-Summer 2012.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Beth-ellen Pennell%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR < 2012 \nAnswer: ", "e328bf0cd2711a00851a65f8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: I would like to know how many prerequisite courses for PHIL 427 have been taught to student 1.\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"PHIL\" AND COURSEalias0.NUMBER = 427 AND STUDENT_RECORDalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND STUDENT_RECORDalias0.STUDENT_ID = 1\nAnswer: ", "31b9763089ff11cf539c2795": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Visualize the distribution of grades in different courses.\nPredicted SQL: SELECT COURSE.NAME, STUDENT_RECORD.GRADE, COUNT(STUDENT_RECORD.GRADE) AS GRADE_COUNT\nFROM COURSE\nJOIN STUDENT_RECORD ON COURSE.COURSE_ID = STUDENT_RECORD.COURSE_ID\nGROUP BY COURSE.NAME, STUDENT_RECORD.GRADE\nAnswer: ", "aa629c40625ac587c14189bc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did instructor Elizabeth R Wingrove teach WOMENSTD 422 in Winter 2014?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON COURSE_OFFERINGalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID WHERE COURSEalias0.NAME = \"WOMENSTD\" AND COURSEalias0.NUMBER = 422 AND INSTRUCTORalias0.NAME LIKE \"%Elizabeth R Wingrove%\" AND SEMESTERalias0.SEMESTER = \"Winter\" AND SEMESTERalias0.YEAR = 2014 \nAnswer: ", "8dc6e6d48cf508544a6f5c78": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What's the number of EECS courses taught by more than 2 instructors?\nPredicted SQL: SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON COURSE_OFFERINGalias0.OFFERING_ID = OFFERING_INSTRUCTORalias0.OFFERING_ID GROUP BY COURSEalias0.COURSE_ID HAVING COUNT( DISTINCT OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID ) > 2 AND COURSEalias0.DEPARTMENT = \"EECS\"\nAnswer: ", "05ad63939beb1d26b6ebf442": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you provide information on whether instructor Casey Martin Schneider-mizell was the exclusive teacher for Electricity and Light Lab?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NAME LIKE \"%Electricity and Light Lab%\" AND INSTRUCTORalias0.NAME LIKE \"%Casey Martin Schneider-mizell%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "5946658904740bd09e0e1358": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Find visual aids for a 'software development' class focusing on user interface design.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.TEXTBOOK FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN COURSE AS COURSEalias0 ON COURSE_OFFERINGalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" AND COURSEalias0.NAME LIKE \"%user interface design%\" \nAnswer: ", "905a4365e90e349bd1a71b0b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses are there except the ones that the MOVESCI department offers?\nPredicted SQL: SELECT DISTINCT COUNT ( COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT <> \"MOVESCI\" \nAnswer: ", "428677428183f59bd9bc4b82": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is a list of courses that have had a waitlist count greater than 0 for more than two semesters?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME \nFROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE COURSE_OFFERINGalias0.NUM_ENROLLED < COURSE_OFFERINGalias0.WAITLIST_COUNT \nGROUP BY COURSEalias0.COURSE_ID \nHAVING COUNT(DISTINCT SEMESTERalias0.SEMESTER) > 2\nAnswer: ", "29c54cdc180504eebdc8f10e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What departments offer the most courses with a prerequisite waiver option?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID = COURSEalias0.COURSE_ID ) \nAnswer: ", "52090dee1b58262d9f1d51f6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students who have declared their majors have market shares more than 5 percent?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENTalias0.STUDENT_ID) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.DECLARE_MAJOR = 1 AND STUDENTalias0.MARKET_SHARE > 5\nAnswer: ", "e181732f7a046d82273ec829": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was STDABRD 368 available in Fall 2016?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"STDABRD\" AND COURSEalias0.NUMBER = 368 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "1dac525ee9a34c538f43db3a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For upper-level CS courses offered in Fall 2016, which ones did not meet on Fridays?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT, COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nJOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nJOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nJOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" \nAND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND SEMESTERalias0.SEMESTER = \"FA\" \nAND SEMESTERalias0.YEAR = 2016\nAnswer: ", "cfd2a82ab9086874f36c058b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What criteria do university rankings use to evaluate program quality?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information on university rankings and their criteria would be needed to formulate an SQL query.\nAnswer: ", "0cd1bd19d4d8957096024d52": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are you aware if EECS 990 did include a project?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_PROJECTS = \"Y\" AND COURSEalias0.NUMBER = 990 \nAnswer: ", "e5761829ffb768a88ac5d79a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common aircraft among the courses that start at 14:30?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0, COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.START_TIME = \"14:30:00\" AND COURSEalias0.DESCRIPTION LIKE \"%aircraft%\" \nAnswer: ", "7517c64e4d42c75da22024a8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What NRE courses in Winter 2016 were not held on Fridays?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSEalias0.DEPARTMENT = \"NRE\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "0a8366271492bd4752cc64db": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the highest total gpa among students advised by ms. thompson?\nPredicted SQL: SELECT MAX(STUDENTalias0.TOTAL_GPA) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.PROGRAM_ID IN (SELECT PROGRAM_ID FROM PROGRAM WHERE NAME = \"ms. thompson\")\nAnswer: ", "e87798da702a4cbd170c8c6b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the instructors' websites?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME, INSTRUCTORalias0.UNIQNAME FROM INSTRUCTOR AS INSTRUCTORalias0\nAnswer: ", "943ee76f90e946d9bcaba5b6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me the names of instructors teaching courses that allow pass or fail in winter 2016?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.ALLOW_AUDIT = 1 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "64d31966036d9f81d5d09ff6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What DANCE courses in Winter 2016 were not held on Fridays?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSEalias0.DEPARTMENT = \"DANCE\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "74937dd655735d461f6d9b39": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were there any ELI 320 lectures that were not on Mondays in Fall 2016?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.MONDAY = \"N\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ELI\" AND COURSEalias0.NUMBER = 320 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "cd198066d1df0fb039bb4612": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What course was the one with the least workload in the PreMajor category?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.CATEGORY LIKE \"%PreMajor%\" ) \nAnswer: ", "4c533fa355a330e5f38b983b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Among EECS 485 and EECS 529, which had a smaller workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE ( COURSEalias0.NUMBER = 485 OR COURSEalias0.NUMBER = 529 ) AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 INNER JOIN COURSE AS COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE ( COURSEalias1.NUMBER = 485 OR COURSEalias1.NUMBER = 529 ) AND COURSEalias1.DEPARTMENT = \"EECS\" ) \nAnswer: ", "7ef932e73cc07120424d928c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the benefits of having a diverse faculty.\nPredicted SQL: This question cannot be answered directly with the provided tables. It would require additional information on the faculty's diversity, which is not available in the current database schema.\nAnswer: ", "4e5afb7980050146059b69e7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For EECS 388, what did student 4 take as prerequisites?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 388 AND STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND STUDENT_RECORDalias0.STUDENT_ID = 4 \nAnswer: ", "571b06f3614687b52f7a02c4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What Design for Mfg courses did not require prerequisites?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Design for Mfg%\" AND COURSEalias0.COURSE_ID NOT IN (SELECT COURSE_PREREQUISITEalias0.COURSE_ID FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0) \nAnswer: ", "153e25f915fb25828d9bb622": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the description of ACABS 860.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"ACABS\" AND COURSEalias0.NUMBER = 860 \nAnswer: ", "c1415bc13b0e8bb8e3843650": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the number of students born in each year currently enrolled in the 'computer hardware' area?\nPredicted SQL: SELECT STUDENTalias0.YEAR_OF_BIRTH, COUNT(DISTINCT STUDENTalias0.STUDENT_ID) FROM STUDENT AS STUDENTalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENTalias0.STUDENT_ID = STUDENT_RECORDalias0.STUDENT_ID INNER JOIN AREA AS AREAalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" GROUP BY STUDENTalias0.YEAR_OF_BIRTH\nAnswer: ", "69bb09b991a84e07d1bb3771": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For MO 314 in Winter 2016, what was the number of course offerings available that began after 10:00?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.COURSE_ID = \"MO 314\" AND SEMESTERalias0.SEMESTER = \"WI\" AND SEMESTERalias0.YEAR = 2016 AND COURSE_OFFERINGalias0.START_TIME > \"10:00\" \nAnswer: ", "9c1080c5fe1f8f330ca2756e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you confirm if instructor Carol A Fierke's courses always meet on Friday?\nPredicted SQL: SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND INSTRUCTORalias0.NAME LIKE \"%Carol A Fierke%\" \nAnswer: ", "3447233b232754abdc9ff32b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are there any instructors in the computer hardware area whose addresses contain the word 'lab'?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computer hardware%\" AND INSTRUCTORalias0.CLASS_ADDRESS LIKE \"%lab%\" \nAnswer: ", "270ea60f0ee4aa30774b641b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which remote course offerings start after 14:00:00?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.COURSE_ID FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.START_TIME > \"14:00:00\" AND COURSE_OFFERINGalias0.CLASS_ADDRESS = \"Remote\" \nAnswer: ", "15fbfd716494512aa133a2d5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: During Fall semesters, what ITALIAN courses were offered?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%ITALIAN%\" AND SEMESTERalias0.SEMESTER = \"FA\" \nAnswer: ", "03f629ad70cdbfbd367413c5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In what ways do universities integrate sustainability into their operations?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information on university operations and sustainability integration would be needed to formulate an appropriate SQL query.\nAnswer: ", "17a91325a03a827766e580d3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of 400-level EECS courses available in the Fall 2016 or Winter 2017 term.\nPredicted SQL: SELECT course.name\nFROM course\nJOIN course_offering ON course.course_id = course_offering.course_id\nJOIN semester ON course_offering.semester = semester.semester_id\nWHERE course.department = \"EECS\" \nAND course.number >= 400 \nAND course.number < 500 \nAND (semester.semester = \"FA\" AND semester.year = 2016) \nOR (semester.semester = \"WN\" AND semester.year = 2017)\nAnswer: ", "e62fe2732cc55bfbb9254347": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses use textbooks from penguin books?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSE_OFFERINGalias0.TEXTBOOK LIKE \"%penguin books%\" \nAnswer: ", "56561ec3cc40a097e47e0fac": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the PreMajor courses offered in Fall 2015?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2015 \nAnswer: ", "1338f651519cd775736007b0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What role do academic advisors play in student success?\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "d48b395f19a096d99bc0a9cf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the names of the undergraduate students with market shares less than the average?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.FIRSTNAME, STUDENTalias0.LASTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.DEGREE = \"Undergraduate\" AND STUDENTalias0.TOTAL_CREDIT < (SELECT AVG(TOTAL_CREDIT) FROM STUDENT WHERE DEGREE = \"Undergraduate\") \nAnswer: ", "f3b956e6c4d80189736453d8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average volume of the students with a total gpa lower than 3.5?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_GPA < 3.5\nAnswer: ", "9ac3b59d42bf01800ad80ed5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the instructors for the courses on Third Year Japanese I in Fall 2013.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.NAME LIKE \"%Third Year Japanese I%\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2013\nAnswer: ", "58d6513302e7ab071c462310": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was RCHUMS 217 section 313 being offered in Winter 2019 semester?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.SECTION_NUMBER = 313 AND COURSEalias0.DEPARTMENT = \"RCHUMS\" AND COURSEalias0.NUMBER = 217 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2019 \nAnswer: ", "6bb778f3f304c6042bb1a12e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the email address of a student named jane johnson?\nPredicted SQL: SELECT STUDENTalias0.EMAIL FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.FIRSTNAME = \"jane\" AND STUDENTalias0.LASTNAME = \"johnson\"\nAnswer: ", "e774e7ac097342ec4e4c40dd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the courses held on Monday that have office hours starting at 14:30:00?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.START_TIME = \"14:30:00\" AND COURSE_OFFERINGalias0.MONDAY = \"Y\"\nAnswer: ", "e0a2891c8430ca578f5c5b89": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the EECS courses available in Winter 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "9effce279dc55f23c75dd204": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the passwords of the students who took more than 100 credits?\nPredicted SQL: This question cannot be answered with the provided tables as there is no column for passwords in the student table.\nAnswer: ", "2f7714034b27800b34f40eef": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which teaching methods work best for large lecture courses?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.HAS_DISCUSSION, COURSEalias0.HAS_LAB, COURSEalias0.HAS_PROJECTS, COURSEalias0.HAS_EXAMS FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NUM_ENROLLED > 100\nAnswer: ", "bcfb44bfdbf95e0491ea0ff0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Point out which Seminar in Advanced Economic Theory courses offered 3 credits.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Seminar in Advanced Economic Theory%\" AND COURSEalias0.CREDITS = \"3\" \nAnswer: ", "cd795001b545dae6921de715": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students involved in athletics are enrolled in any eecs courses?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENT.student_id) \nFROM STUDENT \nWHERE STUDENT.program_id IN \n(SELECT PROGRAM.program_id \nFROM PROGRAM \nWHERE PROGRAM.name = \"Athletics\") \nAND STUDENT.program_id IN \n(SELECT PROGRAM.program_id \nFROM PROGRAM \nWHERE PROGRAM.college = \"EECS\")\nAnswer: ", "97fb5a4cbe0b5a7d8dcfd2de": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Currently, what is the GPA of student 1?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_GPA FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUDENT_ID = 1 \nAnswer: ", "807c8ba9b3f33fcfac382354": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Were ES 629 and ES 395 in prerequisite relations?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.DEPARTMENT = \"ES\" AND COURSEalias0.NUMBER = 395 AND COURSEalias1.DEPARTMENT = \"ES\" AND COURSEalias1.NUMBER = 629 AND ( ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) OR ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) ) \nAnswer: ", "df8b4ecf3057b6b6f45535a8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the starting time of the office hours for aoss 586?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.START_TIME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"AOSS\" AND COURSEalias0.NUMBER = 586\nAnswer: ", "e97be143ba91eab046a6a3d6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List the best-selling textbooks along with their areas.\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.TEXTBOOK, AREAalias0.AREA FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID ORDER BY COURSE_OFFERINGalias0.NUM_ENROLLED DESC\nAnswer: ", "03ce421e30054b4f0c159b80": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the courses on hardware in Spring or Summer 2007?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%hardware%\" AND SEMESTERalias0.SEMESTER IN ( \"SP\" , \"SU\" , \"SS\" ) AND SEMESTERalias0.YEAR = 2007 \nAnswer: ", "9494fc6f6c88060638691582": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Remind a student about an approaching deadline for a major assignment in their 'software development' course.\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "adc17fdfc4d70cf73aeae236": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Why is university accreditation important?\nPredicted SQL: This question does not directly relate to the provided tables and cannot be answered with the given data.\nAnswer: ", "ebf7bf9c8b056d99c2167fb1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which was the least workload course to be taken in the MDE category?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 \nWHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%MDE%\" \nAND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAND PROGRAM_COURSEalias0.WORKLOAD = ( \n    SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) \n    FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 \n    WHERE PROGRAM_COURSEalias1.CATEGORY LIKE \"%MDE%\" \n) \nAnswer: ", "cc4dee624a3d60ca223a782b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is SCAND 349 a must for SCAND 103?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE_PREREQUISITE WHERE COURSE_ID = (SELECT COURSE_ID FROM COURSE WHERE DEPARTMENT = \"SCAND\" AND NUMBER = 103) AND PRE_COURSE_ID = (SELECT COURSE_ID FROM COURSE WHERE DEPARTMENT = \"SCAND\" AND NUMBER = 349)\nAnswer: ", "41364c4be27b99e1018bfdfb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Retrieve recent news about student achievements in the school.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "51edb6644de3b695428146d1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Show the start dates for courses with the highest enrollment in winter 2016.\nPredicted SQL: SELECT COURSE_OFFERINGalias0.START_TIME FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.NUM_ENROLLED = (SELECT MAX(COURSE_OFFERINGalias1.NUM_ENROLLED) FROM COURSE_OFFERING AS COURSE_OFFERINGalias1 , SEMESTER AS SEMESTERalias1 WHERE SEMESTERalias1.SEMESTER = \"WN\" AND SEMESTERalias1.SEMESTER_ID = COURSE_OFFERINGalias1.SEMESTER AND SEMESTERalias1.YEAR = 2016) AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016\nAnswer: ", "39b6e31a5b7a6e94bf8aa11c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Before 12:00, were there any classes for CDB 450?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME < \"12:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"CDB\" AND COURSEalias0.NUMBER = 450 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "8b4a4c59b0387742f509782a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you give me the course number of the Dance Laboratory classes?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Dance Laboratory%\" \nAnswer: ", "210afbd956c5ebdac25031de": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Evaluate student reactions to recent changes in eecs lab facilities.\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables or columns related to student reactions to changes in lab facilities would be needed to evaluate student reactions to recent changes in EECS lab facilities.\nAnswer: ", "649561264e90e0a160493c38": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the operating systems of the courses offered on sunday.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.SUNDAY = \"Y\"\nAnswer: ", "6e9dcfab9ea1e7b499bf4df9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you list the courses student 10 has taken, specifically those in software development?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%software development%\" AND STUDENT_RECORDalias0.STUDENT_ID = 10 \nAnswer: ", "66aaaaea004166f9ac6d5839": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Suggest summer programs for students interested in software development.\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID INNER JOIN COURSE AS COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE AREAalias0.AREA LIKE \"%software%\" AND SEMESTERalias0.SEMESTER = \"SU\" \nAnswer: ", "a83f153b189ed80e962052c1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which class has the highest capacity?\nPredicted SQL: SELECT COURSE_OFFERING.OFFERING_ID, COURSE_OFFERING.COURSE_ID, COURSE.NAME, COURSE_OFFERING.SEMESTER, COURSE_OFFERING.SECTION_NUMBER, COURSE.NUM_ENROLLED\nFROM COURSE_OFFERING\nJOIN COURSE ON COURSE_OFFERING.COURSE_ID = COURSE.COURSE_ID\nWHERE COURSE.NUM_ENROLLED = (SELECT MAX(NUM_ENROLLED) FROM COURSE)\nAnswer: ", "5432e2856e975080f447fea0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses have a physician named andy?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Andy%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "56e0044690adfe9e6d70291f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many times did instructor Vincent A Mountain conduct 461 courses?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NUMBER = 461 AND INSTRUCTORalias0.NAME LIKE \"%Vincent A Mountain%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "5d65a1a93e9adb06d69cd69c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: By whom were the hardware courses taught?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN AREA AS AREAalias0 ON COURSE_OFFERINGalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%hardware%\" \nAnswer: ", "38bcfdb693e686f4c57b5d02": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Winter 2014, what upper-level CS courses began after 01:00?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME >= \"13:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2014\nAnswer: ", "0cc68c8ded1f3f237343ed68": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Kindly inform me about the courses that instructor Cagatay Kutluhan taught.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Cagatay Kutluhan%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "dcee681455dd31616e3751dc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many CMBIOL courses were available for the Fall 2016 semester?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"CMBIOL\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "7f1df13b449eeee4916dacbe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What instructors were assigned to teach Optical Waves in Crystals courses in Fall 2009?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NAME LIKE \"%Optical Waves in Crystals%\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2009 \nAnswer: ", "a5b47cbca8021efcdce5f96f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses held on monday are conducted in-person?\nPredicted SQL: SELECT COUNT( * ) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.MONDAY = \"Y\" AND COURSE_OFFERINGalias0.CLASS_ADDRESS IS NOT NULL\nAnswer: ", "5063e9d1431bf46eb740a95d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the date of birth of the student with the first name michael and the last name marshall?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "23ab53a66b083646ded37c3f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me a list of AEROSP courses in Winter 2016 that didn't meet on Fridays.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSEalias0.DEPARTMENT = \"AEROSP\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "4ecf75ad599785e611ae1537": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How does the cost of tuition affect access to higher education?\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: ", "247bf40d57571980f0a7a8ab": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Cluster courses based on similarity in their descriptions within the eecs department.\nPredicted SQL: SELECT DISTINCT C1.NAME, C2.NAME\nFROM COURSE C1, COURSE C2\nWHERE C1.DEPARTMENT = \"EECS\" AND C2.DEPARTMENT = \"EECS\" AND C1.COURSE_ID <> C2.COURSE_ID AND SIMILARITY(C1.DESCRIPTION, C2.DESCRIPTION) > 0.8\nAnswer: ", "3986e2c9c41da5f8e37114fe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses are eligible for AP/IB credit waivers and have 4 credits since 2019?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%AP/IB%\" AND COURSEalias0.CREDITS = \"4\" AND COURSEalias0.NUM_ENROLLED >= 2019\nAnswer: ", "c405ad2bcd796fc3c119236b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses waived with AP or IB credit have been offered on tuesday and thursday since spring 2010?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , STUDENT_RECORD AS STUDENT_RECORDalias0 , SEMESTER AS SEMESTERalias0 WHERE STUDENT_RECORDalias0.TRANSFER_SOURCE IN (\"AP\",\"IB\") AND COURSE_OFFERINGalias0.TUESDAY = \"Y\" AND COURSE_OFFERINGalias0.THURSDAY = \"Y\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID AND STUDENT_RECORDalias0.SEMESTER = SEMESTERalias0.SEMESTER_ID AND SEMESTERalias0.YEAR >= 2010 AND SEMESTERalias0.SEMESTER IN (\"SP\") \nAnswer: ", "bebed003119a2fc120912307": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was DANCE 103 section 496 being offered in Fall 2017 semester?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.SECTION_NUMBER = 496 AND COURSEalias0.DEPARTMENT = \"DANCE\" AND COURSEalias0.NUMBER = 103 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2017 \nAnswer: ", "38966760be6a203ea98b2106": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students are from new zealand?\nPredicted SQL: SELECT COUNT(*) FROM STUDENT WHERE LOWER(STUDENT.COUNTRY) = 'new zealand'\nAnswer: ", "b9e6f4c31d59843b4360c95e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many instructors have minimum humidity over 20 percent?\nPredicted SQL: SELECT COUNT(DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID) FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME IN (SELECT INSTRUCTORalias1.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias1 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias1.INSTRUCTOR_ID WHERE COURSEalias0.DESCRIPTION LIKE \"%humidity%\" AND CAST(COURSEalias0.DESCRIPTION AS INTEGER) > 20)\nAnswer: ", "69467a62782e37b09d74662a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the life expectancies of the students who took more than 150 credits in ascending order?\nPredicted SQL: SELECT DISTINCT STUDENTalias0.TOTAL_GPA FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_CREDIT > 150 ORDER BY STUDENTalias0.TOTAL_CREDIT ASC\nAnswer: ", "e8d5d6d733f47b858af573b9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me a list of courses that taught computing infrastructure.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%computing infrastructure%\" \nAnswer: ", "cd3b8df9ec95bc640b81a718": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For RESTORA 868 in Winter 2016, what was the number of course offerings available that began after 10:00?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"RESTORA\" AND COURSEalias0.NUMBER = 868 AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016 AND COURSE_OFFERINGalias0.START_TIME > '10:00'\nAnswer: ", "ca54f82b9aa933abb8045153": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you provide me with a list of EECS courses at the 400-level that do not have labs?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_LAB = \"N\" AND COURSEalias0.NUMBER < 400 + 100 AND COURSEalias0.NUMBER >= 400 \nAnswer: ", "948babc069b538ebe31406b9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you tell me the phone numbers of instructors who teach courses with no final exams?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.PHONE_NUMBER FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID WHERE COURSE_OFFERINGalias0.HAS_FINAL_EXAM = 0\nAnswer: ", "860ded64a5e8f18047d9a9ad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses were offered in Fall 2016 across all departments?\nPredicted SQL: SELECT COUNT(DISTINCT course_id) \nFROM course_offering \nWHERE semester = (SELECT semester_id FROM semester WHERE semester = 'FA' AND year = 2016)\nAnswer: ", "bd11b05bc1ba8b28f1177298": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the course number for the Fossil Record and Evolution of Mammals class given in the past.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Fossil Record and Evolution of Mammals%\" \nAnswer: ", "5db50b1a756d24a88d8030f8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In EECS, which courses had the highest workload for student 9?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.WORKLOAD = (SELECT MAX(PROGRAM_COURSEalias1.WORKLOAD) FROM COURSE AS COURSEalias1 INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias1 ON STUDENT_RECORDalias1.COURSE_ID = COURSEalias1.COURSE_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias1 ON PROGRAM_COURSEalias1.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias1.STUDENT_ID = 9 ) AND COURSEalias0.DEPARTMENT = \"EECS\" AND STUDENT_RECORDalias0.STUDENT_ID = 9 \nAnswer: ", "952630110c084bf472377ef8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students with a total gpa higher than 3.4 own more than 4 horses?\nPredicted SQL: SELECT COUNT(*) FROM STUDENT WHERE TOTAL_GPA > 3.4 AND OWN_MORE_THAN_4_HORSES = TRUE\nAnswer: ", "bc0e748f08b8f642e527238f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me if EECS 792 in 2016 had classes only on Mondays and Wednesdays?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSE_OFFERINGalias0.MONDAY = \"Y\" AND COURSE_OFFERINGalias0.THURSDAY = \"N\" AND COURSE_OFFERINGalias0.TUESDAY = \"N\" AND COURSE_OFFERINGalias0.WEDNESDAY = \"Y\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 792 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "cad5c773585fb1b304dfb4bf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the prerequisites for EECS 280 and 483?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 \nWHERE ( COURSEalias1.NUMBER = 280 OR COURSEalias1.NUMBER = 483 ) \nAND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID \nAND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID \nAND COURSEalias1.DEPARTMENT = \"EECS\" \nAnswer: ", "e57a2bbedfcccd8eb84c0cf8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For Other courses, what is the average workload?\nPredicted SQL: SELECT AVG( PROGRAM_COURSEalias0.WORKLOAD ) FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%Other%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID\nAnswer: ", "eb5d2f2a696356087b06d4e8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me if ENGR 599 has been offered during the Summer term.\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ENGR\" AND COURSEalias0.NUMBER = 599 AND SEMESTERalias0.SEMESTER = \"SU\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nAnswer: ", "fe37cab5cc4e85678bcaf909": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Retrieve images of famous software developers.\nPredicted SQL: This question cannot be answered with the provided tables and columns.\nAnswer: ", "0b7aa1a76fff75f52e4ed591": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What impact does technology have on modern education?\nPredicted SQL: This question cannot be answered directly with the provided tables. It would require additional information or data related to the impact of technology on modern education.\nAnswer: ", "6d596e383de3b03a1edca970": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is there a lab for EECS 525?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 525 \nAnswer: ", "4f89cd84ecdb0f7ddfad6845": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did students have to complete PHARMSCI 519 before enrolling in PHARMSCI 565, or the opposite?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.DEPARTMENT = \"PHARMSCI\" AND COURSEalias0.NUMBER = 565 AND COURSEalias1.DEPARTMENT = \"PHARMSCI\" AND COURSEalias1.NUMBER = 519 AND ( ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) OR ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) ) \nAnswer: ", "b0c3d09fc784aa2be241a482": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you confirm if instructor Victor Rodriguez-pereira's courses always meet on Friday?\nPredicted SQL: SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND INSTRUCTORalias0.NAME LIKE \"%Victor Rodriguez-pereira%\" \nAnswer: ", "6c7d2d5a70e2f8f5b1f99546": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was the instructor who taught RCLANG 193 most recently before 2016?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nINNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID \nWHERE COURSE_OFFERINGalias0.SEMESTER = ( \n    SELECT MAX(SEMESTERalias0.SEMESTER_ID) \n    FROM SEMESTER AS SEMESTERalias0 \n    INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias1 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias1.SEMESTER \n    INNER JOIN COURSE AS COURSEalias1 ON COURSEalias1.COURSE_ID = COURSE_OFFERINGalias1.COURSE_ID \n    WHERE COURSEalias1.DEPARTMENT = \"RCLANG\" AND COURSEalias1.NUMBER = 193 AND SEMESTERalias0.YEAR < 2016 \n) \nAND COURSEalias0.DEPARTMENT = \"RCLANG\" AND COURSEalias0.NUMBER = 193\nAnswer: ", "5141971ced14b338313df0c0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Financial Economics, who were the teachers that had ever taught it?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSEalias0.NAME LIKE \"%Financial Economics%\" \nAnswer: ", "ea34a1ef4ac69566e20845d4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who is the instructor with a bachelor's degree who has taught the most courses?\nPredicted SQL: SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.DEGREE = \"bachelor's\" ORDER BY (SELECT COUNT(DISTINCT OFFERING_INSTRUCTORalias0.OFFERING_ID) FROM OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID) DESC LIMIT 1\nAnswer: ", "df85f415bcea959651dca85d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Translate the eecs department's event flyer into italian.\nPredicted SQL: I'm sorry, but the provided tables and foreign keys do not contain information about event flyers or translations.\nAnswer: ", "1275e24f89ef4d920a1b7432": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What challenges do students face in balancing academic and social life in college?\nPredicted SQL: This question cannot be answered directly with the provided database schema. It would require additional tables or columns related to student social life, challenges, or time management.\nAnswer: ", "5f6d580951899b7e67b62e5b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me if EECS 579 in 2016 had classes only on Mondays and Wednesdays?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSE_OFFERINGalias0.MONDAY = \"Y\" AND COURSE_OFFERINGalias0.THURSDAY = \"N\" AND COURSE_OFFERINGalias0.TUESDAY = \"N\" AND COURSE_OFFERINGalias0.WEDNESDAY = \"Y\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 579 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "c888df80a7b73b162fb1059d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many horses work for student alice brown?\nPredicted SQL: This question is not relevant to the provided tables and schema.\nAnswer: ", "be56c68cc956fb6a1fcf92b3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the instructors who taught courses that satisfy Core?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%Core%\" \nAnswer: ", "bad35a2a237349ab7ba52ace": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Name the upper-level CS courses that began after 14:00 in Winter 2016.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME >= \"14:00:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "a028030982a20a8b5a239816": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Can you confirm if the only teacher for Electricity and Light Lab was instructor Casey Martin Schneider-mizell?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.NAME LIKE \"%Electricity and Light Lab%\" AND INSTRUCTORalias0.NAME LIKE \"%Casey Martin Schneider-mizell%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID \nAnswer: ", "1fe1c94203fe8d0e2460b203": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you verify if ORALBIOL 853 was available in Fall 2016?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"ORALBIOL\" AND COURSEalias0.NUMBER = 853 AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "c58e7d2e1a56f6c35b057712": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What are the recent breakthroughs in computer hardware, particularly in quantum computing?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID WHERE AREAalias0.AREA LIKE \"%quantum computing%\" AND COURSEalias0.DESCRIPTION LIKE \"%breakthroughs%\" \nAnswer: ", "dd1909afccadbbd14f640629": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List EECS courses for Fall 2016.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "e8f4a8dfdaa833eae943158a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the instructors for the courses on Intermediate Turkish, II in Winter 2009.\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.NAME LIKE \"%Intermediate Turkish, II%\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2009\nAnswer: ", "23c2fbc9bf42812b73a398dd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many 'introductory' level courses are offered in the dance department?\nPredicted SQL: SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"DANCE\" AND COURSEalias0.NUMBER < 200 \nAnswer: ", "b6b52dc2ad93ec3952517124": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What was the name of CCS 597 course again?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"CCS\" AND COURSEalias0.NUMBER = 597 \nAnswer: ", "25198fc644b4633a1b2e4dd4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the prerequisite waiver option for greekmod 499?\nPredicted SQL: SELECT DISTINCT COURSEalias0.ENFORCED_REQUIREMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"GREEKMOD\" AND COURSEalias0.NUMBER = 499\nAnswer: ", "2dcaabbffe78b022a8175eda": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Are there any courses that start on weekends?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID WHERE COURSE_OFFERINGalias0.SATURDAY = \"Y\" OR COURSE_OFFERINGalias0.SUNDAY = \"Y\"\nAnswer: ", "425a80e64b4d59eb3b0c06c0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What initiatives encourage interest in STEM fields?\nPredicted SQL: SELECT DISTINCT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.INTRODUCTION LIKE \"%STEM%\"\nAnswer: ", "472bed31f161d050471f3264": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Search for recent academic articles on new theories in intelligent systems.\nPredicted SQL: SELECT * FROM COURSE WHERE DESCRIPTION LIKE \"%intelligent systems%\" \nAnswer: ", "fea18d91eb7c897c38d5880b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the EECS courses available in Spring 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND SEMESTERalias0.SEMESTER = \"SP\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "54bebc7d48481acde8de206e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me if EECS 620 is among the courses with a lab.\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 620 \nAnswer: ", "e8e2545705398ee62b01ed46": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me about the effect of extracurricular activities on academic performance.\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional tables or data related to extracurricular activities and academic performance would be needed to analyze the effect of extracurricular activities on academic performance.\nAnswer: ", "8144b3e1f853caf2f717bf2b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did instructor Kristin Ann Hass teach AMCULT 231 in Fall 2009?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSEalias0.DEPARTMENT = \"AMCULT\" AND COURSEalias0.NUMBER = 231 AND INSTRUCTORalias0.NAME LIKE \"%Kristin Ann Hass%\" AND SEMESTERalias0.SEMESTER = \"Fall\" AND SEMESTERalias0.YEAR = 2009 \nAnswer: ", "a05a02f144d1925345098c10": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which textbook publisher is the most common in the math courses?\nPredicted SQL: SELECT TEXTBOOK FROM COURSE_OFFERING WHERE COURSE_ID IN (SELECT COURSE_ID FROM COURSE WHERE DEPARTMENT = \"MATH\") GROUP BY TEXTBOOK ORDER BY COUNT(*) DESC LIMIT 1\nAnswer: ", "410d7b77e1e0525c9ee5edac": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What was the workload intensity in EECS 442?\nPredicted SQL: SELECT DISTINCT PROGRAM_COURSEalias0.WORKLOAD FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 442 AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "494d3a29117eb2e28ec0b7eb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What MEMS courses in Winter 2016 were not held on Fridays?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSEalias0.DEPARTMENT = \"MEMS\" AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "f6ff65fe567bfe1ad33dfaaa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the details about CICS 301.\nPredicted SQL: SELECT * FROM COURSE WHERE DEPARTMENT = \"CICS\" AND NUMBER = 301\nAnswer: ", "c1288bada62f01930c1e2f69": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Determine the most influential factors affecting students' total gpa.\nPredicted SQL: SELECT DISTINCT STUDENT_RECORDalias0.GRADE, COUNT(STUDENT_RECORDalias0.GRADE) as Grade_Count FROM STUDENT_RECORD AS STUDENT_RECORDalias0 WHERE STUDENT_RECORDalias0.STUDENT_ID = 4 GROUP BY STUDENT_RECORDalias0.GRADE ORDER BY Grade_Count DESC\nAnswer: ", "34d99f09108a08e22797aae8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you list the EECS courses that had the smallest workload?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND PROGRAM_COURSEalias0.WORKLOAD = ( SELECT MIN( PROGRAM_COURSEalias1.WORKLOAD ) FROM PROGRAM_COURSE AS PROGRAM_COURSEalias1 ) \nAnswer: ", "91464bcaa669b9256affc9f7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Automate a study-focused music stream for a 'software development' course group study.\nPredicted SQL: This question does not directly relate to the provided tables and columns.\nAnswer: ", "69485fbea9df4c0113f85c5a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did instructor Viviane Crestana Jensen have any upper-level CS courses he/she taught?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE INSTRUCTORalias0.NAME LIKE \"%Viviane Crestana Jensen%\" AND PROGRAM_COURSEalias0.CATEGORY LIKE \"ULCS\" \nAnswer: ", "688449466410909143e89568": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most commonly used currency among the semesters?\nPredicted SQL: SELECT DISTINCT COURSE_OFFERINGalias0.CURRENCY FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 GROUP BY COURSE_OFFERINGalias0.CURRENCY ORDER BY COUNT(COURSE_OFFERINGalias0.CURRENCY) DESC LIMIT 1\nAnswer: ", "5648e6713b49a27f407b4165": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is there a lab for EECS 498?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 498 \nAnswer: ", "5f688cdbc17f7d3c2de64ae4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For which courses is EECS 376 a prerequisite?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 376 \nAnswer: ", "91871b1f5a579bda9cc414ef": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is DHYGRACK 685 a must for DHYGRACK 689?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.DEPARTMENT = \"DHYGRACK\" AND COURSEalias0.NUMBER = 685 AND COURSEalias1.DEPARTMENT = \"DHYGRACK\" AND COURSEalias1.NUMBER = 689 AND ( ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) OR ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) ) \nAnswer: ", "904e4d8620bb13760d3545d7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many course offerings were provided for SI 644?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"SI\" AND COURSEalias0.NUMBER = 644 \nAnswer: ", "004ad3ffe859c35a45329ba9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the course capacity of course id 147?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.OFFERING_ID ) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.COURSE_ID = 147\nAnswer: ", "c8bfd07f7fb530ec3fa701ad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Fall 2001, did EECS 531 begin after 12:00?\nPredicted SQL: SELECT COUNT(*) > 0 FROM course AS c, course_offering AS co, semester AS s \nWHERE co.start_time >= \"12:00:00\" \nAND c.course_id = co.course_id \nAND c.department = \"EECS\" \nAND c.number = 531 \nAND s.semester = \"FA\" \nAND s.semester_id = co.semester \nAND s.year = 2001\nAnswer: ", "d8e292a061044314e2655357": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What options did CS majors have for courses in Summer 2016?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM AS PROGRAMalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND PROGRAMalias0.NAME LIKE \"%CS%\" AND PROGRAMalias0.PROGRAM_ID = PROGRAM_COURSEalias0.PROGRAM_ID AND SEMESTERalias0.SEMESTER = \"SU\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "f14a9fbdf66992a8fb775536": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the list of 400-level EECS courses offered in the Fall 2016 or Winter 2016 term?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER < 400 + 100 AND COURSEalias0.NUMBER >= 400 AND SEMESTERalias0.SEMESTER IN ( \"FA\" , \"WN\" ) AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "36187c182c44b32119239ef0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all course offerings with a waitlist count of 0 and having a final project.\nPredicted SQL: SELECT COURSE_OFFERINGalias0.OFFERING_ID, COURSE_OFFERINGalias0.COURSE_ID, COURSE_OFFERINGalias0.SEMESTER, COURSE_OFFERINGalias0.SECTION_NUMBER \nFROM COURSE_OFFERING AS COURSE_OFFERINGalias0 \nWHERE COURSE_OFFERINGalias0.WAITLIST_COUNT = 0 AND COURSE_OFFERINGalias0.HAS_FINAL_PROJECT = 1\nAnswer: ", "8ca740f49ee62b35e570e9d2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which instructors offer courses that fulfill the PreMajor requirement?\nPredicted SQL: SELECT DISTINCT INSTRUCTOR.NAME \nFROM INSTRUCTOR \nINNER JOIN OFFERING_INSTRUCTOR ON INSTRUCTOR.INSTRUCTOR_ID = OFFERING_INSTRUCTOR.INSTRUCTOR_ID \nINNER JOIN COURSE_OFFERING ON OFFERING_INSTRUCTOR.OFFERING_ID = COURSE_OFFERING.OFFERING_ID \nINNER JOIN PROGRAM_COURSE ON PROGRAM_COURSE.COURSE_ID = COURSE_OFFERING.COURSE_ID \nWHERE PROGRAM_COURSE.CATEGORY LIKE \"%PreMajor%\" \nAnswer: ", "f789481386a155b31917a533": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Name the upper-level CS courses that began after 10:30 in Fall 2013.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER WHERE COURSE_OFFERINGalias0.START_TIME > \"10:30:00\" AND SEMESTERalias0.SEMESTER = \"FA\" AND SEMESTERalias0.YEAR = 2013 AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAnswer: ", "75cd1b37ada23a540e4e6c44": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is WRITING 120 a must for WRITING 340?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.DEPARTMENT = \"WRITING\" AND COURSEalias0.NUMBER = 120 AND COURSEalias1.DEPARTMENT = \"WRITING\" AND COURSEalias1.NUMBER = 340 AND ( ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) OR ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) ) \nAnswer: ", "43877eedd89101b410f707b5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Create a reminder call service for upcoming assignment deadlines.\nPredicted SQL: This question does not directly relate to the provided tables and schema. It would require additional tables and columns related to assignment deadlines and reminders to be implemented in the database.\nAnswer: ", "54303b653f979ecb2c90c5d0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What year was LATIN 514 first offered?\nPredicted SQL: SELECT DISTINCT SEMESTERalias0.YEAR \nFROM COURSE AS COURSEalias0 \nJOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nJOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE COURSEalias0.DEPARTMENT = \"LATIN\" AND COURSEalias0.NUMBER = 514 \nORDER BY SEMESTERalias0.YEAR ASC \nLIMIT 1\nAnswer: ", "769e7f82f5e409270eee5c7b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In what ways do universities address digital literacy issues?\nPredicted SQL: This question cannot be answered directly with the provided tables. Additional information or tables related to digital literacy issues and university programs addressing them would be needed to provide a meaningful answer.\nAnswer: ", "76a958f6d88668a4a60da1a1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What were the prerequisites for EECS 482 and 492?\nPredicted SQL: SELECT DISTINCT COURSEalias0.department, COURSEalias0.number \nFROM course AS COURSEalias0 \nJOIN course_prerequisite AS COURSE_PREREQUISITEalias0 ON COURSEalias0.course_id = COURSE_PREREQUISITEalias0.pre_course_id \nJOIN course AS COURSEalias1 ON COURSEalias1.course_id = COURSE_PREREQUISITEalias0.course_id \nWHERE (COURSEalias1.number = 482 OR COURSEalias1.number = 492) AND COURSEalias1.department = \"EECS\"\nAnswer: ", "c936d2af9de80c2e5fd0cd57": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses were 3-credit in the AT 200-level?\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = \"3\" AND COURSEalias0.DEPARTMENT = \"AT\" AND COURSEalias0.NUMBER < 200 + 100 AND COURSEalias0.NUMBER >= 200 \nAnswer: ", "8e3a7c2148e14326b32834ce": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me if EECS 430 in 2016 had classes only on Mondays and Wednesdays?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND COURSE_OFFERINGalias0.MONDAY = \"Y\" AND COURSE_OFFERINGalias0.THURSDAY = \"N\" AND COURSE_OFFERINGalias0.TUESDAY = \"N\" AND COURSE_OFFERINGalias0.WEDNESDAY = \"Y\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 430 AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "6a3ca252cb3e30153d0e9925": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the ship type of the course eecs 481?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.NUMBER = 481\nAnswer: ", "f5e4f28e20a058238fc69e4d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average speed in knots for students with a total gpa higher than 3.3?\nPredicted SQL: SELECT AVG(STUDENTalias0.TOTAL_GPA) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.TOTAL_GPA > 3.3\nAnswer: ", "3f2e56f52f87d08d9143cd5f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common operating system among the courses offered in winter 2016?\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "665e6d52421c5a73928fa532": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the market share of joe rodriguez?\nPredicted SQL: SELECT COUNT( DISTINCT OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID ) / ( SELECT COUNT( DISTINCT OFFERING_INSTRUCTORalias1.INSTRUCTOR_ID ) FROM OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias1 ) * 100 FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE \"%joe rodriguez%\" \nAnswer: ", "a790c1c2b69c8aba1923ae25": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many students who studied abroad also participated in an internship program?\nPredicted SQL: SELECT COUNT(DISTINCT STUDENTalias0.STUDENT_ID) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.HOW = \"abroad\" AND STUDENTalias0.INTERNSHIP = \"yes\"\nAnswer: ", "65b4c28ceff2d151e5c8c4b6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Show the total number of publications of all instructors.\nPredicted SQL: SELECT SUM(num_reviews) FROM COURSE\nAnswer: ", "1746df68e7a76de89b213a03": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me if EECS 475 is among the courses with a lab.\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 475 \nAnswer: ", "400cdab76c392c5a62c633d5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Who was teaching ENGLISH 125 courses in the Summer 2013 semester?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.DEPARTMENT = \"ENGLISH\" AND COURSEalias0.NUMBER = 125 AND SEMESTERalias0.SEMESTER = \"SS\" AND SEMESTERalias0.YEAR = 2013\nAnswer: ", "75384fe09439648682f936dd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: I would like to know how many prerequisite courses for EDUC 790 have been taught to student 1.\nPredicted SQL: SELECT COUNT(DISTINCT COURSEalias0.COURSE_ID) FROM COURSE AS COURSEalias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID INNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID WHERE COURSEalias0.DEPARTMENT = \"EDUC\" AND COURSEalias0.NUMBER = 790 AND STUDENT_RECORDalias0.STUDENT_ID = 1\nAnswer: ", "ba5f690162131582aa74ee89": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What courses were available for web technology in Winter or Fall 2009?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN AREA AS AREAalias0 ON COURSEalias0.COURSE_ID = AREAalias0.COURSE_ID \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE AREAalias0.AREA LIKE \"%web technology%\" \nAND SEMESTERalias0.SEMESTER IN ( \"WN\" , \"FA\" ) \nAND SEMESTERalias0.YEAR = 2009 \nAnswer: ", "0d91a94cd4921c54acff3a36": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the most common minimum grade required for prerequisites in the math department?\nPredicted SQL: SELECT MIN(COURSE_PREREQUISITEalias0.GRADE) FROM COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0, COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT LIKE \"%MATH%\" AND COURSE_PREREQUISITEalias0.COURSE_ID = COURSEalias0.COURSE_ID\nAnswer: ", "df7dcf6d6795f6021dcd5bd8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: How many courses with a prerequisite waiver option have a final project?\nPredicted SQL: SELECT COUNT( DISTINCT COURSE_OFFERINGalias0.COURSE_ID ) FROM COURSE_OFFERING AS COURSE_OFFERINGalias0 WHERE COURSE_OFFERINGalias0.HAS_FINAL_PROJECT = 1 AND COURSE_OFFERINGalias0.OFFERING_ID IN (SELECT DISTINCT COURSE_OFFERINGalias1.OFFERING_ID FROM COURSE_OFFERING AS COURSE_OFFERINGalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSE_OFFERINGalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSE_PREREQUISITEalias0.PRE_COURSE_ID IS NULL) \nAnswer: ", "09bc698211f5f8ab329352a7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Could you tell me how many upper-level CS courses there were?\nPredicted SQL: SELECT COUNT ( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nAnswer: ", "55cb06fc410eedb8bdc0d8f5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: List all students who have received a scholarship at least once.\nPredicted SQL: SELECT DISTINCT STUDENTalias0.LASTNAME, STUDENTalias0.FIRSTNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SCHOLARSHIP = \"Yes\"\nAnswer: ", "fdcc6537981d9f88c1512075": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Which courses have a prerequisite of EECS 270?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias1.DEPARTMENT = \"EECS\" AND COURSEalias1.NUMBER = 270 \nAnswer: ", "90af5fbceeaa6d3ae7404a23": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: In Winter 2017, how many instructors taught CHEMBIO 990?\nPredicted SQL: SELECT COUNT( DISTINCT INSTRUCTORalias0.INSTRUCTOR_ID ) FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND COURSEalias0.DEPARTMENT = \"CHEMBIO\" AND COURSEalias0.NUMBER = 990 AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2017 \nAnswer: ", "f47b84df2aff075e12cd421f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the department where Clin Eval UE AT Inj Lab can be found?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT FROM COURSE AS COURSEalias0 WHERE COURSEalias0.NAME LIKE \"%Clin Eval UE AT Inj Lab%\" \nAnswer: ", "2542064179df29cfd5702816": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Do you know who was teaching PreMajor courses in Summer 2016?\nPredicted SQL: SELECT DISTINCT INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER INNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE PROGRAM_COURSEalias0.CATEGORY LIKE \"%PreMajor%\" AND SEMESTERalias0.SEMESTER = \"SU\" AND SEMESTERalias0.YEAR = 2016 \nAnswer: ", "2826e4e27aef0cb248125f06": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the average number of working horses among the students?\nPredicted SQL: SELECT AVG(STUDENTalias0.WORKLOAD) FROM STUDENT AS STUDENTalias0\nAnswer: ", "0fcd8fd39b3af7bbd7fa2cde": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Translate a school admission brochure into arabic for prospective students.\nPredicted SQL: This question cannot be answered with the provided tables.\nAnswer: ", "a9c9c3ee44b276a59fc8e48f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: For Fall 2007, which courses were taught by instructor Emily Elspeth Witt?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , INSTRUCTOR AS INSTRUCTORalias0 , OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND INSTRUCTORalias0.NAME LIKE \"%Emily Elspeth Witt%\" AND OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID AND OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID AND SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER AND SEMESTERalias0.YEAR = 2007 AND SEMESTERalias0.SEMESTER = \"Fall\"\nAnswer: ", "34eac6f51de8902a18312006": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Name the upper-level CS courses that began after 14:30 in Winter 2015.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 , COURSE_OFFERING AS COURSE_OFFERINGalias0 , PROGRAM_COURSE AS PROGRAM_COURSEalias0 , SEMESTER AS SEMESTERalias0 WHERE COURSE_OFFERINGalias0.START_TIME > \"14:30:00\" AND COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID AND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" AND PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID AND SEMESTERalias0.SEMESTER = \"WN\" AND SEMESTERalias0.YEAR = 2015 \nAnswer: ", "9a0d30be8dd8aee312855355": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is Friday included when instructor Rachel Neis's classes always meet?\nPredicted SQL: SELECT COUNT( * ) = 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSE_OFFERINGalias0.FRIDAY = \"N\" AND INSTRUCTORalias0.NAME LIKE \"%Rachel Neis%\" \nAnswer: ", "82ca4a3935047aff611f31e8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Did students have to complete ES 629 before enrolling in ES 395, or the opposite?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 , COURSE AS COURSEalias1 , COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 WHERE COURSEalias0.DEPARTMENT = \"ES\" AND COURSEalias0.NUMBER = 395 AND COURSEalias1.DEPARTMENT = \"ES\" AND COURSEalias1.NUMBER = 629 AND ( ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID ) OR ( COURSEalias1.COURSE_ID = COURSE_PREREQUISITEalias0.PRE_COURSE_ID AND COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID ) ) \nAnswer: ", "3bd2610713eb17d1a4107ebb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Is there a lab for EECS 520?\nPredicted SQL: SELECT COUNT( * ) > 0 FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"EECS\" AND COURSEalias0.HAS_LAB = \"Y\" AND COURSEalias0.NUMBER = 520 \nAnswer: ", "1211f18f32b5143cd28cb81e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the list of 4-credit upper-level CS courses available in Fall 2009.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID \nINNER JOIN PROGRAM_COURSE AS PROGRAM_COURSEalias0 ON PROGRAM_COURSEalias0.COURSE_ID = COURSEalias0.COURSE_ID \nINNER JOIN SEMESTER AS SEMESTERalias0 ON SEMESTERalias0.SEMESTER_ID = COURSE_OFFERINGalias0.SEMESTER \nWHERE COURSEalias0.CREDITS = \"4\" \nAND PROGRAM_COURSEalias0.CATEGORY LIKE \"%ULCS%\" \nAND SEMESTERalias0.SEMESTER = \"FA\" \nAND SEMESTERalias0.YEAR = 2009\nAnswer: ", "dfa07db887e705fc434a14fb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Give me the name of the MATSCIE 489 course.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"MATSCIE\" AND COURSEalias0.NUMBER = 489 \nAnswer: ", "1ecc94e6bc7754d9190b2b05": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Suggest networking events for students looking to enter the tech industry.\nPredicted SQL: SELECT DISTINCT COURSEalias0.NAME, COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DESCRIPTION LIKE \"%networking%\" AND COURSEalias0.DESCRIPTION LIKE \"%tech industry%\"\nAnswer: ", "664cea8a934df5cd6af1d3d6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Among the courses that student 1 has taken, what were the courses related to theory of computation?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER \nFROM COURSE AS COURSEalias0 \nINNER JOIN STUDENT_RECORD AS STUDENT_RECORDalias0 ON STUDENT_RECORDalias0.COURSE_ID = COURSEalias0.COURSE_ID \nINNER JOIN AREA AS AREAalias0 ON STUDENT_RECORDalias0.COURSE_ID = AREAalias0.COURSE_ID \nWHERE AREAalias0.AREA LIKE \"%theory of computation%\" AND STUDENT_RECORDalias0.STUDENT_ID = 1 \nAnswer: ", "c5a40c7758e1c3126ec2e057": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Tell me the description of ACABS 498.\nPredicted SQL: SELECT DISTINCT COURSEalias0.DESCRIPTION FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DEPARTMENT = \"ACABS\" AND COURSEalias0.NUMBER = 498 \nAnswer: ", "4a556da5edd5fd7d6e474553": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: Was the ECON 102 course always taught by either James Wang or Miles S Kimball?\nPredicted SQL: SELECT COUNT(*) > 0 FROM COURSE AS COURSEalias0 INNER JOIN COURSE_OFFERING AS COURSE_OFFERINGalias0 ON COURSEalias0.COURSE_ID = COURSE_OFFERINGalias0.COURSE_ID INNER JOIN OFFERING_INSTRUCTOR AS OFFERING_INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.OFFERING_ID = COURSE_OFFERINGalias0.OFFERING_ID INNER JOIN INSTRUCTOR AS INSTRUCTORalias0 ON OFFERING_INSTRUCTORalias0.INSTRUCTOR_ID = INSTRUCTORalias0.INSTRUCTOR_ID WHERE COURSEalias0.NAME LIKE \"%ECON 102%\" AND (INSTRUCTORalias0.NAME LIKE \"%James Wang%\" OR INSTRUCTORalias0.NAME LIKE \"%Miles S Kimball%\") \nAnswer: ", "75fa59665f2481557efa1361": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What is the minimum grade required to take courses that have 'calculus ii' as a prerequisite?\nPredicted SQL: SELECT DISTINCT COURSEalias0.DEPARTMENT , COURSEalias0.NUMBER FROM COURSE AS COURSEalias0 INNER JOIN COURSE_PREREQUISITE AS COURSE_PREREQUISITEalias0 ON COURSEalias0.COURSE_ID = COURSE_PREREQUISITEalias0.COURSE_ID WHERE COURSE_PREREQUISITEalias0.PRE_COURSE_ID IN (SELECT COURSE_ID FROM COURSE WHERE NAME LIKE \"%Calculus II%\") \nAnswer: ", "27adf308e41525976fa7f9c8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable area, columns = [course_id,area]\nTable course, columns = [course_id,name,department,number,credits,advisory_requirement,enforced_requirement,description,num_semesters,num_enrolled,has_discussion,has_lab,has_projects,has_exams,num_reviews,clarity_score,easiness_score,helpfulness_score]\nTable course_offering, columns = [offering_id,course_id,semester,section_number,start_time,end_time,monday,tuesday,wednesday,thursday,friday,saturday,sunday,has_final_project,has_final_exam,textbook,class_address,allow_audit]\nTable course_prerequisite, columns = [pre_course_id,course_id]\nTable instructor, columns = [instructor_id,name,uniqname]\nTable offering_instructor, columns = [offering_instructor_id,offering_id,instructor_id]\nTable program, columns = [program_id,name,college,introduction]\nTable program_course, columns = [program_id,course_id,workload,category]\nTable program_requirement, columns = [program_id,category,min_credit,additional_req]\nTable semester, columns = [semester_id,semester,year]\nTable student, columns = [student_id,lastname,firstname,program_id,declare_major,total_credit,total_gpa,entered_as,admit_term,predicted_graduation_semester,degree,minor,internship]\nTable student_record, columns = [student_id,course_id,semester,grade,how,transfer_source,earn_credit,repeat_term,test_id,offering_id]\nForeign_keys = [course_offering.offering_id = offering_instructor.offering_id,course_offering.course_id = course.course_id,course_offering.semester = semester.semester,course_prerequisite.pre_course_id = course.course_id,course_prerequisite.course_id = course.course_id,offering_instructor.offering_id = course_offering.offering_id,offering_instructor.instructor_id = instructor.instructor_id,program_course.program_id = program.program_id,program_course.course_id = course.course_id,program_course.category = program_requirement.category,program_requirement.program_id = program.program_id,student.program_id = program.program_id,student.admit_term = semester.semester_id,student.predicted_graduation_semester = semester.semester_id,student_record.student_id = student.student_id,student_record.course_id = course.course_id,student_record.semester = semester.semester_id]\nPrimary_keys = [course.course_id,course_offering.offering_id,instructor.instructor_id,offering_instructor.offering_instructor_id,program.program_id,semester.semester_id,student.student_id]\n\nQuestion: What challenges are associated with online learning?\nPredicted SQL: This question cannot be answered directly with the provided tables.\nAnswer: "}