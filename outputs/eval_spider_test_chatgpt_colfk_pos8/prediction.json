{"04365723c5d125342e01f58a": "SELECT first_name, last_name FROM students WHERE date_first_registered < '2000-01-01'", "2692e7406f0c53353684c790": "This question cannot be answered with the given tables.", "984c0b107639c8f97c040783": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "c3076fcb9682fd04a77bb806": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "40c92ed87c22cb6083772444": "SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'", "5c36fc6291720986c709e906": "SELECT * FROM Friend", "8742791c0587fc672464dde7": "SELECT transcript_date, transcript_id FROM Transcripts ORDER BY (SELECT COUNT(*) FROM Transcript_Contents WHERE Transcript_Contents.transcript_id = Transcripts.transcript_id) ASC LIMIT 1\n\n", "33d98926fa96cc21171e916b": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "9e0fd4a3d5488a7037ff91bc": "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)", "974c37023e8dacc7e7e0ef2e": "SELECT count(*) FROM students WHERE first_name = \"Jordan\"", "30077054e1950e43a73d2676": "This question does not require SQL query as it is not related to retrieving data from the database.", "6ef4356d29a8b6ea0f2cdb71": "This question cannot be answered with the given tables as there is no currency information available.", "0e523dd3fc808e102301dc8e": "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)", "1e26305a3c22be5b7316fc09": "SELECT District FROM city WHERE Name = 'Kabul'", "9e8bc6cb391063f3b2703765": "SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id\n\n", "d731f29e0fcbb014524ea349": "SELECT T1.course_name FROM courses AS T1 JOIN sections AS T2 ON T1.course_id = T2.course_id WHERE T2.section_name = \"Auditions 1\"", "29666d3775bd379b23f77816": "SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)", "095626f0a79e3deaea7320b1": "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n", "2fa563e8d4fc8edc4a3e6c1a": "SELECT max(attendance_capacity) FROM shows", "f36a499da7496bb370f40c53": "SELECT H2.name \nFROM Highschooler AS H1 \nJOIN Friend AS F ON H1.ID = F.student_id \nJOIN Highschooler AS H2 ON F.friend_id = H2.ID \nWHERE H1.name = 'Kyle'", "b6e28f095d21ef5de7d48a54": "This question cannot be answered with the given tables as they do not contain information about conductors or their performances.", "c5f27aeca7eb6f7c3b8d781d": "SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship", "17fa64cd16174a7585d91ea9": "SELECT T1.state_province_county FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.permanent_address_id WHERE T2.first_name = \"Tabatha\" AND T2.last_name = \"Gehling\"", "b2675b92eae2ca911c712dad": "SELECT c.Name, o.Orchestra\nFROM conductor c\nJOIN orchestra o ON c.Conductor_ID = o.Conductor_ID", "eb033c46ae69feea1af53fa6": "SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Engineering')", "a5d5cfca61d18f1a9d3d6ff1": "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\n", "bffe56bf0ce1729457a1e65c": "SELECT COUNT(*) FROM Highschooler", "bd35242925c6cd838d57a997": "SELECT state FROM votes AS v1 JOIN contestants AS c1 ON v1.contestant_number = c1.contestant_number WHERE c1.contestant_name = 'Tabatha Gehling' AND state IN (SELECT state FROM votes AS v2 JOIN contestants AS c2 ON v2.contestant_number = c2.contestant_number WHERE c2.contestant_name = 'Kelly Clauss')", "1fabd3f45a6945153eea68b5": "SELECT current_address_id, line_1, line_2, line_3 FROM addresses WHERE current_address_id IN (SELECT current_address_id FROM students GROUP BY current_address_id ORDER BY count(*) DESC LIMIT 1)", "7592875dff42ca551a817c31": "This question does not seem to be related to the tables provided.", "e7eaf74538d68d7c56effa22": "SELECT T1.other_details FROM degree_programs AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = \"Husky\"", "984c6346bf357416e68bd841": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n", "cc5ed80c86257f44a85cfcc7": "This question cannot be answered with the given tables.", "e8cc42774473620f77bb9875": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2", "43e95f397db025ed6fe2d6cd": "This question cannot be answered with the given tables.", "7204dc555a6f917d172fd5f1": "This question does not seem to be related to the tables provided. Please provide a question related to the tables provided for accurate SQL translation.", "8d744f8a80fd2651a4a83e81": "SELECT birth_year, citizenship FROM singers GROUP BY birth_year, citizenship", "5fdf47909429689d5f68df18": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC\n\n", "6f44d4af4e864d84c1f51a2f": "SELECT professional_id, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)", "ca7a6cffedb4249de6fd3a28": "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "935d9baaa4e020a703422a6e": "SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player)", "7692795cba0092233db6fb9c": "SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = 'The Rise of the Blue Beetle!') \n\n", "c2e31d83c83d90286972a475": "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'\n\n", "517659d06f525adcce5465a7": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals\n\n", "3d26fb055d5473abfc5e6b75": "This question cannot be answered with the given tables.", "cf9b6bc2c13f3977ec8b3614": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)", "35951b681a7d7ab11983ae4d": "SELECT * FROM Courses WHERE course_name = \"Sky Radio\" ORDER BY course_id DESC LIMIT 1", "b670b1fc3f7bab4921cc7923": "SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id = (SELECT permanent_address_id FROM students WHERE country = 'United States' GROUP BY permanent_address_id ORDER BY COUNT(*) DESC LIMIT 1)", "595ba79c4d852f7066427eba": "SELECT count(DISTINCT country) FROM addresses WHERE other_address_details LIKE '%oldest official language origins%'", "940a9f330805989989aa4e03": "SELECT grade FROM Highschooler", "88c1c5a94ba1e98610003721": "SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'", "92db0b461e6dbe59d8d505f3": "SELECT T3.department_name \nFROM degree_programs AS T1 \nJOIN departments AS T2 ON T1.department_id = T2.department_id \nJOIN courses AS T3 ON T2.department_id = T3.department_id \nJOIN sections AS T4 ON T3.course_id = T4.course_id \nWHERE T4.section_name = \"Brandon Vietti\"", "fe734140d39efa9c9a02aa0f": "SELECT line_1,line_2,line_3,city,zip_postcode,state_province_county,country FROM addresses ORDER BY date_from LIMIT 1", "4ef254748ef822108b8ebe29": "SELECT count(*) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE Language = 'Spanish')", "939b52eb0700423a5de92de0": "SELECT DISTINCT cl.CountryCode \nFROM countrylanguage cl \nWHERE cl.Language <> 'English'", "85ecb75fc9070bafcd062475": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n", "6725e3db26951441fa13f5be": "SELECT DISTINCT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)", "9dc42e6bc903c1aa57b3a242": "SELECT student_id, first_name, middle_name, last_name \nFROM Students \nWHERE student_id IN (\n    SELECT student_id \n    FROM Student_Enrolment \n    GROUP BY student_id, semester_id \n    HAVING COUNT(DISTINCT degree_program_id) = 2\n)", "029c4024d0a95c493924cf19": "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)", "5cb62a6369126b9d45d4f437": "This question cannot be answered with the given tables.", "bb94fde2ef4122c290b3dfaf": "SELECT count(*) FROM Addresses WHERE state_province_county = 'Alabama'", "84e2252cf2ca5803aad40511": "SELECT first_name FROM students WHERE permanent_address_id <> current_address_id\n\n", "36bec24b62350fcac2075739": "This question cannot be answered with the given tables.", "5b456d469e235bc1e619d405": "SELECT scholarship_name FROM Scholarships WHERE application_open = 'Yes'", "72296c4d0c0542cf720d5840": "SELECT O.first_name, O.last_name, S.size_description\nFROM Owners O\nJOIN Dogs D ON O.owner_id = D.owner_id\nJOIN Sizes S ON D.size_code = S.size_code", "8a13b4b67f3d9c921098f9f8": "SELECT singer.Name, SUM(song.Sales) \nFROM singer \nJOIN song ON singer.Singer_ID = song.Singer_ID \nGROUP BY singer.Name", "fdc9d6f96958104f51142363": "SELECT Title, Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID", "4a42fa222357e45dc2fb137b": "SELECT MAX(age) FROM Dogs\n\n", "b3585bc1c5383f5909679349": "This question does not seem to be related to the tables provided.", "d150232bb9e3644d6fcad973": "SELECT avg(volume) FROM students WHERE date_first_registered > '2001-01-01'", "15e5c262cde4f7908490aff2": "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n", "a89811daac02a0d1d31134e1": "SELECT * FROM students ORDER BY last_name DESC, first_name DESC\n\n", "4557c3aa3f5c48016598615d": "SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)", "d46bbf2ca54099b8b3f81e88": "SELECT Name FROM singer WHERE Citizenship <> 'France'", "b71b5348e91cf931b258c535": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "0579ceef75d9951f3dd83f84": "SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings DESC", "406990ea361751947d0fbbe1": "This question cannot be answered with the given tables.", "8068808cd35d750a1d595ddf": "SELECT cell_mobile_number, email_address FROM Students WHERE first_name = 'Teodor' AND last_name = 'Salparov'", "3b412a6a60c56f7b94906e0c": "SELECT timezone FROM addresses GROUP BY timezone ORDER BY count(*) DESC LIMIT 1\n\n", "21cfb5d0d25fbf44b721ac96": "This question cannot be answered with the given tables.", "bd0110121ce5779f89015e36": "SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Earnings > 300000", "7f9e3619c3335f56d27906a6": "SELECT MAX(charge_amount) FROM charges", "a046a4ff02aa0df063972ffe": "SELECT Region, Population FROM country WHERE Name = 'Angola'", "b23076496e10f602dba7d38a": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id JOIN addresses AS T3 ON T1.permanent_address_id = T3.address_id WHERE T2.country = T3.country AND T2.state_province_county = T3.state_province_county AND T2.city = T3.city", "52a8500919d544f142937711": "SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player)", "46a0b5f3e96b3025d48f8cf4": "SELECT AVG(transcript_date) FROM Transcripts\n\n", "3f9c920a8980cc8fb15c2093": "SELECT country FROM Addresses WHERE city = 'Qandahar'", "76b1dd4d13a386e809031207": "SELECT line_1, line_2, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id = 3\n\n", "6f168d52eaf343495fdb312f": "SELECT password FROM People WHERE first_name = 'Kurt' AND last_name = 'Walser'", "92271095654f94668d490ef1": "SELECT city.Name, city.Population, country.Population \nFROM city \nJOIN country ON city.CountryCode = country.Code \nWHERE city.District = 'Urban' \nORDER BY city.Population DESC", "4c36c79ea93ba6736ee878e7": "This question does not seem to be related to the tables provided.", "c5074e818fa40d98d2cbc5f1": "SELECT country, count(*) AS linguistic_diversity FROM addresses WHERE country = 'Africa' GROUP BY country", "181c8e32e2afc64e65b72772": "SELECT count(*) FROM Courses WHERE course_name LIKE '%Animation Studio%'", "b8ae87584fd9edcac60bef59": "This question cannot be answered with the given tables as they do not contain information about the driving side of countries.", "d64abeeef34fd25ff2184f54": "This question does not seem to be related to the tables provided.", "8dde17586d1e740a1a242806": "SELECT T2.role_code ,  count(*) FROM treatments AS T1 JOIN professionals AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.role_code  =  'dog trainer' AND T1.treatment_type_code  =  'adoption' GROUP BY T2.role_code", "b3aed91140fcaf03b4a61432": "SELECT degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id IN (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(student_id) DESC LIMIT 1)", "3f8b9cf74bacadda6d734234": "SELECT DISTINCT city.Name FROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'", "1a1c91df8b04c5b77f52c47e": "SELECT DISTINCT state, created FROM VOTES", "ec9f84eb334c59fd281ba573": "This question cannot be answered directly with the given tables. Additional information on the relationship between a dog's weight, health, and lifespan would be needed in order to provide a SQL query to answer this question.", "4a360dea03010dd82c6d8897": "This question cannot be answered directly with the given tables. Additional tables or data related to recessions and their effects on real estate would be needed to provide an accurate answer.", "26e59036b49ce11467ab3320": "SELECT course_name FROM courses WHERE country = 'India'", "b7ac5a526a2acd4a8646161a": "SELECT T2.course_name \nFROM student_enrolment AS T1 \nJOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id \nJOIN courses AS T3 ON T2.course_id = T3.course_id \nJOIN degree_programs AS T4 ON T1.degree_program_id = T4.degree_program_id \nJOIN departments AS T5 ON T4.department_id = T5.department_id \nWHERE T5.department_name = \"High School\"", "f679bcac08fd484f53fb6b38": "SELECT ID FROM Highschooler WHERE name = 'Kyle' \n\n", "a34d767fbfce6475533a7d47": "SELECT COUNT(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')", "98cb361e063cd880fec6cdbc": "SELECT T1.first_name, T1.last_name \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id \nJOIN Departments AS T4 ON T3.department_id = T4.department_id \nWHERE T4.department_name = 'High School' \nORDER BY T2.student_enrolment_id DESC \nLIMIT 1", "3c8dfd129335dd4c4c37a41a": "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\n\n", "94a58fbf85d9bfc7b2b840b0": "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'", "5636d3917273e15d9ad2a05a": "This question cannot be answered with the given tables.", "d2b5c3740e770df7ba155f92": "SELECT T1.first_name, T1.last_name, T1.cell_mobile_number, T1.email_address \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN courses AS T4 ON T3.course_id = T4.course_id \nWHERE T4.course_name = \"Music Box Italia\"", "b995bb0b8c71cc0194455ca5": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n", "5f2ac1b8be47c6a84e722f90": "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm <> 'Republic'", "9600196d1933b067a75fa462": "SELECT T2.treatment_type_description, count(*) FROM treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code WHERE T2.treatment_type_description = \"Promoting dog adoption\" GROUP BY T2.treatment_type_description ORDER BY count(*) DESC LIMIT 1", "d567bc6e8dc9d11914e6074d": "INSERT INTO Courses (course_name) VALUES ('Sky Radio') \n\n", "4f4ea6178c6dfabda1a5c36b": "This question cannot be answered with the given tables.", "f7b5e902b1d7618ffd37ffda": "SELECT course_description FROM Courses WHERE course_id IN (SELECT course_id FROM Sections WHERE course_id IN (SELECT course_id FROM Degree_Programs WHERE department_id IN (SELECT department_id FROM Departments WHERE department_name = 'Math')))", "110c1e320bcdb6b131cd5339": "This question cannot be answered with the given tables.", "6123bcc86ccb84ad179bf074": "SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_departed IS NULL)", "46b83fdf0b632c222f8e5f7f": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')", "72d3deb192b1db99fb56a9f6": "This question cannot be answered with the given tables.", "3d2cfd01a060e8afd43f9e9a": "SELECT course_description, COUNT(*) FROM Courses GROUP BY course_description\n\n", "b98ff224ab0b91d9106b0532": "SELECT AVG(GNP), SUM(Population) FROM country WHERE Continent = 'North America' AND GovernmentForm = 'US territory'", "8d66a515dbf570e0c91cf520": "SELECT T2.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = \"A Love of a Lifetime\"\n\n", "723a2f591f631a4a3f377ca0": "This question cannot be answered with the given tables.", "d434da2313d24a24ae6c24c3": "SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%'", "caa1a9116ba4d646f6b42966": "SELECT DISTINCT H1.name FROM Highschooler AS H1 WHERE H1.ID IN (SELECT F1.student_id FROM Friend AS F1 INTERSECT SELECT L1.student_id FROM Likes AS L1)", "5d6fe50a4b52cbdcd50b32da": "SELECT avg(Earnings) FROM poker_player AS pp JOIN people AS p ON pp.People_ID = p.People_ID WHERE p.Height > 200", "d1e4b6005c13086bbe490d9d": "SELECT grade FROM student_enrolment_courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = (SELECT student_id FROM students WHERE first_name = 'Kabul'))", "baea8f01fe8f7d2d7a2f0355": "This question does not seem to be related to the tables provided.", "c04d65d095e1875bc75e9c70": "SELECT series_name FROM TV_Channel WHERE id = (SELECT Channel FROM Cartoon WHERE Title = 'The Rise of the Blue Beetle') \n\n", "3dfbb1d78dd0f5c3be710f91": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)", "b526df504c5145c874878769": "SELECT COUNT(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')", "595b04e7e83d03df5f0934ca": "This question cannot be answered with the given tables.", "91303c9ab5ca7399c8b354bc": "This question cannot be answered with the given tables as they do not contain information related to pixel aspect ratios or cities.", "a7fb6570ffd2f22c4cfc6b3d": "This question cannot be answered with the given tables.", "512e792acff3cd282fedab05": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\n", "aca1bdbd362f8ccadd3ac4e4": "This question cannot be answered directly with the given tables.", "058f4b37b7ce66bc2f1813fc": "SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Earnings > 300000", "a95276a7afb591dea2dd5570": "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "3dc8148542f0d9333e630355": "SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1\n\n", "315cc24d16f7d4a5968170c5": "SELECT Record_Company, COUNT(Orchestra_ID) AS Num_Orchestras FROM orchestra GROUP BY Record_Company ORDER BY Num_Orchestras DESC LIMIT 1\n\n", "948a8a93c03c5f4d6e7d272f": "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)", "6c1f4acb0db7cdd44c07d5c7": "SELECT count(DISTINCT country) FROM addresses", "2f5f8e70a2531cdcdbce1886": "SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "c376d4d9d205a32ed3ec2afa": "SELECT COUNT(*) FROM conductor", "4251b30dcc9c4dc59c40dd8b": "This question cannot be answered with the given tables.", "1c991f0f760ff1cda5a2a955": "This question cannot be answered with the given tables as there is no table related to orchestras or heights.", "f9821920ac79b36b3d1f9e6a": "SELECT first_name ,  middle_name ,  last_name FROM students GROUP BY first_name ,  middle_name ,  last_name", "eeb3c671b25a6f1452bb8e47": "SELECT Birth_Year, Citizenship FROM singer", "18d969398b050a81531083eb": "SELECT avg(rank_points) FROM students WHERE date_first_registered < '2020-01-01'", "5005ea6993085929b744e659": "SELECT AVG(GPA) FROM Transcripts", "5f6357bfc8755e8fa0e91f8e": "SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)", "c9bbedf085c648e8be4aa129": "SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs ORDER BY age ASC LIMIT 1)", "b3c2d024b42b9993ec34bc53": "This question does not seem to be related to the tables provided.", "6868bbbc11951769aaa479db": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) > 1", "7971df37fc66391defc7adc5": "SELECT T1.Code, T2.Language \nFROM country AS T1 \nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode \nWHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)", "42e0d11acb5eb6bfd82a229f": "This question cannot be answered with the given tables.", "1070df2e09ee850f13093708": "SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id IN (SELECT current_address_id FROM students) OR address_id IN (SELECT permanent_address_id FROM students)", "147af44f9150277a7d3ef776": "This question cannot be answered with the given tables.", "ec8a313d244f972d6719e1ee": "SELECT country FROM Addresses WHERE address_id IN (SELECT permanent_address_id FROM Students WHERE first_name = 'Kirov' AND last_name = 'Orchestra')", "23449abfb56fb2d4f05431ab": "This question does not seem to be related to the tables provided.", "68752c54a18affc80fa61a04": "This question cannot be answered with the given tables.", "8a58cce31810002b70513048": "SELECT Episode FROM TV_series WHERE series_name = \"Sky Radio\"", "251df7f905385785e0b2d4cd": "SELECT O.first_name, D.name \nFROM Owners O \nJOIN Dogs D ON O.owner_id = D.owner_id", "0836d13e3c6114749c9e25fc": "SELECT COUNT(Language) FROM countrylanguage WHERE CountryCode = 'ABW'", "826d532af99d79716ed74828": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language HAVING COUNT(*) = (SELECT MIN(channel_count) FROM (SELECT COUNT(*) AS channel_count FROM TV_Channel GROUP BY Language) AS counts)", "95f6f6800121d8c55539eca2": "SELECT first_name FROM students ORDER BY date_first_registered ASC LIMIT 1", "fae4b7179d35224b59227dba": "This question cannot be answered with the given tables as they do not contain information about the popularity of poker.", "d2f5bfbcb9420f02a282ba56": "SELECT count(*) FROM Other_Available_Features\n\n", "1b40a3da304a244ad87e6198": "SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id ORDER BY T2.degree_summary_name LIMIT 1", "b0d751dae8078a0a1751a555": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "7c29daf70dbb59297e0cc901": "SELECT first_name, middle_name, last_name \nFROM students \nWHERE date_first_registered = (SELECT MIN(date_first_registered) FROM students)", "6b3d9977b40d8b22078dfe3f": "SELECT state, contestant_number, count(*) FROM VOTES GROUP BY state, contestant_number", "fd3917b8b37d655e9a63a0dd": "SELECT COUNT(course_id) FROM Courses\n\n", "34c8eab8cbe2b3a75f285ffc": "SELECT T2.course_name \nFROM student_enrolment_courses AS T1 \nJOIN courses AS T2 ON T1.course_id = T2.course_id \nWHERE T1.student_enrolment_id IN \n    (SELECT student_enrolment_id \n     FROM student_enrolment \n     WHERE student_id = [student_id]) \nAND T1.course_id NOT IN \n    (SELECT course_id \n     FROM student_enrolment_courses \n     WHERE student_enrolment_id = [previous_enrollment_id])", "be636b159a1cf4c1702bff84": "This question cannot be answered with the given tables.", "7a56941d297063f6f93c4f10": "SELECT T2.first_name, T2.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T3 ON T1.student_id = T3.student_id \nJOIN student_enrolment AS T4 ON T3.degree_program_id = T4.degree_program_id \nJOIN students AS T2 ON T4.student_id = T2.student_id \nWHERE T1.student_id = [student_id] AND T2.student_id != [student_id]", "98b80857096ac12a8850f9f7": "SELECT owner_id, zip_code \nFROM Owners \nWHERE owner_id IN (\n    SELECT owner_id \n    FROM Dogs \n    WHERE dog_id IN (\n        SELECT dog_id \n        FROM Treatments \n        GROUP BY dog_id \n        ORDER BY SUM(cost_of_treatment) DESC \n        LIMIT 1\n    )\n)", "f1654322a5ae276982302006": "SELECT T1.Title, T1.Directed_by, T1.Written_by, T1.Channel, T2.Content FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id", "118d14cab7902366b54bd914": "INSERT INTO Sections (course_id, section_name, section_description, other_details) VALUES (SELECT course_id FROM Courses WHERE course_name = \"Relaxation Music Session\", \"Finals Week Relaxation Session\", \"A session to help students relax and destress during finals week\", \"Scheduled during finals week for student relaxation\")", "47b91bdd3578d01a9c76c03c": "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel", "3e4e60f9eb74da95b7711c4f": "SELECT * FROM singer WHERE Name = 'Adele'", "337cad57f581e29a513fb76c": "SELECT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Europe' \nAND countrylanguage.Language = 'English' \nAND countrylanguage.IsOfficial = 'F'", "c67c644f638c896271495296": "This question cannot be answered with the given tables as there is no table containing passwords for contestants.", "c2fc8a1a659d5921c3166dda": "SELECT name FROM Highschooler WHERE grade = (SELECT max(grade) FROM Highschooler)", "21dd352ef33e7dd8e2065b03": "SELECT Name FROM singer WHERE Name = 'Bj\u00f6rk'", "e7acaf71ce6b14969e71b108": "SELECT other_details FROM departments WHERE department_name = \"Math\"", "b034020da382211546a45db6": "SELECT count(*) FROM students WHERE gender = 'male' AND education_level = 'high school'", "8e04acb6a07fddeaaa5f9717": "SELECT timezone FROM addresses GROUP BY timezone ORDER BY count(*) DESC LIMIT 1\n\n", "74cf52f05d786dc2ea9f1f4c": "SELECT T1.city FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1", "fa5c04d7dfa68b193c4c9252": "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') ORDER BY Percentage DESC LIMIT 1\n\n", "ff79e34a988c4d49bd533cb5": "This question cannot be answered with the given tables.", "3350df67bfc704973c289463": "SELECT avg(age) FROM Students", "011ec8388f2e6b3f4aa412be": "SELECT address_id FROM Addresses\n\n", "bfe18e3bb066e320c9ee06fc": "SELECT CONCAT('Audio file for ', first_name, ' ', last_name) FROM Students WHERE student_id IN (SELECT friend_id FROM Friends WHERE student_id = 1510)", "a4143d5702db04d0ce019d19": "SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC\n\n", "323244f8ea01240dcec24622": "SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)", "903362a5847dff68028dc9fe": "SELECT count(*) FROM transcripts\n\n", "f7256dd3c22b7bb9c382be38": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.liked_id ORDER BY count(*) DESC LIMIT 1\n\n", "a87c18a461cfc294018692bc": "SELECT T1.first_name, T1.last_name \nFROM Students AS T1 \nWHERE T1.student_id = (\n    SELECT student_id \n    FROM Student_Enrolment \n    WHERE student_id = (\n        SELECT student_id \n        FROM Students \n        ORDER BY date_first_registered ASC \n        LIMIT 1\n    )\n)", "7df41c24b511a3c15384ae08": "SELECT min(age) FROM contestants WHERE votes = 0\n\n", "3cd60e6cdbc0a814d98b0958": "SELECT Name, Population/SurfaceArea AS Population_Density FROM country ORDER BY Population_Density DESC\n\n", "7d96d90986819807d04cf2ab": "This question cannot be answered with the given tables as they are related to student enrollment and courses, not properties and security features.", "2b63ba54d1ba65a0ad95821b": "This question does not seem to be related to the tables provided.", "93bdb1c7510c61cb4d4c6366": "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "238d20ff01204e95137a5caa": "SELECT T1.series_name, T1.Country, T1.Language, T1.Content FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Rating < 5 AND T2.Share < 10 AND T2.Viewers_m < 1.5", "e79ad3821596e857c2910397": "SELECT count(*) FROM Addresses WHERE line_3 = \"100 feet above sea level\"", "424473ee2a08666fccdd1ff0": "SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1\n\n", "bfad0ffaf3ef2c0db60c646e": "SELECT T1.first_name, T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id JOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id ORDER BY rank_point DESC LIMIT 1", "09bee9c9d602c6d605262ef6": "SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)", "96ef328d08f1ccdcb1f78a0b": "SELECT sum(Population) FROM city WHERE District = 'Gelderland'", "1594529174d86f345885e567": "SELECT COUNT(DISTINCT professional_id) FROM Treatments", "bda2fc1cd107bdb2021838a6": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)", "0118e9a0beb2acf4c3d4c10c": "SELECT charge_type, charge_amount FROM Charges", "6ff03b16faf9cda9833d2bac": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)", "edca5824850ba858d0027811": "SELECT avg(grade) FROM Transcript_Contents", "629b776576156a90d2a0bbe9": "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered ASC LIMIT 1\n\n", "852c63a42a7c038a4bc61026": "SELECT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Europe' \nAND countrylanguage.Language = 'English' \nAND countrylanguage.IsOfficial = 'F'", "b82ab6d1913c1768e63d7b6d": "SELECT date_arrived, date_departed FROM Dogs\n\n", "d9d0f32a5c76399b531f27b7": "SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = 'code'", "444d2a0e46b3686b69a593c9": "This question cannot be answered with the given tables as they do not contain information about singers or their net worth.", "bb7e10c79cfbd3390a81694a": "SELECT T1.student_id, T1.course_id, T2.grade FROM Student_Enrolment_Courses AS T1 JOIN Grades AS T2 ON T1.student_course_id = T2.student_course_id WHERE T2.grade NOT IN ('A', 'B', 'C', 'D', 'F') \n\n", "1d3720f7cc2fb82e4eada8da": "SELECT count(DISTINCT country) FROM addresses WHERE other_address_details LIKE '%left-hand driving%'", "3b22b07edb7a07bb3d701783": "This question cannot be answered with the given tables.", "a2d6bf5fc242ab5e4167906a": "SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "d519f55f8085e90bcf9bfd50": "SELECT Region FROM country WHERE Capital = (SELECT ID FROM city WHERE Name = 'Kabul')", "7dcdd8d37bfe4053541db7b1": "This question does not seem to be related to the tables provided.", "d02a356629aaad5baa10938d": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)", "b957dd8922a6cbad2c3bcb25": "SELECT T3.semester_name FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN semesters AS T3 ON T1.semester_id = T3.semester_id GROUP BY T3.semester_id ORDER BY sum(T2.earnings) DESC LIMIT 1", "e78b45bb68a79aa58861dbc5": "This question does not seem to be related to the tables provided.", "aa89d12e8d69cc0a5a8c4368": "SELECT count(DISTINCT country) FROM Addresses", "7b6e799a31b05359090394c1": "This question cannot be answered with the given tables as they do not contain information about area size or singers.", "595b461e0681a3ad92443d67": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\"", "50f30bbac849401597f5bb9a": "SELECT Language, COUNT(*) AS Num_TV_Channels \nFROM TV_Channel \nGROUP BY Language \nORDER BY Num_TV_Channels ASC \nLIMIT 1", "a682d46f66d7dd6aaff304b7": "SELECT city, count(*) FROM addresses GROUP BY city", "717428e549a977234c2070c2": "SELECT count(*) FROM students WHERE country = 'Russia'", "b36d112220b893739ebac999": "SELECT COUNT(DISTINCT Nationality) FROM people", "fa1240b6545f8381bab954bf": "SELECT count(*) FROM Students", "6a36b0cbebb64d41455f1ec7": "SELECT DISTINCT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') OR Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T')", "9e8bd9ce578a5de1e06a1018": "SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)", "f01b65bc5cea4e2c509b5e50": "This question cannot be answered with the given tables.", "1d762b184fe76d7387918aed": "This question cannot be answered with the given tables.", "80e9d2e40102267cbfa1e85f": "SELECT DISTINCT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)", "b38c5100cbc4a764319ea6d8": "SELECT state, contestant_number, count(*) as vote_count FROM VOTES GROUP BY state, contestant_number ORDER BY vote_count DESC", "274891f5d464ae4df813196b": "This question does not seem to be related to the tables provided.", "04725e6efdcffc3dd4372673": "SELECT AVG(Attendance) FROM show", "4d6778de91504cb0db4cae32": "SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id JOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id WHERE T3.other_details > 2000", "afd1034ac16e6c5e2c214382": "SELECT * FROM addresses ORDER BY address_id ASC LIMIT 1", "4f04e7f41efae3282f4850ff": "This question cannot be answered with the given tables.", "fb1ffb74297fb7e162daa82f": "SELECT DISTINCT state_province_county FROM Addresses", "43b2720a8f3d1c56b95b17f3": "SELECT COUNT(*) FROM Students WHERE first_name = 'Nita' AND last_name = 'Coster'", "a42072f597a4668c288f492c": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'\n\n", "d34a75e1d192b8218e7562c1": "This question cannot be answered with the given tables.", "02debdfcdc17e0bff4377aae": "SELECT T1.first_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id JOIN addresses AS T3 ON T1.permanent_address_id = T3.address_id ORDER BY T1.weight + T1.dog_weight DESC LIMIT 1", "f868d2cf23415c57e2042d72": "This question cannot be answered with the given tables.", "c95eeb9b07653ac90c3918f1": "This question cannot be answered with the given tables.", "3c0a56cb318f2ac3420e1d2d": "This question cannot be answered with the given tables.", "84bf8d7661a3ca093583647c": "SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')", "edc791ba4b763db7273f2fa7": "This question cannot be answered with the given tables.", "43052fc2e5e1d4201e64c7da": "This question cannot be answered with the given tables.", "3e9df97eca0931b4b5c381e9": "SELECT T1.course_name ,  T2.other_details FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Music Box Italia\"", "82a182c5a3e81a6ca97f0694": "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')", "65da8051d88b432cc753f47d": "SELECT first_name FROM (SELECT first_name FROM professionals UNION SELECT first_name FROM owners) AS T1 WHERE first_name NOT IN (SELECT name FROM dogs)", "7eb02ada3c86975a77d7f73e": "This question does not seem to be related to the tables provided.", "bed9b93d1e2594e6fd580a9a": "SELECT count(*) FROM students WHERE first_name LIKE '%Al%' OR middle_name LIKE '%Al%' OR last_name LIKE '%Al%'", "5d6ae60cccb2e274cb4b96a6": "SELECT AVG(transcript_date) FROM Transcripts", "16d02c550768b903fbc0fbc4": "SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones'", "d95ea0fd49c96756b4a41358": "SELECT degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id IN (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)", "1c6fd76f42b29d90a86e2712": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4\n\n", "3be52a77c50d1ce8320f0c7d": "SELECT Country, COUNT(*) AS Number_of_Channels \nFROM TV_Channel \nGROUP BY Country \nORDER BY Number_of_Channels DESC \nLIMIT 1", "1c5b5cbcaad7157c92683dff": "This question does not seem to be related to the tables provided.", "146683bfdc1b9f3f4080e1dc": "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'", "3fc8b7390cfcdd35435bec00": "SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(*) AS num_enrollments\nFROM Students AS T1\nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id\nGROUP BY T1.student_id\nORDER BY num_enrollments DESC\nLIMIT 1", "d88220c531826d93a2bfe46f": "SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'", "51cfa06c945a4963cbba3527": "This question does not seem to be related to the tables provided.", "b9222e6dd7888cfb8659d562": "SELECT T1.first_name, T1.last_name, T2.school \nFROM Students AS T1 \nJOIN Schools AS T2 ON T1.school_id = T2.school_id \nWHERE T2.type = 'High School'", "8929148ac97dfc4df908c74c": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n", "19f8cec9414add215f0db68d": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1\n\n", "61b5efa65081829a6695d800": "SELECT student_course_id, COUNT(*) AS enrollment_count\nFROM Transcript_Contents\nGROUP BY student_course_id\nORDER BY enrollment_count DESC\nLIMIT 1", "08809879736f0b72a9decec4": "SELECT line_1 FROM addresses WHERE address_id IN (SELECT current_address_id FROM students) OR address_id IN (SELECT permanent_address_id FROM students)", "31f4d80ac6bf85ea7bb83294": "SELECT city FROM addresses ORDER BY LENGTH(line_1) + LENGTH(line_2) + LENGTH(line_3) DESC LIMIT 1\n\n", "f7b50b5da5b7c2b6400f06b4": "This question does not seem to be related to the tables provided.", "539a5c95ad7b38cfe54afa57": "This question cannot be answered with the given tables.", "cfc2e1cebfb6b98ba076cc8e": "SELECT student_id FROM Friend INTERSECT SELECT student_id FROM Likes", "d3b264b4f8039cf85995867b": "SELECT SUM(T3.other_details) \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN semesters AS T3 ON T2.semester_id = T3.semester_id \nWHERE T1.first_name = 'Kacey' AND T3.semester_name = '2018'", "a3d57a761fced379eadbcc08": "This question cannot be answered with the given tables.", "6571b4c740fa40fc310993f4": "SELECT count(*) FROM Highschooler", "a41f425d4368ed2e107d8be6": "SELECT p.Name \nFROM people p \nJOIN poker_player pp ON p.People_ID = pp.People_ID \nORDER BY pp.Earnings DESC", "e3052a878bce12a2b148cc6b": "This question cannot be answered directly with the given tables.", "c4e72ff014dac0f5024f3337": "This question cannot be answered using the provided tables.", "995cc14dd0c1866fb3c941b2": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'\n\n", "865bd5d3a5238ad055447b57": "SELECT count(DISTINCT time_zone) FROM addresses\n\n", "455723ab910ea188225ce636": "SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN students AS T4 ON T3.student_id = T4.student_id ORDER BY T4.earnings ASC LIMIT 1", "328882d303933bd4ecb1b89c": "This question cannot be answered with the given tables.", "a420fab8640e6428a0fa5adb": "This question cannot be answered with the given tables as they do not contain information about professionals or treatments.", "b864bef448cff3396b27270b": "SELECT T1.email_address, T2.email_address \nFROM students AS T1 \nJOIN advisors AS T2 ON T1.advisor_id = T2.advisor_id \nWHERE T1.student_id = 2", "21ef871c3e4cbafc0d887b75": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1\n\n", "ad8a07949b1a8e176d42be4f": "SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955", "5aba387cffa6fa01162b2ea5": "SELECT DISTINCT T1.Record_Company FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T1.Year_of_Founded < 2003 OR T1.Year_of_Founded > 2003", "68badc2e6e60d5218b73da52": "SELECT T2.course_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN courses AS T4 ON T3.course_id = T4.course_id WHERE T1.first_name = \"Logan\" AND T1.last_name = \"Logan\"", "813a4a8268f583c48700af6f": "This question does not seem to be related to the tables provided.", "c28437fafe7f78f2d1992d58": "This question cannot be answered with the given tables.", "7b29fcbc5acdaf45dc43bf30": "SELECT cell_mobile_number FROM students WHERE first_name = 'Jessica'", "6d650a40ed7753729be757f6": "This question does not seem to be related to the tables provided.", "63364ab444706fb1de24237e": "SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id", "9fa59f7d6e21875d9e17c9ee": "SELECT country FROM Addresses WHERE country = \"ABW\"", "c54eeb0af202cfd645c00d31": "This question does not pertain to the tables provided.", "f978ae31827bd3f4825ccad0": "This question cannot be answered with the given tables.", "ca9ad7b5f09e352367b6e316": "This question does not seem to be related to the tables provided.", "5eb43b0207ac0481f8a3b31f": "SELECT H2.name \nFROM Highschooler AS H1 \nJOIN Friend AS F ON H1.ID = F.student_id \nJOIN Highschooler AS H2 ON F.friend_id = H2.ID \nWHERE H1.name = 'Kyle'", "2559840ddc7cf14907518c5c": "SELECT Name ,  Year_of_Work FROM conductor ORDER BY Year_of_Work DESC\n\n", "32bba5e8a8531f95fefe4208": "SELECT Name \nFROM country \nWHERE Continent = 'Asia' \nAND Population > (SELECT MAX(Population) \n                  FROM country \n                  WHERE Continent = 'Africa')", "30b658bf12a00685d00e4548": "SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)", "d48c99e5129524acc31cfc78": "SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)", "73c56b51ea3502a95616524a": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n", "8c1848c9b3d823fc4db1cd61": "SELECT series_name, Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Michael Chang'))", "533c7f3dfb306ca45cf5e10b": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n", "241cecfe686dda1495b3616c": "SELECT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')", "a0d0e976ed6041ffa53deb1c": "SELECT region, AVG(lifeexpectancy) FROM country GROUP BY region HAVING AVG(lifeexpectancy) > (SELECT AVG(lifeexpectancy) FROM country)", "3af51a21c1a6602e8d8f22a7": "SELECT T1.rank_point FROM students AS T1 WHERE T1.first_name = \"Amenity\"", "b4ae446d3c31a21b778c665c": "SELECT T2.Orchestra, T2.Record_Company FROM orchestra AS T2 JOIN performance AS T1 ON T2.Orchestra_ID = T1.Orchestra_ID WHERE T1.Type = \"Educational Program\"", "5a4800b06851d29bd66e7c98": "This question cannot be answered with the given tables as there is no information about spouses or conductors in the provided tables.", "bb374b1ad3485f16ffdcb85e": "This question cannot be answered with the given tables.", "265cd7796c15b657f6a71a5c": "SELECT city, state_province_county, country FROM Addresses GROUP BY city, state_province_county, country\n\n", "915510a2f200def0f15484f5": "SELECT Continent FROM country WHERE Name = 'Anguilla'", "edbff89fb9f1c4aff8f314ea": "SELECT Birth_Year, Citizenship FROM singer", "c6f4f2ee058d70de0dbe84ba": "This question cannot be answered with the given tables.", "4c6d60eaecc691c0d9ee55b2": "SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)", "23cebc6baa4c419d0b3a9879": "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)", "2c62900c33263ef9b9af5568": "SELECT T2.first_name, T2.last_name \nFROM students AS T1 \nJOIN people AS T2 ON T1.advisor_id = T2.person_id \nWHERE T1.first_name = 'Alice' AND T1.last_name = 'Walton'", "63e47257cddb28c8893aa090": "SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "d4240a08136ecaaa5fcd6859": "SELECT section_name, section_description FROM Sections", "1fc5e0343fa65741f7a3b5da": "This question seems to be related to a different set of tables than the ones provided in the prompt. Can you please provide the correct question related to the tables provided above?", "85ca1e34ca1ce5b486882006": "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)", "946b0184404795452e8c2dff": "SELECT AVG(Earnings) FROM poker_player", "d5f4e054c9fbb1fc07870f58": "SELECT DISTINCT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "d9ae71ed4dde93c9a03ef02f": "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "aa4e543eefd9769b7e7c4f55": "SELECT count(*) FROM students WHERE email_address LIKE '%@instagram.com' \n\n", "f0b14a10b0b983d290e78351": "SELECT Continent FROM country WHERE Name = 'Anguilla'", "d6d1ed9356ca7d782b10460d": "SELECT Language \nFROM countrylanguage \nWHERE CountryCode IN (\n    SELECT Code \n    FROM country \n    WHERE GovernmentForm = 'Republic'\n    GROUP BY Code \n    HAVING COUNT(*) = 1\n)", "2b49f84ee16c1f475a7847b8": "SELECT T1.first_name, T1.last_name \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN Courses AS T4 ON T3.course_id = T4.course_id \nWHERE T4.course_name = \"Alana Bregman\"", "29901f2e5167af79999bc73e": "This question cannot be answered with the given tables.", "d661d54e72df880828841563": "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'", "5c18a6b7e0723f186d694775": "SELECT breed_name, size_description FROM Breeds, Sizes", "cd0ce093d0cbc681eac3e9ef": "SELECT D.name, T.date_of_treatment \nFROM Dogs AS D \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE D.breed_code = (SELECT breed_code FROM Breeds ORDER BY breed_code LIMIT 1)\nORDER BY T.date_of_treatment", "c171f6bf058ed73ea548d848": "SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "0f7406c815b20c1c93b746bf": "This question cannot be answered with the given tables.", "cc8b4c1fb9a3000ad146ebae": "SELECT ID FROM Highschooler WHERE name = 'Kyle'", "9bcd81bd3e21f42ea8c96b24": "SELECT count(*) FROM treatments", "48648034f73d5f8a6087cbd4": "This question cannot be answered with the given tables.", "c59c8ad857e16e1edea16e4b": "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n", "f548f855ea5b26b370cd0796": "SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments WHERE cost_of_treatment > 1000)", "51f7b20aa85fa130715776c3": "This question cannot be answered with the given tables.", "421341fe1930e12a3ae07e45": "This question cannot be answered with the given tables.", "5866eeca7512093103282373": "SELECT course_name, course_id \nFROM Courses \nWHERE course_id IN (\n    SELECT course_id \n    FROM Sections \n    GROUP BY course_id \n    HAVING COUNT(section_id) <= 2\n)", "d1e0f157253abfb48fbbfba3": "SELECT Name FROM conductor WHERE Nationality <> 'USA' \n\n", "cec8b44ddcd7336cdf1ac995": "SELECT T1.department_description FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN students AS T4 ON T3.student_id = T4.student_id JOIN addresses AS T5 ON T4.current_address_id = T5.address_id WHERE T5.country = \"UK\"", "5be095a93c1fab82f7ae5640": "SELECT count(*) FROM Departments WHERE department_name = 'Show Sponsors'", "dda867f635683dc5aef8962d": "SELECT Name FROM people WHERE Nationality <> 'Russia'", "eca9a0a99c50d65387de117f": "SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')", "fcf7c243c430387cff663d17": "SELECT Major_Record_Format FROM orchestra WHERE Major_Record_Format LIKE '%modern%'", "d210506d6a7bbf3e12dcd210": "SELECT country, national_anthem FROM Countries", "67280700442da6d5020259c6": "This question cannot be answered directly with the given tables.", "a190e35d5304c7eba7e717c8": "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'\n\n", "7f8ee10c2e23bef123856992": "SELECT count(*) FROM Departments WHERE department_name = \"Conductors\"", "450a224227a51fda989e202f": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1)", "e6cbcddc33e4fc8f790db891": "This question cannot be answered with the given tables.", "140221e3de8f8efc4aa220c7": "SELECT Name FROM conductor ORDER BY Age ASC\n\n", "5150009a937a44e010366e32": "This question does not seem to be related to the tables provided.", "b373bff536709312a7a65d36": "This question cannot be answered with the given tables.", "b3ce6f0ac7f33386f5185c42": "SELECT singer.Name, SUM(song.Sales) AS Total_Sales\nFROM singer\nJOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Name", "cefeacbd4e9d44dc250185e4": "This question seems to be related to dog breeds, but the tables provided are for student and course information. Could you please provide a question related to the tables provided so I can assist you better?", "9595f10ca476f36f6b560103": "This question cannot be answered with the given tables.", "62264b06ee4d76775154102b": "SELECT state FROM Owners WHERE state IN (SELECT state FROM Professionals)", "da1b5017a4c16b7afd41397f": "SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District\n\n", "9d05c4fad703e457a3e89e47": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003\n\n", "6857db6be9cd437b8053da00": "SELECT first_name, middle_name, last_name FROM students WHERE student_id = 1101", "a7e59fc1c2c1e9e8bc597ddd": "SELECT T1.date_of_treatment, T2.first_name \nFROM Treatments AS T1 \nJOIN Professionals AS T2 ON T1.professional_id = T2.professional_id", "da49dd65b76cd36e4ab8d251": "This question cannot be answered with the given tables.", "ecc74d5a22900d3159643009": "There is no specific question that can be answered with the given tables.", "982e9ca73cb3ba3cfbac0a26": "This question cannot be answered with the given tables as they do not contain information about poker players or their nationalities.", "30d72ad1d4f0de6a07fe90b5": "SELECT f1.student_id, f1.friend_id\nFROM Friend f1\nJOIN Friend f2 ON f1.friend_id = f2.student_id AND f1.student_id = f2.friend_id", "d3513c7ab967d04aa7af4b90": "SELECT AVG(age) FROM Dogs\n\n", "3d6707afda55ce1a32f0abce": "SELECT section_description FROM sections WHERE section_name = 'h'", "d658074af588c8e653b138a7": "SELECT course_description FROM courses WHERE course_name = \"VAC\"", "89f5c0dbed6f9ef846b51fd6": "This question cannot be answered with the given tables.", "c2ab53986ed2db6995eef182": "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE IsOfficial = 'T' AND IndepYear < 1930", "f3c1a9246c515eef30e32a8c": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n", "f1d56d170dd3feec1b3d5518": "SELECT Name FROM conductor ORDER BY Age", "eddcc359ae1bc11844a8cb93": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1\n\n", "0675bd6376b73adaa685bf03": "SELECT c.Name, c.Population, c.LifeExpectancy \nFROM country c \nWHERE c.Continent = 'Asia' \nORDER BY c.SurfaceArea DESC \nLIMIT 1", "8dcf5645addc4e7e88def84c": "SELECT line_1, line_2, line_3 FROM Addresses WHERE address_id = 2", "40c2392fb83dbde475b5bf89": "This question cannot be answered with the given tables as they do not contain information about mortgages or properties.", "457b092ec31ebf430a54b008": "SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'", "5ab5b96db9de1b28d2136a07": "SELECT T1.name ,  T2.name FROM friend AS T3 JOIN highschooler AS T1 ON T3.student_id  =  T1.ID JOIN highschooler AS T2 ON T3.friend_id  =  T2.ID WHERE T1.grade  <>  T2.grade\n\n", "75b8bbe7e8301917d2cb4ed3": "SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1\n\n", "ee39019fa0cc95c79442af7e": "SELECT T1.other_details FROM sections AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id WHERE T1.section_name = 'Auditions 1' AND T1.section_description = 'June 9th'", "235d060b71085de215fde0c6": "SELECT state_province_county FROM addresses WHERE address_id = (SELECT permanent_address_id FROM students WHERE first_name = 'Todd' AND last_name = 'Casey')", "431dc82877d1770a57d697a4": "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "51522ebff63a6cff4678d003": "SELECT T3.semester_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN semesters AS T3 ON T2.semester_id = T3.semester_id WHERE T1.first_name = 'Sergey' AND T1.last_name = 'Grankin'", "384e6664eb64ba240ce37759": "SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "1a7e4215ca268dec3bb5914f": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD') \n\n", "a17ce37d80efe1281bec919a": "SELECT student_id, COUNT(friend_id) AS num_friends\nFROM Friend\nGROUP BY student_id", "314866c14172b67d1a9b34cf": "SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Addresses WHERE city = 'Tilburg'", "c57ab0d88cfa0f8019b2145b": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'", "56826679caf7a26640128dd4": "SELECT Title, Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID\n\n", "9971d8783c5d081da5c8b6c4": "SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "a7c180fe27414892d2a92c77": "SELECT course_description FROM Courses WHERE course_name = 'Math'", "59ec85630156dbe1d49273e2": "This question cannot be answered with the given tables.", "a9d5d026bf6b81acb2a02dad": "SELECT count(*) FROM Departments WHERE email_address IS NOT NULL\n\n", "7166cb0a110e668df707cf09": "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'", "0467ef37aa217ae5ed58ae1f": "SELECT date_first_registered FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id WHERE T4.department_name = \"Linguistic\" LIMIT 1\n\n", "a2723ddf45f879722b32865e": "SELECT T1.dog_id, T1.age, T2.treatment_type_description \nFROM Dogs AS T1 \nJOIN Treatments AS T2 ON T1.dog_id = T2.dog_id \nWHERE T2.treatment_type_code = 'dietary_needs' \nORDER BY T1.age", "41a26b8d19c74ed3722c1dcb": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1\n\n", "5328dff9bfb9eeed5ff92a91": "This question cannot be answered with the given tables as they do not contain information about songs, singers, or genres.", "78dcf6701a30e6ec0df78635": "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel\n\n", "ef05062008df5a8dd9840b83": "SELECT room_count, property_type, COUNT(*) as property_count\nFROM Properties\nGROUP BY room_count, property_type", "9ce4ed99aa3470d7eb268679": "This question cannot be answered with the given tables.", "3012e703aa8c5d9096f5c9b3": "SELECT DISTINCT Country FROM TV_Channel WHERE Content = 'Animation'", "7584d23d795c687865ab4ada": "SELECT SUM(Population) FROM city WHERE District = 'Gelderland'", "47eddad584fa48d066cb6a7d": "SELECT COUNT(Language) FROM countrylanguage WHERE CountryCode = 'ABW'", "f32f914fea4e8c19a86eabd9": "SELECT MIN(Share), MAX(Share) FROM TV_series\n\n", "908471d2d8c8f3284662996d": "SELECT Title, Rating, Share, 18_49_Rating_Share, Viewers_m FROM Cartoon ORDER BY Rating DESC, Share DESC, 18_49_Rating_Share DESC, Viewers_m DESC", "4672ee638d56e1a74eb88903": "SELECT sum(Population), max(GNP) FROM country WHERE Continent = 'Asia'", "e7d06c57fa3f77013995ce01": "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)", "7036be0ec126a7be940f216b": "SELECT T1.course_name, T2.section_name, T3.other_details\nFROM Courses AS T1\nJOIN Sections AS T2 ON T1.course_id = T2.course_id\nJOIN Student_Enrolment_Courses AS T4 ON T1.course_id = T4.course_id\nJOIN Student_Enrolment AS T5 ON T4.student_enrolment_id = T5.student_enrolment_id\nJOIN Degree_Programs AS T6 ON T5.degree_program_id = T6.degree_program_id\nWHERE T5.student_id = [student_id]", "e250e2df99e3dc6c661aaf45": "SELECT professional_id, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)", "96861a4781bd89c3f401efe3": "This question cannot be answered with the given tables.", "cfc3edcc1c3d816866ca0822": "This question cannot be answered with the given tables and foreign keys.", "edbf7489aa31cab42faaa1e3": "SELECT avg(rank_point) FROM Students WHERE first_name = \"Amenity\"", "30782496c7ce3cd9854f2375": "SELECT T2.first_name, T3.treatment_type_description \nFROM Treatments AS T1 \nJOIN Professionals AS T2 ON T1.professional_id = T2.professional_id \nJOIN Treatment_Types AS T3 ON T1.treatment_type_code = T3.treatment_type_code", "0f8896abd172d342f6041f24": "This question cannot be answered with the given tables as there is no information related to socioeconomic status.", "da364c68b0d991d86576e693": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n", "14cf4dd914c0d73d84cbaa3e": "SELECT T1.semester_name, T1.semester_id \nFROM Semesters AS T1 \nJOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id \nGROUP BY T1.semester_id \nORDER BY COUNT(T2.student_id) DESC \nLIMIT 1", "2703025a6e1ea7df9f64e9cf": "SELECT T1.timezone FROM voters AS T1 JOIN votes AS T2 ON T1.voter_id = T2.voter_id JOIN contestants AS T3 ON T2.contestant_id = T3.contestant_id WHERE T3.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.timezone FROM voters AS T1 JOIN votes AS T2 ON T1.voter_id = T2.voter_id JOIN contestants AS T3 ON T2.contestant_id = T3.contestant_id WHERE T3.contestant_name = 'Kelly Clauss'", "c90ca1048c525d22c9ee6e5a": "SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs", "5413d7d6e1bc07c744dce308": "SELECT degree_summary_name FROM Degree_Programs AS dp JOIN Student_Enrolment AS se ON dp.degree_program_id = se.degree_program_id GROUP BY degree_summary_name ORDER BY COUNT(student_id) DESC LIMIT 1\n\n", "c535f960df01d5e65ab607cb": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n", "aacc03a1d2559e160d85e5e0": "SELECT Language \nFROM countrylanguage \nWHERE CountryCode IN (\n    SELECT Code \n    FROM country \n    WHERE GovernmentForm = 'Republic'\n    GROUP BY Code \n    HAVING COUNT(*) = 1\n)", "2e7efaf0ec85cdf5706fe58a": "SELECT COUNT(DISTINCT department_id) FROM Degree_Programs", "852e9db95a48bea4312f6740": "SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE", "e8a58227ca312abf8e49d2d6": "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'", "5068ae39be5520111e139664": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship\n\n", "e8ef87ca423d8c0d5871cd95": "SELECT degree_summary_description FROM degree_programs WHERE degree_program_id = 1\n\n", "508df36b2abb9919bf85e731": "SELECT T3.degree_summary_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T1.first_name = \"Mavis\"", "6a7890d45fbc40df1120667d": "SELECT * FROM singer WHERE Name = \"Michael Jackson\"", "146be42d1d8d1c1870f5456d": "SELECT T1.course_name FROM courses AS T1 WHERE T1.course_name = \"Evil Under the Sea!\"", "b1a58935bae214ac1261de4c": "SELECT vote_id, phone_number, state FROM VOTES", "b66d74853a652337af3d5aaa": "This question does not seem to be related to the tables provided.", "4fe3d125c1117f6ce979fc60": "SELECT p.Name \nFROM people p \nJOIN poker_player pp ON p.People_ID = pp.People_ID \nORDER BY pp.Final_Table_Made ASC", "0f122ff57fbf5504e2d91fe4": "SELECT T3.department_name FROM Degree_Programs AS T1 JOIN Departments AS T3 ON T1.department_id = T3.department_id WHERE T3.department_name = \"Conductors\" GROUP BY T3.department_name ORDER BY count(*) DESC LIMIT 1", "87563ff69c484c11f5dcf235": "This question cannot be answered with the given tables as there is no information provided on the distance between students.", "a27fd1694d1c9bf94ef904ee": "SELECT T3.first_name, T3.last_name \nFROM Degree_Programs AS T1 \nJOIN Departments AS T2 ON T1.department_id = T2.department_id \nJOIN Students AS T3 ON T1.degree_program_id = T3.degree_program_id \nWHERE T2.department_name = \"French\"", "1045989035f32c873abf8335": "This question cannot be answered with the given tables.", "2f7368d63467a2974ee707a4": "This question cannot be answered with the given tables as there is no 'likes' relationship mentioned in the tables provided.", "3f34dab1c534b191616bbd81": "SELECT Name FROM conductor GROUP BY Conductor_ID HAVING COUNT(DISTINCT Orchestra_ID) > 1\n\n", "4315fa400873bc82d581d46f": "SELECT Name FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1)", "c58afca16b36ec7227f59f6b": "SELECT DISTINCT Money_Rank FROM poker_player", "af210a974d01986b5c40421b": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company", "c6f2fe4468b0bafc6038e20d": "This question cannot be answered with the given tables.", "72f16d2dcf84fa469348fc46": "SELECT cost_of_treatment, treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code", "6d27a7e5c2cd00f7e271c6e5": "This question cannot be answered with the given tables as they do not contain information about songs or sales.", "0e4fdce5c4613ff0512bcee7": "SELECT DISTINCT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'", "6b0e3a5d3fe9998e2a5b1423": "SELECT city FROM Addresses\n\n", "a6f75ff789f157c471abe18e": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1", "2ad9610136f6cd1d224987e8": "SELECT Money_Rank FROM poker_player WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)", "2a8fc2c6e17466e2923c8b02": "SELECT course_name, course_id FROM Courses WHERE course_id NOT IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) >= 2)", "51c3189cb78a1e53697c5f45": "SELECT Episode FROM TV_series ORDER BY Rating DESC\n\n", "180cf206adba237d33051df5": "SELECT degree_summary_name FROM Degree_Programs GROUP BY degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1\n\n", "03a8c2a72bd6a74237d0abb3": "SELECT Name FROM country WHERE IndepYear > 1950", "6191d76f1608d8618bf0113e": "SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)", "c55441dd2beb8ee0a6fecc44": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)", "06fdbccb7911f6b516234b0e": "SELECT avg(Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Height > 200", "76f7656dc3388abedd9ef6a5": "SELECT T1.Name, T2.Year_of_Work FROM conductor AS T1 JOIN performance AS T2 ON T1.Conductor_ID = T2.Conductor_ID ORDER BY T2.Date", "955d628cabf132c371c85230": "SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'", "636932d86608447e7dd729c0": "SELECT avg(count(*)) FROM student_enrolment_courses GROUP BY course_id", "e456112264fd909f38472281": "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1", "2f1d449c8d36c78121d4bf65": "SELECT c.Name, cl.Language\nFROM country c\nJOIN countrylanguage cl ON c.Code = cl.CountryCode\nWHERE cl.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = c.Code)", "a82d64f8a62fc587d320a05a": "SELECT COUNT(DISTINCT current_address_id) FROM students", "f877de4578b18f974897249a": "This question cannot be answered with the given tables.", "5d4787a95f36e78d1f838e9a": "SELECT grade FROM transcript_contents WHERE student_course_id IN (SELECT student_course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id IN (SELECT student_id FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE city IN (SELECT city FROM addresses GROUP BY city HAVING count(*) > 30000))))) GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "dcd3630b05490796059dc74e": "SELECT transcript_date FROM transcripts ORDER BY duration DESC LIMIT 1", "227c46f05ff3c93f1fc54393": "SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Kelly Clauss')))", "19c83355b21195fc56a8a56c": "SELECT city FROM addresses WHERE country = 'Afghanistan' GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1", "7ef70f25ffeff3d41e03b04d": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Aruba')) FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Aruba') AND age >= 20 AND age < 30", "b067dd3100780e91ba15aadb": "This question cannot be answered with the given tables.", "9904c2ef361c785cf400e76e": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode HAVING COUNT(Language) > 1)", "e855c576bf35b72cd79aeb34": "SELECT AVG(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)", "a3b0f5051b554483667ea8da": "SELECT T1.last_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id WHERE department_name = \"Management\"", "4270d0c81c25fd2dea808bb9": "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_name = 'Open Floor Plans'", "8b14aa862da6475224aebd28": "SELECT * FROM poker_player WHERE Final_Table_Made = 'Yes' AND Best_Finish = '1st' AND Money_Rank = '1st' AND Earnings > 1000000", "616da977764a9284b48ac172": "This question cannot be answered with the given tables.", "416157033dd81f9f4dd87e9c": "SELECT DISTINCT Major_Record_Format FROM orchestra\n\n", "85a3c9f0b6179942f8a4e6d4": "SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)", "b07a63a608c2e526e1b0f960": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "0110826f0dbf302b3a60d540": "SELECT DISTINCT breed_name, size_description FROM Breeds, Sizes, Dogs WHERE Dogs.breed_code = Breeds.breed_code AND Dogs.size_code = Sizes.size_code", "2f221f6dd86292b65abe60b1": "This question cannot be answered with the given tables. The tables provided are related to student enrollment and courses, not properties.", "64f171150a38adacf03c480a": "SELECT first_name ,  last_name FROM students ORDER BY cell_mobile_number LIMIT 1\n\n", "c355ff4d7f27517ab3b9f0f8": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1)", "14de6552dda0933d8433f793": "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1\n\n", "2ad4aa3668d13ed704cab4d0": "SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE", "33ed49eed5ca691cdf56a27c": "This question cannot be answered with the given tables.", "249c11ec294046c437868f24": "SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')", "d701d859ada45ac13f53ea93": "SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs", "dff1bd2604f1ad8be8dfe4a5": "SELECT AVG(age) FROM students WHERE grade = 'high school'", "602d2f8d59f787befaa350f1": "This question cannot be answered with the given tables.", "3e8c4825d77b89142403881e": "SELECT course_description FROM courses WHERE course_name = \"Veterinary Treatments\"", "629a89d1655b57ba578b162f": "This question does not seem to be related to the tables provided.", "50b0b3bae06052d61c43144d": "SELECT COUNT(DISTINCT professional_id) FROM Treatments", "78c024015c615e19bce5ef6f": "SELECT * FROM singer WHERE Name = 'Prince'", "0515ff55fbb8673f087cb902": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n", "dea8a81612e89f5f308283ba": "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "8b8939c72780a23c4f068e12": "SELECT count(DISTINCT department_name) FROM departments", "04dabc4947337175f984ff20": "SELECT DISTINCT F1.student_id, F2.friend_id\nFROM Friend F1, Friend F2\nWHERE F1.friend_id = F2.student_id\nAND F1.student_id <> F2.friend_id", "78ec930ff748a7f5c52a8a24": "SELECT T1.other_details FROM students AS T1 WHERE T1.first_name = \"Colin\" AND T1.last_name = \"Davis\"", "7471f318af1e0bd9e4fd41d9": "SELECT Name, Citizenship FROM singer WHERE Name = 'Bob Marley'", "ebd09a45c44cb0a8159524df": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')", "d58ba4b4a3ee036fd2c55add": "This question cannot be answered with the given tables as there is no population data available.", "d9ae14fa43aee004fa6793d2": "SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1", "bcba25bc18804a15a221d83f": "SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "bb32b0d889b9ac064295f252": "SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')", "7bd989ea709693e4762cd48a": "SELECT department_name, course_name \nFROM Departments \nJOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id \nJOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id \nJOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id \nJOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id \nGROUP BY department_name, course_name", "5528948af04efb24b7f7d2ed": "SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955", "50dc8ac7d576a43d942e7687": "SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC\n\n", "336bb42ec4f09b7065b5bd3c": "SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)", "8f01942896df2af1d9380b2c": "SELECT count(DISTINCT country) FROM Addresses WHERE other_address_details LIKE '%Indo-European%'", "5cd2a293dd846bc72d990864": "This question cannot be answered with the given tables as there is no table related to religion or religious beliefs.", "7f992c6c42d5accb734e2b70": "This question cannot be answered with the given tables.", "87102096e1ae4f751420dcca": "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id", "6883d855e686aa49079453b4": "SELECT line_1 FROM Addresses WHERE city = 'Houston'", "1826a87821a6da5304134902": "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "a108a28235a3b7ae6e117f84": "SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Engineering')", "04af5ecf452e0ebcdaf9f46b": "SELECT count(*) FROM poker_player", "24cc52398425ff176cb7d644": "SELECT Name FROM people WHERE Nationality <> 'Russia'", "b73d87cf2e6eec8db7df9afa": "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n", "8f0d0c426d0c7c2154890674": "SELECT T1.first_name, T2.treatment_type_description \nFROM Professionals AS T1 \nJOIN Treatments AS T2 ON T1.professional_id = T2.professional_id", "a63b6b1714e014f3e6c98077": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 3)", "5c70d7d74906f196adfd962a": "This question cannot be answered directly from the given tables.", "8dfcd2a650e8af80bfc0c979": "SELECT Name FROM conductor GROUP BY Conductor_ID HAVING COUNT(DISTINCT Orchestra_ID) > 1\n\n", "78a85622714eff4e203f332b": "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50", "c2b0e6b66d98e2ecfe05e1f8": "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'staging_tip'", "401f54a0943baf3abef13b3e": "SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1)", "2f9f23473afbbd8b190d53d9": "This question cannot be answered with the given tables.", "e943a938629d250af96a37cd": "SELECT date_left FROM students WHERE first_name = 'Abigail' AND last_name = 'Johnson'", "ecd74d9826a9c48e7515ad68": "SELECT district, COUNT(*) \nFROM city \nWHERE population > (SELECT AVG(population) FROM city) \nGROUP BY district", "3154f8de13a5188c76fc9a30": "SELECT continent FROM countrylanguage GROUP BY continent ORDER BY count(DISTINCT language) DESC LIMIT 1\n\n", "b54378187cc1740fcf883c07": "SELECT count(*) FROM Highschooler WHERE grade IN (9, 10)", "7986e71ce6bf1b685233572c": "SELECT charge_type FROM charges WHERE charge_amount  >  0", "f25dd602ded93d60ef38f7c3": "This question cannot be answered with the given tables.", "f7aa5ddcbf636f5ace09d297": "This question cannot be answered with the given tables.", "ec50fba352f5de192aebe469": "SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'", "8ce0633fb136e85570e6f333": "SELECT count(*) FROM students WHERE gender = 'male'", "e6abc2df853a573627e1e428": "This question cannot be answered with the given tables.", "9d44a5144365340bb3a641c2": "SELECT T2.course_name FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN courses AS T3 ON T2.course_id = T3.course_id WHERE T3.course_name LIKE '%Internship%'", "1a0e4d4d8c01be2cf7ed815a": "This question cannot be answered with the given tables.", "21190a2dda8cb738910dc833": "This question cannot be answered with the given tables.", "5e3c2a09cc49c33d659af7dd": "SELECT T1.course_name FROM courses AS T1 JOIN sections AS T2 ON T1.course_id = T2.course_id WHERE T2.section_name = \"Study Abroad\"", "b6d1b1a35fd61d831dfe5bb2": "This question does not seem to be related to the tables provided.", "31a06cc66f2fd33446588aa4": "SELECT ssn FROM students WHERE student_id = (SELECT student_id FROM student_enrolment GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)", "9cdc61a897995e78eee25846": "This question cannot be answered directly with the given tables.", "f45da0d551b88bd727b765fd": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "e9bd9b67f51d8724732d4cfe": "This question cannot be answered with the given tables as they do not contain any information related to money spent on dogs.", "abe11365ba3d1b186eb583c3": "SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN students AS T4 ON T3.student_id = T4.student_id WHERE T4.first_name = \"Tre\" AND T4.last_name = \"Hamill\"", "51afca755e1952faaddb1a78": "SELECT section_name, section_description FROM Sections", "143a9e34f5255bf960fa6647": "This question cannot be answered with the given tables as they do not contain any information related to cartoon speeds or knots.", "2c688c844924064a896572cc": "SELECT DISTINCT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Asia' \nAND countrylanguage.Language = 'Chinese' \nAND countrylanguage.IsOfficial = 'T'", "b4b475385b33e4ce0d08cc29": "SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')", "0b00d571ff0d1af413891c6e": "SELECT T1.first_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id \nJOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id \nGROUP BY T1.student_id \nORDER BY SUM(T5.grade_points) / COUNT(T5.grade_points) DESC \nLIMIT 1", "b631e181bf11772d9697d1db": "SELECT degree_summary_description, other_details FROM degree_programs", "ef979676b46052141b6e9bc8": "SELECT property_name FROM Properties WHERE (property_type_code = 'apt' OR property_type_code = 'hse') AND room_count > 1", "73a33e84e28ac9cd9082b7c3": "SELECT cell_mobile_number FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment_courses GROUP BY student_id HAVING COUNT(*) > 1)", "c5dbbd5540d8d8167838a288": "SELECT line_1,line_2,line_3 FROM addresses ORDER BY length(zip_postcode) DESC LIMIT 1", "d33a8da042c0d463e9f9efe8": "This question cannot be answered with the given tables.", "fe713a73eccd08d6735d65f4": "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Best_Finish = 1 ORDER BY T1.Final_Table_Made LIMIT 1\n\n", "1f042fa23793bd2b166126ea": "SELECT continent, SUM(population) AS total_population, AVG(lifeexpectancy) AS average_life_expectancy \nFROM country \nWHERE continent IN \n    (SELECT continent \n     FROM country \n     GROUP BY continent \n     HAVING AVG(lifeexpectancy) < 72) \nGROUP BY continent", "8c5e414add4c80331398b999": "SELECT Directed_by, Written_by FROM Cartoon\n\n", "c7ac9c91385badd16b4a429e": "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n", "26d55c9def3779befc993ab0": "This question cannot be answered with the given tables as they do not contain information about cartoons or viewers.", "3996762c8fd30c8f2294e2fb": "SELECT COUNT(DISTINCT Nationality) FROM conductor", "a6d3542a6d4001df2b34d472": "SELECT ID, grade FROM Highschooler", "208e0245fc9effd7c17cb542": "This question cannot be answered directly with the given tables.", "35a64873cc270e507d0bf125": "SELECT series_name, Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones') AND id IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Michael Chang')", "55ea03584830d19094816bfc": "SELECT COUNT(*) FROM Students WHERE first_name = 'Jessica'", "07a3252c60b07d450d8707d2": "SELECT T1.first_name, T1.last_name, T1.state_province_county \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN courses AS T4 ON T3.course_id = T4.course_id \nWHERE T4.votes_received > 0", "69549bedab98db80f1f73a5d": "This question cannot be answered with the given tables.", "bbdc968f7b67235b56493e44": "SELECT MAX(created) FROM VOTES WHERE state = 'CA'", "82df3dddf11c77b37c7a86e0": "SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY count(*) DESC LIMIT 1)", "149241ad21adad0277640f42": "SELECT T1.official_ratings, T1.weekly_rank FROM performances AS T1 GROUP BY T1.official_ratings, T1.weekly_rank", "b87fe84698f458ceda41af48": "This question cannot be answered with the given tables.", "c5926023533caccf207e1a6a": "SELECT cell_mobile_number FROM students WHERE student_id = (SELECT student_id FROM student_enrolment GROUP BY student_id ORDER BY count(*) DESC LIMIT 1) \n\n", "8256633263b066a482470e20": "SELECT Title FROM Cartoon ORDER BY Title ASC\n\n", "cdd33ed5d87bf95ef91b84cc": "This question cannot be answered with the given tables as they do not contain information about apartments or sea levels.", "23fd61436097cdc61e0140eb": "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'", "4bbed4e5b2702912e07de50a": "SELECT owner_id, first_name, last_name \nFROM Owners \nWHERE owner_id IN (SELECT owner_id \n                   FROM Dogs \n                   GROUP BY owner_id \n                   ORDER BY COUNT(*) DESC \n                   LIMIT 1)", "89e2a2170764a7c0faae2875": "SELECT T1.transcript_id FROM transcript_contents AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_course_id = T2.student_course_id JOIN courses AS T3 ON T2.course_id = T3.course_id WHERE T3.course_name LIKE '%man%'", "4026cb060a4d58e3e9199645": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language", "abb704df148a36f56b2629cb": "SELECT DISTINCT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' OR Language = 'English')", "1f3d1b37ee9890cb90bd87c3": "This question cannot be answered with the given tables.", "c4e3cf17b10ed478885c191f": "This question does not seem to be related to the tables provided.", "ee33608bb50ed75d9ea12fe3": "SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by\n\n", "1a704c135de62407122f6440": "SELECT T1.first_name, T2.name \nFROM Owners AS T1 \nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id \nWHERE T1.state = 'Virginia'", "330d89d909a836c13938d55c": "SELECT Title FROM Cartoon WHERE Directed_by = \"Walt Disney\" OR Directed_by = \"Hanna-Barbera\" OR Directed_by = \"Matt Groening\" OR Directed_by = \"Seth MacFarlane\" OR Directed_by = \"Hayao Miyazaki\" OR Directed_by = \"Genndy Tartakovsky\" OR Directed_by = \"Nick Park\" OR Directed_by = \"Chuck Jones\" OR Directed_by = \"Tex Avery\" OR Directed_by = \"Osamu Tezuka\"", "4cec33991addfa441db28fda": "SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship", "d0dd496b86f716d9cd9a4b3f": "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "6269907f55e4c2251a79d939": "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered ASC LIMIT 1\n\n", "be5d82ec4171ab6ad6ed9df0": "SELECT D.name, T.date_of_treatment \nFROM Dogs AS D \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE D.breed_code = (\n    SELECT breed_code \n    FROM Breeds \n    WHERE breed_name = (\n        SELECT breed_name \n        FROM Breeds \n        GROUP BY breed_name \n        ORDER BY COUNT(*) ASC \n        LIMIT 1\n    )\n)", "c05b980a4f52f27431c1270a": "This question cannot be answered with the given tables.", "7b7bc121e0697db6182607e2": "SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Addresses WHERE country = 'North America'", "a770498f7caf8fe2488af65e": "SELECT department_name, department_id FROM Departments WHERE department_id IN (SELECT department_id FROM Degree_Programs GROUP BY department_id ORDER BY COUNT(*) DESC LIMIT 1)", "7eaa6b60c5f4b0b287c4ec66": "This question cannot be answered with the given tables as there is no table that stores information about friendships between students.", "873d14a1274725707526586f": "This question cannot be answered using the provided tables as they do not contain information about international relations or countries in North America.", "7e12eed69881ce16ef59aa58": "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1", "6b8fcf491611484ccc2e7f88": "SELECT T1.transcript_date FROM transcripts AS T1 JOIN transcript_contents AS T2 ON T1.transcript_id = T2.transcript_id JOIN student_enrolment_courses AS T3 ON T2.student_course_id = T3.student_course_id JOIN courses AS T4 ON T3.course_id = T4.course_id WHERE T4.course_name = \"BurglarAlarm\"", "d7247d9a060f5e8604097717": "SELECT DISTINCT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch')", "66b0f4dc3a6215a38bfcc187": "This question cannot be answered with the given tables.", "b026671e4ea10cd722f7b2af": "SELECT COUNT(*) FROM singer", "3ea15e82b1ee568a1c3496c0": "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Jimi Hendrix')", "70dea3e544f55cce2db9fa65": "SELECT Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by, Cartoon.Original_air_date, Cartoon.Production_code, Cartoon.Channel\nFROM Cartoon\nJOIN TV_Channel ON Cartoon.Channel = TV_Channel.id\nWHERE TV_Channel.Hight_definition_TV = 'Yes'", "4dc9c28b143703e36e8cbd3c": "SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id JOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN students AS T4 ON T3.student_id = T4.student_id WHERE T4.first_name = \"Teodor\" AND T4.last_name = \"Salparov\"", "94a5f5bfd3dd15f1535fb3ca": "SELECT Name FROM conductor WHERE Nationality <> 'USA' \n\n", "80fd69ab3290919efeb89636": "SELECT T1.other_details FROM students AS T1 WHERE T1.first_name = \"Semen\" AND T1.last_name = \"Poltakvskiy\"", "caa4ffca2fd0f3ad2253405e": "SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "9b9e2d635e92f91e244f228b": "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = 'ABW')", "0311067e8ffbdbf5961f370b": "SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE contestant_name = 'Tabatha Gehling'", "cb652f18cc83d8120169922a": "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 1)", "124a7573bd7ba2b7d05fb1ca": "This question cannot be answered with the given tables.", "f2da7f63ab294c6f8d8ee88b": "SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1\n\n", "7b885bbe7bbb37b52a47dc3b": "SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Addresses WHERE address_id = (SELECT current_address_id FROM Students WHERE student_id = (SELECT student_id FROM Student_Enrolment WHERE degree_program_id = (SELECT degree_program_id FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Computer Science'))))", "95f0a4e8d84081404c97c9a2": "SELECT T1.email_address FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "a7f3bda23c199c21e7265f1f": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'", "5af5af55d2805f28d699b595": "SELECT transcript_date, transcript_id \nFROM Transcripts \nWHERE transcript_id IN \n(SELECT transcript_id \nFROM Transcript_Contents \nGROUP BY transcript_id \nHAVING COUNT(*) >= 2)", "77d7efdae628755d9503394c": "This question cannot be answered with the given tables as there is no information about salaries in the provided tables.", "cd253bea0e1e593f3974eac1": "SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelors'))", "3becf41b92c7829857fe8a44": "SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix' AND IsOfficial = 'T')", "038891c0484a98a382c034c2": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n", "fb7bd264a31f241ef79f61a8": "SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%'", "6522bd9bbcbf135865908151": "SELECT T1.first_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id \nJOIN departments AS T4 ON T3.department_id = T4.department_id \nWHERE T4.department_name = 'Italy'", "96ed8a0084228b4fced16de2": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n", "e39ac9f2ca17a8319d3db573": "SELECT MAX(share), MIN(share) FROM performance WHERE type <> 'Live final' \n\n", "a4036ea1419f81f626630ef9": "This question cannot be answered with the given tables.", "d3fffe0110fecf6459ead8b9": "SELECT T1.state_province_county, T1.city, T2.dog_breeds, T2.size \nFROM Addresses AS T1 \nJOIN Dogs AS T2 ON T1.address_id = T2.address_id \nGROUP BY T1.state_province_county, T1.city, T2.dog_breeds, T2.size", "f6e50c7ccb712302b8268e48": "SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'History')", "baa5f4b542be99bbbfad29af": "SELECT T1.email_address FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id WHERE T2.degree_summary_name = \"Computer Science\"", "7d4d912276740a1d6b1bd258": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "53245ec9d37005721c345f3f": "SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'", "3f9defd33457a296e39e7717": "SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN addresses AS T2 ON T1.permanent_address_id = T2.address_id JOIN addresses AS T3 ON T1.current_address_id = T3.address_id WHERE T2.zip_postcode = T3.zip_postcode ORDER BY T2.zip_postcode, T1.date_first_registered DESC LIMIT 1", "536285fe855334047ce3b2f7": "SELECT COUNT(DISTINCT Language) FROM countrylanguage", "fdaf53a475336cfc1f44e0ff": "SELECT T1.time_zone FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.current_address_id ORDER BY T2.date_first_registered DESC LIMIT 1", "dfdf0cceb707a5014c0fb911": "SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "84e1264925eb59ccf037fe36": "This question cannot be answered with the given tables.", "670bc22385613200ae8615ca": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "a67deade7caed10c43fa11fd": "SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))", "1acd91371770b0489e172d74": "SELECT course_id, COUNT(course_id) AS course_count\nFROM Student_Enrolment_Courses\nGROUP BY course_id\nORDER BY course_count DESC\nLIMIT 1", "0c330f1a3f414cff1a267d8b": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "d3c4e4ca52223ed1b207de57": "This question cannot be answered with the given tables.", "2dad65a2914ca44e6f901068": "SELECT other_details FROM courses WHERE course_name = \"Math\"", "e8990b03f0674ed71a12c7b8": "SELECT country FROM addresses WHERE other_address_details = 'male life expectancy' ORDER BY length(line_1) DESC LIMIT 1\n\n", "b66a3740ae9f5db6e2c3f9df": "SELECT name, grade FROM Highschooler", "8528c0f2874c8b12dc960edc": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality", "7f9089eb8b2504bf30e8c18d": "This question cannot be answered with the given tables.", "402896024a57a76939088b76": "SELECT transcript_id, transcript_date \nFROM Transcripts \nWHERE transcript_id IN \n    (SELECT transcript_id \n     FROM Transcript_Contents \n     GROUP BY transcript_id \n     HAVING COUNT(*) >= 2)", "b6e0e749c2542f564ba30413": "SELECT last_name FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM student_enrolment)", "c9186f62cafdd58c7d11cf01": "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "005e7984f350dcf461fc0170": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1\n\n", "c92af61f0a38a1f7501e7d21": "SELECT email_address FROM students ORDER BY count(*) DESC LIMIT 1\n\n", "b5b43934e85bd4a5a22e66a5": "SELECT email_address, cell_number, home_phone FROM Professionals\n\n", "e3910b111e8bb3b36a0185c0": "SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "36310118c8f141c91b6fcb4a": "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949", "c6711489d5b763f89ab61af1": "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'", "8a2c4e1e302acaea6d7bd463": "This question cannot be answered directly with the given tables. The tables provided do not contain information about social media or the nature of friendships.", "82d08f8d7e91c1c8c91209d0": "SELECT date_of_treatment, first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id", "a64ef6017f0cc8903735f0a2": "SELECT ssn FROM students WHERE first_name = 'Kyle'", "11f724e5fe0aeec461a55e3c": "This question cannot be answered with the given tables as they do not contain information about conductors or their career trajectories.", "1f354580370732834a2ecdd8": "This question cannot be answered with the given tables.", "82d6bf3df3257a572a7abd9e": "This question does not seem to be related to the tables provided.", "07248c3fde45ca7398bfeb2d": "SELECT address_id, line_1, line_2 FROM addresses WHERE address_id IN (SELECT current_address_id FROM students GROUP BY current_address_id ORDER BY count(*) DESC LIMIT 1)\n\n", "1ba9b4a0e4cd1e00aefa7e3e": "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n", "8707467f0de1d31ad7105442": "SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)", "971cb5c909900e7f0d50dafc": "SELECT grade FROM Highschooler WHERE name = 'Kyle'\n\n", "c0016695968dabd94ff716dd": "SELECT continent, AVG(lifeexpectancy) AS avg_life_expectancy, SUM(population) AS total_population \nFROM country \nGROUP BY continent \nHAVING AVG(lifeexpectancy) < 72", "81156c2aa464f64da96a4725": "SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = (SELECT feature_type_code FROM Other_Available_Features WHERE feature_name = 'AirCon')", "5847b151c5ee9e4a233b0dd9": "This question cannot be answered with the given tables as there is no table related to poker players or their spouses.", "d935972dd6ed247350e7286b": "SELECT count(*) FROM Departments WHERE department_description = 'Language' AND other_details = 'Asia'", "1e64edb741404aca3567b648": "SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000", "044c98fc01ca045299a9051f": "This question does not seem to be related to the tables provided.", "b3a4556a57081884aaf93723": "INSERT INTO Reminder (reminder_type, reminder_date, reminder_details)\nVALUES ('Phone Call', '2022-10-15', 'Reminder for students about course registration deadlines')", "5bde5711c55442403edf9db8": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "0ee148546bada3dcf3858d97": "This question does not seem to be related to the tables provided.", "dd15f160100d2548f6fce8ae": "SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1\n\n", "2eaad528a90805e24372acb5": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1\n\n", "a297fce14d6acf5ef1894d6a": "This question cannot be answered with the given tables.", "66da345173041a2a9be2f240": "This question cannot be answered directly with the given tables.", "4c240584926fe6d76a8b6637": "This question cannot be answered with the given tables.", "76b7125aa4c80c62170f5dd7": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')", "3ae8723d8b7320bea3175ec3": "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(*) AS num_enrollments\nFROM Students AS T1\nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id\nGROUP BY T1.student_id\nORDER BY num_enrollments DESC\nLIMIT 1", "6498be8762b873b18efdf820": "SELECT T1.name, COUNT(T2.liked_id) AS num_likes\nFROM Highschooler AS T1\nJOIN Likes AS T2 ON T1.ID = T2.student_id\nGROUP BY T1.ID", "f4155f1acb1b8d9bc93a37b1": "SELECT first_name, middle_name, last_name FROM students ORDER BY date_left ASC LIMIT 1\n\n", "18adce893efccc447389682c": "This question cannot be answered with the given tables.", "118d43a80c47f705c4e4f46a": "This question does not seem to be related to the tables provided. Can you please provide a question related to the tables provided so that I can assist you with the SQL query translation?", "0624991e34efd6592749aa7f": "SELECT T1.first_name, T2.name \nFROM Owners AS T1 \nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id \nWHERE T1.state = 'Virginia'", "07ba6a83ad1ce3e11feb81ec": "This question cannot be answered with the given tables as there is no information related to horsepower in the provided tables.", "80ce5f0f4b7c3950fedc263e": "SELECT COUNT(DISTINCT Language) FROM countrylanguage", "12a1ce801c4e813d0deec7af": "This question cannot be answered with the given tables.", "07334723b7f53588eba2caf6": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "0e850fd5aca25f94c9fdeaa3": "SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT avg(cost_of_treatment) FROM Treatments))", "dee39760c6baf216390a5c97": "SELECT T1.name, COUNT(T2.liked_id) AS num_likes \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.ID, T1.name", "412f63718f3bc1253fa29a08": "SELECT name, grade FROM Highschooler", "205b0998ec9ed3508016d5b3": "This question cannot be answered with the given tables.", "62c15f82061e8343e0ede3ee": "This question cannot be answered with the given tables.", "84cba41f629e7d163483c394": "SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id ORDER BY count(*) ASC LIMIT 1)", "314614766043b472b7eeaca4": "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'", "8dc42380cb8075c6f1af8840": "SELECT state, contestant_number, created FROM VOTES ORDER BY created", "7f8c8a7c45f973f2b9e8d117": "SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1", "bffaecee36ca9e1b8237cb7e": "SELECT feature_name FROM Other_Available_Features WHERE feature_type_name = 'taxes'", "336d1b7895420ffec61d2a56": "SELECT date_arrived, date_departed FROM Dogs\n\n", "6e35c29eee4a7dd174234903": "SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000", "ebae21f9856a3e94a31c1e12": "SELECT O.first_name, D.name FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id", "e2e12991480af133b9baa27d": "SELECT T1.course_description FROM courses AS T1 WHERE T1.course_name = \"Sky Radio\" AND T1.other_details = \"Spanish\"", "00f410f60091d8f8de734e8f": "SELECT name FROM people WHERE Nationality = 'Texas' AND Name = 'Hold'em'", "bc069c4a030deb1898a296e4": "SELECT count(cell_mobile_number) FROM students\n\n", "c7c0b9dc128cd86226ea1329": "SELECT city FROM Addresses WHERE country = 'Angola' AND other_address_details LIKE '%capital%'", "8bd9dced1a1b8fb133ae000c": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC", "a86ddb923e1b7af244249aa8": "SELECT DISTINCT H1.name \nFROM Highschooler AS H1 \nJOIN Friend AS F ON H1.ID = F.student_id \nJOIN Likes AS L ON H1.ID = L.student_id", "afbba10f521908c63fefab52": "SELECT Name FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1)", "7271f78b0c088e8542f94b0f": "SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments)", "0a0c62ee3eabd3acaa530838": "SELECT O.first_name, O.last_name, S.size_description\nFROM Owners O\nJOIN Dogs D ON O.owner_id = D.owner_id\nJOIN Sizes S ON D.size_code = S.size_code", "8a6662d216b4e8ba650c3f94": "SELECT avg(grade) FROM student_enrolment_courses WHERE course_id = (SELECT course_id FROM courses WHERE course_name = \"Math\")", "26815cef5927ea4d1f7305f8": "SELECT Name FROM country WHERE IndepYear > 1950\n\n", "bd946edc9267785a7505c28a": "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n", "25be0ae80dba4671c2c051b3": "This question cannot be answered with the given tables.", "5d822ec4dab708e2989a7a95": "SELECT Final_Table_Made, Best_Finish FROM poker_player", "e2c71f20bab0198ace3e2ba1": "SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AF' AND IsOfficial = 'T'", "d6435a10413fa440e93398fd": "SELECT T1.first_name ,  T1.last_name ,  T1.nationality FROM students AS T1 JOIN people AS T2 ON T1.student_id = T2.person_id WHERE T2.nationality = \"French\"", "f940e053662f7085c56fd641": "SELECT T1.first_name, T1.last_name, (YEAR(CURRENT_DATE) - T1.birth_year) AS age, T1.citizenship, T1.net_worth\nFROM singers AS T1\nORDER BY age DESC\nLIMIT 1", "81e6a93d0acce672ca5817f4": "This question cannot be answered with the given tables.", "217069ae533005e63bdcb57e": "SELECT country, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Students WHERE age BETWEEN 20 AND 29) AS percentage\nFROM Students\nWHERE age BETWEEN 20 AND 29\nGROUP BY country\nORDER BY COUNT(*) DESC\nLIMIT 1", "6f9af87be31ddeb07a196373": "SELECT count(*) FROM Departments", "238b4ca687d67a26f4aa4b4b": "This question cannot be answered with the given tables.", "0d050b39bfadc78623d8324c": "SELECT Episode FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')", "fd81898606cc3edc906cafed": "SELECT last_name FROM students AS s\nJOIN addresses AS a ON s.current_address_id = a.address_id\nWHERE a.state_province_county = 'North Carolina'\nAND s.student_id NOT IN (SELECT student_id FROM student_enrolment)", "759075cda7b560d34ae55d46": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade", "8de14a51f5c28ee7f6605f36": "SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea' \n\n", "3151cc708df0baade5bf0593": "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 2)", "5b875623975ec50a956cd934": "This question cannot be answered with the given tables.", "ed4296be31e0d1cfc7876d82": "This question cannot be answered with the given tables.", "5ef53daa6cc2cc23d7bc4e33": "SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'", "5ba8c4424cc9cabe5478d2fb": "SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id GROUP BY T1.department_name HAVING count(*) > 30", "91ddcc65c38722128c5d825b": "SELECT semester_name \nFROM Semesters \nWHERE semester_id IN (\n    SELECT semester_id \n    FROM Student_Enrolment \n    WHERE degree_program_id IN (\n        SELECT degree_program_id \n        FROM Degree_Programs \n        WHERE degree_summary_name IN ('Master', 'Bachelor')\n    )\n    GROUP BY semester_id \n    HAVING COUNT(DISTINCT degree_program_id) = 2\n)", "e676a7b586323cf8ed18b9fe": "This question cannot be answered with the given tables.", "ea54e29a7eac8e498b4db853": "SELECT count(*) FROM Departments WHERE department_id IN (SELECT department_id FROM Degree_Programs)", "3bb4d51302049bd03d1af725": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)", "529eedaaa25d8edb98c55ff9": "The market value of a home is determined by the agreed_selling_price in the Properties table.", "8b0b891c80fdcdbb03764915": "SELECT line_1 FROM Addresses WHERE country = 'Hungary'", "d8fa1557d41d06bfe00b345b": "SELECT first_name, middle_name, last_name, student_id \nFROM Students \nWHERE student_id IN (\n    SELECT student_id \n    FROM Student_Enrolment \n    GROUP BY student_id, semester_id \n    HAVING COUNT(DISTINCT degree_program_id) = 2\n)", "6e6c75bc2b74932578d13260": "SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')", "684b7f08265755578132bb00": "SELECT line_1,line_2,line_3,city,zip_postcode,state_province_county,country FROM addresses ORDER BY down_payment DESC LIMIT 1", "458b13f676b0141bdc6f9f25": "SELECT first_name FROM students WHERE permanent_address_id <> current_address_id\n\n", "333b9a8468261a47580485c9": "SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1", "9ad120ac68504814bd37c9ae": "SELECT city.Name, city.Population, country.Name, country.Population, countrylanguage.Language, countrylanguage.Percentage\nFROM city\nJOIN country ON city.CountryCode = country.Code\nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode\nWHERE countrylanguage.IsOfficial = 'T'\nORDER BY city.Population DESC, country.Population DESC, countrylanguage.Percentage DESC", "8f762a77fcd71d62e989234f": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1\n\n", "b7c2c9c5e242ff0d3a49375c": "SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs WHERE age = (SELECT MIN(age) FROM dogs))", "70a2a6caba26fd6e1bc7107c": "SELECT count(*) FROM transcripts\n\n", "605515c66d74716c5620424a": "This question cannot be answered with the given tables as there is no table related to aircraft or conductors.", "379517826180ddf4088009e4": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "71a100d5be58dfe436967921": "SELECT MAX(share), MIN(share) FROM performance WHERE type <> 'Live final'", "98e29983ff6b0cf918523cd5": "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)", "fcad8557ceac9a999547018d": "This question cannot be answered with the given tables.", "16314ed5cf705eb15d274ff0": "SELECT Name FROM singer WHERE Citizenship <> 'French'", "77d8fdbc380966937635dbc9": "This question does not seem to be related to the tables provided.", "4a119c830d5c3e10b33c3797": "SELECT COUNT(DISTINCT voting_method) FROM voting_methods", "cbdfff22423e41037b32aebf": "SELECT professional_id, role_code, first_name FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2", "a3b85b594f05c1483d43c34c": "SELECT EXTRACT(YEAR FROM transcript_date) FROM transcripts", "508cd5edb53b373e45b5a168": "SELECT count(*) FROM Addresses WHERE year_built < 2000", "01635f8f99557dcf0842e068": "SELECT line_1 FROM addresses WHERE country = 'Aruba' AND other_address_details = 'official language: Dutch'", "beb83acdcf53aac74a448188": "This question does not seem to be related to the tables provided.", "0b62271d45ab5f8cfdb25489": "This question does not seem to be related to the tables provided.", "7e63e64454fa6c01c7876cfc": "SELECT T1.first_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN courses AS T4 ON T3.course_id = T4.course_id \nWHERE T4.course_name = \"Math\" \nORDER BY T4.grade DESC \nLIMIT 1", "63c8b97fd061f3bb4006b17d": "SELECT Continent, sum(GNP) FROM country GROUP BY Continent ORDER BY sum(GNP) DESC\n\n", "e70962ed3c524e6efbc75a78": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "1b8d087e03ed1a9704fa7ef7": "SELECT AVG(age) FROM Dogs", "65cc1d8be3a1d1efa25a0c11": "SELECT first_name, last_name FROM students ORDER BY cell_mobile_number DESC LIMIT 1", "bf72c8e81ca8765677e44a6c": "SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "2fb9386cb567b066a75b1ce9": "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "103d299d5104ae9ea23065b7": "This question cannot be answered with the given tables.", "06f142593803e1762ccb4eb4": "SELECT T2.Orchestra, T3.Type, T3.Date, T3.Official_ratings_(millions), T3.Weekly_rank, T3.Share FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T2.Major_Record_Format = \"Technology\"", "c4faeec204e8c3c0340e1662": "This question cannot be answered with the given tables.", "d9d8e841b3367edc797815e5": "This question does not seem to be related to the tables provided.", "e5720131742e36f24f3127f2": "SELECT COUNT(*) FROM poker_player", "24d58bacadcee6a227261edf": "This question cannot be answered with the given tables as they do not contain information about poker players or their nationality.", "dec89d1a8d1e2acdd391a25c": "SELECT party FROM driver WHERE name = 'Maksim Botin'\n\n", "05d968d49045e816934e3dd2": "This question cannot be answered with the given tables.", "7ea6b90464fe500d43e53efb": "SELECT date_arrived, date_departed FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)", "39f1fb96afcbdcd89ebbc26f": "SELECT T1.country FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.department_id = \"Singers\"", "b5d7b3061d69de7a063a8fc6": "SELECT c.Name, COUNT(cl.Language) AS Num_Languages \nFROM country c \nJOIN countrylanguage cl ON c.Code = cl.CountryCode \nGROUP BY c.Name \nHAVING COUNT(cl.Language) >= 3", "15601201bf230cdb1c2ac98e": "SELECT T1.other_details FROM courses AS T1 WHERE T1.course_name = \"Cha Cha Slide\"", "753c948d84590a2557c68c8d": "SELECT avg(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "d95045b436149b3cfadf104b": "SELECT first_name, last_name FROM students WHERE middle_name IS NULL AND current_address_id IN (SELECT address_id FROM addresses WHERE city = 'NY')", "80329f488b977cff285fab01": "SELECT * FROM singer WHERE Name = 'Freddie Mercury'", "35cf87fda563c3e2d0cbab3d": "SELECT first_name FROM (SELECT first_name FROM professionals UNION SELECT first_name FROM owners) AS T1 WHERE first_name NOT IN (SELECT name FROM dogs)", "d625b9676d59fd6cd3d01fd1": "SELECT Episode FROM TV_series ORDER BY Rating DESC\n\n", "51a0ad21d9ca72f57226d2fa": "This question cannot be answered with the given tables.", "5bb6d1c7fc69b13dd270382d": "SELECT sum(Population), max(GNP) FROM country WHERE Continent = 'Asia'", "cac2a4df46f16b20084d65c2": "SELECT T2.course_name FROM addresses AS T1 JOIN students AS T2 ON T1.country = \"Asia\" JOIN student_enrolment_courses AS T3 ON T2.student_id = T3.student_id JOIN courses AS T4 ON T3.course_id = T4.course_id", "137a19d1f8c5ff0ab056ccb3": "This question cannot be answered with the given tables as they do not contain information about people's weight or height.", "3d031674101741dd754a94b1": "SELECT MAX(Best_Finish) FROM poker_player\n\n", "6ffd8501f622b3760234b693": "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')", "a32f0969743d112c8c8ff85c": "This question cannot be answered with the given tables as there is no information about weight or ownership of Husky.", "1d09fd52a8da57797a4df5bb": "SELECT GovernmentForm, SUM(Population) FROM country WHERE GovernmentForm IN (SELECT GovernmentForm FROM country WHERE LifeExpectancy > 72) GROUP BY GovernmentForm", "85496d2797caef45dfcb6357": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n", "ea259a4c39ba11411ab9177c": "SELECT owner_id, first_name, last_name \nFROM Owners \nWHERE owner_id IN (SELECT owner_id \n                   FROM Dogs \n                   GROUP BY owner_id \n                   ORDER BY COUNT(*) DESC \n                   LIMIT 1)", "8275312528170a9ffcb8a226": "SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name IN ('Masters', 'Bachelors')) GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) = 2\n\n", "f16f323eaa50f49b38c892cb": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality\n\n", "253da0477a1404be0798916a": "SELECT city, COUNT(*) AS population FROM addresses GROUP BY city ORDER BY population DESC LIMIT 3", "a7ecb1b2cf3bc2f3fd2f25eb": "SELECT c.Name, c.Population, c.LifeExpectancy \nFROM country c \nWHERE c.Continent = 'Asia' \nORDER BY c.SurfaceArea DESC \nLIMIT 1", "6d5e53bc54abff052e66a9b5": "This question seems to be related to a different set of tables. Could you please provide the correct question related to the tables provided in the prompt?", "6f9a71b9563674e3eaef1c78": "SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by\n\n", "7680915b149ffa2861dc4d08": "SELECT department_name, count(current_address_id) FROM departments JOIN students ON departments.department_id = degree_programs.department_id GROUP BY department_name\n\n", "3df9764059a63ab8cf30ddc7": "This question does not seem to be related to the tables provided.", "b2af76f10796e22b671cf1db": "SELECT COUNT(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50", "9d33ecc51e7db4e3198f9b3d": "SELECT c1.Name \nFROM country c1 \nWHERE c1.Continent = 'Africa' \nAND c1.Population < ALL \n(SELECT c2.Population \nFROM country c2 \nWHERE c2.Continent = 'Asia')", "071ef906a237ebdb4c478d5d": "SELECT avg(attendance_capacity) FROM shows", "de7276b6e350f7432226a8e3": "This question cannot be answered with the given tables as there are no tables related to record labels or singers.", "325ffee793793f052db7c687": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)", "73094616bf003ef2e6e99727": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'", "af8ac23e7d9c3a6cb8fe2a13": "SELECT line_2 FROM addresses WHERE line_1 = \"Jessie Alloway's office\"", "74ac98d5c6df15fcc7f77913": "SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'", "187b7c1e932e3c4343128596": "This question cannot be answered with the given tables.", "b64e59227f9425f892aa4163": "SELECT T3.treatment_type_description FROM dogs AS T1 JOIN sizes AS T2 ON T1.size_code = T2.size_code JOIN treatment_types AS T3 ON T1.treatment_type_code = T3.treatment_type_code WHERE T2.size_description = \"large\"", "4f094b86195c1da2fd23e4f9": "SELECT governmentForm, SUM(population) FROM country WHERE governmentForm IN (SELECT governmentForm FROM country WHERE lifeExpectancy > 72) GROUP BY governmentForm", "8044149051352e0fa68dec8c": "SELECT grade FROM Highschooler WHERE name = 'Kyle'", "f9c541564d20b4cbae50492c": "SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "73e15c40eb744b3844404bca": "SELECT T1.name AS student_name, T2.name AS friend_name FROM Highschooler AS T1 JOIN Friend ON T1.ID = Friend.student_id JOIN Highschooler AS T2 ON Friend.friend_id = T2.ID\n\n", "d0b1ef84df6d8187231689e1": "SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')\n\n", "eff66eca9c46620065ef4807": "SELECT COUNT(DISTINCT student_id) FROM students", "ef2803e9de662b6b9c97ebb0": "SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "d07c3780d6b559a88a05c65b": "This question cannot be answered with the given tables as they do not contain information about singers or debut years.", "17534dff24a52f828bd92af0": "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'HSE' ORDER BY feature_id DESC LIMIT 3\n\n", "832603a906777e75f2e42a90": "SELECT max(score) FROM Contestants", "a76de0116dc4b2822a13ddb7": "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)", "dd3c0af7c27f033e8df4870f": "SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix' AND IsOfficial = 'T')", "87b442b0056f6080b2fab78f": "SELECT line_1, line_2 FROM addresses\n\n", "b605f6a2bfc7ce153f78f5bf": "SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY count(*) DESC LIMIT 1)", "c72560024ef9d7d66cc6f106": "This question is not related to the tables provided.", "fa10abf4ba85a9821070cfa3": "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm != 'Republic'", "2c8216122a6c857cd66f403e": "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n", "1e2dcd0927a329f118d0207e": "SELECT T2.semester_name, T1.semester_id \nFROM Student_Enrolment AS T1 \nJOIN Semesters AS T2 ON T1.semester_id = T2.semester_id \nGROUP BY T1.semester_id \nORDER BY COUNT(T1.student_enrolment_id) DESC \nLIMIT 1", "ea0917967539816801ca3c8e": "This question cannot be answered directly with the given tables. Additional tables or columns related to the transformation of music by Elvis Presley would be needed to answer this question.", "0eba640870980777f91cff98": "SELECT Name, COUNT(Language) AS Num_Languages \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nGROUP BY Name \nHAVING COUNT(Language) > 2", "9534aa9717c79608171868e1": "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "102be75180606dc23ea52f6f": "This question cannot be answered with the given tables.", "cc7bdf3e0ee402bdef5e8fd9": "This question cannot be answered with the given tables as there is no table or column that contains information about conductors or their spouses.", "5856cbcf19cd211924f14f4e": "SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2", "8364ad0470b853d6d13b1f86": "SELECT T1.breed_name ,  T3.treatment_type_description FROM breeds AS T1 JOIN dogs AS T2 ON T1.breed_code = T2.breed_code JOIN treatments AS T3 ON T2.dog_id = T3.dog_id JOIN treatment_types AS T4 ON T3.treatment_type_code = T4.treatment_type_code GROUP BY T1.breed_name ,  T3.treatment_type_description", "e57eacd4c3e35519245a560d": "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "311abc48d783288d7c0163b7": "This question cannot be answered with the given tables.", "824395c6307733eafe6bacbe": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\"\n\n", "077b03447dff1649705f6deb": "SELECT count(*) FROM Courses WHERE course_name LIKE '%orchestra%' AND other_details LIKE '%allow pets%'", "dd20b917df8ff00e603de98c": "This question cannot be answered with the given tables.", "ddba6c83f5f2018696c89819": "This question cannot be answered with the given tables.", "2ad12efaf82dd5f4ae454fb2": "SELECT owner_id, zip_code \nFROM Owners \nWHERE owner_id IN (\n    SELECT owner_id \n    FROM Dogs \n    WHERE dog_id IN (\n        SELECT dog_id \n        FROM Treatments \n        GROUP BY dog_id \n        ORDER BY SUM(cost_of_treatment) DESC \n        LIMIT 1\n    )\n)", "f2f3f9d3ceaebcc0b4260524": "SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)", "5c46a9a5124109d4d3724366": "This question does not seem to be related to the tables provided.", "3efed486748a52f56891f73c": "SELECT * FROM Addresses WHERE line_1 IS NULL OR city IS NULL OR country IS NULL\n\n", "5defb8a1d272e984ebf4bda1": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1\n\n", "f4543c26765a32ed682aa65b": "This question cannot be answered with the given tables.", "042ea2bccddee382e1f31261": "SELECT T2.last_name, COUNT(*) AS count FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.last_name ORDER BY count DESC LIMIT 1\n\n", "33dd210813cfc20791ae5d2d": "SELECT series_name FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "8e71f908921ab437942e6f80": "This question cannot be answered with the given tables.", "c97d5daf29cbd24633cf0774": "SELECT avg(GNP), sum(Population) FROM country WHERE GovernmentForm = 'US territory'", "8d6b7eb7cf361fd825f84b07": "SELECT T2.contestant_name ,  T1.created FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number", "8fb28041577d276f2e549599": "This question does not seem to be related to the tables provided.", "cf56a43c723a5c3ce7cd849b": "This question cannot be answered with the given tables.", "c3261448c4255cff2ad7c90a": "SELECT count(*) FROM Treatments", "b70b5e558f1be74067699dbc": "This question cannot be answered with the given tables.", "ed635794d5df2083a95328c6": "SELECT first_name, last_name FROM students WHERE date_left > '2011'", "79d9f5f89b618ce5ab98501d": "SELECT line_1, line_2 FROM addresses\n\n", "4aa646b740adb55e7020b89b": "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\n", "99a260fa3680ef224e4299cb": "SELECT T1.first_name, T1.last_name \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN Courses AS T4 ON T3.course_id = T4.course_id \nWHERE T4.course_name = \"Rock TV\"", "3c85935b87d33f0ec39feb23": "This question cannot be answered with the given tables.", "3294fed9206da1351ec671b5": "SELECT COUNT(*) FROM singer", "73b7db55cae53f3750df46bf": "SELECT Country, COUNT(*) AS Number_of_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_Channels DESC LIMIT 1\n\n", "f96b9a81c12f4cf02cc3f074": "SELECT line_1, line_2, line_3 FROM Addresses WHERE line_1 = '2294 Grant Square' AND line_2 = 'Apt. 235'", "9df059ddd786e5b18a72a2b2": "This question cannot be answered with the given tables.", "ecbb5f58b01e2122d1a6e683": "SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_adopted IS NULL AND date_departed IS NULL)", "65098eb912e04ec6660e5cb7": "This question does not seem to be related to the tables provided.", "e66f824ed2ace6c209f96dbc": "SELECT T2.email_address FROM students AS T1 JOIN advisors AS T2 ON T1.advisor_id = T2.advisor_id", "34f60bef6182749d92942803": "This question cannot be answered with the given tables.", "529c40f0a12eeb43b05f312e": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "70d167a93cdcdf2032380c9e": "SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = 'ECO' ORDER BY feature_id DESC LIMIT 3\n\n", "bbf729cb98f17cc9c09440ab": "SELECT city.Name \nFROM city \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' \nORDER BY city.Population DESC \nLIMIT 1", "c593c9f3c37b49b902480139": "SELECT COUNT(DISTINCT Nationality) FROM people", "537c56318aa585f7a8528791": "SELECT cost_of_treatment, treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code", "9e7308f5026af62352698be0": "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code IN (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1)", "b4f4051cb8c96389af968729": "This question cannot be answered with the given tables as they do not contain information related to song sales or chart positions.", "ac7167276f30acd484d1f255": "SELECT T1.course_name FROM courses AS T1 WHERE T1.course_id NOT IN (SELECT T2.course_id FROM student_enrolment_courses AS T2 JOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN students AS T4 ON T3.student_id = T4.student_id WHERE T4.other_student_details LIKE '%orchestra%' AND T4.other_student_details NOT LIKE '%pets%')", "092c3e133899849ddde05b40": "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)", "adf535d8041730b8da378f0a": "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin' \n\n", "95bf5edeae417b9b54f03fbf": "SELECT property_address FROM Properties WHERE date_on_market = YEAR(CURDATE()) AND date_sold IS NULL", "db7e4ebb5584cde0ab1d3512": "This question cannot be answered with the given tables.", "e6885ad3f706569898f787d9": "SELECT p.Name \nFROM people p \nJOIN poker_player pp ON p.People_ID = pp.People_ID \nORDER BY pp.Final_Table_Made ASC", "1912196c94bc95fcf3262d47": "This question cannot be answered with the given tables.", "47c183f50c929ae80c9ff8c9": "This question does not seem to be related to the tables provided.", "536a8ce0b6878458fae23356": "This question cannot be answered with the given tables.", "e96bc3de898f01962d88df9d": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\"\n\n", "3bd780716eb8078933071a67": "SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)", "47d44315d3665525ccc75a48": "SELECT max(Share), min(Share) FROM TV_series\n\n", "1a27c9e972f35c6578d1f8cc": "This question is not related to the tables provided.", "1b8858333e0a74d9926d25ba": "SELECT count(*) FROM votes WHERE state = 'NY' OR state = 'CA'", "4edb360e87d67bc7c5fd0d8b": "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'\n\n", "7fb5ba3a2fbf77272aad38f0": "SELECT MAX(age) FROM Dogs", "d1076cc4d3fa4500f83c860c": "This question cannot be answered with the given tables as they do not contain information about life expectancy or continents.", "5f134c244887bcbd6677c9bf": "SELECT name \nFROM Highschooler \nWHERE ID IN \n(SELECT student_id \nFROM Friend \nGROUP BY student_id \nORDER BY COUNT(friend_id) DESC \nLIMIT 1)", "12cceab9180fa1e4ddb756a8": "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'", "146d098a5072b4f681b58740": "SELECT date_arrived, date_departed FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)", "749f745b5beb9ef8ed432a7b": "SELECT COUNT(DISTINCT Nationality) FROM conductor", "849c2a4774a906538cb15da9": "SELECT Content FROM TV_Channel WHERE series_name = \"Educational Cartoons\"", "e3fb86cb00776a605037684a": "SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)", "e0c3cdc3dd210ffd06b67e74": "SELECT department_name, department_id FROM Departments WHERE department_id IN (SELECT department_id FROM Degree_Programs GROUP BY department_id ORDER BY COUNT(*) DESC LIMIT 1)", "0ea1cb2d61c5cf7d2b826259": "SELECT name FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments GROUP BY dog_id HAVING sum(cost_of_treatment) <= 1000)", "878e5107787b954163fa1644": "This question cannot be answered with the given tables.", "f282ca30df9aec18fa82ad9f": "SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1\n\n", "097c3a6b9913a7fa88213957": "SELECT Content FROM TV_Channel WHERE series_name = 'Cartoon'", "03d49b20a8e13fe436129582": "SELECT Name FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM song WHERE Title = \"Imagine\")", "678960e03e810609d798eec6": "SELECT name, COUNT(friend_id) AS num_friends\nFROM Highschooler\nJOIN Friend ON Highschooler.ID = Friend.student_id\nGROUP BY Highschooler.ID, name", "ba361cc1b20066ddeac3617d": "SELECT cell_mobile_number, email_address FROM students WHERE student_id = (SELECT student_id FROM student_enrolment WHERE student_id = (SELECT student_id FROM student_enrolment_courses WHERE course_id = (SELECT course_id FROM courses WHERE course_name = \"Poker\") AND student_id = (SELECT student_id FROM student_enrolment_courses WHERE course_id = (SELECT course_id FROM courses WHERE course_name = \"Poker\") ORDER BY earnings ASC LIMIT 1)))", "6046b513f23546c250ffd30e": "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "eb604fa828f4528e3b5ba28d": "SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1\n\n", "4b48ed020389c70c8cd3ed4d": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' \n\n", "bb7bd4c22d338cd4c32e1d84": "SELECT name FROM Highschooler WHERE grade = 10", "a7f8f5910569298410303f36": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1", "ec71f4942a28a4c6def9f336": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000", "aecc4139af9821ba9ad26389": "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1)", "744499da54346dc92e4dbbe9": "This question is not related to the tables provided.", "a20b5c0f4d4f4fc1e73aa0db": "SELECT c.Name, c.Population, cl.Language, cl.Percentage\nFROM city AS c\nJOIN country AS co ON c.CountryCode = co.Code\nJOIN countrylanguage AS cl ON co.Code = cl.CountryCode\nWHERE cl.IsOfficial = 'T'", "216b78da6d88a0e62d017a93": "SELECT count(*) FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'CA'", "b7e51710618d51f0fd6d584a": "SELECT professional_id, role_code, first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY professional_id HAVING COUNT(*) >= 2", "1fe00cdfe51c550d564fc178": "SELECT Attendance, Official_ratings_(millions) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID", "fc4e367560be0889d43c8720": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000", "e1a93f4bb1f01b5833790cf2": "SELECT owner_id, last_name \nFROM Owners \nWHERE owner_id IN (\n    SELECT owner_id \n    FROM Dogs \n    WHERE dog_id IN (\n        SELECT dog_id \n        FROM Treatments \n        GROUP BY dog_id \n        ORDER BY SUM(cost_of_treatment) DESC \n        LIMIT 1\n    )\n)", "ada4fad3b9c0d8dae2a49b0b": "This question is not related to the tables provided.", "1a6af648ff64599ad8cbc0a1": "SELECT section_description FROM sections WHERE section_name = 'h'", "629dbb17e02095c82998f81d": "This question cannot be answered with the given tables.", "43cd5c6881b69e90a540d39a": "SELECT Title FROM Cartoon ORDER BY Title ASC\n\n", "24247889318a84fb8eafe6b6": "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 2)", "cecabe2bbed29f9f80ba4f6c": "SELECT section_name FROM sections ORDER BY section_name DESC\n\n", "7e30a2ccadda16fba18d1552": "This question cannot be answered with the given tables as there is no information provided about the proximity of cities to the capital.", "186bed2785357a17bfb96546": "SELECT id FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon GROUP BY Channel HAVING count(*) > 2) OR id IN (SELECT Channel FROM TV_series GROUP BY Channel HAVING count(*) > 2)", "4e0e56fcb5ed566430405dc6": "This question cannot be answered with the given tables.", "36004de0a3297a46a5e6f418": "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'", "744fd32d32a7e119f12ee89e": "This question cannot be answered with the given tables.", "8c86a03ac9923659a52ae9df": "SELECT owner_id, last_name \nFROM Owners \nWHERE owner_id IN (\n    SELECT owner_id \n    FROM Dogs \n    WHERE dog_id IN (\n        SELECT dog_id \n        FROM Treatments \n        GROUP BY dog_id \n        ORDER BY SUM(cost_of_treatment) DESC \n        LIMIT 1\n    )\n)", "a205470ab2fd010ff2c40e31": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 3)", "55f8f9e89873e461af1fcf32": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n", "10149b902e045def530f3b67": "This question cannot be answered with the given tables.", "5b7d6174e45ee2778ff0bda2": "This question cannot be answered with the given tables.", "e1e647c140dbfacb4d987e0d": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')", "efa184eb05634f967a1e0fa3": "SELECT DISTINCT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch' AND IsOfficial = 'T')", "5cb067e3fad0bf34dfa52bf3": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "b07f57d8dacc3e12a014851f": "SELECT AVG(Attendance) FROM show", "dc2c8baad8e77ac72458be23": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "b3cf4d52678702a3d7725a15": "SELECT D.size_code, S.size_description, B.breed_name, B.breed_code\nFROM Dogs D\nJOIN Sizes S ON D.size_code = S.size_code\nJOIN Breeds B ON D.breed_code = B.breed_code", "88ced034f0fbe7affe590dfe": "SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')", "2e47ef62ff1d4606767b05a3": "SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000", "a8318e6c6ef73129eddd0058": "SELECT T2.transcript_date FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Evil Under the Sea\" ORDER BY T2.transcript_date DESC LIMIT 1", "8077b3bcba2c2c36ff526a00": "SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "cd076fe8494949f88fba54fa": "SELECT Money_Rank FROM poker_player WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)", "eaacb676c263b587f61baf9b": "SELECT COUNT(*) FROM conductor", "b558707edbad15e608784157": "SELECT T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = \"Work\" AND T2.department_description = \"Owner\" AND T2.other_details = \"Nora Haley\"", "38cce00aff3cea5990b19205": "SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN students AS T4 ON T3.student_id = T4.student_id WHERE T4.first_name = \"owner\" AND T4.last_name = \"owner\"", "27e1eb8f0f70e63aa0ab4034": "SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')", "cac1ba32f6c0a08bec5526f7": "SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'", "9a3542494f64063701453d28": "SELECT max(course_name) ,  min(course_name) FROM courses WHERE course_description LIKE '%cartoon%'", "82dbe618440a5289a31a6a5d": "SELECT contestant_number, contestant_name \nFROM contestants \nWHERE contestant_number = (\n    SELECT contestant_number \n    FROM votes \n    GROUP BY contestant_number \n    ORDER BY COUNT(*) ASC \n    LIMIT 1\n)", "fab9100ba1060f3c94f23186": "SELECT C.Name, O.Orchestra\nFROM conductor C\nJOIN orchestra O ON C.Conductor_ID = O.Conductor_ID", "091ff884276e6b641bc37aaa": "SELECT department_name FROM departments ORDER BY other_details LIMIT 1\n\n", "30092b72a8d61be427bdc9cd": "SELECT first_name, middle_name, last_name FROM students WHERE first_name = 'Jordan'", "1516de4b19181df071c1c95a": "SELECT T1.first_name, T1.state_province_county \nFROM students AS T1 \nJOIN addresses AS T2 ON T1.current_address_id = T2.address_id", "ab874a26cb99f833fd02d4b7": "SELECT T1.name ,  T2.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id", "dc9dfe67e53c0154ebe08ddf": "SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000", "de4fc5e4e1825e2254b78f29": "SELECT COUNT(*) FROM country WHERE Continent = 'Asia'", "cca07b3afb75562ae46d6124": "SELECT charge_type, charge_amount FROM Charges", "0612dd57df6d0fa44facb205": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC\n\n", "015d917e8e3ca31a843ebb44": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade", "474fe619fae762fe3bb2167c": "SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1\n\n", "e5168c7a69eebb4b5923e27a": "SELECT first_name, middle_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%Bachelor%')) \n\n", "43e70683241fb9dd694f3bc8": "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English' \n\n", "a414ae419e0148d45fa7b038": "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) AND IsOfficial = 'T'", "d9d530b1e1aaed276d79cd57": "This question cannot be answered with the given tables.", "e3471190a15b126d8d38fcc5": "SELECT created FROM VOTES ORDER BY created", "64c3f5dd2f3d59fb266ad35b": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD') \n\n", "017cec628701d1beaddf9363": "SELECT email_address, cell_number, home_phone FROM Professionals", "7da2af4fb8e92b0483e9fd8c": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n", "982080ecbe083e41b2a02aea": "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'", "d16bdd4e231d1fd5a8b8d7cf": "SELECT state FROM VOTES GROUP BY state ORDER BY count(*) DESC LIMIT 1\n\n", "af801834bfc72b79c062fa2b": "SELECT Final_Table_Made, Best_Finish FROM poker_player", "0f6a48de4d63287dc8c8f725": "This question cannot be answered with the given tables as they do not contain any information related to public sentiment or the singer Liliane Bettencourt.", "b361133f97c72ce7c0a23d8a": "SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch')", "fad4803d8b796c73d6763884": "This question cannot be answered with the given tables.", "748770af0c4badee8150b1af": "SELECT DATEDIFF(NOW(), date_first_registered) / 365 AS years_of_experience FROM students WHERE first_name = \"Vernice\" AND middle_name = \"Veterinarian\"", "fa303a873527970ed6b34ad5": "SELECT department_description FROM departments WHERE department_name LIKE '%computer%'", "b146c99f2e434347ace2a04d": "This question does not seem to be related to the tables provided.", "465a043eba42abe75ffbf0a7": "SELECT H.name, COUNT(F.friend_id) AS num_friends\nFROM Highschooler H\nLEFT JOIN Friend F ON H.ID = F.student_id\nGROUP BY H.ID, H.name", "16c62ec738d38861692b6551": "SELECT COUNT(*) FROM country WHERE Continent = 'Asia'", "a337b30452aa09bd49f1e8b1": "SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'", "2b5dc7f8320128d41b2c4b2a": "This question cannot be answered with the given tables as they are related to student enrollment and courses, not medical treatments.", "0c1d5619dc4a0c6350bb17a7": "SELECT DISTINCT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'", "c64e212d0e9c942534e1095b": "SELECT DISTINCT created FROM VOTES\n\n", "5250f2d00eb8c48f2830c10a": "SELECT count(DISTINCT country) FROM addresses WHERE country IN (SELECT country FROM addresses WHERE state_province_county = 'Asia')", "43904193302d47e992b86aa2": "This question cannot be answered with the given tables as there is no information about salaries or high schoolers.", "2213c48f8676218e880b0a59": "SELECT T1.first_name, T1.middle_name, T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN courses AS T4 ON T3.course_id = T4.course_id WHERE T1.current_address_id = (SELECT address_id FROM addresses WHERE city = 'NY') GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "011778457202e278facc2cab": "This question cannot be answered with the given tables as there is no table related to fan clubs or singers.", "3358c87e2c3c8deebafeb86a": "SELECT Region, Population FROM country WHERE Name = 'Angola'", "2a5a12e8b638ee57ecc6c845": "SELECT COUNT(*) FROM Courses", "382b8569ccbb8220fdd8c318": "SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "5ee2246a67bd98f1a3835341": "SELECT avg(Earnings) FROM poker_player", "335d3b2b12905003696d80a1": "This question cannot be answered with the given tables.", "8f7270e72443b21ef4d2dab5": "This question does not make sense in the context of the provided tables.", "a042ff3fc6efec393dbf302a": "SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC", "4136f104e624476dbaa9cf7b": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4", "2707a0d9bbf73fcfdf4b9ab1": "SELECT AVG(staff_count) FROM (SELECT state_province_county, COUNT(*) AS staff_count FROM Addresses GROUP BY state_province_county) AS T1", "ee4045a9c50f6872ce935628": "SELECT Continent, COUNT(DISTINCT Language) AS Num_Languages \nFROM countrylanguage \nJOIN country ON countrylanguage.CountryCode = country.Code \nGROUP BY Continent \nORDER BY Num_Languages DESC \nLIMIT 1", "01657018a1aaf00a9f2b639e": "SELECT T2.Orchestra ,  T2.Major_Record_Format FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID", "6ed3cdbedd1fac5acea939ec": "SELECT cell_mobile_number FROM students WHERE student_id NOT IN (SELECT student_id FROM student_enrolment)", "a0a902abe4888ff325731ce5": "SELECT section_name FROM sections ORDER BY section_name DESC", "e68dd2cbebbb17b49c3073d6": "SELECT name FROM Highschooler WHERE grade = 10\n\n", "b419b8a64676844972c5a9bb": "This question cannot be answered directly with the given tables. Additional tables related to education and language diversity would be needed to answer this question.", "4d80a8fe52d74b3682d0c9e8": "SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1", "30db6e3c9b3d7c213efe386c": "SELECT * FROM poker_player WHERE Final_Table_Made = 'Yes' AND Best_Finish = '1st'", "4ed82a42ac12b8ae7e75fd14": "SELECT hse_feature_1, hse_feature_2, hse_feature_3 FROM Properties WHERE property_type_code = 'HSE'", "522d50d6d63b22ec42b16b1b": "SELECT DISTINCT liked_id FROM Likes\n\n", "56c506df7e8f0749cc5d7ca1": "SELECT Directed_by ,  Written_by FROM Cartoon WHERE Title  =  \"music\" \n\n", "020f3e2c842235fd914928ed": "This question cannot be answered directly with the given tables. Additional tables or data related to economic strategies would be needed to analyze the effects on population.", "3e3c059b4c9f36d440bad709": "SELECT T1.Name ,  T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID ORDER BY T1.Year_of_Work", "b7a3ed5dbf85f007ac3f539b": "SELECT T1.breed_name, T2.temperament FROM Breeds AS T1 JOIN Temperaments AS T2 ON T1.breed_code = T2.breed_code", "884ff6caa49b872713582ca8": "SELECT * FROM singer WHERE Name = 'Ella Fitzgerald'", "b18a2618f641427f71f19f6a": "SELECT state, contestant_name, count(*) as total_votes\nFROM VOTES\nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number\nGROUP BY state, contestant_name\nORDER BY total_votes DESC", "41a5fc7dcb51b55a6f7f011e": "SELECT count(*) FROM students WHERE current_address_id = permanent_address_id", "8d98a23bbb004adeb89f006d": "SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings DESC LIMIT 5", "0b8ebb70a6229f8ed48b646f": "This question cannot be answered with the given tables.", "ad60ef79ece5559ef3b68731": "SELECT T1.name ,  T2.name FROM Highschooler AS T1 JOIN Friend AS T3 ON T1.ID  =  T3.student_id JOIN Highschooler AS T2 ON T3.friend_id  =  T2.ID\n\n", "1cd57cdb9dbef4c85bbe7273": "SELECT Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by, Cartoon.Original_air_date, Cartoon.Production_code, Cartoon.Channel, TV_Channel.Language FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.Language != 'English'", "59d10538dbadb8467fc6e532": "SELECT Region, count(*) FROM country GROUP BY Region", "0eb92ba628ed8905bc16b629": "This question cannot be answered directly with the given tables.", "4a3d69a36a8c73a00ea139f7": "SELECT treatment_type_description FROM treatment_types ORDER BY date_of_treatment DESC LIMIT 5\n\n", "144498c7fa70758ff448699b": "SELECT * FROM singer WHERE Name = 'Frank Sinatra'", "d80e4cc9ed73cd2a4d5b9e43": "SELECT count(*) FROM VOTES\n\n", "6caa438c7473939874084786": "This question cannot be answered with the given tables.", "b28795b8b018126e972b6ec1": "SELECT max(Best_Finish) FROM poker_player", "968acd61988fecf20834a95b": "SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = 'financing' AND feature_description = 'first-time homebuyers'", "5ed8c9be25f97f0544df5531": "SELECT T1.name ,  T2.name FROM friend AS T1 JOIN friend AS T2 ON T1.friend_id  =  T2.student_id AND T1.student_id  =  T2.friend_id\n\n", "f9dae39e1fe8557f43ce114d": "SELECT series_name, Content FROM TV_Channel WHERE Content = 'Animated series'", "fc330f8ee8ef0726d421b87b": "SELECT governmentForm, AVG(LifeExpectancy) FROM country GROUP BY governmentForm\n\n", "78ef374e00e504f0019949f0": "SELECT Name, Age, Nationality, Year_of_Work FROM conductor WHERE Year_of_Work >= 10\n\n", "b12e1fab675391c545f93ef3": "This question cannot be answered with the given tables."}