{"04365723c5d125342e01f58a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Vocalize the names of students whose registration date is before 2000.\nPredicted SQL: SELECT first_name, last_name FROM students WHERE date_first_registered < '2000-01-01'\nAnswer: ", "2692e7406f0c53353684c790": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Find the clusters in the friend relationships.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "984c0b107639c8f97c040783": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: list all cartoon titles and their directors ordered by their air date\nPredicted SQL: SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date\nAnswer: ", "c3076fcb9682fd04a77bb806": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the name and directors of all the cartoons that are ordered by air date?\nPredicted SQL: SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date\nAnswer: ", "40c92ed87c22cb6083772444": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the package options and the name of the series for the TV Channel that supports high definition TV?\nPredicted SQL: SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'\nAnswer: ", "5c36fc6291720986c709e906": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What changes occur in friendships over time?\nPredicted SQL: SELECT * FROM Friend\nAnswer: ", "8742791c0587fc672464dde7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the date and id of the transcript with the least number of results?\nPredicted SQL: SELECT transcript_date, transcript_id FROM Transcripts ORDER BY (SELECT COUNT(*) FROM Transcript_Contents WHERE Transcript_Contents.transcript_id = Transcripts.transcript_id) ASC LIMIT 1\n\nQuestion: List the names of students who have enrolled in the degree program with id 5.\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id = 5)\n\nQuestion: How many courses are enrolled in by the student with id 10?\nAnswer: SELECT COUNT(*) FROM Student_Enrolment_Courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM Student_Enrolment WHERE student_id = 10)\n\nQuestion: What is the description of the semester in which the student with id 15 is enrolled?\nAnswer: SELECT semester_description FROM Semesters WHERE semester_id = (SELECT semester_id FROM Student_Enrolment WHERE student_id = 15)\n\nQuestion: List the names of students who have the same current and permanent address.\nAnswer: SELECT first_name, last_name FROM Students WHERE current_address_id = permanent_address_id\n\nQuestion: How many students are enrolled in the degree program offered by the department with id 3?\nAnswer: SELECT COUNT(*) FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE department_id = 3)\n\nQuestion: What is the course name of the course in which the student with id 20 is enrolled?\nAnswer: SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM Student_Enrolment WHERE student_id = 20))\n\nQuestion: List the names of students who have transcripts with more than 5 results.\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment_Courses WHERE student_course_id IN (SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id HAVING COUNT(*) > 5)))\nAnswer: ", "33d98926fa96cc21171e916b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: List the name of singers that do not have any song.\nPredicted SQL: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)\nAnswer: ", "9e0fd4a3d5488a7037ff91bc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show ids of all students who do not have any friends.\nPredicted SQL: SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)\nAnswer: ", "974c37023e8dacc7e7e0ef2e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the capacity of Jordan?\nPredicted SQL: SELECT count(*) FROM students WHERE first_name = \"Jordan\"\nAnswer: ", "30077054e1950e43a73d2676": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Play a motivational soundtrack for students during exam preparation.\nPredicted SQL: This question does not require SQL query as it is not related to retrieving data from the database.\nAnswer: ", "6ef4356d29a8b6ea0f2cdb71": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the most commonly used currency among the departments?\nPredicted SQL: This question cannot be answered with the given tables as there is no currency information available.\nAnswer: ", "0e523dd3fc808e102301dc8e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: what are the different names of the singers that have sales more than 300000?\nPredicted SQL: SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)\nAnswer: ", "1e26305a3c22be5b7316fc09": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which region is the city Kabul located in?\nPredicted SQL: SELECT District FROM city WHERE Name = 'Kabul'\nAnswer: ", "9e8bc6cb391063f3b2703765": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Count the number of likes for each student id.\nPredicted SQL: SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id\n\nQuestion: List the names of students who have friends with a higher grade.\nAnswer: SELECT DISTINCT H1.name FROM Highschooler AS H1 JOIN Friend AS F1 ON H1.ID = F1.student_id JOIN Highschooler AS H2 ON F1.friend_id = H2.ID WHERE H1.grade < H2.grade\n\nQuestion: Find the names of students who have no friends.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\nQuestion: List the names of students who have liked themselves.\nAnswer: SELECT H1.name FROM Highschooler AS H1 JOIN Likes AS L1 ON H1.ID = L1.student_id WHERE L1.liked_id = H1.ID\n\nQuestion: Count the number of friends each student has.\nAnswer: SELECT student_id, COUNT(*) FROM Friend GROUP BY student_id\n\nQuestion: List the names of students who have liked someone with a higher grade.\nAnswer: SELECT DISTINCT H1.name FROM Highschooler AS H1 JOIN Likes AS L1 ON H1.ID = L1.student_id JOIN Highschooler AS H2 ON L1.liked_id = H2.ID WHERE H1.grade < H2.grade\nAnswer: ", "d731f29e0fcbb014524ea349": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Show the name of the performance with the type Auditions 1.\nPredicted SQL: SELECT T1.course_name FROM courses AS T1 JOIN sections AS T2 ON T1.course_id = T2.course_id WHERE T2.section_name = \"Auditions 1\"\nAnswer: ", "29666d3775bd379b23f77816": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Count the number of high schoolers in grades 9 or 10.\nPredicted SQL: SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)\nAnswer: ", "095626f0a79e3deaea7320b1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Find the production code and channel of the most recently aired cartoon .\nPredicted SQL: SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\nQuestion: List the series names of TV shows that are available in high definition.\nAnswer: SELECT series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'\n\nQuestion: Find the episode and air date of the highest rated TV series.\nAnswer: SELECT Episode, Air_Date FROM TV_series ORDER BY Rating DESC LIMIT 1\n\nQuestion: List the titles of cartoons that were written by the same person who directed them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: Find the channel and viewership of the TV series with the highest 18-49 rating share.\nAnswer: SELECT Channel, Viewers_m FROM TV_series ORDER BY 18_49_Rating_Share DESC LIMIT 1\n\nQuestion: List the countries where TV channels offer pay-per-view options.\nAnswer: SELECT DISTINCT Country FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes'\n\nQuestion: Find the channel and weekly rank of the TV series with the most viewers.\nAnswer: SELECT Channel, Weekly_Rank FROM TV_series ORDER BY Viewers_m DESC LIMIT 1\n\nQuestion: List the titles of cartoons that were aired on channels that offer package options.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Package_Option = 'Yes')\nAnswer: ", "2fa563e8d4fc8edc4a3e6c1a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Find the maximum attendance capacity across all shows.\nPredicted SQL: SELECT max(attendance_capacity) FROM shows\nAnswer: ", "f36a499da7496bb370f40c53": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the names of all of the high schooler Kyle's friends.\nPredicted SQL: SELECT H2.name \nFROM Highschooler AS H1 \nJOIN Friend AS F ON H1.ID = F.student_id \nJOIN Highschooler AS H2 ON F.friend_id = H2.ID \nWHERE H1.name = 'Kyle'\nAnswer: ", "b6e28f095d21ef5de7d48a54": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Analyze the relationship between conductor age and the success of their performances.\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about conductors or their performances.\nAnswer: ", "c5f27aeca7eb6f7c3b8d781d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: For each citizenship, how many singers are from that country?\nPredicted SQL: SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship\nAnswer: ", "17fa64cd16174a7585d91ea9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the birth state of the contestant named Tabatha Gehling?\nPredicted SQL: SELECT T1.state_province_county FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.permanent_address_id WHERE T2.first_name = \"Tabatha\" AND T2.last_name = \"Gehling\"\nAnswer: ", "b2675b92eae2ca911c712dad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Show the names of conductors and the orchestras they have conducted.\nPredicted SQL: SELECT c.Name, o.Orchestra\nFROM conductor c\nJOIN orchestra o ON c.Conductor_ID = o.Conductor_ID\nAnswer: ", "eb033c46ae69feea1af53fa6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many degrees does the engineering department offer?\nPredicted SQL: SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Engineering')\nAnswer: ", "a5d5cfca61d18f1a9d3d6ff1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the names of countries that are in Europe and have a population equal to 80000.\nPredicted SQL: SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\nQuestion: List the names of cities in countries where the official language is English.\nAnswer: SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T'\n\nQuestion: Find the names of countries where the head of state is a president.\nAnswer: SELECT Name FROM country WHERE GovernmentForm LIKE '%president%'\n\nQuestion: List the names of cities in countries where the life expectancy is greater than 80.\nAnswer: SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.LifeExpectancy > 80\n\nQuestion: Find the names of countries where the capital city has a population greater than 1 million.\nAnswer: SELECT Name FROM country WHERE Capital IN (SELECT ID FROM city WHERE Population > 1000000)\n\nQuestion: List the names of countries where the percentage of the official language is greater than 50%.\nAnswer: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND Percentage > 50)\n\nQuestion: Find the names of countries where the population is greater than the average population of all countries.\nAnswer: SELECT Name FROM country WHERE Population > (SELECT avg(Population) FROM country)\n\nQuestion: List the names of cities in countries where the government form is a constitutional monarchy.\nAnswer: SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.GovernmentForm LIKE '%constitutional monarchy%'\nAnswer: ", "bffe56bf0ce1729457a1e65c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Count the number of high schoolers.\nPredicted SQL: SELECT COUNT(*) FROM Highschooler\nAnswer: ", "bd35242925c6cd838d57a997": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.\nPredicted SQL: SELECT state FROM votes AS v1 JOIN contestants AS c1 ON v1.contestant_number = c1.contestant_number WHERE c1.contestant_name = 'Tabatha Gehling' AND state IN (SELECT state FROM votes AS v2 JOIN contestants AS c2 ON v2.contestant_number = c2.contestant_number WHERE c2.contestant_name = 'Kelly Clauss')\nAnswer: ", "1fabd3f45a6945153eea68b5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Which address holds the most number of students currently? List the address id and all lines.\nPredicted SQL: SELECT current_address_id, line_1, line_2, line_3 FROM addresses WHERE current_address_id IN (SELECT current_address_id FROM students GROUP BY current_address_id ORDER BY count(*) DESC LIMIT 1)\nAnswer: ", "7592875dff42ca551a817c31": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the most prominent political party among the players?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "e7eaf74538d68d7c56effa22": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the unit of measure for Husky?\nPredicted SQL: SELECT T1.other_details FROM degree_programs AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = \"Husky\"\nAnswer: ", "984c6346bf357416e68bd841": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Please show the different record companies and the corresponding number of orchestras.\nPredicted SQL: SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\nQuestion: List the names of conductors who have worked in the year 2000 or later.\nAnswer: SELECT Name FROM conductor WHERE Year_of_Work >= 2000\n\nQuestion: Find the orchestras that have official ratings of more than 5 million.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 5)\n\nQuestion: Show the names of the conductors who have conducted performances with a share greater than 20.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Share > 20))\n\nQuestion: List the orchestras founded before the year 1990.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded < 1990\n\nQuestion: Find the performances with the highest weekly rank.\nAnswer: SELECT * FROM performance WHERE Weekly_rank = (SELECT MAX(Weekly_rank) FROM performance)\n\nQuestion: Show the orchestras that have not participated in any shows.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)\n\nQuestion: List the performances with the highest attendance.\nAnswer: SELECT * FROM performance WHERE Performance_ID IN (SELECT Performance_ID FROM show WHERE Attendance = (SELECT MAX(Attendance) FROM show))\nAnswer: ", "cc5ed80c86257f44a85cfcc7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Find the sponsor that supports the highest number of contestants.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "e8cc42774473620f77bb9875": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the nationalities for which there are two or more people.\nPredicted SQL: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2\nAnswer: ", "43e95f397db025ed6fe2d6cd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Create an infographic summarizing poker players from Russia.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "7204dc555a6f917d172fd5f1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the average number of horses owned by the channels?\nPredicted SQL: This question does not seem to be related to the tables provided. Please provide a question related to the tables provided for accurate SQL translation.\nAnswer: ", "8d744f8a80fd2651a4a83e81": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Group singers based on their birth year and citizenship.\nPredicted SQL: SELECT birth_year, citizenship FROM singers GROUP BY birth_year, citizenship\nAnswer: ", "5fdf47909429689d5f68df18": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the names and birth dates of people, ordered by their names in alphabetical order?\nPredicted SQL: SELECT Name, Birth_Date FROM people ORDER BY Name ASC\n\nQuestion: List the names of poker players who have made it to the final table.\nAnswer: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made = 'Yes'\n\nQuestion: How many poker players have earnings greater than $1,000,000?\nAnswer: SELECT count(*) FROM poker_player WHERE Earnings > 1000000\n\nQuestion: Show the nationalities and heights of poker players who have a best finish of 1.\nAnswer: SELECT T1.Nationality, T1.Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Best_Finish = 1\n\nQuestion: List the names of people who are not poker players.\nAnswer: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)\nAnswer: ", "6f44d4af4e864d84c1f51a2f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which professionals have done at least two types of treatments? List the professional id and cell phone.\nPredicted SQL: SELECT professional_id, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)\nAnswer: ", "ca7a6cffedb4249de6fd3a28": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the countries that have greater surface area than any country in Europe?\nPredicted SQL: SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')\nAnswer: ", "935d9baaa4e020a703422a6e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the names of all the poker players.\nPredicted SQL: SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player)\nAnswer: ", "7692795cba0092233db6fb9c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.\nPredicted SQL: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = 'The Rise of the Blue Beetle!') \n\nQuestion: List the TV series that have a rating higher than 8.\nAnswer: SELECT * FROM TV_series WHERE Rating > 8\n\nQuestion: What is the country of the TV Channel that airs the TV series with the highest viewership?\nAnswer: SELECT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Viewers_m = (SELECT MAX(Viewers_m) FROM TV_series))\n\nQuestion: List the TV series that are aired in high definition.\nAnswer: SELECT * FROM TV_series WHERE Hight_definition_TV = 'Yes'\n\nQuestion: What is the language of the TV Channel that shows the cartoon \"The Adventures of Tintin\"?\nAnswer: SELECT Language FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = 'The Adventures of Tintin')\n\nQuestion: List the TV series that have a weekly rank in the top 10.\nAnswer: SELECT * FROM TV_series WHERE Weekly_Rank <= 10\n\nQuestion: What is the content type of the TV Channel that airs the TV series with the highest 18-49 rating share?\nAnswer: SELECT Content FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE 18_49_Rating_Share = (SELECT MAX(18_49_Rating_Share) FROM TV_series))\n\nQuestion: List the TV series that have a production code starting with \"ABC\".\nAnswer: SELECT * FROM TV_series WHERE Production_code LIKE 'ABC%'\nAnswer: ", "c2e31d83c83d90286972a475": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the phone number of the man with the first name Timmothy and the last name Ward?\nPredicted SQL: SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'\n\nQuestion: List the names of the students who are enrolled in the degree program with the id 5.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 5)\n\nQuestion: What is the description of the semester with the id 3?\nAnswer: SELECT semester_description FROM semesters WHERE semester_id = 3\n\nQuestion: List the course names and descriptions for the courses in which the student with id 7 is enrolled.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 7))\n\nQuestion: Find the names of the students who have left the university.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: What is the current address of the student with the id 10?\nAnswer: SELECT line_1, line_2, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id = (SELECT current_address_id FROM students WHERE student_id = 10)\n\nQuestion: List the names of the students who have transcripts.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\n\nQuestion: What is the summary name of the degree program with the id 8?\nAnswer: SELECT degree_summary_name FROM degree_programs WHERE degree_program_id = 8\nAnswer: ", "517659d06f525adcce5465a7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the states where both owners and professionals live.\nPredicted SQL: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals\n\nQuestion: List the treatment types and their descriptions.\nAnswer: SELECT treatment_type_code ,  treatment_type_description FROM Treatment_Types\n\nQuestion: Find the names of the dogs that have been treated by a professional with the last name 'Smith'.\nAnswer: SELECT name FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments WHERE professional_id IN (SELECT professional_id FROM Professionals WHERE last_name = 'Smith'))\n\nQuestion: List the first and last names of the owners who have abandoned their dogs.\nAnswer: SELECT first_name ,  last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE abandoned_yn = 'Y')\n\nQuestion: Find the breed names of the dogs that have been treated for more than one treatment type.\nAnswer: SELECT breed_name FROM Breeds WHERE breed_code IN (SELECT breed_code FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments GROUP BY dog_id HAVING count(DISTINCT treatment_type_code) > 1))\n\nQuestion: List the treatment types and the total cost of treatments for each type.\nAnswer: SELECT treatment_type_code ,  sum(cost_of_treatment) FROM Treatments GROUP BY treatment_type_code\n\nQuestion: Find the owners who have spent more than $500 on treatments for their dogs.\nAnswer: SELECT first_name ,  last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment) > 500))\n\nQuestion: List the names of the dogs and their owners who have not been adopted yet.\nAnswer: SELECT D.name, O.first_name, O.last_name FROM Dogs D JOIN Owners O ON D.owner_id = O.owner_id WHERE D.date_adopted IS NULL AND D.abandoned_yn = 'N'\nAnswer: ", "3d26fb055d5473abfc5e6b75": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What's the quality of the campus food like?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "cf9b6bc2c13f3977ec8b3614": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the names of students who have at least 2 likes.\nPredicted SQL: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)\nAnswer: ", "35951b681a7d7ab11983ae4d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Fetch the latest news about \"Sky Radio\".\nPredicted SQL: SELECT * FROM Courses WHERE course_name = \"Sky Radio\" ORDER BY course_id DESC LIMIT 1\nAnswer: ", "b670b1fc3f7bab4921cc7923": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the most common birthplace among singers from United States?\nPredicted SQL: SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id = (SELECT permanent_address_id FROM students WHERE country = 'United States' GROUP BY permanent_address_id ORDER BY COUNT(*) DESC LIMIT 1)\nAnswer: ", "595ba79c4d852f7066427eba": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Count how many countries have the oldest official language origins.\nPredicted SQL: SELECT count(DISTINCT country) FROM addresses WHERE other_address_details LIKE '%oldest official language origins%'\nAnswer: ", "940a9f330805989989aa4e03": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show all the grades of the high schoolers.\nPredicted SQL: SELECT grade FROM Highschooler\nAnswer: ", "88c1c5a94ba1e98610003721": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many official languages does Afghanistan have?\nPredicted SQL: SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'\nAnswer: ", "92db0b461e6dbe59d8d505f3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Which animation studio produced the cartoon directed by Brandon Vietti?\nPredicted SQL: SELECT T3.department_name \nFROM degree_programs AS T1 \nJOIN departments AS T2 ON T1.department_id = T2.department_id \nJOIN courses AS T3 ON T2.department_id = T3.department_id \nJOIN sections AS T4 ON T3.course_id = T4.course_id \nWHERE T4.section_name = \"Brandon Vietti\"\nAnswer: ", "fe734140d39efa9c9a02aa0f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Which property feature was the earliest date on the market itself?\nPredicted SQL: SELECT line_1,line_2,line_3,city,zip_postcode,state_province_county,country FROM addresses ORDER BY date_from LIMIT 1\nAnswer: ", "4ef254748ef822108b8ebe29": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the total number of countries where Spanish is spoken by the largest percentage of people?\nPredicted SQL: SELECT count(*) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE Language = 'Spanish')\nAnswer: ", "939b52eb0700423a5de92de0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the country codes for countries in which people speak langauges that are not English.\nPredicted SQL: SELECT DISTINCT cl.CountryCode \nFROM countrylanguage cl \nWHERE cl.Language <> 'English'\nAnswer: ", "85ecb75fc9070bafcd062475": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: List names of conductors in descending order of years of work.\nPredicted SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\nQuestion: Show the orchestras founded after 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: What is the nationality of the conductor who conducted the performance with the highest official ratings?\nAnswer: SELECT c.Nationality FROM conductor AS c JOIN orchestra AS o ON c.Conductor_ID = o.Conductor_ID JOIN performance AS p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Official_ratings_(millions) = (SELECT max(Official_ratings_(millions)) FROM performance)\n\nQuestion: List the orchestras and their record companies.\nAnswer: SELECT Orchestra, Record_Company FROM orchestra\n\nQuestion: Show the performances with a weekly rank in the top 3.\nAnswer: SELECT * FROM performance WHERE Weekly_rank <= 3\n\nQuestion: What is the major record format of the orchestras conducted by conductors under the age of 40?\nAnswer: SELECT o.Major_Record_Format FROM orchestra AS o JOIN conductor AS c ON o.Conductor_ID = c.Conductor_ID WHERE c.Age < 40\n\nQuestion: List the shows with an attendance greater than 1000.\nAnswer: SELECT * FROM show WHERE Attendance > 1000\n\nQuestion: Show the performances with a share greater than 20%.\nAnswer: SELECT * FROM performance WHERE Share > 20%\nAnswer: ", "6725e3db26951441fa13f5be": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are all the course names of the courses which ever have students enrolled in?\nPredicted SQL: SELECT DISTINCT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)\nAnswer: ", "9dc42e6bc903c1aa57b3a242": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?\nPredicted SQL: SELECT student_id, first_name, middle_name, last_name \nFROM Students \nWHERE student_id IN (\n    SELECT student_id \n    FROM Student_Enrolment \n    GROUP BY student_id, semester_id \n    HAVING COUNT(DISTINCT degree_program_id) = 2\n)\nAnswer: ", "029c4024d0a95c493924cf19": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Show the years in which orchestras that have given more than one performance are founded.\nPredicted SQL: SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)\nAnswer: ", "5cb62a6369126b9d45d4f437": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the area of the TV series \"Emily\"?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "bb94fde2ef4122c290b3dfaf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: How many staff are in Alabama?\nPredicted SQL: SELECT count(*) FROM Addresses WHERE state_province_county = 'Alabama'\nAnswer: ", "84e2252cf2ca5803aad40511": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Whose permanent address is different from his or her current address? List his or her first name.\nPredicted SQL: SELECT first_name FROM students WHERE permanent_address_id <> current_address_id\n\nQuestion: What are the names of the students who are enrolled in the degree program with id 5?\nAnswer: SELECT first_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 5)\n\nQuestion: List the course names and descriptions for the courses that are included in the transcript with id 10.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE transcript_id = 10))\n\nQuestion: How many students are enrolled in the semester with id 3?\nAnswer: SELECT count(*) FROM student_enrolment WHERE semester_id = 3\n\nQuestion: What is the current address of the student with id 25?\nAnswer: SELECT line_1, line_2, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id = (SELECT current_address_id FROM students WHERE student_id = 25)\n\nQuestion: List the names of the students who have left the university.\nAnswer: SELECT first_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: What are the names of the students who have not left the university?\nAnswer: SELECT first_name FROM students WHERE date_left IS NULL\n\nQuestion: List the course names and descriptions for the courses that student with id 15 is enrolled in.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 15))\nAnswer: ", "36bec24b62350fcac2075739": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the impact of public transport on home prices?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "5b456d469e235bc1e619d405": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What scholarships are available for application?\nPredicted SQL: SELECT scholarship_name FROM Scholarships WHERE application_open = 'Yes'\nAnswer: ", "72296c4d0c0542cf720d5840": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List each owner's first name, last name, and the size of his for her dog.\nPredicted SQL: SELECT O.first_name, O.last_name, S.size_description\nFROM Owners O\nJOIN Dogs D ON O.owner_id = D.owner_id\nJOIN Sizes S ON D.size_code = S.size_code\nAnswer: ", "8a13b4b67f3d9c921098f9f8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: For each singer name, what is the total sales for their songs?\nPredicted SQL: SELECT singer.Name, SUM(song.Sales) \nFROM singer \nJOIN song ON singer.Singer_ID = song.Singer_ID \nGROUP BY singer.Name\nAnswer: ", "fdc9d6f96958104f51142363": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the song titles and singer names?\nPredicted SQL: SELECT Title, Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID\nAnswer: ", "4a42fa222357e45dc2fb137b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the age of the oldest dog?\nPredicted SQL: SELECT MAX(age) FROM Dogs\n\nQuestion: List the first and last names of the owners who have abandoned dogs.\nAnswer: SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.abandoned_yn = 'Y'\n\nQuestion: How many treatments have been done for each dog? List the dog id and the count.\nAnswer: SELECT dog_id, COUNT(*) FROM Treatments GROUP BY dog_id\n\nQuestion: Show the names of the professionals who have performed treatments on dogs.\nAnswer: SELECT DISTINCT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments)\n\nQuestion: List the breed names of the dogs that have been treated by a professional with the role code 'VET'.\nAnswer: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code WHERE T2.dog_id IN (SELECT dog_id FROM Treatments WHERE professional_id IN (SELECT professional_id FROM Professionals WHERE role_code = 'VET'))\n\nQuestion: How many dogs have been adopted?\nAnswer: SELECT COUNT(*) FROM Dogs WHERE date_adopted IS NOT NULL\n\nQuestion: Show the treatment type descriptions for the treatments done on dogs.\nAnswer: SELECT DISTINCT treatment_type_description FROM Treatment_Types WHERE treatment_type_code IN (SELECT treatment_type_code FROM Treatments)\n\nQuestion: List the names of the owners who have dogs that have received treatments.\nAnswer: SELECT DISTINCT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.dog_id IN (SELECT dog_id FROM Treatments)\nAnswer: ", "b3585bc1c5383f5909679349": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Make a playlist for a contestant by name.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "d150232bb9e3644d6fcad973": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the average volume among the students who registered after 2001?\nPredicted SQL: SELECT avg(volume) FROM students WHERE date_first_registered > '2001-01-01'\nAnswer: ", "15e5c262cde4f7908490aff2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List top 3 highest Rating  TV series. List the TV series's Episode and Rating.\nPredicted SQL: SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\nQuestion: Find the TV series that has the highest number of viewers.\nAnswer: SELECT series_name FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Viewers_m DESC LIMIT 1)\n\nQuestion: List the titles of cartoons that were directed by 'John Smith'.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = 'John Smith'\n\nQuestion: Find the TV series with the highest 18-49 Rating Share.\nAnswer: SELECT series_name FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY 18_49_Rating_Share DESC LIMIT 1)\n\nQuestion: List the TV series that aired on 'ABC' channel.\nAnswer: SELECT series_name FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series WHERE Channel = 'ABC')\n\nQuestion: Find the TV series with the highest Weekly Rank.\nAnswer: SELECT series_name FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Weekly_Rank DESC LIMIT 1)\n\nQuestion: List the titles of cartoons that were written by 'Jane Doe'.\nAnswer: SELECT Title FROM Cartoon WHERE Written_by = 'Jane Doe'\n\nQuestion: Find the TV series with the highest Share.\nAnswer: SELECT series_name FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Share DESC LIMIT 1)\nAnswer: ", "a89811daac02a0d1d31134e1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What other details can you tell me about students in reverse alphabetical order?\nPredicted SQL: SELECT * FROM students ORDER BY last_name DESC, first_name DESC\n\nQuestion: List the course names and descriptions for courses that are part of the degree program with id 5.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE degree_program_id = 5))\n\nQuestion: How many students are enrolled in the degree program with id 3 in the current semester?\nAnswer: SELECT count(*) FROM student_enrolment WHERE degree_program_id = 3 AND semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'current')\n\nQuestion: Show the names and addresses of students who have left the program.\nAnswer: SELECT first_name, last_name, line_1, city, state_province_county, country FROM students JOIN addresses ON students.permanent_address_id = addresses.address_id WHERE date_left IS NOT NULL\n\nQuestion: List the transcript dates and other details for transcripts that have student course details.\nAnswer: SELECT transcript_date, other_details FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents)\n\nQuestion: What is the department name and description for the department that offers the course with id 7?\nAnswer: SELECT department_name, department_description FROM departments WHERE department_id = (SELECT department_id FROM degree_programs WHERE degree_program_id = (SELECT degree_program_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE course_id = 7)))\n\nQuestion: How many students are enrolled in each degree program? List the degree program id and the count of students.\nAnswer: SELECT degree_program_id, count(*) FROM student_enrolment GROUP BY degree_program_id\n\nQuestion: Show the course names and descriptions for courses that are part of the degree program with id 2 and are offered in the current semester.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE degree_program_id = 2 AND semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'current')))\nAnswer: ", "4557c3aa3f5c48016598615d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Count the number of dogs of an age below the average.\nPredicted SQL: SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)\nAnswer: ", "d46bbf2ca54099b8b3f81e88": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: List the name of singers whose citizenship is not \"France\".\nPredicted SQL: SELECT Name FROM singer WHERE Citizenship <> 'France'\nAnswer: ", "b71b5348e91cf931b258c535": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the description of the department whose name has the substring the computer?\nPredicted SQL: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'\nAnswer: ", "0579ceef75d9951f3dd83f84": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the names of poker players in descending order of earnings?\nPredicted SQL: SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings DESC\nAnswer: ", "406990ea361751947d0fbbe1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Recommend veterinarians based on their treatment history.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "8068808cd35d750a1d595ddf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Find the contact of the poker player Teodor Salparov.\nPredicted SQL: SELECT cell_mobile_number, email_address FROM Students WHERE first_name = 'Teodor' AND last_name = 'Salparov'\nAnswer: ", "3b412a6a60c56f7b94906e0c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What timezone covers the most number of cities?\nPredicted SQL: SELECT timezone FROM addresses GROUP BY timezone ORDER BY count(*) DESC LIMIT 1\n\nQuestion: List the names of all courses offered in the department of Computer Science.\nAnswer: SELECT course_name FROM courses WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Computer Science')\n\nQuestion: Show the names of students who have enrolled in the semester named \"Fall 2021\".\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'Fall 2021'))\n\nQuestion: List the names of students who have taken the course \"Introduction to Programming\".\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE course_id = (SELECT course_id FROM courses WHERE course_name = 'Introduction to Programming')))\n\nQuestion: Show the names of students who have completed their degree program.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE date_left IS NOT NULL)\n\nQuestion: List the names of students who have not yet completed any courses.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id NOT IN (SELECT student_id FROM student_enrolment)\n\nQuestion: Show the names of students who have transcripts.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\n\nQuestion: List the names of students who have a transcript dated after 2020.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents WHERE transcript_id IN (SELECT transcript_id FROM transcripts WHERE transcript_date > '2020-01-01'))))\nAnswer: ", "21cfb5d0d25fbf44b721ac96": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What role does voter accessibility play in turnout?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "bd0110121ce5779f89015e36": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the names of poker players whose earnings is higher than 300000?\nPredicted SQL: SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Earnings > 300000\nAnswer: ", "7f9e3619c3335f56d27906a6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How much does the most expensive charge type costs?\nPredicted SQL: SELECT MAX(charge_amount) FROM charges\nAnswer: ", "a046a4ff02aa0df063972ffe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What region does Angola belong to and what is its population?\nPredicted SQL: SELECT Region, Population FROM country WHERE Name = 'Angola'\nAnswer: ", "b23076496e10f602dba7d38a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Which singers have the same first and current citizenship?\nPredicted SQL: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id JOIN addresses AS T3 ON T1.permanent_address_id = T3.address_id WHERE T2.country = T3.country AND T2.state_province_county = T3.state_province_county AND T2.city = T3.city\nAnswer: ", "52a8500919d544f142937711": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the names of poker players?\nPredicted SQL: SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player)\nAnswer: ", "46a0b5f3e96b3025d48f8cf4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the average transcript date?\nPredicted SQL: SELECT AVG(transcript_date) FROM Transcripts\n\nQuestion: List the names of students who have enrolled in the degree program with id 5.\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id = 5)\n\nQuestion: How many courses are there in the semester with id 3?\nAnswer: SELECT COUNT(course_id) FROM Sections WHERE semester_id = 3\n\nQuestion: Find the student names who have enrolled in the course with id 10.\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment_Courses WHERE course_id = 10))\n\nQuestion: List the names of students who have left the university.\nAnswer: SELECT first_name, last_name FROM Students WHERE date_left IS NOT NULL\n\nQuestion: How many students are enrolled in the degree program with id 7?\nAnswer: SELECT COUNT(student_id) FROM Student_Enrolment WHERE degree_program_id = 7\n\nQuestion: Find the course names in which student with id 15 is enrolled.\nAnswer: SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment WHERE student_id = 15))\n\nQuestion: List the names of students who have the same current and permanent address.\nAnswer: SELECT first_name, last_name FROM Students WHERE current_address_id = permanent_address_id\nAnswer: ", "3f9c920a8980cc8fb15c2093": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the currency of the country where the city of Qandahar is located?\nPredicted SQL: SELECT country FROM Addresses WHERE city = 'Qandahar'\nAnswer: ", "76b1dd4d13a386e809031207": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Find the address of the agency that is involved in selling property with ID 3.\nPredicted SQL: SELECT line_1, line_2, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id = 3\n\nQuestion: List the names of all courses offered in the department of Computer Science.\nAnswer: SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM sections WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Computer Science'))\n\nQuestion: Show the names of students who are enrolled in the semester named \"Fall 2021\".\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'Fall 2021'))\n\nQuestion: List the names of students who are enrolled in the course with ID 5.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE course_id = 5))\n\nQuestion: Show the details of the degree program with the summary name \"Bachelor of Science in Engineering\".\nAnswer: SELECT * FROM degree_programs WHERE degree_summary_name = 'Bachelor of Science in Engineering'\n\nQuestion: List the names of students who have transcripts.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\n\nQuestion: Show the names of students who have left the program.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: List the names of students who have not left the program.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NULL\nAnswer: ", "6f168d52eaf343495fdb312f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is Kurt Walser's password?\nPredicted SQL: SELECT password FROM People WHERE first_name = 'Kurt' AND last_name = 'Walser'\nAnswer: ", "92271095654f94668d490ef1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What drives urban population dynamics?\nPredicted SQL: SELECT city.Name, city.Population, country.Population \nFROM city \nJOIN country ON city.CountryCode = country.Code \nWHERE city.District = 'Urban' \nORDER BY city.Population DESC\nAnswer: ", "4c36c79ea93ba6736ee878e7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the most common unit of measure among the breeds?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "c5074e818fa40d98d2cbc5f1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Create a summary of the linguistic diversity of countries in Africa.\nPredicted SQL: SELECT country, count(*) AS linguistic_diversity FROM addresses WHERE country = 'Africa' GROUP BY country\nAnswer: ", "181c8e32e2afc64e65b72772": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: How many animation studios are listed in the Cartoon table?\nPredicted SQL: SELECT count(*) FROM Courses WHERE course_name LIKE '%Animation Studio%'\nAnswer: ", "b8ae87584fd9edcac60bef59": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the driving side of the country with the smallest land area?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about the driving side of countries.\nAnswer: ", "d64abeeef34fd25ff2184f54": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Cluster songs based on sales and highest chart position.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "8dde17586d1e740a1a242806": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: In what ways do professional dog trainers impact adoption rates?\nPredicted SQL: SELECT T2.role_code ,  count(*) FROM treatments AS T1 JOIN professionals AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.role_code  =  'dog trainer' AND T1.treatment_type_code  =  'adoption' GROUP BY T2.role_code\nAnswer: ", "b3aed91140fcaf03b4a61432": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the program id and the summary of the degree that has the most students enrolled?\nPredicted SQL: SELECT degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id IN (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(student_id) DESC LIMIT 1)\nAnswer: ", "3f8b9cf74bacadda6d734234": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Return the different names of cities that are in Asia and for which Chinese is the official language.\nPredicted SQL: SELECT DISTINCT city.Name FROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'\nAnswer: ", "1a1c91df8b04c5b77f52c47e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What are the distinct states and create time of all votes?\nPredicted SQL: SELECT DISTINCT state, created FROM VOTES\nAnswer: ", "ec9f84eb334c59fd281ba573": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: In what ways does a dog's weight impact its health and lifespan?\nPredicted SQL: This question cannot be answered directly with the given tables. Additional information on the relationship between a dog's weight, health, and lifespan would be needed in order to provide a SQL query to answer this question.\nAnswer: ", "4a360dea03010dd82c6d8897": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Tell me about the effects of recessions on real estate.\nPredicted SQL: This question cannot be answered directly with the given tables. Additional tables or data related to recessions and their effects on real estate would be needed to provide an accurate answer.\nAnswer: ", "26e59036b49ce11467ab3320": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What courses are offered in India?\nPredicted SQL: SELECT course_name FROM courses WHERE country = 'India'\nAnswer: ", "b7ac5a526a2acd4a8646161a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Find the competitions that the high schoolers competed in.\nPredicted SQL: SELECT T2.course_name \nFROM student_enrolment AS T1 \nJOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id \nJOIN courses AS T3 ON T2.course_id = T3.course_id \nJOIN degree_programs AS T4 ON T1.degree_program_id = T4.degree_program_id \nJOIN departments AS T5 ON T4.department_id = T5.department_id \nWHERE T5.department_name = \"High School\"\nAnswer: ", "f679bcac08fd484f53fb6b38": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is Kyle's id?\nPredicted SQL: SELECT ID FROM Highschooler WHERE name = 'Kyle' \n\nQuestion: List the names of all students who have a friend named Jesse.\nAnswer: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend WHERE friend_id = (SELECT ID FROM Highschooler WHERE name = 'Jesse'))\n\nQuestion: List the names of all students who have no friends.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\nQuestion: List the names of all students who like someone with a grade lower than theirs.\nAnswer: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes WHERE liked_id IN (SELECT ID FROM Highschooler WHERE grade < (SELECT grade FROM Highschooler WHERE ID = Likes.student_id)))\n\nQuestion: List the names of all students who have at least one friend with the same grade as them.\nAnswer: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend WHERE friend_id IN (SELECT ID FROM Highschooler WHERE grade = (SELECT grade FROM Highschooler WHERE ID = Friend.student_id)))\nAnswer: ", "a34d767fbfce6475533a7d47": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the number of distinct continents where Chinese is spoken?\nPredicted SQL: SELECT COUNT(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')\nAnswer: ", "98cb361e063cd880fec6cdbc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Which high schooler has the highest capacity?\nPredicted SQL: SELECT T1.first_name, T1.last_name \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id \nJOIN Departments AS T4 ON T3.department_id = T4.department_id \nWHERE T4.department_name = 'High School' \nORDER BY T2.student_enrolment_id DESC \nLIMIT 1\nAnswer: ", "3c8dfd129335dd4c4c37a41a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the names of the singers whose birth years are either 1948 or 1949?\nPredicted SQL: SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\n\nQuestion: List the titles of the songs with sales greater than 1 million.\nAnswer: SELECT Title FROM song WHERE Sales > 1000000\n\nQuestion: Find the singer with the highest net worth.\nAnswer: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\nQuestion: List the citizenship of the singers who have songs with highest position less than 5.\nAnswer: SELECT Citizenship FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Highest_Position < 5)\nAnswer: ", "94a58fbf85d9bfc7b2b840b0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the Package Options of the TV Channels whose series names are Sky Radio?\nPredicted SQL: SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'\nAnswer: ", "5636d3917273e15d9ad2a05a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Convert course descriptions into an audio format.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "d2b5c3740e770df7ba155f92": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Conduct a feedback call with viewers of \"Music Box Italia\".\nPredicted SQL: SELECT T1.first_name, T1.last_name, T1.cell_mobile_number, T1.email_address \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN courses AS T4 ON T3.course_id = T4.course_id \nWHERE T4.course_name = \"Music Box Italia\"\nAnswer: ", "b995bb0b8c71cc0194455ca5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: When did the episode \"A Love of a Lifetime\" air?\nPredicted SQL: SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\nQuestion: Which TV series has the highest viewership?\nAnswer: SELECT series_name FROM TV_series ORDER BY Viewers_m DESC LIMIT 1\n\nQuestion: List the titles of cartoons that were written by \"John Smith\".\nAnswer: SELECT Title FROM Cartoon WHERE Written_by = \"John Smith\"\n\nQuestion: What is the country of the TV channel that aired the episode \"The Big Adventure\"?\nAnswer: SELECT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Episode = \"The Big Adventure\")\n\nQuestion: List the TV series that are available in high definition.\nAnswer: SELECT series_name FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE Hight_definition_TV = \"Yes\")\n\nQuestion: Which TV channel has the most series?\nAnswer: SELECT series_name FROM TV_series GROUP BY Channel ORDER BY count(*) DESC LIMIT 1\n\nQuestion: List the titles of cartoons that were directed by the same person who wrote them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: What is the language of the TV channel that aired the episode with the highest rating?\nAnswer: SELECT Language FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series ORDER BY Rating DESC LIMIT 1)\nAnswer: ", "5f2ac1b8be47c6a84e722f90": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the codes of the countries that do not speak English and whose government forms are not Republic?\nPredicted SQL: SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm <> 'Republic'\nAnswer: ", "9600196d1933b067a75fa462": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What methods are most effective for promoting dog adoption?\nPredicted SQL: SELECT T2.treatment_type_description, count(*) FROM treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code WHERE T2.treatment_type_description = \"Promoting dog adoption\" GROUP BY T2.treatment_type_description ORDER BY count(*) DESC LIMIT 1\nAnswer: ", "d567bc6e8dc9d11914e6074d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Initiate a phone survey about the series \"Sky Radio\".\nPredicted SQL: INSERT INTO Courses (course_name) VALUES ('Sky Radio') \n\nQuestion: List the names of all students who are enrolled in the Computer Science degree program.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.department_id = (SELECT department_id FROM departments WHERE department_name = 'Computer Science')\n\nQuestion: Show the course names for all students enrolled in the Fall 2021 semester.\nAnswer: SELECT T4.course_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN semesters AS T3 ON T2.semester_id = T3.semester_id JOIN student_enrolment_courses AS T4 ON T2.student_enrolment_id = T4.student_enrolment_id WHERE T3.semester_name = 'Fall 2021'\n\nQuestion: List the names of all students who have transcripts.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN transcript_contents AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id\n\nQuestion: Show the department names for all students enrolled in the Spring 2022 semester.\nAnswer: SELECT T4.department_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN semesters AS T3 ON T2.semester_id = T3.semester_id JOIN degree_programs AS T4 ON T2.degree_program_id = T4.degree_program_id WHERE T3.semester_name = 'Spring 2022'\n\nQuestion: List the names of all students who have not yet left the program.\nAnswer: SELECT first_name ,  last_name FROM students WHERE date_left IS NULL\n\nQuestion: Show the course descriptions for all students enrolled in the Computer Science degree program.\nAnswer: SELECT T4.course_description FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN student_enrolment_courses AS T4 ON T2.student_enrolment_id = T4.student_enrolment_id WHERE T3.department_id = (SELECT department\nAnswer: ", "4f4ea6178c6dfabda1a5c36b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the average height of the orchestras?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "f7b5e902b1d7618ffd37ffda": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the descriptions for all the math courses?\nPredicted SQL: SELECT course_description FROM Courses WHERE course_id IN (SELECT course_id FROM Sections WHERE course_id IN (SELECT course_id FROM Degree_Programs WHERE department_id IN (SELECT department_id FROM Departments WHERE department_name = 'Math')))\nAnswer: ", "110c1e320bcdb6b131cd5339": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the name of the mentor of the poker player with the highest earnings.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "6123bcc86ccb84ad179bf074": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the number of owners who do not own any dogs at this moment.\nPredicted SQL: SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_departed IS NULL)\nAnswer: ", "46b83fdf0b632c222f8e5f7f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the names of nations where both English and French are official languages?\nPredicted SQL: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')\nAnswer: ", "72d3deb192b1db99fb56a9f6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Perform a regression to understand how orchestra foundation year affects performance ratings.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "3d2cfd01a060e8afd43f9e9a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Cluster courses based on their descriptions.\nPredicted SQL: SELECT course_description, COUNT(*) FROM Courses GROUP BY course_description\n\nQuestion: List the names of students who are enrolled in the Computer Science department.\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE department_id IN (SELECT department_id FROM Departments WHERE department_name = 'Computer Science')))\n\nQuestion: Show the course names and descriptions for all sections.\nAnswer: SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id\n\nQuestion: List the names of students who have transcripts.\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment)\n\nQuestion: Show the semester names and descriptions for all student enrolments.\nAnswer: SELECT T1.semester_name, T1.semester_description FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id\n\nQuestion: List the names of students who have not left the program.\nAnswer: SELECT first_name, last_name FROM Students WHERE date_left IS NULL\n\nQuestion: Show the department names and descriptions for all degree programs.\nAnswer: SELECT T1.department_name, T1.department_description FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id\n\nQuestion: List the names of students who have registered for a specific course.\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment_Courses WHERE course_id = [specific_course_id]))\nAnswer: ", "b98ff224ab0b91d9106b0532": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the mean GNP and total population of nations which are considered US territory.\nPredicted SQL: SELECT AVG(GNP), SUM(Population) FROM country WHERE Continent = 'North America' AND GovernmentForm = 'US territory'\nAnswer: ", "8d66a515dbf570e0c91cf520": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.\nPredicted SQL: SELECT T2.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = \"A Love of a Lifetime\"\n\nQuestion: List the titles of cartoons that were directed by the same person who wrote them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: What is the country of the TV Channel that aired the TV series with the highest rating?\nAnswer: SELECT T2.Country FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Rating = (SELECT max(Rating) FROM TV_series)\n\nQuestion: List the titles of cartoons that were aired on channels that offer Pay per View option.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: What is the language of the TV Channel that aired the TV series with the most viewers?\nAnswer: SELECT T2.Language FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Viewers_m = (SELECT max(Viewers_m) FROM TV_series)\n\nQuestion: List the titles of cartoons that were aired on channels that have High Definition TV option.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Hight_definition_TV = 'Yes')\n\nQuestion: What is the content of the TV Channel that aired the TV series with the highest 18-49 Rating Share?\nAnswer: SELECT T2.Content FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.18_49_Rating_Share = (SELECT max(18_49_Rating_Share) FROM TV_series)\n\nQuestion: List the titles of cartoons that were aired on channels from the country 'USA'.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Country = 'USA')\nAnswer: ", "723a2f591f631a4a3f377ca0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Which year did the singers debut the most?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "d434da2313d24a24ae6c24c3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many countries have governments that are republics?\nPredicted SQL: SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%'\nAnswer: ", "caa1a9116ba4d646f6b42966": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the names of high schoolers who both have friends and are liked?\nPredicted SQL: SELECT DISTINCT H1.name FROM Highschooler AS H1 WHERE H1.ID IN (SELECT F1.student_id FROM Friend AS F1 INTERSECT SELECT L1.student_id FROM Likes AS L1)\nAnswer: ", "5d6fe50a4b52cbdcd50b32da": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Give average earnings of poker players who are taller than 200.\nPredicted SQL: SELECT avg(Earnings) FROM poker_player AS pp JOIN people AS p ON pp.People_ID = p.People_ID WHERE p.Height > 200\nAnswer: ", "d1e4b6005c13086bbe490d9d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What grade did Kabul receive?\nPredicted SQL: SELECT grade FROM student_enrolment_courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = (SELECT student_id FROM students WHERE first_name = 'Kabul'))\nAnswer: ", "baea8f01fe8f7d2d7a2f0355": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How many dogs are microchipped?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "c04d65d095e1875bc75e9c70": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?\nPredicted SQL: SELECT series_name FROM TV_Channel WHERE id = (SELECT Channel FROM Cartoon WHERE Title = 'The Rise of the Blue Beetle') \n\nQuestion: List the titles of cartoons that have a rating higher than 8.\nAnswer: SELECT Title FROM Cartoon WHERE id IN (SELECT Channel FROM TV_series WHERE Rating > 8)\n\nQuestion: What is the country of the TV Channel that airs the cartoon \"The Adventures of Tintin\"?\nAnswer: SELECT Country FROM TV_Channel WHERE id = (SELECT Channel FROM Cartoon WHERE Title = 'The Adventures of Tintin')\n\nQuestion: List the titles of cartoons that have more viewers than the average viewers of all cartoons.\nAnswer: SELECT Title FROM Cartoon WHERE id IN (SELECT Channel FROM TV_series WHERE Viewers_m > (SELECT AVG(Viewers_m) FROM TV_series))\n\nQuestion: What is the language of the TV Channel that airs the cartoon \"SpongeBob SquarePants\"?\nAnswer: SELECT Language FROM TV_Channel WHERE id = (SELECT Channel FROM Cartoon WHERE Title = 'SpongeBob SquarePants')\n\nQuestion: List the titles of cartoons that have a weekly rank in the top 10.\nAnswer: SELECT Title FROM Cartoon WHERE id IN (SELECT Channel FROM TV_series WHERE Weekly_Rank <= 10)\n\nQuestion: What is the content type of the TV Channel that airs the cartoon \"Rick and Morty\"?\nAnswer: SELECT Content FROM TV_Channel WHERE id = (SELECT Channel FROM Cartoon WHERE Title = 'Rick and Morty')\n\nQuestion: List the titles of cartoons that have a share rating higher than 20.\nAnswer: SELECT Title FROM Cartoon WHERE id IN (SELECT Channel FROM TV_series WHERE Share > 20)\nAnswer: ", "3dfbb1d78dd0f5c3be710f91": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the name of the semester with no students enrolled?\nPredicted SQL: SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)\nAnswer: ", "b526df504c5145c874878769": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many continents speak Chinese?\nPredicted SQL: SELECT COUNT(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')\nAnswer: ", "595b04e7e83d03df5f0934ca": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: How much revenue did the episode titled Emily generate?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "91303c9ab5ca7399c8b354bc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the most common pixel aspect ratio among the cities?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information related to pixel aspect ratios or cities.\nAnswer: ", "a7fb6570ffd2f22c4cfc6b3d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the agency id that has sold the most houses of property type code 'house'?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "512e792acff3cd282fedab05": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List each language and the number of TV Channels using it.\nPredicted SQL: SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\nQuestion: Which TV series has the highest rating?\nAnswer: SELECT series_name FROM TV_series ORDER BY Rating DESC LIMIT 1\n\nQuestion: List the titles of cartoons directed by 'John Doe'.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = 'John Doe'\n\nQuestion: How many TV channels offer high definition TV?\nAnswer: SELECT COUNT(*) FROM TV_Channel WHERE Hight_definition_TV = 'Yes'\n\nQuestion: What is the average viewership of TV series aired on channels with 'Pay per view' option?\nAnswer: SELECT AVG(Viewers_m) FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: List the titles of cartoons written by 'Jane Smith' and aired on channels in the USA.\nAnswer: SELECT Title FROM Cartoon WHERE Written_by = 'Jane Smith' AND Channel IN (SELECT id FROM TV_Channel WHERE Country = 'USA')\n\nQuestion: Which TV series has the highest viewership?\nAnswer: SELECT series_name FROM TV_series ORDER BY Viewers_m DESC LIMIT 1\n\nQuestion: How many TV channels offer content in Spanish?\nAnswer: SELECT COUNT(*) FROM TV_Channel WHERE Language = 'Spanish'\n\nQuestion: List the titles of cartoons aired on channels with the highest weekly rank.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series ORDER BY Weekly_Rank DESC LIMIT 1))\nAnswer: ", "aca1bdbd362f8ccadd3ac4e4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What advantages does diversity bring to an orchestra?\nPredicted SQL: This question cannot be answered directly with the given tables.\nAnswer: ", "058f4b37b7ce66bc2f1813fc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Give the names of poker players who have earnings above 300000.\nPredicted SQL: SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Earnings > 300000\nAnswer: ", "a95276a7afb591dea2dd5570": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which countries have greater area than that of any country in Europe?\nPredicted SQL: SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')\nAnswer: ", "3dc8148542f0d9333e630355": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the charge amount of the most expensive charge type?\nPredicted SQL: SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1\n\nQuestion: List the first and last names of owners who have abandoned dogs.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.abandoned_yn  =  'Y'\n\nQuestion: What is the breed name of the dog with the highest weight?\nAnswer: SELECT breed_name FROM breeds WHERE breed_code IN (SELECT breed_code FROM dogs ORDER BY weight DESC LIMIT 1)\n\nQuestion: List the names of the professionals who have treated dogs with a cost of treatment greater than 100.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM professionals AS T1 JOIN treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  >  100\n\nQuestion: What is the treatment type description of the treatment with the highest cost?\nAnswer: SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code IN (SELECT treatment_type_code FROM treatments ORDER BY cost_of_treatment DESC LIMIT 1)\n\nQuestion: List the names of the owners who have dogs with a weight greater than 50.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.weight  >  50\n\nQuestion: What is the size description of the size of the dog with the highest weight?\nAnswer: SELECT size_description FROM sizes WHERE size_code IN (SELECT size_code FROM dogs ORDER BY weight DESC LIMIT 1)\n\nQuestion: List the names of the professionals who have treated dogs with a cost of treatment less than 50.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM professionals AS T1 JOIN treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  <  50\nAnswer: ", "315cc24d16f7d4a5968170c5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the record company used by the greatest number of orchestras?\nPredicted SQL: SELECT Record_Company, COUNT(Orchestra_ID) AS Num_Orchestras FROM orchestra GROUP BY Record_Company ORDER BY Num_Orchestras DESC LIMIT 1\n\nQuestion: List the names of conductors who have conducted performances with official ratings over 5 million.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 5))\n\nQuestion: How many performances have been conducted by each conductor? List the conductor ID and the count.\nAnswer: SELECT Conductor_ID, COUNT(Performance_ID) AS Num_Performances FROM orchestra WHERE Conductor_ID IS NOT NULL GROUP BY Conductor_ID\n\nQuestion: Show the orchestras that have performed more than 50 shows.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 50)\n\nQuestion: List the names of conductors who have conducted performances with a weekly rank in the top 3.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Weekly_rank <= 3))\n\nQuestion: What is the average share of performances conducted by each conductor?\nAnswer: SELECT Conductor_ID, AVG(Share) AS Avg_Share FROM performance WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM orchestra WHERE Conductor_ID IS NOT NULL) GROUP BY Conductor_ID\n\nQuestion: Show the orchestras founded before the year 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded < 2000\n\nQuestion: List the names of conductors who have conducted performances with an attendance of over 1000.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Attendance > 1000))\nAnswer: ", "948a8a93c03c5f4d6e7d272f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the names of conductors who have conducted orchestras founded after the year 2008?\nPredicted SQL: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)\nAnswer: ", "6c1f4acb0db7cdd44c07d5c7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Return the unique number of property agencies.\nPredicted SQL: SELECT count(DISTINCT country) FROM addresses\nAnswer: ", "2f5f8e70a2531cdcdbce1886": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Count the number of friends Kyle has.\nPredicted SQL: SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')\nAnswer: ", "c376d4d9d205a32ed3ec2afa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Count the number of conductors.\nPredicted SQL: SELECT COUNT(*) FROM conductor\nAnswer: ", "4251b30dcc9c4dc59c40dd8b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the website URLs for the player with the highest earnings.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "1c991f0f760ff1cda5a2a955": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Which orchestra is the tallest?\nPredicted SQL: This question cannot be answered with the given tables as there is no table related to orchestras or heights.\nAnswer: ", "f9821920ac79b36b3d1f9e6a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Cluster contestants based on their names.\nPredicted SQL: SELECT first_name ,  middle_name ,  last_name FROM students GROUP BY first_name ,  middle_name ,  last_name\nAnswer: ", "eeb3c671b25a6f1452bb8e47": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the birth year and citizenship of singers?\nPredicted SQL: SELECT Birth_Year, Citizenship FROM singer\nAnswer: ", "18d969398b050a81531083eb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the average rank points among the students registered before 2020?\nPredicted SQL: SELECT avg(rank_points) FROM students WHERE date_first_registered < '2020-01-01'\nAnswer: ", "5005ea6993085929b744e659": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the average GPA of the students?\nPredicted SQL: SELECT AVG(GPA) FROM Transcripts\nAnswer: ", "5f6357bfc8755e8fa0e91f8e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which breed do the most dogs have? Give me the breed name.\nPredicted SQL: SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)\nAnswer: ", "c9bbedf085c648e8be4aa129": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List the last name of the owner owning the youngest dog.\nPredicted SQL: SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs ORDER BY age ASC LIMIT 1)\nAnswer: ", "b3c2d024b42b9993ec34bc53": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What types of properties have seen the greatest increase in demand over the past decade?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "6868bbbc11951769aaa479db": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the nationalities that are shared by at least two people?\nPredicted SQL: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) > 1\nAnswer: ", "7971df37fc66391defc7adc5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?\nPredicted SQL: SELECT T1.Code, T2.Language \nFROM country AS T1 \nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode \nWHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)\nAnswer: ", "42e0d11acb5eb6bfd82a229f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Tell me how poker has changed in the last hundred years.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "1070df2e09ee850f13093708": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the different addresses that have students living there?\nPredicted SQL: SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id IN (SELECT current_address_id FROM students) OR address_id IN (SELECT permanent_address_id FROM students)\nAnswer: ", "147af44f9150277a7d3ef776": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Analyze the structure of the friendship network using graph theory.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "ec8a313d244f972d6719e1ee": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Which country was Kirov Orchestra founded in?\nPredicted SQL: SELECT country FROM Addresses WHERE address_id IN (SELECT permanent_address_id FROM Students WHERE first_name = 'Kirov' AND last_name = 'Orchestra')\nAnswer: ", "23449abfb56fb2d4f05431ab": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Count the number of female poker players taller than 180cm.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "68752c54a18affc80fa61a04": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the email address of the dog named Mavis?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "8a58cce31810002b70513048": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the episode for the TV series named \"Sky Radio\"?\nPredicted SQL: SELECT Episode FROM TV_series WHERE series_name = \"Sky Radio\"\nAnswer: ", "251df7f905385785e0b2d4cd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are each owner's first name and their dogs's name?\nPredicted SQL: SELECT O.first_name, D.name \nFROM Owners O \nJOIN Dogs D ON O.owner_id = D.owner_id\nAnswer: ", "0836d13e3c6114749c9e25fc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many languages are spoken in Aruba?\nPredicted SQL: SELECT COUNT(Language) FROM countrylanguage WHERE CountryCode = 'ABW'\nAnswer: ", "826d532af99d79716ed74828": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the languages used by the least number of TV Channels and how many channels use it?\nPredicted SQL: SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language HAVING COUNT(*) = (SELECT MIN(channel_count) FROM (SELECT COUNT(*) AS channel_count FROM TV_Channel GROUP BY Language) AS counts)\nAnswer: ", "95f6f6800121d8c55539eca2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Show the first name of the youngest professional.\nPredicted SQL: SELECT first_name FROM students ORDER BY date_first_registered ASC LIMIT 1\nAnswer: ", "fae4b7179d35224b59227dba": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What made poker so popular?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about the popularity of poker.\nAnswer: ", "d2f5bfbcb9420f02a282ba56": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: How many available features are there in total?\nPredicted SQL: SELECT count(*) FROM Other_Available_Features\n\nQuestion: List the names and descriptions of features that are available for properties.\nAnswer: SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_id IN (SELECT feature_id FROM Other_Property_Features)\n\nQuestion: What are the property names and addresses of properties with more than 3 rooms?\nAnswer: SELECT property_name, property_address FROM Properties WHERE room_count > 3\n\nQuestion: List the property types and their descriptions.\nAnswer: SELECT property_type_code, property_type_description FROM Ref_Property_Types\n\nQuestion: Show the property names and addresses of properties that have a feature with the name 'Garden'.\nAnswer: SELECT property_name, property_address FROM Properties WHERE property_id IN (SELECT property_id FROM Other_Property_Features WHERE feature_id IN (SELECT feature_id FROM Other_Available_Features WHERE feature_name = 'Garden'))\n\nQuestion: How many properties have a feature with the name 'Swimming Pool'?\nAnswer: SELECT count(*) FROM Properties WHERE property_id IN (SELECT property_id FROM Other_Property_Features WHERE feature_id IN (SELECT feature_id FROM Other_Available_Features WHERE feature_name = 'Swimming Pool'))\n\nQuestion: List the property names and addresses of properties that have a feature with the description 'Spacious living room'.\nAnswer: SELECT property_name, property_address FROM Properties WHERE property_id IN (SELECT property_id FROM Other_Property_Features WHERE feature_id IN (SELECT feature_id FROM Other_Available_Features WHERE feature_description = 'Spacious living room'))\n\nQuestion: Show the property names and addresses of properties that have more than 2 features available.\nAnswer: SELECT property_name, property_address FROM Properties WHERE property_id IN (SELECT property_id FROM Other_Property_Features GROUP BY property_id HAVING count(*) > 2)\nAnswer: ", "1b40a3da304a244ad87e6198": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Which record company is the oldest?\nPredicted SQL: SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id ORDER BY T2.degree_summary_name LIMIT 1\nAnswer: ", "b0d751dae8078a0a1751a555": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Count the number of schools that students belong to.\nPredicted SQL: SELECT count(DISTINCT department_id) FROM Degree_Programs\nAnswer: ", "7c29daf70dbb59297e0cc901": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the first, middle, and last name of the earliest school graduate?\nPredicted SQL: SELECT first_name, middle_name, last_name \nFROM students \nWHERE date_first_registered = (SELECT MIN(date_first_registered) FROM students)\nAnswer: ", "6b3d9977b40d8b22078dfe3f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What causes voting patterns to differ by state?\nPredicted SQL: SELECT state, contestant_number, count(*) FROM VOTES GROUP BY state, contestant_number\nAnswer: ", "fd3917b8b37d655e9a63a0dd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many courses in total are listed?\nPredicted SQL: SELECT COUNT(course_id) FROM Courses\n\nQuestion: What is the name and description of the department with id 3?\nAnswer: SELECT department_name, department_description FROM Departments WHERE department_id = 3\n\nQuestion: List the names of all students who have enrolled in the degree program with id 5.\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id = 5)\n\nQuestion: What is the total number of students enrolled in the semester with id 2?\nAnswer: SELECT COUNT(student_id) FROM Student_Enrolment WHERE semester_id = 2\n\nQuestion: List the course names and descriptions for the courses in which student with id 7 is enrolled.\nAnswer: SELECT course_name, course_description FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM Student_Enrolment WHERE student_id = 7))\n\nQuestion: What is the current address of the student with id 10?\nAnswer: SELECT line_1, line_2, city, zip_postcode, state_province_county, country FROM Addresses WHERE address_id = (SELECT current_address_id FROM Students WHERE student_id = 10)\n\nQuestion: List the transcript dates for the student with id 15.\nAnswer: SELECT transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents WHERE student_course_id IN (SELECT student_course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment WHERE student_id = 15)))\n\nQuestion: What is the permanent address of the student with id 20?\nAnswer: SELECT line_1, line_2, city, zip_postcode, state_province_county, country FROM Addresses WHERE address_id = (SELECT permanent_address_id FROM Students WHERE student_id = 20)\nAnswer: ", "34c8eab8cbe2b3a75f285ffc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Recommend courses to students based on their previous enrollments.\nPredicted SQL: SELECT T2.course_name \nFROM student_enrolment_courses AS T1 \nJOIN courses AS T2 ON T1.course_id = T2.course_id \nWHERE T1.student_enrolment_id IN \n    (SELECT student_enrolment_id \n     FROM student_enrolment \n     WHERE student_id = [student_id]) \nAND T1.course_id NOT IN \n    (SELECT course_id \n     FROM student_enrolment_courses \n     WHERE student_enrolment_id = [previous_enrollment_id])\nAnswer: ", "be636b159a1cf4c1702bff84": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the hardware model names of male dogs.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "7a56941d297063f6f93c4f10": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Recommend classmates for a student to like.\nPredicted SQL: SELECT T2.first_name, T2.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T3 ON T1.student_id = T3.student_id \nJOIN student_enrolment AS T4 ON T3.degree_program_id = T4.degree_program_id \nJOIN students AS T2 ON T4.student_id = T2.student_id \nWHERE T1.student_id = [student_id] AND T2.student_id != [student_id]\nAnswer: ", "98b80857096ac12a8850f9f7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.\nPredicted SQL: SELECT owner_id, zip_code \nFROM Owners \nWHERE owner_id IN (\n    SELECT owner_id \n    FROM Dogs \n    WHERE dog_id IN (\n        SELECT dog_id \n        FROM Treatments \n        GROUP BY dog_id \n        ORDER BY SUM(cost_of_treatment) DESC \n        LIMIT 1\n    )\n)\nAnswer: ", "f1654322a5ae276982302006": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What strategies do cartoons use to appeal to various age groups?\nPredicted SQL: SELECT T1.Title, T1.Directed_by, T1.Written_by, T1.Channel, T2.Content FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id\nAnswer: ", "118d14cab7902366b54bd914": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Schedule a relaxation music session for students during finals week.\nPredicted SQL: INSERT INTO Sections (course_id, section_name, section_description, other_details) VALUES (SELECT course_id FROM Courses WHERE course_name = \"Relaxation Music Session\", \"Finals Week Relaxation Session\", \"A session to help students relax and destress during finals week\", \"Scheduled during finals week for student relaxation\")\nAnswer: ", "47b91bdd3578d01a9c76c03c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: How many different series and contents are listed in the TV Channel table?\nPredicted SQL: SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel\nAnswer: ", "3e4e60f9eb74da95b7711c4f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Tell me about Adele's journey to fame.\nPredicted SQL: SELECT * FROM singer WHERE Name = 'Adele'\nAnswer: ", "337cad57f581e29a513fb76c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the names of cities in Europe for which English is not the official language?\nPredicted SQL: SELECT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Europe' \nAND countrylanguage.Language = 'English' \nAND countrylanguage.IsOfficial = 'F'\nAnswer: ", "c67c644f638c896271495296": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What are the passwords of the contestants?\nPredicted SQL: This question cannot be answered with the given tables as there is no table containing passwords for contestants.\nAnswer: ", "c2fc8a1a659d5921c3166dda": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Who was last year's valedictorian?\nPredicted SQL: SELECT name FROM Highschooler WHERE grade = (SELECT max(grade) FROM Highschooler)\nAnswer: ", "21dd352ef33e7dd8e2065b03": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is Bj\u00f6rk uniquely known for?\nPredicted SQL: SELECT Name FROM singer WHERE Name = 'Bj\u00f6rk'\nAnswer: ", "e7acaf71ce6b14969e71b108": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What currency does the math department use?\nPredicted SQL: SELECT other_details FROM departments WHERE department_name = \"Math\"\nAnswer: ", "b034020da382211546a45db6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: How many high school students are male?\nPredicted SQL: SELECT count(*) FROM students WHERE gender = 'male' AND education_level = 'high school'\nAnswer: ", "8e04acb6a07fddeaaa5f9717": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which timezone has the highest population of cities in total?\nPredicted SQL: SELECT timezone FROM addresses GROUP BY timezone ORDER BY count(*) DESC LIMIT 1\n\nQuestion: List the names of all courses and their corresponding department names.\nAnswer: SELECT T2.course_name ,  T4.department_name FROM courses AS T2 JOIN sections AS T3 ON T2.course_id = T3.course_id JOIN departments AS T4 ON T3.department_id = T4.department_id\n\nQuestion: Show the names of students who are enrolled in the Computer Science degree program.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = \"Computer Science\")))\n\nQuestion: List the names of students who have transcripts.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment)\n\nQuestion: Show the names of students who have not left the university.\nAnswer: SELECT first_name ,  last_name FROM students WHERE date_left IS NULL\n\nQuestion: Show the names of students who have registered for the most number of courses.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)\n\nQuestion: List the names of students who have transcripts and the date of their transcripts.\nAnswer: SELECT T2.first_name ,  T2.last_name ,  T1.transcript_date FROM transcripts AS T1 JOIN student_enrolment_courses AS T3 ON T1.transcript_id = T3.transcript_id JOIN student_enrolment AS T4 ON T3.student_enrolment_id = T4.student_enrolment_id JOIN students AS T2 ON T4.student_id = T2.student_id\n\nQuestion: Show the names of students who have registered for courses in the Spring semester.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE semester_id IN (SELECT semester_id FROM semesters WHERE semester_name = \"Spring\"))\nAnswer: ", "74cf52f05d786dc2ea9f1f4c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the timezone with the highest number of voters?\nPredicted SQL: SELECT T1.city FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1\nAnswer: ", "fa5c04d7dfa68b193c4c9252": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which language is the most popular on the Asian continent?\nPredicted SQL: SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') ORDER BY Percentage DESC LIMIT 1\n\nQuestion: What is the average life expectancy of countries in Europe?\nAnswer: SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Europe'\n\nQuestion: List the names of countries with a population greater than 100 million.\nAnswer: SELECT Name FROM country WHERE Population > 100000000\n\nQuestion: What is the total population of countries where English is an official language?\nAnswer: SELECT SUM(Population) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')\n\nQuestion: Which country has the highest GNP (Gross National Product)?\nAnswer: SELECT Name FROM country ORDER BY GNP DESC LIMIT 1\n\nQuestion: List the names of cities in countries with a life expectancy greater than 80.\nAnswer: SELECT Name FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE LifeExpectancy > 80)\n\nQuestion: What is the average population of countries in each region?\nAnswer: SELECT Region, AVG(Population) FROM country GROUP BY Region\n\nQuestion: List the names of countries where the head of state is a monarch.\nAnswer: SELECT Name FROM country WHERE GovernmentForm LIKE '%monarch%'\nAnswer: ", "ff79e34a988c4d49bd533cb5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Tell me how the age of a property affects its value.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "3350df67bfc704973c289463": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the average contestant age?\nPredicted SQL: SELECT avg(age) FROM Students\nAnswer: ", "011ec8388f2e6b3f4aa412be": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Show the card numbers of the addresses.\nPredicted SQL: SELECT address_id FROM Addresses\n\nQuestion: List the names of all courses.\nAnswer: SELECT course_name FROM Courses\n\nQuestion: Show the names of all departments.\nAnswer: SELECT department_name FROM Departments\n\nQuestion: List the names of all students.\nAnswer: SELECT first_name ,  last_name FROM Students\n\nQuestion: Show the names of all degree programs.\nAnswer: SELECT degree_summary_name FROM Degree_Programs\n\nQuestion: List the names of all sections.\nAnswer: SELECT section_name FROM Sections\n\nQuestion: Show the names of all semesters.\nAnswer: SELECT semester_name FROM Semesters\n\nQuestion: List the names of all transcripts.\nAnswer: SELECT transcript_id FROM Transcripts\n\nQuestion: Show the names of all student enrolments.\nAnswer: SELECT student_enrolment_id FROM Student_Enrolment\n\nQuestion: List the names of all student enrolment courses.\nAnswer: SELECT student_course_id FROM Student_Enrolment_Courses\nAnswer: ", "bfe18e3bb066e320c9ee06fc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Convert the names of student ID 1510's friends into an audio format.\nPredicted SQL: SELECT CONCAT('Audio file for ', first_name, ' ', last_name) FROM Students WHERE student_id IN (SELECT friend_id FROM Friends WHERE student_id = 1510)\nAnswer: ", "a4143d5702db04d0ce019d19": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the major record formats of orchestras, sorted by their frequency?\nPredicted SQL: SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC\n\nQuestion: List the names of conductors who have conducted performances with official ratings over 1 million.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 1))\n\nQuestion: How many performances have orchestras founded after 2000 conducted?\nAnswer: SELECT COUNT(*) FROM performance WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM orchestra WHERE Year_of_Founded > 2000)\n\nQuestion: Show the names of orchestras that have conducted performances with a weekly rank in the top 3.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Weekly_rank <= 3)\n\nQuestion: List the names of conductors who have conducted performances with a share greater than 50%.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Share > 50))\n\nQuestion: How many performances have orchestras conducted with an official rating over 2 million and a share greater than 60%?\nAnswer: SELECT COUNT(*) FROM performance WHERE Official_ratings_(millions) > 2 AND Share > 60\n\nQuestion: Show the names of orchestras that have conducted performances with an official rating over 3 million and a share greater than 70%.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 3 AND Share > 70)\n\nQuestion: List the names of conductors who have conducted performances with an official rating over 4 million and a share greater than 80%.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 4 AND Share > 80))\nAnswer: ", "323244f8ea01240dcec24622": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: How many contestants did not get voted?\nPredicted SQL: SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)\nAnswer: ", "903362a5847dff68028dc9fe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many transcripts are released?\nPredicted SQL: SELECT count(*) FROM transcripts\n\nQuestion: List the names of students who have enrolled in the degree program with id 5.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 5)\n\nQuestion: What is the description of the semester with the id 3?\nAnswer: SELECT semester_description FROM semesters WHERE semester_id = 3\n\nQuestion: List the course names and descriptions for the courses in which student with id 10 is enrolled.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 10))\n\nQuestion: How many students are enrolled in the department with name 'Computer Science'?\nAnswer: SELECT count(*) FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Computer Science')))\n\nQuestion: List the names of students who have transcripts.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment)\n\nQuestion: What is the current address of the student with id 15?\nAnswer: SELECT * FROM addresses WHERE address_id = (SELECT current_address_id FROM students WHERE student_id = 15)\n\nQuestion: List the course names and descriptions for the courses in which student with id 20 is enrolled in the current semester.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 20 AND semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'current')))\nAnswer: ", "f7256dd3c22b7bb9c382be38": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are popular extracurriculars here?\nPredicted SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.liked_id ORDER BY count(*) DESC LIMIT 1\n\nQuestion: Who are the students who have friends in the same grade?\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.friend_id = T3.ID WHERE T1.grade = T3.grade\n\nQuestion: List the names of students who have friends in a higher grade.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.friend_id = T3.ID WHERE T1.grade < T3.grade\n\nQuestion: Show the names of students who have friends in a lower grade.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.friend_id = T3.ID WHERE T1.grade > T3.grade\n\nQuestion: List the names of students who have friends.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id\n\nQuestion: Show the names of students who do not have any friends.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\nQuestion: Show the names of students who like someone in the same grade.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.liked_id = T3.ID WHERE T1.grade = T3.grade\n\nQuestion: List the names of students who like someone in a different grade.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.liked_id = T3.ID WHERE T1.grade != T3.grade\nAnswer: ", "a87c18a461cfc294018692bc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Show the mentor of the oldest conductor.\nPredicted SQL: SELECT T1.first_name, T1.last_name \nFROM Students AS T1 \nWHERE T1.student_id = (\n    SELECT student_id \n    FROM Student_Enrolment \n    WHERE student_id = (\n        SELECT student_id \n        FROM Students \n        ORDER BY date_first_registered ASC \n        LIMIT 1\n    )\n)\nAnswer: ", "7df41c24b511a3c15384ae08": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the minimum age of the contestants who did not receive votes?\nPredicted SQL: SELECT min(age) FROM contestants WHERE votes = 0\n\nQuestion: List the names of the students who are enrolled in the Computer Science degree program.\nAnswer: SELECT first_name, last_name FROM students WHERE degree_program_id = (SELECT degree_program_id FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Computer Science'))\n\nQuestion: Show the course names and descriptions for all sections in the Fall 2021 semester.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM sections WHERE semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'Fall 2021'))\n\nQuestion: List the names of students who have enrolled in more than one course.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment GROUP BY student_id HAVING count(*) > 1)\n\nQuestion: Show the department names and descriptions for all degree programs.\nAnswer: SELECT department_name, department_description FROM departments WHERE department_id IN (SELECT department_id FROM degree_programs)\n\nQuestion: What are the names of students who have transcripts?\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\n\nQuestion: List the course names and descriptions for all courses that have been included in a transcript.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\n\nQuestion: Show the names of students who have left the program.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NOT NULL\nAnswer: ", "3cd60e6cdbc0a814d98b0958": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What leads to high population density?\nPredicted SQL: SELECT Name, Population/SurfaceArea AS Population_Density FROM country ORDER BY Population_Density DESC\n\nQuestion: Show the names of cities with a population greater than 1 million.\nAnswer: SELECT Name FROM city WHERE Population > 1000000\n\nQuestion: Show the names of countries with a life expectancy greater than 80.\nAnswer: SELECT Name FROM country WHERE LifeExpectancy > 80\n\nQuestion: Show the names of countries in Asia with a population greater than 100 million.\nAnswer: SELECT Name FROM country WHERE Continent = 'Asia' AND Population > 100000000\n\nQuestion: Show the names of countries where English is an official language.\nAnswer: SELECT Name FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T'\n\nQuestion: Show the names of countries with a government form of 'Republic'.\nAnswer: SELECT Name FROM country WHERE GovernmentForm = 'Republic'\n\nQuestion: Show the names of cities in countries with a GNP greater than 500 billion.\nAnswer: SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.GNP > 500000000000\n\nQuestion: Show the names of countries with a population greater than 50 million and a life expectancy greater than 75.\nAnswer: SELECT Name FROM country WHERE Population > 50000000 AND LifeExpectancy > 75\nAnswer: ", "7d96d90986819807d04cf2ab": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What are the most common security features in properties listed in the last 5 years?\nPredicted SQL: This question cannot be answered with the given tables as they are related to student enrollment and courses, not properties and security features.\nAnswer: ", "2b63ba54d1ba65a0ad95821b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Which mortgage lender is the most commonly chosen for these properties?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "93bdb1c7510c61cb4d4c6366": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show names of all high school students who do not have any friends.\nPredicted SQL: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\nAnswer: ", "238d20ff01204e95137a5caa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are common reasons for show cancellation?\nPredicted SQL: SELECT T1.series_name, T1.Country, T1.Language, T1.Content FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Rating < 5 AND T2.Share < 10 AND T2.Viewers_m < 1.5\nAnswer: ", "e79ad3821596e857c2910397": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Count the number of properties that are located 100 feet above sea level.\nPredicted SQL: SELECT count(*) FROM Addresses WHERE line_3 = \"100 feet above sea level\"\nAnswer: ", "424473ee2a08666fccdd1ff0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: When was the last transcript released?\nPredicted SQL: SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1\n\nQuestion: What is the name and description of the department with id 5?\nAnswer: SELECT department_name, department_description FROM departments WHERE department_id = 5\n\nQuestion: List the course names and descriptions for the courses in the semester 'Spring 2021'.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM sections WHERE semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'Spring 2021'))\n\nQuestion: How many students are enrolled in the degree program with id 3?\nAnswer: SELECT COUNT(*) FROM student_enrolment WHERE degree_program_id = 3\n\nQuestion: List the names of the students who have their current and permanent addresses the same.\nAnswer: SELECT first_name, last_name FROM students WHERE current_address_id = permanent_address_id\n\nQuestion: What is the student id and transcript date for the transcripts with the most recent transcript date?\nAnswer: SELECT student_id, transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1\n\nQuestion: List the course names for the courses in the degree program with id 2.\nAnswer: SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE degree_program_id = 2))\n\nQuestion: How many students are enrolled in the semester 'Fall 2020'?\nAnswer: SELECT COUNT(*) FROM student_enrolment WHERE semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'Fall 2020')\nAnswer: ", "bfad0ffaf3ef2c0db60c646e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Which student has the highest rank point?\nPredicted SQL: SELECT T1.first_name, T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id JOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id ORDER BY rank_point DESC LIMIT 1\nAnswer: ", "09bee9c9d602c6d605262ef6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What are the contestant numbers and names of the contestants who had at least two votes?\nPredicted SQL: SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)\nAnswer: ", "96ef328d08f1ccdcb1f78a0b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many people live in Gelderland district?\nPredicted SQL: SELECT sum(Population) FROM city WHERE District = 'Gelderland'\nAnswer: ", "1594529174d86f345885e567": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the number of professionals who have ever treated dogs.\nPredicted SQL: SELECT COUNT(DISTINCT professional_id) FROM Treatments\nAnswer: ", "bda2fc1cd107bdb2021838a6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the name of the high schooler who has the greatest number of likes?\nPredicted SQL: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)\nAnswer: ", "0118e9a0beb2acf4c3d4c10c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How much does each charge type costs? List both charge type and amount.\nPredicted SQL: SELECT charge_type, charge_amount FROM Charges\nAnswer: ", "6ff03b16faf9cda9833d2bac": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the name of the high schooler who has the greatest number of friends?\nPredicted SQL: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)\nAnswer: ", "edca5824850ba858d0027811": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the average grade among the different feature types?\nPredicted SQL: SELECT avg(grade) FROM Transcript_Contents\nAnswer: ", "629b776576156a90d2a0bbe9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the first, middle, and last name of the first student to register?\nPredicted SQL: SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered ASC LIMIT 1\n\nQuestion: List the course names and descriptions for the courses enrolled by student with id 101.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 101))\n\nQuestion: What is the department name of the degree program with id 201?\nAnswer: SELECT department_name FROM departments WHERE department_id = (SELECT department_id FROM degree_programs WHERE degree_program_id = 201)\n\nQuestion: List the semester names and descriptions for the semesters in which student with id 102 is enrolled.\nAnswer: SELECT semester_name, semester_description FROM semesters WHERE semester_id IN (SELECT semester_id FROM student_enrolment WHERE student_id = 102)\n\nQuestion: What is the current address of the student with id 103?\nAnswer: SELECT * FROM addresses WHERE address_id = (SELECT current_address_id FROM students WHERE student_id = 103)\n\nQuestion: List the course names and descriptions for the courses in the transcript of student with id 104.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 104))\n\nQuestion: What is the permanent address of the student with id 105?\nAnswer: SELECT * FROM addresses WHERE address_id = (SELECT permanent_address_id FROM students WHERE student_id = 105)\n\nQuestion: List the degree program names and descriptions for the degree programs enrolled by student with id 106.\nAnswer: SELECT degree_summary_name, degree_summary_description FROM degree_programs WHERE degree_program_id IN (SELECT degree_program_id FROM student_enrolment WHERE student_id = 106)\nAnswer: ", "852c63a42a7c038a4bc61026": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which cities are in European countries where English is not the official language?\nPredicted SQL: SELECT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Europe' \nAND countrylanguage.Language = 'English' \nAND countrylanguage.IsOfficial = 'F'\nAnswer: ", "b82ab6d1913c1768e63d7b6d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the arriving date and the departing date of all the dogs?\nPredicted SQL: SELECT date_arrived, date_departed FROM Dogs\n\nQuestion: List the first and last names of all the owners who have abandoned dogs.\nAnswer: SELECT first_name, last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE abandoned_yn = 'Y')\n\nQuestion: Find the breed names of the dogs that have been treated by a professional with the role code 'VET'.\nAnswer: SELECT breed_name FROM Breeds WHERE breed_code IN (SELECT breed_code FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments WHERE professional_id IN (SELECT professional_id FROM Professionals WHERE role_code = 'VET')))\n\nQuestion: List the treatment type descriptions and costs for all treatments.\nAnswer: SELECT treatment_type_description, cost_of_treatment FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code\n\nQuestion: Find the first and last names of the professionals who have treated dogs with a cost greater than 100.\nAnswer: SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment > 100)\n\nQuestion: What are the sizes of the dogs that have been treated by a professional with the role code 'GROOM'?\nAnswer: SELECT size_description FROM Sizes WHERE size_code IN (SELECT size_code FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments WHERE professional_id IN (SELECT professional_id FROM Professionals WHERE role_code = 'GROOM')))\n\nQuestion: List the charge types and amounts for all charges.\nAnswer: SELECT charge_type, charge_amount FROM Charges\n\nQuestion: Find the treatment type descriptions and costs for all treatments done on dogs with a weight greater than 50.\nAnswer: SELECT treatment_type_description, cost_of_treatment FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code WHERE dog_id IN (SELECT dog_id FROM Dogs WHERE weight > 50)\nAnswer: ", "d9d0f32a5c76399b531f27b7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Show the property type descriptions of properties belonging to that code.\nPredicted SQL: SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = 'code'\nAnswer: ", "444d2a0e46b3686b69a593c9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the name of the fan club for the singer with the highest net worth?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about singers or their net worth.\nAnswer: ", "bb7e10c79cfbd3390a81694a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Identify unusual performance patterns based on the performance table.\nPredicted SQL: SELECT T1.student_id, T1.course_id, T2.grade FROM Student_Enrolment_Courses AS T1 JOIN Grades AS T2 ON T1.student_course_id = T2.student_course_id WHERE T2.grade NOT IN ('A', 'B', 'C', 'D', 'F') \n\nQuestion: List the names of students who are enrolled in the Computer Science department.\nAnswer: SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN Departments AS T4 ON T3.department_id = T4.department_id WHERE T4.department_name = 'Computer Science'\n\nQuestion: Show the course names and descriptions for all courses a student is enrolled in.\nAnswer: SELECT T2.course_name, T2.course_description FROM Student_Enrolment_Courses AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id WHERE T1.student_enrolment_id = [student_enrolment_id]\n\nQuestion: List the names of students who have not yet completed their degree program.\nAnswer: SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.date_left IS NULL\n\nQuestion: Show the transcript date and details for a specific student.\nAnswer: SELECT T2.transcript_date, T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id JOIN Student_Enrolment_Courses AS T3 ON T1.student_course_id = T3.student_course_id WHERE T3.student_enrolment_id = [student_enrolment_id]\nAnswer: ", "1d3720f7cc2fb82e4eada8da": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Count the number of countries with left-hand driving.\nPredicted SQL: SELECT count(DISTINCT country) FROM addresses WHERE other_address_details LIKE '%left-hand driving%'\nAnswer: ", "3b22b07edb7a07bb3d701783": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Which mortgage lender covers the most properties?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "a2d6bf5fc242ab5e4167906a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the number of professionals who have not treated any dogs.\nPredicted SQL: SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)\nAnswer: ", "d519f55f8085e90bcf9bfd50": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What region is Kabul in?\nPredicted SQL: SELECT Region FROM country WHERE Capital = (SELECT ID FROM city WHERE Name = 'Kabul')\nAnswer: ", "7dcdd8d37bfe4053541db7b1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the most common genre among the songs?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "d02a356629aaad5baa10938d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Tell me the number of dogs that have not received any treatment .\nPredicted SQL: SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)\nAnswer: ", "b957dd8922a6cbad2c3bcb25": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the semester with the most earnings among the players?\nPredicted SQL: SELECT T3.semester_name FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN semesters AS T3 ON T1.semester_id = T3.semester_id GROUP BY T3.semester_id ORDER BY sum(T2.earnings) DESC LIMIT 1\nAnswer: ", "e78b45bb68a79aa58861dbc5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Count the number of pet names of the poker players.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "aa89d12e8d69cc0a5a8c4368": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Count the number of countries of the orchestras.\nPredicted SQL: SELECT count(DISTINCT country) FROM Addresses\nAnswer: ", "7b6e799a31b05359090394c1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the average area size among the singers?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about area size or singers.\nAnswer: ", "595b461e0681a3ad92443d67": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the content of TV Channel with serial name \"Sky Radio\"?\nPredicted SQL: SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\"\nAnswer: ", "50f30bbac849401597f5bb9a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the language used least number of TV Channel. List language and number of TV Channel.\nPredicted SQL: SELECT Language, COUNT(*) AS Num_TV_Channels \nFROM TV_Channel \nGROUP BY Language \nORDER BY Num_TV_Channels ASC \nLIMIT 1\nAnswer: ", "a682d46f66d7dd6aaff304b7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the pixel ratios of the cities?\nPredicted SQL: SELECT city, count(*) FROM addresses GROUP BY city\nAnswer: ", "717428e549a977234c2070c2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Count the number of mentors of the players from Russia.\nPredicted SQL: SELECT count(*) FROM students WHERE country = 'Russia'\nAnswer: ", "b36d112220b893739ebac999": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Count the number of different nationalities.\nPredicted SQL: SELECT COUNT(DISTINCT Nationality) FROM people\nAnswer: ", "fa1240b6545f8381bab954bf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Tell me the total number of subscribers for all TV channels.\nPredicted SQL: SELECT count(*) FROM Students\nAnswer: ", "6a36b0cbebb64d41455f1ec7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the countries where either English or Dutch is the official language ?\nPredicted SQL: SELECT DISTINCT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') OR Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T')\nAnswer: ", "9e8bd9ce578a5de1e06a1018": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the names of all courses that have some students enrolled?\nPredicted SQL: SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)\nAnswer: ", "f01b65bc5cea4e2c509b5e50": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Retrieve recent news articles about a contestant named Tabatha Gehling.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "1d762b184fe76d7387918aed": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Analyze the sentiment surrounding \"Sky Radio\" using social media mentions.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "80e9d2e40102267cbfa1e85f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the ids of high schoolers who have friends and are also liked by someone else.\nPredicted SQL: SELECT DISTINCT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)\nAnswer: ", "b38c5100cbc4a764319ea6d8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What causes variations in vote counts?\nPredicted SQL: SELECT state, contestant_number, count(*) as vote_count FROM VOTES GROUP BY state, contestant_number ORDER BY vote_count DESC\nAnswer: ", "274891f5d464ae4df813196b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Suggest a list of dogs for adoption based on dog and owner statistics.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "04725e6efdcffc3dd4372673": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Return the average attendance across all shows.\nPredicted SQL: SELECT AVG(Attendance) FROM show\nAnswer: ", "4d6778de91504cb0db4cae32": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Find the sponsors of the shows with attendance of more than 2000.\nPredicted SQL: SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id JOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id WHERE T3.other_details > 2000\nAnswer: ", "afd1034ac16e6c5e2c214382": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the address of the oldest apartment?\nPredicted SQL: SELECT * FROM addresses ORDER BY address_id ASC LIMIT 1\nAnswer: ", "4f04e7f41efae3282f4850ff": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Cluster voting patterns based on state and timestamps.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "fb1ffb74297fb7e162daa82f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the names of all the states of the directors.\nPredicted SQL: SELECT DISTINCT state_province_county FROM Addresses\nAnswer: ", "43b2720a8f3d1c56b95b17f3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the capacity of Nita Coster?\nPredicted SQL: SELECT COUNT(*) FROM Students WHERE first_name = 'Nita' AND last_name = 'Coster'\nAnswer: ", "a42072f597a4668c288f492c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the names of all cartoons directed by Ben Jones?\nPredicted SQL: SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'\n\nQuestion: List the series names of TV shows that are in English and have a high definition TV option.\nAnswer: SELECT series_name FROM TV_Channel WHERE Language = 'English' AND Hight_definition_TV = 'Yes'\n\nQuestion: Which TV series have a rating higher than 8 and were aired on the channel with id 3?\nAnswer: SELECT * FROM TV_series WHERE Rating > 8 AND Channel = 3\n\nQuestion: List the titles of cartoons written by John Smith that were aired on channels with a pay-per-view option.\nAnswer: SELECT Title FROM Cartoon WHERE Written_by = 'John Smith' AND Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: What are the names of TV series that have more than 1 million viewers and a weekly rank in the top 10?\nAnswer: SELECT series_name FROM TV_series WHERE Viewers_m > 1 AND Weekly_Rank <= 10\n\nQuestion: List the titles of cartoons that were produced on or after January 1, 2020.\nAnswer: SELECT Title FROM Cartoon WHERE Original_air_date >= '2020-01-01'\n\nQuestion: Show the series names of TV shows that have a share of 18-49 rating share greater than 20%.\nAnswer: SELECT series_name FROM TV_series WHERE 18_49_Rating_Share > 20\n\nQuestion: What are the titles of cartoons that were aired on channels with a package option?\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Package_Option = 'Yes')\nAnswer: ", "d34a75e1d192b8218e7562c1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What strategies do orchestras employ in their use of social media?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "02debdfcdc17e0bff4377aae": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Show the first name of the owner whose combined weight with their dog is the highest.\nPredicted SQL: SELECT T1.first_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id JOIN addresses AS T3 ON T1.permanent_address_id = T3.address_id ORDER BY T1.weight + T1.dog_weight DESC LIMIT 1\nAnswer: ", "f868d2cf23415c57e2042d72": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the most common role code among the owners?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "c95eeb9b07653ac90c3918f1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Identify anomalies in the room counts compared to the standard for each property type.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "3c0a56cb318f2ac3420e1d2d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the sum of the height and weight of Aleksey Ostapenko?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "84bf8d7661a3ca093583647c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the total surface area of the continents Asia and Europe?\nPredicted SQL: SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')\nAnswer: ", "edc791ba4b763db7273f2fa7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the average number of rooms among the high schoolers?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "43052fc2e5e1d4201e64c7da": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Assess the public sentiment toward different orchestras.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "3e9df97eca0931b4b5c381e9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Provide French translations for the episode titles of \"Music Box Italia\".\nPredicted SQL: SELECT T1.course_name ,  T2.other_details FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Music Box Italia\"\nAnswer: ", "82a182c5a3e81a6ca97f0694": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: find the id of tv channels that do not play any cartoon directed by Ben Jones.\nPredicted SQL: SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\nAnswer: ", "65da8051d88b432cc753f47d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which first names are used for professionals or owners but are not used as dog names?\nPredicted SQL: SELECT first_name FROM (SELECT first_name FROM professionals UNION SELECT first_name FROM owners) AS T1 WHERE first_name NOT IN (SELECT name FROM dogs)\nAnswer: ", "7eb02ada3c86975a77d7f73e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the version number of property id 4?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "bed9b93d1e2594e6fd580a9a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: How many sponsors have contestants with names containing the substring 'Al'?\nPredicted SQL: SELECT count(*) FROM students WHERE first_name LIKE '%Al%' OR middle_name LIKE '%Al%' OR last_name LIKE '%Al%'\nAnswer: ", "5d6ae60cccb2e274cb4b96a6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: On average, when were the transcripts printed?\nPredicted SQL: SELECT AVG(transcript_date) FROM Transcripts\nAnswer: ", "16d02c550768b903fbc0fbc4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List all cartoon directed by \"Ben Jones\".\nPredicted SQL: SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones'\nAnswer: ", "d95ea0fd49c96756b4a41358": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Find the program which most number of students are enrolled in. List both the id and the summary.\nPredicted SQL: SELECT degree_program_id, degree_summary_name FROM Degree_Programs WHERE degree_program_id IN (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)\nAnswer: ", "1c6fd76f42b29d90a86e2712": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show me all grades that have at least 4 students.\nPredicted SQL: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4\n\nQuestion: List the names of students who have friends with the same grade as them.\nAnswer: SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.friend_id = T3.ID WHERE T1.grade = T3.grade\n\nQuestion: Find the names of students who like someone with a grade lower than theirs.\nAnswer: SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.liked_id = T3.ID WHERE T3.grade < T1.grade\n\nQuestion: List the names of students who have friends who also like them.\nAnswer: SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.student_id WHERE T2.friend_id = T3.liked_id\n\nQuestion: Show the names of students who have no friends.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\nQuestion: List the names of students who like everyone.\nAnswer: SELECT T1.name FROM Highschooler AS T1 WHERE NOT EXISTS (SELECT * FROM Highschooler AS T2 WHERE T2.ID <> T1.ID AND T2.ID NOT IN (SELECT liked_id FROM Likes WHERE student_id = T1.ID))\n\nQuestion: Find the names of students who have friends who like them.\nAnswer: SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T2.friend_id = T3.student_id WHERE T3.liked_id = T1.ID\nAnswer: ", "3be52a77c50d1ce8320f0c7d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the country with the most number of TV Channels and how many does it have?\nPredicted SQL: SELECT Country, COUNT(*) AS Number_of_Channels \nFROM TV_Channel \nGROUP BY Country \nORDER BY Number_of_Channels DESC \nLIMIT 1\nAnswer: ", "1c5b5cbcaad7157c92683dff": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Count the dogs that have their own email addresses.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "146683bfdc1b9f3f4080e1dc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the average life expectancy in African countries that are republics?\nPredicted SQL: SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'\nAnswer: ", "3fc8b7390cfcdd35435bec00": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?\nPredicted SQL: SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id, COUNT(*) AS num_enrollments\nFROM Students AS T1\nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id\nGROUP BY T1.student_id\nORDER BY num_enrollments DESC\nLIMIT 1\nAnswer: ", "d88220c531826d93a2bfe46f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: How many TV Channel using language English?\nPredicted SQL: SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'\nAnswer: ", "51cfa06c945a4963cbba3527": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Which voting method was used by the most voters?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "b9222e6dd7888cfb8659d562": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the names of high school students and their schools.\nPredicted SQL: SELECT T1.first_name, T1.last_name, T2.school \nFROM Students AS T1 \nJOIN Schools AS T2 ON T1.school_id = T2.school_id \nWHERE T2.type = 'High School'\nAnswer: ", "8929148ac97dfc4df908c74c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are names of countries with the top 3 largest population?\nPredicted SQL: SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\nQuestion: What is the average life expectancy of countries in each continent?\nAnswer: SELECT Continent, AVG(LifeExpectancy) FROM country GROUP BY Continent\n\nQuestion: List the names of cities in countries where English is an official language.\nAnswer: SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T'\n\nQuestion: What is the total population of countries in each region?\nAnswer: SELECT Region, SUM(Population) FROM country GROUP BY Region\n\nQuestion: List the names of countries where the head of state is a woman.\nAnswer: SELECT Name FROM country WHERE HeadOfState LIKE '%woman%'\n\nQuestion: What is the average GNP of countries in each continent?\nAnswer: SELECT Continent, AVG(GNP) FROM country GROUP BY Continent\n\nQuestion: List the names of cities with a population greater than 1 million.\nAnswer: SELECT Name FROM city WHERE Population > 1000000\n\nQuestion: What is the total population of each country?\nAnswer: SELECT Name, SUM(Population) FROM country GROUP BY Name\nAnswer: ", "19f8cec9414add215f0db68d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.\nPredicted SQL: SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1\n\nQuestion: What is the total cost of treatment for each dog? List the dog id and total cost.\nAnswer: SELECT dog_id, SUM(cost_of_treatment) FROM Treatments GROUP BY dog_id\n\nQuestion: List the first and last names of the owners who have dogs that have received treatment from a professional with the role code 'VET'.\nAnswer: SELECT DISTINCT T2.first_name, T2.last_name FROM Treatments AS T1 JOIN Dogs AS D ON T1.dog_id = D.dog_id JOIN Owners AS T2 ON D.owner_id = T2.owner_id JOIN Professionals AS P ON T1.professional_id = P.professional_id WHERE P.role_code = 'VET'\n\nQuestion: What is the breed name of the dogs who have received treatment with a cost greater than 100 dollars?\nAnswer: SELECT DISTINCT B.breed_name FROM Treatments AS T1 JOIN Dogs AS D ON T1.dog_id = D.dog_id JOIN Breeds AS B ON D.breed_code = B.breed_code WHERE T1.cost_of_treatment > 100\n\nQuestion: List the treatment type descriptions and the number of treatments of each type.\nAnswer: SELECT T1.treatment_type_description, COUNT(*) FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code\n\nQuestion: Show the professional id, first name, and last name of the professionals who have treated dogs with a weight greater than 50.\nAnswer: SELECT DISTINCT T1.professional_id, T1.first_name, T1.last_name FROM Treatments AS T2 JOIN Professionals AS T1 ON T2.professional_id = T1.professional_id JOIN Dogs AS D ON T2.dog_id = D.dog_id WHERE D.weight > 50\n\nQuestion: List the dog names and ages of the dogs who have received treatment from a professional with the role code 'GROOM'.\nAnswer: SELECT D.name, D.age FROM Treatments AS T1 JOIN Dogs AS D ON T1.dog_id = D.dog_id JOIN Professionals AS P ON T1.professional_id = P.professional_id WHERE P.role_code = 'GROOM'\n\nQuestion: What is the total cost of treatment for each dog breed? List the breed code and total cost.\nAnswer: SELECT D.breed_code, SUM(cost_of_treatment) FROM Treatments AS T\nAnswer: ", "61b5efa65081829a6695d800": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.\nPredicted SQL: SELECT student_course_id, COUNT(*) AS enrollment_count\nFROM Transcript_Contents\nGROUP BY student_course_id\nORDER BY enrollment_count DESC\nLIMIT 1\nAnswer: ", "08809879736f0b72a9decec4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Find the floors of the offices of the contestants.\nPredicted SQL: SELECT line_1 FROM addresses WHERE address_id IN (SELECT current_address_id FROM students) OR address_id IN (SELECT permanent_address_id FROM students)\nAnswer: ", "31f4d80ac6bf85ea7bb83294": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the name of the city with the largest surface area?\nPredicted SQL: SELECT city FROM addresses ORDER BY LENGTH(line_1) + LENGTH(line_2) + LENGTH(line_3) DESC LIMIT 1\n\nQuestion: List the names of all courses offered.\nAnswer: SELECT course_name FROM courses\n\nQuestion: Show the names of all students who are enrolled in the Computer Science degree program.\nAnswer: SELECT first_name ,  last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.department_id = \"Computer Science\"\n\nQuestion: How many students are enrolled in the Fall 2021 semester?\nAnswer: SELECT count(*) FROM student_enrolment WHERE semester_id = \"Fall 2021\"\n\nQuestion: List the names of all students who have left the program.\nAnswer: SELECT first_name ,  last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: Show the names of all courses that are part of the Computer Science degree program.\nAnswer: SELECT course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id JOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN degree_programs AS T4 ON T3.degree_program_id = T4.degree_program_id WHERE T4.department_id = \"Computer Science\"\n\nQuestion: List the names of all students who have transcripts.\nAnswer: SELECT first_name ,  last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id JOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id\n\nQuestion: Show the names of all students who have transcripts for the Computer Science degree program.\nAnswer: SELECT first_name ,  last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id JOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id JOIN degree_programs AS\nAnswer: ", "f7b50b5da5b7c2b6400f06b4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Which poker player has the highest earnings after tax?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "539a5c95ad7b38cfe54afa57": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the language with the oldest origin?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "cfc2e1cebfb6b98ba076cc8e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the ids of students who both have friends and are liked?\nPredicted SQL: SELECT student_id FROM Friend INTERSECT SELECT student_id FROM Likes\nAnswer: ", "d3b264b4f8039cf85995867b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How much did Kacey spend in total in 2018?\nPredicted SQL: SELECT SUM(T3.other_details) \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN semesters AS T3 ON T2.semester_id = T3.semester_id \nWHERE T1.first_name = 'Kacey' AND T3.semester_name = '2018'\nAnswer: ", "a3d57a761fced379eadbcc08": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the shortest song in duration?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "6571b4c740fa40fc310993f4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: How many high schoolers are there?\nPredicted SQL: SELECT count(*) FROM Highschooler\nAnswer: ", "a41f425d4368ed2e107d8be6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the names of poker players sorted by their earnings descending.\nPredicted SQL: SELECT p.Name \nFROM people p \nJOIN poker_player pp ON p.People_ID = pp.People_ID \nORDER BY pp.Earnings DESC\nAnswer: ", "e3052a878bce12a2b148cc6b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What matters more in poker, luck or skill?\nPredicted SQL: This question cannot be answered directly with the given tables.\nAnswer: ", "c4e72ff014dac0f5024f3337": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Find the national anthem of Australia.\nPredicted SQL: This question cannot be answered using the provided tables.\nAnswer: ", "995cc14dd0c1866fb3c941b2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What are the names of the contestants whose names are not 'Jessie Alloway'\nPredicted SQL: SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'\n\nQuestion: How many votes were cast in each state?\nAnswer: SELECT state, COUNT(*) FROM VOTES GROUP BY state\n\nQuestion: List the contestant numbers and names of the contestants who received votes from the state with area code 123.\nAnswer: SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES WHERE state = (SELECT state FROM AREA_CODE_STATE WHERE area_code = 123))\n\nQuestion: Which contestant received the most votes?\nAnswer: SELECT contestant_number FROM VOTES GROUP BY contestant_number ORDER BY COUNT(*) DESC LIMIT 1\n\nQuestion: How many votes were cast for each contestant?\nAnswer: SELECT contestant_number, COUNT(*) FROM VOTES GROUP BY contestant_number\n\nQuestion: List the contestant names and the number of votes they received in descending order of votes.\nAnswer: SELECT C.contestant_name, COUNT(*) AS num_votes FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number GROUP BY V.contestant_number ORDER BY num_votes DESC\n\nQuestion: How many contestants received votes from each state?\nAnswer: SELECT state, COUNT(DISTINCT contestant_number) FROM VOTES GROUP BY state\n\nQuestion: List the contestant names who received votes from more than one state.\nAnswer: SELECT contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(DISTINCT state) > 1)\nAnswer: ", "865bd5d3a5238ad055447b57": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many unique time zones are there in the addresses table?\nPredicted SQL: SELECT count(DISTINCT time_zone) FROM addresses\n\nQuestion: List the names of all students who are currently enrolled in the Computer Science degree program.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = (SELECT degree_program_id FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Computer Science')))\n\nQuestion: Show the course names and descriptions for all courses that have sections.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM sections)\n\nQuestion: List the names of all students who have taken the course \"Introduction to Programming\".\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE course_id = (SELECT course_id FROM courses WHERE course_name = 'Introduction to Programming')))\n\nQuestion: Show the department names and descriptions for all departments that have degree programs.\nAnswer: SELECT department_name, department_description FROM departments WHERE department_id IN (SELECT department_id FROM degree_programs)\n\nQuestion: List the names of all students who have transcripts.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\n\nQuestion: Show the semester names and descriptions for all semesters that have student enrolments.\nAnswer: SELECT semester_name, semester_description FROM semesters WHERE semester_id IN (SELECT semester_id FROM student_enrolment)\n\nQuestion: List the names of all students who have a permanent address in New York.\nAnswer: SELECT first_name, last_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE city = 'New York')\nAnswer: ", "455723ab910ea188225ce636": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the sponsor of the poker player with the lowest earnings?\nPredicted SQL: SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN students AS T4 ON T3.student_id = T4.student_id ORDER BY T4.earnings ASC LIMIT 1\nAnswer: ", "328882d303933bd4ecb1b89c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Create a bar graph showing the distribution of grades among high schoolers.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "a420fab8640e6428a0fa5adb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the average age of the professionals who have done at least one treatment?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about professionals or treatments.\nAnswer: ", "b864bef448cff3396b27270b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Show the email addresses of the students and their advisors with student id 2.\nPredicted SQL: SELECT T1.email_address, T2.email_address \nFROM students AS T1 \nJOIN advisors AS T2 ON T1.advisor_id = T2.advisor_id \nWHERE T1.student_id = 2\nAnswer: ", "21ef871c3e4cbafc0d887b75": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Give the nationality that is most common across all people.\nPredicted SQL: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1\n\nQuestion: List the names of poker players who have made it to the final table.\nAnswer: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made = 'Yes'\n\nQuestion: What is the average height of all poker players?\nAnswer: SELECT AVG(T1.Height) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID\n\nQuestion: List the names of poker players who have earned more than $1 million.\nAnswer: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 1000000\nAnswer: ", "ad8a07949b1a8e176d42be4f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Show the citizenship shared by singers with birth year before 1945 and after 1955.\nPredicted SQL: SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955\nAnswer: ", "5aba387cffa6fa01162b2ea5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Show the record companies shared by orchestras founded before 2003 and after 2003.\nPredicted SQL: SELECT DISTINCT T1.Record_Company FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T1.Year_of_Founded < 2003 OR T1.Year_of_Founded > 2003\nAnswer: ", "68badc2e6e60d5218b73da52": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What competition did Logan participate in?\nPredicted SQL: SELECT T2.course_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN courses AS T4 ON T3.course_id = T4.course_id WHERE T1.first_name = \"Logan\" AND T1.last_name = \"Logan\"\nAnswer: ", "813a4a8268f583c48700af6f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Compile a report on the sales trend of a song over time, including its peak sales period.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "c28437fafe7f78f2d1992d58": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the sum of the height of Teodor Salparov and his pet?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "7b29fcbc5acdaf45dc43bf30": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is Jessica's phone number?\nPredicted SQL: SELECT cell_mobile_number FROM students WHERE first_name = 'Jessica'\nAnswer: ", "6d650a40ed7753729be757f6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the loudest property?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "63364ab444706fb1de24237e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: How many likes correspond to each student id?\nPredicted SQL: SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id\nAnswer: ", "9fa59f7d6e21875d9e17c9ee": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Translate the name of the country with the code \"ABW\" into Spanish.\nPredicted SQL: SELECT country FROM Addresses WHERE country = \"ABW\"\nAnswer: ", "c54eeb0af202cfd645c00d31": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What aircraft does Charles Dutoit own?\nPredicted SQL: This question does not pertain to the tables provided.\nAnswer: ", "f978ae31827bd3f4825ccad0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Find the singer with the most awards.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "ca9ad7b5f09e352367b6e316": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How many dogs have allergies?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "5eb43b0207ac0481f8a3b31f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Return the names of friends of the high school student Kyle.\nPredicted SQL: SELECT H2.name \nFROM Highschooler AS H1 \nJOIN Friend AS F ON H1.ID = F.student_id \nJOIN Highschooler AS H2 ON F.friend_id = H2.ID \nWHERE H1.name = 'Kyle'\nAnswer: ", "2559840ddc7cf14907518c5c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the top awards for conductors?\nPredicted SQL: SELECT Name ,  Year_of_Work FROM conductor ORDER BY Year_of_Work DESC\n\nQuestion: Show the names of orchestras and their conductors.\nAnswer: SELECT T2.Orchestra ,  T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID\n\nQuestion: Show the orchestras founded after 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded  >  2000\n\nQuestion: Show the names of conductors who have worked for more than 10 years.\nAnswer: SELECT Name FROM conductor WHERE Year_of_Work  >  10\n\nQuestion: Show the orchestras with the highest official ratings.\nAnswer: SELECT Orchestra FROM performance ORDER BY Official_ratings_(millions) DESC LIMIT 1\n\nQuestion: Show the names of conductors and orchestras for all performances.\nAnswer: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID  =  T3.Orchestra_ID\n\nQuestion: Show the names of orchestras with the highest attendance.\nAnswer: SELECT T2.Orchestra FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID  =  T2.Performance_ID ORDER BY Attendance DESC LIMIT 1\n\nQuestion: Show the names of conductors who have conducted the first show.\nAnswer: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID  =  T3.Orchestra_ID JOIN show AS T4 ON T3.Performance_ID  =  T4.Performance_ID WHERE T4.If_first_show  =  'yes'\nAnswer: ", "32bba5e8a8531f95fefe4208": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the Asian countries which have a population larger than that of any country in Africa?\nPredicted SQL: SELECT Name \nFROM country \nWHERE Continent = 'Asia' \nAND Population > (SELECT MAX(Population) \n                  FROM country \n                  WHERE Continent = 'Africa')\nAnswer: ", "30b658bf12a00685d00e4548": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How many dogs have an age below the average?\nPredicted SQL: SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)\nAnswer: ", "d48c99e5129524acc31cfc78": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the money rank of the poker player with the highest earnings?\nPredicted SQL: SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)\nAnswer: ", "73c56b51ea3502a95616524a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the names of the nations with the 3 lowest populations?\nPredicted SQL: SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\nQuestion: Find the names of the cities in the country with the highest life expectancy.\nAnswer: SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.LifeExpectancy = (SELECT MAX(LifeExpectancy) FROM country)\n\nQuestion: What is the continent with the highest average population?\nAnswer: SELECT Continent FROM country GROUP BY Continent ORDER BY AVG(Population) DESC LIMIT 1\n\nQuestion: Find the names of the countries where English is an official language.\nAnswer: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')\n\nQuestion: What is the average life expectancy of countries in each region?\nAnswer: SELECT Region, AVG(LifeExpectancy) FROM country GROUP BY Region\n\nQuestion: List the names of the countries with a population greater than 100 million.\nAnswer: SELECT Name FROM country WHERE Population > 100000000\n\nQuestion: Find the names of the cities in the countries with a government form of 'Republic'.\nAnswer: SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.GovernmentForm = 'Republic'\n\nQuestion: What is the total population of each continent?\nAnswer: SELECT Continent, SUM(Population) FROM country GROUP BY Continent\nAnswer: ", "8c1848c9b3d823fc4db1cd61": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?\nPredicted SQL: SELECT series_name, Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Michael Chang'))\nAnswer: ", "533c7f3dfb306ca45cf5e10b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: List the name of the conductor with the most years of work.\nPredicted SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\nQuestion: What is the record company of the orchestra with the highest official ratings?\nAnswer: SELECT Record_Company FROM orchestra WHERE Orchestra_ID = (SELECT Orchestra_ID FROM performance ORDER BY Official_ratings_(millions) DESC LIMIT 1)\n\nQuestion: List the orchestras founded after 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: Show the type and date of performances with a share greater than 50.\nAnswer: SELECT Type, Date FROM performance WHERE Share > 50\n\nQuestion: What is the nationality of the conductor who conducted the performance with the highest weekly rank?\nAnswer: SELECT Nationality FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM performance ORDER BY Weekly_rank DESC LIMIT 1)\n\nQuestion: List the orchestras with major record format 'CD'.\nAnswer: SELECT Orchestra FROM orchestra WHERE Major_Record_Format = 'CD'\n\nQuestion: Show the attendance and result of shows where it was the first show.\nAnswer: SELECT Attendance, Result FROM show WHERE If_first_show = 'Yes'\n\nQuestion: What is the name of the conductor who conducted the performance with the highest official ratings?\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM performance ORDER BY Official_ratings_(millions) DESC LIMIT 1)\nAnswer: ", "241cecfe686dda1495b3616c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?\nPredicted SQL: SELECT T1.Package_Option FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE T2.Directed_by = 'Ben Jones')\nAnswer: ", "a0d0e976ed6041ffa53deb1c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the reasons for regions with higher life expectancy?\nPredicted SQL: SELECT region, AVG(lifeexpectancy) FROM country GROUP BY region HAVING AVG(lifeexpectancy) > (SELECT AVG(lifeexpectancy) FROM country)\nAnswer: ", "3af51a21c1a6602e8d8f22a7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the rank point that Amenity earned?\nPredicted SQL: SELECT T1.rank_point FROM students AS T1 WHERE T1.first_name = \"Amenity\"\nAnswer: ", "b4ae446d3c31a21b778c665c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: How do orchestras contribute to educational programs in schools?\nPredicted SQL: SELECT T2.Orchestra, T2.Record_Company FROM orchestra AS T2 JOIN performance AS T1 ON T2.Orchestra_ID = T1.Orchestra_ID WHERE T1.Type = \"Educational Program\"\nAnswer: ", "5a4800b06851d29bd66e7c98": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Find the average age of the spouses of the conductors.\nPredicted SQL: This question cannot be answered with the given tables as there is no information about spouses or conductors in the provided tables.\nAnswer: ", "bb374b1ad3485f16ffdcb85e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the website URLs of players from Bulgaria?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "265cd7796c15b657f6a71a5c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Cluster properties based on their locations.\nPredicted SQL: SELECT city, state_province_county, country FROM Addresses GROUP BY city, state_province_county, country\n\nQuestion: List all courses offered in the department of Computer Science.\nAnswer: SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Sections WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Computer Science'))\n\nQuestion: Show the names of students who are enrolled in the semester named \"Fall 2021\".\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE semester_id = (SELECT semester_id FROM Semesters WHERE semester_name = 'Fall 2021'))\n\nQuestion: List the names of students who have taken the course \"Introduction to Programming\".\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment_Courses WHERE course_id = (SELECT course_id FROM Courses WHERE course_name = 'Introduction to Programming')))\n\nQuestion: Show the details of the degree program with the most enrolled students.\nAnswer: SELECT * FROM Degree_Programs WHERE degree_program_id = (SELECT degree_program_id FROM Student_Enrolment GROUP BY degree_program_id ORDER BY COUNT(student_id) DESC LIMIT 1)\n\nQuestion: List the names of students who have transcripts.\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment_Courses WHERE student_course_id IN (SELECT student_course_id FROM Transcript_Contents)))\n\nQuestion: Show the names of students who have a permanent address in New York.\nAnswer: SELECT first_name, last_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'New York')\n\nQuestion: List the names of students who have left the university.\nAnswer: SELECT first_name, last_name FROM Students WHERE date_left IS NOT NULL\nAnswer: ", "915510a2f200def0f15484f5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the continent name which Anguilla belongs to?\nPredicted SQL: SELECT Continent FROM country WHERE Name = 'Anguilla'\nAnswer: ", "edbff89fb9f1c4aff8f314ea": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the birth years and citizenships of the singers?\nPredicted SQL: SELECT Birth_Year, Citizenship FROM singer\nAnswer: ", "c6f4f2ee058d70de0dbe84ba": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the weekly rank of the cartoon \"The Eyes of Despero\"?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "4c6d60eaecc691c0d9ee55b2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: find id of the tv channels that from the countries where have more than two tv channels.\nPredicted SQL: SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)\nAnswer: ", "23cebc6baa4c419d0b3a9879": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the name, year of independence, and surface area of the country that has the lowest population.\nPredicted SQL: SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)\nAnswer: ", "2c62900c33263ef9b9af5568": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Find the advisor to Alice Walton.\nPredicted SQL: SELECT T2.first_name, T2.last_name \nFROM students AS T1 \nJOIN people AS T2 ON T1.advisor_id = T2.person_id \nWHERE T1.first_name = 'Alice' AND T1.last_name = 'Walton'\nAnswer: ", "63e47257cddb28c8893aa090": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Which orchestra has the most members?\nPredicted SQL: SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1\nAnswer: ", "d4240a08136ecaaa5fcd6859": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the names and descriptions for all the sections?\nPredicted SQL: SELECT section_name, section_description FROM Sections\nAnswer: ", "1fc5e0343fa65741f7a3b5da": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Find the birth dates and earnings of players who have made more than 30 final tables and read them aloud.\nPredicted SQL: This question seems to be related to a different set of tables than the ones provided in the prompt. Can you please provide the correct question related to the tables provided above?\nAnswer: ", "85ca1e34ca1ce5b486882006": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the name, independence year, and surface area of the country with the smallest population?\nPredicted SQL: SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)\nAnswer: ", "946b0184404795452e8c2dff": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the average earnings across all poker players.\nPredicted SQL: SELECT AVG(Earnings) FROM poker_player\nAnswer: ", "d5f4e054c9fbb1fc07870f58": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the country codes for countries that do not speak English?\nPredicted SQL: SELECT DISTINCT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')\nAnswer: ", "d9ae71ed4dde93c9a03ef02f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.\nPredicted SQL: SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)\nAnswer: ", "aa4e543eefd9769b7e7c4f55": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: How many students have Instagram IDs?\nPredicted SQL: SELECT count(*) FROM students WHERE email_address LIKE '%@instagram.com' \n\nQuestion: List the names of students who have registered for the most number of courses.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\n\nQuestion: Show the names of students who have enrolled in the Computer Science degree program.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.department_id = \"Computer Science\"\n\nQuestion: List the names of students who have left the university.\nAnswer: SELECT first_name ,  last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: Show the names of students who have registered for courses in the Spring semester.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN semesters AS T3 ON T2.semester_id = T3.semester_id WHERE T3.semester_name = \"Spring\"\n\nQuestion: How many students are enrolled in the Engineering department?\nAnswer: SELECT count(*) FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id WHERE T4.department_name = \"Engineering\"\n\nQuestion: List the names of students who have transcripts.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id JOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id\n\nQuestion: Show the names of students who have both current and permanent addresses.\nAnswer: SELECT first\nAnswer: ", "f0b14a10b0b983d290e78351": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which continent is Anguilla in?\nPredicted SQL: SELECT Continent FROM country WHERE Name = 'Anguilla'\nAnswer: ", "d6d1ed9356ca7d782b10460d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What languages are only used by a single country with a republic government?\nPredicted SQL: SELECT Language \nFROM countrylanguage \nWHERE CountryCode IN (\n    SELECT Code \n    FROM country \n    WHERE GovernmentForm = 'Republic'\n    GROUP BY Code \n    HAVING COUNT(*) = 1\n)\nAnswer: ", "2b49f84ee16c1f475a7847b8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What are the names of the voters who voted for the contestant Alana Bregman?\nPredicted SQL: SELECT T1.first_name, T1.last_name \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN Courses AS T4 ON T3.course_id = T4.course_id \nWHERE T4.course_name = \"Alana Bregman\"\nAnswer: ", "29901f2e5167af79999bc73e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Forecast changes in the availability of property features over time.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "d661d54e72df880828841563": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the population and life expectancies in Brazil?\nPredicted SQL: SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'\nAnswer: ", "5c18a6b7e0723f186d694775": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are all the possible breed type and size type combinations?\nPredicted SQL: SELECT breed_name, size_description FROM Breeds, Sizes\nAnswer: ", "cd0ce093d0cbc681eac3e9ef": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List the names of the dogs of the rarest breed and the treatment dates of them.\nPredicted SQL: SELECT D.name, T.date_of_treatment \nFROM Dogs AS D \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE D.breed_code = (SELECT breed_code FROM Breeds ORDER BY breed_code LIMIT 1)\nORDER BY T.date_of_treatment\nAnswer: ", "c171f6bf058ed73ea548d848": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the total number of people living in the nations that do not use English?\nPredicted SQL: SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')\nAnswer: ", "0f7406c815b20c1c93b746bf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Which agency has the highest average agreed selling price?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "cc8b4c1fb9a3000ad146ebae": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the ID of the high schooler named Kyle.\nPredicted SQL: SELECT ID FROM Highschooler WHERE name = 'Kyle'\nAnswer: ", "9bcd81bd3e21f42ea8c96b24": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Count the number of dogs that went through a treatment.\nPredicted SQL: SELECT count(*) FROM treatments\nAnswer: ", "48648034f73d5f8a6087cbd4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the average years of experience of the professionals?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "c59c8ad857e16e1edea16e4b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Show me the cost of the most recently performed treatment.\nPredicted SQL: SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1\n\nQuestion: List the first and last names of the owners who have abandoned dogs.\nAnswer: SELECT first_name, last_name FROM owners WHERE owner_id IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'Y')\n\nQuestion: What is the breed name of the dog with the highest weight?\nAnswer: SELECT breed_name FROM breeds WHERE breed_code IN (SELECT breed_code FROM dogs WHERE weight = (SELECT max(weight) FROM dogs))\n\nQuestion: Show the treatment type description and cost of treatments performed by professional with id 123.\nAnswer: SELECT treatment_type_description, cost_of_treatment FROM treatment_types WHERE treatment_type_code IN (SELECT treatment_type_code FROM treatments WHERE professional_id = 123)\n\nQuestion: List the names of the professionals who have performed treatments on dogs.\nAnswer: SELECT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments)\n\nQuestion: How many dogs have been adopted?\nAnswer: SELECT count(*) FROM dogs WHERE date_adopted IS NOT NULL\n\nQuestion: Show the email addresses of owners who have abandoned dogs.\nAnswer: SELECT email_address FROM owners WHERE owner_id IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'Y')\n\nQuestion: What is the size description of the dog with the oldest age?\nAnswer: SELECT size_description FROM sizes WHERE size_code IN (SELECT size_code FROM dogs WHERE age = (SELECT max(age) FROM dogs))\nAnswer: ", "f548f855ea5b26b370cd0796": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .\nPredicted SQL: SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments WHERE cost_of_treatment > 1000)\nAnswer: ", "51f7b20aa85fa130715776c3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Recommend songs for a contestant from their state.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "421341fe1930e12a3ae07e45": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the nickname of the contestant with the most votes?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "5866eeca7512093103282373": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the names and id of courses having at most 2 sections?\nPredicted SQL: SELECT course_name, course_id \nFROM Courses \nWHERE course_id IN (\n    SELECT course_id \n    FROM Sections \n    GROUP BY course_id \n    HAVING COUNT(section_id) <= 2\n)\nAnswer: ", "d1e0f157253abfb48fbbfba3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Return the names of conductors that do not have the nationality \"USA\".\nPredicted SQL: SELECT Name FROM conductor WHERE Nationality <> 'USA' \n\nQuestion: List the orchestras that were founded after the year 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: Show the performances with official ratings greater than 5 million.\nAnswer: SELECT * FROM performance WHERE Official_ratings_(millions) > 5\n\nQuestion: Find the names of the conductors who have worked in the year 2010.\nAnswer: SELECT Name FROM conductor WHERE Year_of_Work = 2010\n\nQuestion: List the orchestras that have a major record format of \"CD\".\nAnswer: SELECT Orchestra FROM orchestra WHERE Major_Record_Format = 'CD'\n\nQuestion: Show the performances with a weekly rank in the top 3.\nAnswer: SELECT * FROM performance WHERE Weekly_rank <= 3\n\nQuestion: Find the names of the conductors who have worked with orchestras that have a record company of \"Sony\".\nAnswer: SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID WHERE o.Record_Company = 'Sony'\n\nQuestion: List the orchestras that have performances with an attendance of over 1000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Attendance > 1000)\nAnswer: ", "cec8b44ddcd7336cdf1ac995": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the specialties of the conductors from UK?\nPredicted SQL: SELECT T1.department_description FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN students AS T4 ON T3.student_id = T4.student_id JOIN addresses AS T5 ON T4.current_address_id = T5.address_id WHERE T5.country = \"UK\"\nAnswer: ", "5be095a93c1fab82f7ae5640": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: How many show sponsors are there?\nPredicted SQL: SELECT count(*) FROM Departments WHERE department_name = 'Show Sponsors'\nAnswer: ", "dda867f635683dc5aef8962d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Show names of people whose nationality is not \"Russia\".\nPredicted SQL: SELECT Name FROM people WHERE Nationality <> 'Russia'\nAnswer: ", "eca9a0a99c50d65387de117f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the countries that are not playing cartoons written by Todd Casey?\nPredicted SQL: SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')\nAnswer: ", "fcf7c243c430387cff663d17": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What methods do orchestras use to incorporate modern music?\nPredicted SQL: SELECT Major_Record_Format FROM orchestra WHERE Major_Record_Format LIKE '%modern%'\nAnswer: ", "d210506d6a7bbf3e12dcd210": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: List the country names along with their national anthems.\nPredicted SQL: SELECT country, national_anthem FROM Countries\nAnswer: ", "67280700442da6d5020259c6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Tell me about the Beatles' impact on pop music.\nPredicted SQL: This question cannot be answered directly with the given tables.\nAnswer: ", "a190e35d5304c7eba7e717c8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .\nPredicted SQL: SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'\n\nQuestion: List the course names and descriptions for the courses enrolled by student with id 123.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 123))\n\nQuestion: Find the department names and descriptions for the departments that offer degree programs.\nAnswer: SELECT department_name, department_description FROM departments WHERE department_id IN (SELECT department_id FROM degree_programs)\n\nQuestion: List the semester names and descriptions for the semesters in which student with id 456 is enrolled.\nAnswer: SELECT semester_name, semester_description FROM semesters WHERE semester_id IN (SELECT semester_id FROM student_enrolment WHERE student_id = 456)\n\nQuestion: Find the course names and descriptions for the courses in the transcript of student with id 789.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 789))\n\nQuestion: List the degree program names and descriptions for the degree programs in which student with id 101 is enrolled.\nAnswer: SELECT degree_summary_name, degree_summary_description FROM degree_programs WHERE degree_program_id IN (SELECT degree_program_id FROM student_enrolment WHERE student_id = 101)\n\nQuestion: Find the current and permanent addresses of the student with the first name 'Alice'.\nAnswer: SELECT current_address_id, permanent_address_id FROM students WHERE first_name = 'Alice'\n\nQuestion: List the section names and descriptions for the sections of courses enrolled by student with id 222.\nAnswer: SELECT section_name, section_description FROM sections WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 222))\nAnswer: ", "7f8ee10c2e23bef123856992": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Count the number of mentors for the conductors.\nPredicted SQL: SELECT count(*) FROM Departments WHERE department_name = \"Conductors\"\nAnswer: ", "450a224227a51fda989e202f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the name of the nation that uses the greatest amount of languages.\nPredicted SQL: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1)\nAnswer: ", "e6cbcddc33e4fc8f790db891": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the Instagram username of the student with the most likes?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "140221e3de8f8efc4aa220c7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: List the names of conductors in ascending order of age.\nPredicted SQL: SELECT Name FROM conductor ORDER BY Age ASC\n\nQuestion: What is the record company of the orchestra conducted by the youngest conductor?\nAnswer: SELECT Record_Company FROM orchestra WHERE Conductor_ID = (SELECT Conductor_ID FROM conductor ORDER BY Age ASC LIMIT 1)\n\nQuestion: How many performances have official ratings greater than 5 million?\nAnswer: SELECT COUNT(*) FROM performance WHERE Official_ratings_(millions) > 5\n\nQuestion: List the orchestras founded after 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: What is the average share of performances?\nAnswer: SELECT AVG(Share) FROM performance\n\nQuestion: List the names of conductors who have conducted performances with weekly rank in the top 3.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Weekly_rank <= 3))\n\nQuestion: How many performances have an official rating of exactly 7 million?\nAnswer: SELECT COUNT(*) FROM performance WHERE Official_ratings_(millions) = 7\n\nQuestion: List the orchestras with major record format 'CD'.\nAnswer: SELECT Orchestra FROM orchestra WHERE Major_Record_Format = 'CD'\nAnswer: ", "5150009a937a44e010366e32": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the invoice numbers of the songs?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "b373bff536709312a7a65d36": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Retrieve the most recent news articles about the top poker players.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "b3ce6f0ac7f33386f5185c42": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Show the names of singers and the total sales of their songs.\nPredicted SQL: SELECT singer.Name, SUM(song.Sales) AS Total_Sales\nFROM singer\nJOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Name\nAnswer: ", "cefeacbd4e9d44dc250185e4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Cluster dog breeds based on the average size and weight.\nPredicted SQL: This question seems to be related to dog breeds, but the tables provided are for student and course information. Could you please provide a question related to the tables provided so I can assist you better?\nAnswer: ", "9595f10ca476f36f6b560103": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the cartoon titles and their viewer counts.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "62264b06ee4d76775154102b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which states have both owners and professionals living there?\nPredicted SQL: SELECT state FROM Owners WHERE state IN (SELECT state FROM Professionals)\nAnswer: ", "da1b5017a4c16b7afd41397f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Find the number of cities in each district whose population is greater than the average population of cities?\nPredicted SQL: SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District\n\nQuestion: List the names of countries in each continent with a life expectancy greater than 80.\nAnswer: SELECT Continent, Name FROM country WHERE LifeExpectancy > 80\n\nQuestion: Find the country with the highest GNP (Gross National Product).\nAnswer: SELECT Name FROM country ORDER BY GNP DESC LIMIT 1\n\nQuestion: List the languages that are official in more than one country.\nAnswer: SELECT Language FROM countrylanguage WHERE IsOfficial = 'T' GROUP BY Language HAVING COUNT(DISTINCT CountryCode) > 1\n\nQuestion: Find the country with the highest population.\nAnswer: SELECT Name FROM country ORDER BY Population DESC LIMIT 1\n\nQuestion: List the countries with a population greater than 100 million.\nAnswer: SELECT Name FROM country WHERE Population > 100000000\n\nQuestion: Find the continent with the highest average life expectancy.\nAnswer: SELECT Continent FROM country GROUP BY Continent ORDER BY AVG(LifeExpectancy) DESC LIMIT 1\n\nQuestion: List the countries where the head of state is a woman.\nAnswer: SELECT Name FROM country WHERE HeadOfState LIKE '%woman%'\nAnswer: ", "9d05c4fad703e457a3e89e47": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?\nPredicted SQL: SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003\n\nQuestion: List the names of conductors who have conducted performances with official ratings over 5 million.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 5))\n\nQuestion: How many performances have a weekly rank in the top 10?\nAnswer: SELECT count(*) FROM performance WHERE Weekly_rank <= 10\n\nQuestion: Show the orchestras that have performances with a share greater than 20%.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Share > 20)\n\nQuestion: List the names of conductors who have conducted performances with an official rating over 5 million and a share greater than 20%.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 5 AND Share > 20))\n\nQuestion: How many performances have an official rating over 5 million and a share greater than 20%?\nAnswer: SELECT count(*) FROM performance WHERE Official_ratings_(millions) > 5 AND Share > 20\n\nQuestion: Show the orchestras that have performances with an official rating over 5 million and a share greater than 20%.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 5 AND Share > 20)\nAnswer: ", "6857db6be9cd437b8053da00": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: List the names of students who have liked student ID 1101 and read them aloud.\nPredicted SQL: SELECT first_name, middle_name, last_name FROM students WHERE student_id = 1101\nAnswer: ", "a7e59fc1c2c1e9e8bc597ddd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List the date of each treatment, together with the first name of the professional who operated it.\nPredicted SQL: SELECT T1.date_of_treatment, T2.first_name \nFROM Treatments AS T1 \nJOIN Professionals AS T2 ON T1.professional_id = T2.professional_id\nAnswer: ", "da49dd65b76cd36e4ab8d251": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the age of the high school student named Tiffany?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "ecc74d5a22900d3159643009": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What's the reason for poker players wearing sunglasses?\nPredicted SQL: There is no specific question that can be answered with the given tables.\nAnswer: ", "982e9ca73cb3ba3cfbac0a26": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Map the distribution of poker players' nationalities.\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about poker players or their nationalities.\nAnswer: ", "30d72ad1d4f0de6a07fe90b5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What effects do romantic relationships have on friendships?\nPredicted SQL: SELECT f1.student_id, f1.friend_id\nFROM Friend f1\nJOIN Friend f2 ON f1.friend_id = f2.student_id AND f1.student_id = f2.friend_id\nAnswer: ", "d3513c7ab967d04aa7af4b90": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Compute the average age of all the dogs.\nPredicted SQL: SELECT AVG(age) FROM Dogs\n\nQuestion: List the first and last names of owners who have abandoned dogs.\nAnswer: SELECT first_name, last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE abandoned_yn = 'Y')\n\nQuestion: Find the treatment type descriptions for the treatments given to dogs named 'Buddy'.\nAnswer: SELECT T2.treatment_type_description FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.name = 'Buddy'\n\nQuestion: List the names of all dogs that have been treated by a professional with the role code 'VET'.\nAnswer: SELECT name FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments WHERE professional_id IN (SELECT professional_id FROM Professionals WHERE role_code = 'VET'))\n\nQuestion: Find the total cost of treatments for each dog.\nAnswer: SELECT dog_id, SUM(cost_of_treatment) FROM Treatments GROUP BY dog_id\n\nQuestion: List the names of all dogs that have not been adopted.\nAnswer: SELECT name FROM Dogs WHERE date_adopted IS NULL\n\nQuestion: Find the treatment type descriptions for the treatments given to dogs with a weight greater than 50.\nAnswer: SELECT T2.treatment_type_description FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.weight > 50\n\nQuestion: List the names of all dogs that have been treated by a professional with the email address 'example@example.com'.\nAnswer: SELECT name FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments WHERE professional_id IN (SELECT professional_id FROM Professionals WHERE email_address = 'example@example.com'))\nAnswer: ", "3d6707afda55ce1a32f0abce": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the description for the section named h?\nPredicted SQL: SELECT section_description FROM sections WHERE section_name = 'h'\nAnswer: ", "d658074af588c8e653b138a7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How long is the treatment type VAC?\nPredicted SQL: SELECT course_description FROM courses WHERE course_name = \"VAC\"\nAnswer: ", "89f5c0dbed6f9ef846b51fd6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What color is the dog Mavis?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "c2ab53986ed2db6995eef182": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the total number of unique official languages spoken in the countries that are founded before 1930?\nPredicted SQL: SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE IsOfficial = 'T' AND IndepYear < 1930\nAnswer: ", "f3c1a9246c515eef30e32a8c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: List the name of singers in ascending order of net worth.\nPredicted SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\nQuestion: What is the citizenship of the singer with the highest sales?\nAnswer: SELECT Citizenship FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM song ORDER BY Sales DESC LIMIT 1)\n\nQuestion: List the titles of songs sung by singers born after 1990.\nAnswer: SELECT Title FROM song WHERE Singer_ID IN (SELECT Singer_ID FROM singer WHERE Birth_Year > 1990)\n\nQuestion: What is the highest position achieved by singers with a net worth of more than 50 million?\nAnswer: SELECT Highest_Position FROM song WHERE Singer_ID IN (SELECT Singer_ID FROM singer WHERE Net_Worth_Millions > 50)\n\nQuestion: List the names of singers who have songs with sales greater than 1 million.\nAnswer: SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 1000000)\nAnswer: ", "f1d56d170dd3feec1b3d5518": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the names of conductors, ordered by age?\nPredicted SQL: SELECT Name FROM conductor ORDER BY Age\nAnswer: ", "eddcc359ae1bc11844a8cb93": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.\nPredicted SQL: SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1\n\nQuestion: List the first and last names of the owners who have dogs that have received treatments.\nAnswer: SELECT DISTINCT first_name, last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments))\n\nQuestion: What are the treatment types and costs for the treatments given to dogs named 'Buddy'?\nAnswer: SELECT T2.treatment_type_description, T1.cost_of_treatment FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code JOIN Dogs AS T3 ON T1.dog_id = T3.dog_id WHERE T3.name = 'Buddy'\n\nQuestion: List the names of the professionals who have treated dogs with a cost greater than $100.\nAnswer: SELECT DISTINCT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment > 100)\n\nQuestion: How many dogs have been adopted?\nAnswer: SELECT count(*) FROM Dogs WHERE date_adopted IS NOT NULL\n\nQuestion: Show the breed names of the dogs that have been treated by a professional with the role code 'VET'.\nAnswer: SELECT DISTINCT T2.breed_name FROM Treatments AS T1 JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id JOIN Professionals AS T3 ON T1.professional_id = T3.professional_id WHERE T3.role_code = 'VET'\n\nQuestion: List the treatment types and costs for the treatments given to dogs with a weight greater than 50 pounds.\nAnswer: SELECT T2.treatment_type_description, T1.cost_of_treatment FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code JOIN Dogs AS T3 ON T1.dog_id = T3.dog_id WHERE T3.weight > 50\n\nQuestion: What are the sizes of the dogs that have received treatments from professionals with the last name 'Smith'?\nAnswer: SELECT DISTINCT T2.size_description FROM Treatments AS T1 JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id JOIN Professionals AS T3 ON T1.professional_id = T3.professional_id WHERE T3.last_name = 'Smith'\nAnswer: ", "0675bd6376b73adaa685bf03": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the name, population, and life expectancy of the largest Asian country by land?\nPredicted SQL: SELECT c.Name, c.Population, c.LifeExpectancy \nFROM country c \nWHERE c.Continent = 'Asia' \nORDER BY c.SurfaceArea DESC \nLIMIT 1\nAnswer: ", "8dcf5645addc4e7e88def84c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: How many bedrooms are there in property id 2?\nPredicted SQL: SELECT line_1, line_2, line_3 FROM Addresses WHERE address_id = 2\nAnswer: ", "40c2392fb83dbde475b5bf89": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the average length of the mortgage in years for the properties?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about mortgages or properties.\nAnswer: ", "457b092ec31ebf430a54b008": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the total surface area of the countries in the Caribbean region?\nPredicted SQL: SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'\nAnswer: ", "5ab5b96db9de1b28d2136a07": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Why do friendships end?\nPredicted SQL: SELECT T1.name ,  T2.name FROM friend AS T3 JOIN highschooler AS T1 ON T3.student_id  =  T1.ID JOIN highschooler AS T2 ON T3.friend_id  =  T2.ID WHERE T1.grade  <>  T2.grade\n\nQuestion: Show the names of students who like someone younger than themselves.\nAnswer: SELECT T1.name FROM likes AS T2 JOIN highschooler AS T1 ON T2.student_id  =  T1.ID JOIN highschooler AS T3 ON T2.liked_id  =  T3.ID WHERE T1.grade  >  T3.grade\n\nQuestion: Show the names of students who have no friends.\nAnswer: SELECT name FROM highschooler WHERE ID NOT IN (SELECT student_id FROM friend)\n\nQuestion: Show the names of students who like someone with a lower grade.\nAnswer: SELECT T1.name FROM likes AS T2 JOIN highschooler AS T1 ON T2.student_id  =  T1.ID JOIN highschooler AS T3 ON T2.liked_id  =  T3.ID WHERE T1.grade  >  T3.grade\n\nQuestion: Show the names of students who have friends in the same grade.\nAnswer: SELECT T1.name FROM friend AS T2 JOIN highschooler AS T1 ON T2.student_id  =  T1.ID JOIN highschooler AS T3 ON T2.friend_id  =  T3.ID WHERE T1.grade  =  T3.grade\n\nQuestion: Show the names of students who like someone older than themselves.\nAnswer: SELECT T1.name FROM likes AS T2 JOIN highschooler AS T1 ON T2.student_id  =  T1.ID JOIN highschooler AS T3 ON T2.liked_id  =  T3.ID WHERE T1.grade  <  T3.grade\n\nQuestion: Show the names of students who have friends in a different grade.\nAnswer: SELECT T1.name FROM friend AS T2 JOIN highschooler AS T1 ON T2.student_id  =  T1.ID JOIN highschooler AS T3 ON T2.friend_id  =  T3.ID WHERE T1.grade  <>  T3.grade\n\nQuestion: Show the names of students who like someone in the same grade.\nAnswer: SELECT T1.name FROM likes AS T2 JOIN highschooler AS T1 ON T2.student_id  =  T1.ID JOIN highschooler AS T3 ON T2\nAnswer: ", "75b8bbe7e8301917d2cb4ed3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the last transcript release date?\nPredicted SQL: SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1\n\nQuestion: List the names of students who have enrolled in the degree program with id 5.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id  =  5)\n\nQuestion: How many courses are enrolled in by the student with id 10?\nAnswer: SELECT count(*) FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id  =  10)\n\nQuestion: List the names of students who have enrolled in the course with id 15.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE course_id  =  15))\n\nQuestion: What is the current address of the student with id 20?\nAnswer: SELECT line_1 ,  line_2 ,  line_3 ,  city ,  zip_postcode ,  state_province_county ,  country FROM addresses WHERE address_id  =  (SELECT current_address_id FROM students WHERE student_id  =  20)\n\nQuestion: List the names of students who have enrolled in the semester with id 8.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE semester_id  =  8)\n\nQuestion: How many students are enrolled in the degree program with id 3?\nAnswer: SELECT count(*) FROM student_enrolment WHERE degree_program_id  =  3\n\nQuestion: List the names of students who have enrolled in more than one course.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment GROUP BY student_id HAVING count(*)  >  1)\nAnswer: ", "ee39019fa0cc95c79442af7e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the duration of the performance type 'Auditions 1' held on June 9th?\nPredicted SQL: SELECT T1.other_details FROM sections AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id WHERE T1.section_name = 'Auditions 1' AND T1.section_description = 'June 9th'\nAnswer: ", "235d060b71085de215fde0c6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the name of the state where Todd Casey was born?\nPredicted SQL: SELECT state_province_county FROM addresses WHERE address_id = (SELECT permanent_address_id FROM students WHERE first_name = 'Todd' AND last_name = 'Casey')\nAnswer: ", "431dc82877d1770a57d697a4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the ids of high school students who do not have friends?\nPredicted SQL: SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\nAnswer: ", "51522ebff63a6cff4678d003": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What semesters did Sergey Grankin play in?\nPredicted SQL: SELECT T3.semester_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN semesters AS T3 ON T2.semester_id = T3.semester_id WHERE T1.first_name = 'Sergey' AND T1.last_name = 'Grankin'\nAnswer: ", "384e6664eb64ba240ce37759": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How many professionals did not operate any treatment on dogs?\nPredicted SQL: SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)\nAnswer: ", "1a7e4215ca268dec3bb5914f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Find the number of orchestras whose record format is \"CD\" or \"DVD\".\nPredicted SQL: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD') \n\nQuestion: List the names of conductors who have conducted performances with official ratings over 1 million.\nAnswer: SELECT DISTINCT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Official_ratings_(millions) > 1\n\nQuestion: Find the orchestras founded after the year 2000.\nAnswer: SELECT * FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: Show the performance type and date for performances with a weekly rank in the top 3.\nAnswer: SELECT Type, Date FROM performance WHERE Weekly_rank <= 3\n\nQuestion: List the orchestras and their conductors where the conductor's nationality is different from the orchestra's record company.\nAnswer: SELECT o.Orchestra, c.Name FROM orchestra o JOIN conductor c ON o.Conductor_ID = c.Conductor_ID WHERE c.Nationality <> o.Record_Company\n\nQuestion: Find the average share of performances for orchestras founded before the year 1990.\nAnswer: SELECT AVG(Share) FROM performance p JOIN orchestra o ON p.Orchestra_ID = o.Orchestra_ID WHERE o.Year_of_Founded < 1990\n\nQuestion: Show the performance type and attendance for shows that were not the first show and had a positive result.\nAnswer: SELECT p.Type, s.Attendance FROM performance p JOIN show s ON p.Performance_ID = s.Performance_ID WHERE s.If_first_show = 'No' AND s.Result = 'Positive'\nAnswer: ", "a17ce37d80efe1281bec919a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: How many friends does each student have?\nPredicted SQL: SELECT student_id, COUNT(friend_id) AS num_friends\nFROM Friend\nGROUP BY student_id\nAnswer: ", "314866c14172b67d1a9b34cf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Find the surface area of the city of Tilburg.\nPredicted SQL: SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Addresses WHERE city = 'Tilburg'\nAnswer: ", "c57ab0d88cfa0f8019b2145b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the country codes of countries where people use languages other than English?\nPredicted SQL: SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'\nAnswer: ", "56826679caf7a26640128dd4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Show titles of songs and names of singers.\nPredicted SQL: SELECT Title, Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID\n\nQuestion: List the names of singers who have a net worth of more than 50 million.\nAnswer: SELECT Name FROM singer WHERE Net_Worth_Millions > 50\n\nQuestion: Show the titles of songs with sales greater than 1 million.\nAnswer: SELECT Title FROM song WHERE Sales > 1000000\n\nQuestion: List the names of singers who are not citizens of the USA.\nAnswer: SELECT Name FROM singer WHERE Citizenship <> 'USA'\n\nQuestion: Show the titles of songs with the highest position in the charts.\nAnswer: SELECT Title FROM song ORDER BY Highest_Position DESC\n\nQuestion: List the names of singers born after 1990.\nAnswer: SELECT Name FROM singer WHERE Birth_Year > 1990\n\nQuestion: Show the titles of songs with sales between 500,000 and 1 million.\nAnswer: SELECT Title FROM song WHERE Sales BETWEEN 500000 AND 1000000\n\nQuestion: List the names of singers with a net worth between 20 and 30 million.\nAnswer: SELECT Name FROM singer WHERE Net_Worth_Millions BETWEEN 20 AND 30\nAnswer: ", "9971d8783c5d081da5c8b6c4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Find the minimum grade of students who have no friends.\nPredicted SQL: SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\nAnswer: ", "a7c180fe27414892d2a92c77": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How is the math course described?\nPredicted SQL: SELECT course_description FROM Courses WHERE course_name = 'Math'\nAnswer: ", "59ec85630156dbe1d49273e2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the most common currency among the performances?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "a9d5d026bf6b81acb2a02dad": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Count the number of department email addresses.\nPredicted SQL: SELECT count(*) FROM Departments WHERE email_address IS NOT NULL\n\nQuestion: List the names of all students who have enrolled in the Computer Science degree program.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.department_id = (SELECT department_id FROM Departments WHERE department_name = \"Computer Science\")\n\nQuestion: Show the course names and descriptions for all courses enrolled by student with ID 123.\nAnswer: SELECT T2.course_name ,  T2.course_description FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN Courses AS T3 ON T2.course_id = T3.course_id WHERE T1.student_id = 123\n\nQuestion: List the names of all students who have not left the program.\nAnswer: SELECT first_name ,  last_name FROM Students WHERE date_left IS NULL\n\nQuestion: Show the department names and descriptions for all departments with at least one student enrolled.\nAnswer: SELECT T2.department_name ,  T2.department_description FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN Departments AS T3 ON T2.department_id = T3.department_id GROUP BY T2.department_id\n\nQuestion: Count the number of students enrolled in the Fall 2021 semester.\nAnswer: SELECT count(*) FROM Student_Enrolment WHERE semester_id = (SELECT semester_id FROM Semesters WHERE semester_name = \"Fall 2021\")\n\nQuestion: Show the course names and descriptions for all courses enrolled by student with ID 456.\nAnswer: SELECT T2.course_name ,  T2.course_description FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN Courses AS T3 ON T2.course_id = T3.course_id WHERE T1.student_id = 456\n\nQuestion: List the names of all students who have a middle name.\nAnswer: SELECT first_name ,  middle_name ,  last_name FROM Students WHERE middle_name IS NOT NULL\nAnswer: ", "7166cb0a110e668df707cf09": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.\nPredicted SQL: SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'\nAnswer: ", "0467ef37aa217ae5ed58ae1f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the first registered date for the linguistic department?\nPredicted SQL: SELECT date_first_registered FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id WHERE T4.department_name = \"Linguistic\" LIMIT 1\n\nQuestion: List the names of students who are enrolled in the Computer Science department.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id WHERE T4.department_name = \"Computer Science\"\n\nQuestion: Show the course names for students who are enrolled in the Fall 2021 semester.\nAnswer: SELECT T2.course_name FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN courses AS T3 ON T2.course_id = T3.course_id JOIN semesters AS T4 ON T1.semester_id = T4.semester_id WHERE T4.semester_name = \"Fall 2021\"\n\nQuestion: List the names of students who have transcripts.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN transcript_contents AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id\n\nQuestion: Show the course descriptions for students who have transcripts.\nAnswer: SELECT T3.course_description FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN courses AS T3 ON T2.course_id = T3.course_id JOIN transcript_contents AS T4 ON T2.student_course_id = T4.student_course_id\n\nQuestion: List the names of students who have left the program.\nAnswer: SELECT first_name ,  last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: Show the department descriptions for students who have left the program.\nAnswer: SELECT T4.department_description FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs\nAnswer: ", "a2723ddf45f879722b32865e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: In what ways do dogs' dietary needs shift as they age?\nPredicted SQL: SELECT T1.dog_id, T1.age, T2.treatment_type_description \nFROM Dogs AS T1 \nJOIN Treatments AS T2 ON T1.dog_id = T2.dog_id \nWHERE T2.treatment_type_code = 'dietary_needs' \nORDER BY T1.age\nAnswer: ", "41a26b8d19c74ed3722c1dcb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the most common nationality of people?\nPredicted SQL: SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1\n\nQuestion: List the names of poker players who have made it to the final table.\nAnswer: SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Final_Table_Made = 'Yes'\n\nQuestion: What is the average height of poker players who have earned more than $1 million?\nAnswer: SELECT AVG(Height) FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Earnings > 1000000\n\nQuestion: List the names of poker players with the best finish of 1.\nAnswer: SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Best_Finish = 1\n\nQuestion: How many poker players have a money rank of less than 100?\nAnswer: SELECT COUNT(*) FROM poker_player WHERE Money_Rank < 100\nAnswer: ", "5328dff9bfb9eeed5ff92a91": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the most common genre among the songs by singers from Chile?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about songs, singers, or genres.\nAnswer: ", "78dcf6701a30e6ec0df78635": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the number of different series names and contents in the TV Channel table.\nPredicted SQL: SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel\n\nQuestion: Show the titles of cartoons that were directed by the same person who wrote them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: Find the TV series with the highest rating.\nAnswer: SELECT * FROM TV_series ORDER BY Rating DESC LIMIT 1\n\nQuestion: List the titles of cartoons that aired on channels with high definition TV.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Hight_definition_TV = 'Yes')\n\nQuestion: Show the series names and countries of TV channels that offer pay-per-view.\nAnswer: SELECT series_name, Country FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes'\n\nQuestion: Find the TV series with the most viewers.\nAnswer: SELECT * FROM TV_series ORDER BY Viewers_m DESC LIMIT 1\n\nQuestion: List the titles of cartoons that aired on channels with a specific language.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Language = 'English')\n\nQuestion: Show the titles of cartoons that were produced on channels with a specific pixel aspect ratio.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pixel_aspect_ratio_PAR = '16:9')\nAnswer: ", "ef05062008df5a8dd9840b83": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Group properties into clusters based on their room count and property type.\nPredicted SQL: SELECT room_count, property_type, COUNT(*) as property_count\nFROM Properties\nGROUP BY room_count, property_type\nAnswer: ", "9ce4ed99aa3470d7eb268679": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the size of the lake of Edwina Burnam?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "3012e703aa8c5d9096f5c9b3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: In what ways do animation styles differ internationally?\nPredicted SQL: SELECT DISTINCT Country FROM TV_Channel WHERE Content = 'Animation'\nAnswer: ", "7584d23d795c687865ab4ada": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the total population of Gelderland district?\nPredicted SQL: SELECT SUM(Population) FROM city WHERE District = 'Gelderland'\nAnswer: ", "47eddad584fa48d066cb6a7d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the total number of languages used in Aruba?\nPredicted SQL: SELECT COUNT(Language) FROM countrylanguage WHERE CountryCode = 'ABW'\nAnswer: ", "f32f914fea4e8c19a86eabd9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is minimum and maximum share of TV series?\nPredicted SQL: SELECT MIN(Share), MAX(Share) FROM TV_series\n\nQuestion: List the titles of cartoons that were directed by the same person who wrote them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: Which TV series have a rating higher than 8 and were aired on a channel with high definition TV?\nAnswer: SELECT * FROM TV_series WHERE Rating > 8 AND Channel IN (SELECT id FROM TV_Channel WHERE Hight_definition_TV = 'Yes')\n\nQuestion: List the names of TV channels that air cartoons directed by a specific person.\nAnswer: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'specific_person')\n\nQuestion: What is the average viewership of TV series aired on channels that offer pay-per-view option?\nAnswer: SELECT AVG(Viewers_m) FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: List the titles of cartoons that were written by a person who also directed a TV series.\nAnswer: SELECT Title FROM Cartoon WHERE Written_by IN (SELECT Directed_by FROM Cartoon)\n\nQuestion: Which TV series have a weekly rank in the top 10 and were aired in a specific country?\nAnswer: SELECT * FROM TV_series WHERE Weekly_Rank <= 10 AND Channel IN (SELECT id FROM TV_Channel WHERE Country = 'specific_country')\n\nQuestion: List the names of TV channels that air cartoons with a production code starting with 'ABC'.\nAnswer: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Production_code LIKE 'ABC%')\nAnswer: ", "908471d2d8c8f3284662996d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What makes an animated TV show popular?\nPredicted SQL: SELECT Title, Rating, Share, 18_49_Rating_Share, Viewers_m FROM Cartoon ORDER BY Rating DESC, Share DESC, 18_49_Rating_Share DESC, Viewers_m DESC\nAnswer: ", "4672ee638d56e1a74eb88903": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many people live in Asia, and what is the largest GNP among them?\nPredicted SQL: SELECT sum(Population), max(GNP) FROM country WHERE Continent = 'Asia'\nAnswer: ", "e7d06c57fa3f77013995ce01": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Please show the name of the conductor that has conducted orchestras founded after 2008.\nPredicted SQL: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)\nAnswer: ", "7036be0ec126a7be940f216b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Recommend study resources based on enrolled course sections.\nPredicted SQL: SELECT T1.course_name, T2.section_name, T3.other_details\nFROM Courses AS T1\nJOIN Sections AS T2 ON T1.course_id = T2.course_id\nJOIN Student_Enrolment_Courses AS T4 ON T1.course_id = T4.course_id\nJOIN Student_Enrolment AS T5 ON T4.student_enrolment_id = T5.student_enrolment_id\nJOIN Degree_Programs AS T6 ON T5.degree_program_id = T6.degree_program_id\nWHERE T5.student_id = [student_id]\nAnswer: ", "e250e2df99e3dc6c661aaf45": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the id and cell phone of the professionals who operate two or more types of treatments.\nPredicted SQL: SELECT professional_id, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)\nAnswer: ", "96861a4781bd89c3f401efe3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What currency did the Live final use?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "cfc3edcc1c3d816866ca0822": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Find any unusual friendship patterns in the data.\nPredicted SQL: This question cannot be answered with the given tables and foreign keys.\nAnswer: ", "edbf7489aa31cab42faaa1e3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the average rank point that Amenity earned?\nPredicted SQL: SELECT avg(rank_point) FROM Students WHERE first_name = \"Amenity\"\nAnswer: ", "30782496c7ce3cd9854f2375": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are each professional's first name and description of the treatment they have performed?\nPredicted SQL: SELECT T2.first_name, T3.treatment_type_description \nFROM Treatments AS T1 \nJOIN Professionals AS T2 ON T1.professional_id = T2.professional_id \nJOIN Treatment_Types AS T3 ON T1.treatment_type_code = T3.treatment_type_code\nAnswer: ", "0f8896abd172d342f6041f24": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Does socioeconomic status matter?\nPredicted SQL: This question cannot be answered with the given tables as there is no information related to socioeconomic status.\nAnswer: ", "da364c68b0d991d86576e693": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the names of singers ordered by ascending net worth?\nPredicted SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\nQuestion: List the titles of songs with sales greater than 1 million.\nAnswer: SELECT Title FROM song WHERE Sales > 1000000\n\nQuestion: Find the citizenship of the singer who has the highest position song.\nAnswer: SELECT Citizenship FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Highest_Position = (SELECT MAX(Highest_Position) FROM song))\n\nQuestion: List the names of singers who were born after 1990.\nAnswer: SELECT Name FROM singer WHERE Birth_Year > 1990\n\nQuestion: What is the average net worth of singers with citizenship 'USA'?\nAnswer: SELECT AVG(Net_Worth_Millions) FROM singer WHERE Citizenship = 'USA'\n\nQuestion: List the titles of songs sung by singers with a net worth greater than 50 million.\nAnswer: SELECT Title FROM song WHERE Singer_ID IN (SELECT Singer_ID FROM singer WHERE Net_Worth_Millions > 50)\n\nQuestion: Find the birth year of the singer who has the highest sales song.\nAnswer: SELECT Birth_Year FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales = (SELECT MAX(Sales) FROM song))\n\nQuestion: List the names of singers who have songs with sales greater than 500,000.\nAnswer: SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 500000)\nAnswer: ", "14cf4dd914c0d73d84cbaa3e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: For each semester, what is the name and id of the one with the most students registered?\nPredicted SQL: SELECT T1.semester_name, T1.semester_id \nFROM Semesters AS T1 \nJOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id \nGROUP BY T1.semester_id \nORDER BY COUNT(T2.student_id) DESC \nLIMIT 1\nAnswer: ", "2703025a6e1ea7df9f64e9cf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: List the timezones in which voters voted for both the contestants 'Tabatha Gehling' and 'Kelly Clauss'.\nPredicted SQL: SELECT T1.timezone FROM voters AS T1 JOIN votes AS T2 ON T1.voter_id = T2.voter_id JOIN contestants AS T3 ON T2.contestant_id = T3.contestant_id WHERE T3.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.timezone FROM voters AS T1 JOIN votes AS T2 ON T1.voter_id = T2.voter_id JOIN contestants AS T3 ON T2.contestant_id = T3.contestant_id WHERE T3.contestant_name = 'Kelly Clauss'\nAnswer: ", "c90ca1048c525d22c9ee6e5a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many different degree names are offered?\nPredicted SQL: SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs\nAnswer: ", "5413d7d6e1bc07c744dce308": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the degree summary name that has the most number of students enrolled?\nPredicted SQL: SELECT degree_summary_name FROM Degree_Programs AS dp JOIN Student_Enrolment AS se ON dp.degree_program_id = se.degree_program_id GROUP BY degree_summary_name ORDER BY COUNT(student_id) DESC LIMIT 1\n\nQuestion: List the names of students who have their current and permanent addresses in the same city.\nAnswer: SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM Students AS s JOIN Addresses AS a1 ON s.current_address_id = a1.address_id JOIN Addresses AS a2 ON s.permanent_address_id = a2.address_id WHERE a1.city = a2.city\n\nQuestion: How many courses are enrolled in by each student? List the student id and the count.\nAnswer: SELECT student_id, COUNT(course_id) AS course_count FROM Student_Enrolment_Courses GROUP BY student_id\n\nQuestion: Find the semester name and description where the most number of students are enrolled.\nAnswer: SELECT semester_name, semester_description FROM Semesters AS s JOIN Student_Enrolment AS se ON s.semester_id = se.semester_id GROUP BY semester_name, semester_description ORDER BY COUNT(student_id) DESC LIMIT 1\n\nQuestion: List the course names that are included in the degree program with the id 5.\nAnswer: SELECT course_name FROM Courses AS c JOIN Student_Enrolment_Courses AS sec ON c.course_id = sec.course_id JOIN Student_Enrolment AS se ON sec.student_enrolment_id = se.student_enrolment_id WHERE se.degree_program_id = 5\n\nQuestion: Find the student names who have transcripts.\nAnswer: SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM Students AS s JOIN Student_Enrolment AS se ON s.student_id = se.student_id JOIN Student_Enrolment_Courses AS sec ON se.student_enrolment_id = sec.student_enrolment_id JOIN Transcript_Contents AS tc ON sec.student_course_id = tc.student_course_id JOIN Transcripts AS t ON tc.transcript_id = t.transcript_id\n\nQuestion: How many students are enrolled in each degree program? List the degree program id and the count.\nAnswer: SELECT degree_program_id, COUNT(student_id) AS student_count FROM Student_Enrolment GROUP BY degree_program_id\n\nQuestion: List the student names who have left the university.\nAnswer: SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM Students WHERE date_left IS NOT NULL\nAnswer: ", "c535f960df01d5e65ab607cb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the record companies of orchestras in descending order of years in which they were founded?\nPredicted SQL: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\nQuestion: List the names of conductors who have conducted performances with official ratings over 1 million.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 1))\n\nQuestion: Show the orchestras and their weekly ranks for performances with a share greater than 50%.\nAnswer: SELECT Orchestra, Weekly_rank FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Share > 50)\n\nQuestion: What is the nationality of the conductor who conducted the performance with the highest official ratings?\nAnswer: SELECT Nationality FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) = (SELECT MAX(Official_ratings_(millions)) FROM performance)))\n\nQuestion: List the orchestras that have not had any performances with official ratings over 1 million.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 1)\n\nQuestion: Show the performances and their attendance for shows that were not the first show and had a successful result.\nAnswer: SELECT Performance_ID, Attendance FROM performance WHERE Performance_ID IN (SELECT Performance_ID FROM show WHERE If_first_show = 'No' AND Result = 'Successful')\n\nQuestion: What are the names of the conductors who have worked in the year with the highest number of performances?\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Date IN (SELECT Date FROM performance GROUP BY Date ORDER BY COUNT(*) DESC LIMIT 1)))\nAnswer: ", "aacc03a1d2559e160d85e5e0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which languages are spoken by only one country in republic governments?\nPredicted SQL: SELECT Language \nFROM countrylanguage \nWHERE CountryCode IN (\n    SELECT Code \n    FROM country \n    WHERE GovernmentForm = 'Republic'\n    GROUP BY Code \n    HAVING COUNT(*) = 1\n)\nAnswer: ", "2e7efaf0ec85cdf5706fe58a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many different departments offer degrees?\nPredicted SQL: SELECT COUNT(DISTINCT department_id) FROM Degree_Programs\nAnswer: ", "852e9db95a48bea4312f6740": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: How many states are there?\nPredicted SQL: SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE\nAnswer: ", "e8a58227ca312abf8e49d2d6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?\nPredicted SQL: SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'\nAnswer: ", "5068ae39be5520111e139664": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: For each citizenship, what is the maximum net worth?\nPredicted SQL: SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship\n\nQuestion: List the names of singers who have a song with sales greater than 1 million.\nAnswer: SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 1000000)\n\nQuestion: What is the highest position achieved by each singer?\nAnswer: SELECT Name, MAX(Highest_Position) FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID GROUP BY Name\n\nQuestion: List the titles of songs sung by singers born after 1990.\nAnswer: SELECT Title FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID WHERE Birth_Year > 1990\n\nQuestion: How many singers have a net worth of more than 50 million?\nAnswer: SELECT COUNT(*) FROM singer WHERE Net_Worth_Millions > 50\n\nQuestion: List the names of singers who have not released any songs.\nAnswer: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)\n\nQuestion: What is the average net worth of singers from each citizenship?\nAnswer: SELECT Citizenship, AVG(Net_Worth_Millions) FROM singer GROUP BY Citizenship\n\nQuestion: List the titles of songs with sales between 500,000 and 1 million.\nAnswer: SELECT Title FROM song WHERE Sales BETWEEN 500000 AND 1000000\nAnswer: ", "e8ef87ca423d8c0d5871cd95": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the graduation requirements for degree program id 1?\nPredicted SQL: SELECT degree_summary_description FROM degree_programs WHERE degree_program_id = 1\n\nQuestion: List the names of all students who are currently enrolled in the Computer Science department.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id WHERE T4.department_name = \"Computer Science\"\n\nQuestion: Show the course names and descriptions for all courses in the Fall 2021 semester.\nAnswer: SELECT T2.course_name ,  T2.course_description FROM semesters AS T1 JOIN student_enrolment AS T2 ON T1.semester_id = T2.semester_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN courses AS T4 ON T3.course_id = T4.course_id WHERE T1.semester_name = \"Fall 2021\"\n\nQuestion: List the names of students who have taken the course \"Introduction to Programming\" in the Spring 2020 semester.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN courses AS T4 ON T3.course_id = T4.course_id JOIN semesters AS T5 ON T2.semester_id = T5.semester_id WHERE T4.course_name = \"Introduction to Programming\" AND T5.semester_name = \"Spring 2020\"\n\nQuestion: Show the names of students who have not yet graduated.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id NOT IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IS NOT NULL)\n\nQuestion: List the names of students who have taken more than 5 courses in total.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T1.student_id HAVING count(*) > 5\n\nQuestion: Show the names\nAnswer: ", "508df36b2abb9919bf85e731": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What did Mavis major in?\nPredicted SQL: SELECT T3.degree_summary_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T1.first_name = \"Mavis\"\nAnswer: ", "6a7890d45fbc40df1120667d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What makes Michael Jackson the \"King of Pop\"?\nPredicted SQL: SELECT * FROM singer WHERE Name = \"Michael Jackson\"\nAnswer: ", "146be42d1d8d1c1870f5456d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the speed in knots of \"Evil Under the Sea!\"?\nPredicted SQL: SELECT T1.course_name FROM courses AS T1 WHERE T1.course_name = \"Evil Under the Sea!\"\nAnswer: ", "b1a58935bae214ac1261de4c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: List the vote ids, phone numbers and states of all votes.\nPredicted SQL: SELECT vote_id, phone_number, state FROM VOTES\nAnswer: ", "b66d74853a652337af3d5aaa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the title of the song and album that achieved the highest sales?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "4fe3d125c1117f6ce979fc60": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: List the names of poker players ordered by the final tables made in ascending order.\nPredicted SQL: SELECT p.Name \nFROM people p \nJOIN poker_player pp ON p.People_ID = pp.People_ID \nORDER BY pp.Final_Table_Made ASC\nAnswer: ", "0f122ff57fbf5504e2d91fe4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the most common specialty among conductors?\nPredicted SQL: SELECT T3.department_name FROM Degree_Programs AS T1 JOIN Departments AS T3 ON T1.department_id = T3.department_id WHERE T3.department_name = \"Conductors\" GROUP BY T3.department_name ORDER BY count(*) DESC LIMIT 1\nAnswer: ", "87563ff69c484c11f5dcf235": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the average distance between the students?\nPredicted SQL: This question cannot be answered with the given tables as there is no information provided on the distance between students.\nAnswer: ", "a27fd1694d1c9bf94ef904ee": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Show the advisors of the French singers.\nPredicted SQL: SELECT T3.first_name, T3.last_name \nFROM Degree_Programs AS T1 \nJOIN Departments AS T2 ON T1.department_id = T2.department_id \nJOIN Students AS T3 ON T1.degree_program_id = T3.degree_program_id \nWHERE T2.department_name = \"French\"\nAnswer: ", "1045989035f32c873abf8335": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Generate a textual summary of the voting results.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "2f7368d63467a2974ee707a4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Identify outliers in the 'likes' relationships among students.\nPredicted SQL: This question cannot be answered with the given tables as there is no 'likes' relationship mentioned in the tables provided.\nAnswer: ", "3f34dab1c534b191616bbd81": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the names of conductors who have conducted at more than one orchestra?\nPredicted SQL: SELECT Name FROM conductor GROUP BY Conductor_ID HAVING COUNT(DISTINCT Orchestra_ID) > 1\n\nQuestion: List the orchestras founded after 2000 and their record companies.\nAnswer: SELECT Orchestra, Record_Company FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: Show the performances with official ratings greater than 5 million and their orchestras.\nAnswer: SELECT Type, Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 5\n\nQuestion: What is the nationality of the conductor who conducted the performance with the highest weekly rank?\nAnswer: SELECT c.Nationality FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Weekly_rank = (SELECT MAX(Weekly_rank) FROM performance)\n\nQuestion: List the shows with the highest attendance and their results.\nAnswer: SELECT If_first_show, Result FROM show WHERE Attendance = (SELECT MAX(Attendance) FROM show)\nAnswer: ", "4315fa400873bc82d581d46f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Show the name of the conductor that has conducted the most number of orchestras.\nPredicted SQL: SELECT Name FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1)\nAnswer: ", "c58afca16b36ec7227f59f6b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the ways for poker players to handle their money?\nPredicted SQL: SELECT DISTINCT Money_Rank FROM poker_player\nAnswer: ", "af210a974d01986b5c40421b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: How many orchestras does each record company manage?\nPredicted SQL: SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company\nAnswer: ", "c6f2fe4468b0bafc6038e20d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the grade of the amenity?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "72f16d2dcf84fa469348fc46": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List the cost of each treatment and the corresponding treatment type description.\nPredicted SQL: SELECT cost_of_treatment, treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code\nAnswer: ", "6d27a7e5c2cd00f7e271c6e5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the duration of the song with the most sales?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about songs or sales.\nAnswer: ", "0e4fdce5c4613ff0512bcee7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the countries that have cartoons on TV that were written by Todd Casey?\nPredicted SQL: SELECT DISTINCT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'\nAnswer: ", "6b0e3a5d3fe9998e2a5b1423": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Extract city names from property addresses.\nPredicted SQL: SELECT city FROM Addresses\n\nQuestion: List all course names and descriptions.\nAnswer: SELECT course_name, course_description FROM Courses\n\nQuestion: Show the department names and descriptions.\nAnswer: SELECT department_name, department_description FROM Departments\n\nQuestion: List all student names and email addresses.\nAnswer: SELECT first_name, last_name, email_address FROM Students\n\nQuestion: Show the semester names and descriptions.\nAnswer: SELECT semester_name, semester_description FROM Semesters\n\nQuestion: List all degree program summaries and descriptions.\nAnswer: SELECT degree_summary_name, degree_summary_description FROM Degree_Programs\n\nQuestion: Show the section names and descriptions.\nAnswer: SELECT section_name, section_description FROM Sections\n\nQuestion: List all student enrolment details.\nAnswer: SELECT * FROM Student_Enrolment\n\nQuestion: Show the transcript dates and other details.\nAnswer: SELECT transcript_date, other_details FROM Transcripts\n\nQuestion: List all student course IDs and transcript IDs.\nAnswer: SELECT student_course_id, transcript_id FROM Transcript_Contents\nAnswer: ", "a6f75ff789f157c471abe18e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Which grade has the most high schoolers?\nPredicted SQL: SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1\nAnswer: ", "2ad9610136f6cd1d224987e8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the money rank of the poker player with the greatest height.\nPredicted SQL: SELECT Money_Rank FROM poker_player WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)\nAnswer: ", "2a8fc2c6e17466e2923c8b02": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the names and ids of every course with less than 2 sections?\nPredicted SQL: SELECT course_name, course_id FROM Courses WHERE course_id NOT IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) >= 2)\nAnswer: ", "51c3189cb78a1e53697c5f45": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the Episode of all TV series sorted by rating.\nPredicted SQL: SELECT Episode FROM TV_series ORDER BY Rating DESC\n\nQuestion: What is the series name of the TV series with the highest viewers?\nAnswer: SELECT series_name FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Viewers_m DESC LIMIT 1)\n\nQuestion: List the titles of cartoons aired on channels that offer Pay per view.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: Show the original air date of the cartoons written by 'John Doe'.\nAnswer: SELECT Original_air_date FROM Cartoon WHERE Written_by = 'John Doe'\n\nQuestion: List the series names of TV series aired in countries where the language is English.\nAnswer: SELECT series_name FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel WHERE Language = 'English')\n\nQuestion: What is the channel of the TV series with the highest weekly rank?\nAnswer: SELECT Channel FROM TV_series ORDER BY Weekly_Rank DESC LIMIT 1\n\nQuestion: Show the titles of cartoons directed by 'Jane Smith' and written by 'John Doe'.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = 'Jane Smith' AND Written_by = 'John Doe'\n\nQuestion: List the channels that air TV series with a rating above 8.\nAnswer: SELECT id FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Rating > 8)\nAnswer: ", "180cf206adba237d33051df5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Find the kind of program which most number of students are enrolled in?\nPredicted SQL: SELECT degree_summary_name FROM Degree_Programs GROUP BY degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1\n\nQuestion: List the names of all students who have enrolled in the semester 'Spring 2021'.\nAnswer: SELECT first_name ,  last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE semester_id = (SELECT semester_id FROM Semesters WHERE semester_name = 'Spring 2021'))\n\nQuestion: Find the course names and descriptions of the courses that are included in the degree program with id 5.\nAnswer: SELECT course_name ,  course_description FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment WHERE degree_program_id = 5))\n\nQuestion: List the names and addresses of students who have left the university.\nAnswer: SELECT first_name ,  last_name ,  line_1 ,  city ,  state_province_county ,  country FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE date_left IS NOT NULL\n\nQuestion: Find the names of students who have enrolled in more than 5 courses.\nAnswer: SELECT first_name ,  last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment_Courses GROUP BY student_enrolment_id HAVING COUNT(*) > 5))\n\nQuestion: List the course names and descriptions of the courses that are included in the semester 'Fall 2020'.\nAnswer: SELECT course_name ,  course_description FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment WHERE semester_id = (SELECT semester_id FROM Semesters WHERE semester_name = 'Fall 2020')))\n\nQuestion: Find the names of students who have enrolled in the degree program with id 3.\nAnswer: SELECT first_name ,  last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id = 3)\n\nQuestion: List the names and addresses of students who have not left the university.\nAnswer: SELECT first_name ,  last_name ,  line_1 ,  city ,  state_province_county ,  country FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE date_left\nAnswer: ", "03a8c2a72bd6a74237d0abb3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the names of the nations that were founded after 1950.\nPredicted SQL: SELECT Name FROM country WHERE IndepYear > 1950\nAnswer: ", "6191d76f1608d8618bf0113e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the money rank of the player with the greatest earnings.\nPredicted SQL: SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)\nAnswer: ", "c55441dd2beb8ee0a6fecc44": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the names of students who have 2 or more likes?\nPredicted SQL: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)\nAnswer: ", "06fdbccb7911f6b516234b0e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the average earnings of poker players with height higher than 200?\nPredicted SQL: SELECT avg(Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Height > 200\nAnswer: ", "76f7656dc3388abedd9ef6a5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Tell me about the evolution of the conductor's role over time.\nPredicted SQL: SELECT T1.Name, T2.Year_of_Work FROM conductor AS T1 JOIN performance AS T2 ON T1.Conductor_ID = T2.Conductor_ID ORDER BY T2.Date\nAnswer: ", "955d628cabf132c371c85230": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: How many TV Channels use the English language?\nPredicted SQL: SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'\nAnswer: ", "636932d86608447e7dd729c0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the average size of classes?\nPredicted SQL: SELECT avg(count(*)) FROM student_enrolment_courses GROUP BY course_id\nAnswer: ", "e456112264fd909f38472281": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which language is the most popular in Aruba?\nPredicted SQL: SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1\nAnswer: ", "2f1d449c8d36c78121d4bf65": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the language spoken by the largest percentage of people in each country?\nPredicted SQL: SELECT c.Name, cl.Language\nFROM country c\nJOIN countrylanguage cl ON c.Code = cl.CountryCode\nWHERE cl.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = c.Code)\nAnswer: ", "a82d64f8a62fc587d320a05a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many different addresses do the students currently live?\nPredicted SQL: SELECT COUNT(DISTINCT current_address_id) FROM students\nAnswer: ", "f877de4578b18f974897249a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the address of the agency that has sold the most properties?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "5d4787a95f36e78d1f838e9a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the most prevalent grade among cities with a population greater than 30000?\nPredicted SQL: SELECT grade FROM transcript_contents WHERE student_course_id IN (SELECT student_course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id IN (SELECT student_id FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE city IN (SELECT city FROM addresses GROUP BY city HAVING count(*) > 30000))))) GROUP BY grade ORDER BY count(*) DESC LIMIT 1\nAnswer: ", "dcd3630b05490796059dc74e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the date of the performance with the longest duration?\nPredicted SQL: SELECT transcript_date FROM transcripts ORDER BY duration DESC LIMIT 1\nAnswer: ", "227c46f05ff3c93f1fc54393": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the voter name who voted for the contestant named 'Kelly Clauss'?\nPredicted SQL: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Kelly Clauss')))\nAnswer: ", "19c83355b21195fc56a8a56c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the name of the city with the highest population in Afghanistan? Read it aloud.\nPredicted SQL: SELECT city FROM addresses WHERE country = 'Afghanistan' GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1\nAnswer: ", "7ef70f25ffeff3d41e03b04d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What percentage of people in Aruba are in their 20s?\nPredicted SQL: SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Aruba')) FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Aruba') AND age >= 20 AND age < 30\nAnswer: ", "b067dd3100780e91ba15aadb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Find the operating systems of the players.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "9904c2ef361c785cf400e76e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What results in countries having several languages?\nPredicted SQL: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode HAVING COUNT(Language) > 1)\nAnswer: ", "e855c576bf35b72cd79aeb34": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the average age of the dogs who went through treatments.\nPredicted SQL: SELECT AVG(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)\nAnswer: ", "a3b0f5051b554483667ea8da": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the last name of the dean of the management department?\nPredicted SQL: SELECT T1.last_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id WHERE department_name = \"Management\"\nAnswer: ", "4270d0c81c25fd2dea808bb9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What makes open floor plans popular?\nPredicted SQL: SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_name = 'Open Floor Plans'\nAnswer: ", "8b14aa862da6475224aebd28": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What does it take to become a poker pro?\nPredicted SQL: SELECT * FROM poker_player WHERE Final_Table_Made = 'Yes' AND Best_Finish = '1st' AND Money_Rank = '1st' AND Earnings > 1000000\nAnswer: ", "616da977764a9284b48ac172": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Retrieve news articles relevant to the competition events.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "416157033dd81f9f4dd87e9c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the typical record formats?\nPredicted SQL: SELECT DISTINCT Major_Record_Format FROM orchestra\n\nQuestion: Show the names of conductors and their nationalities.\nAnswer: SELECT Name ,  Nationality FROM conductor\n\nQuestion: Show the orchestras and their record companies.\nAnswer: SELECT Orchestra ,  Record_Company FROM orchestra\n\nQuestion: Show the orchestras founded after 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: Show the names of conductors who have been working for more than 10 years.\nAnswer: SELECT Name FROM conductor WHERE Year_of_Work > 10\n\nQuestion: Show the orchestras with the highest official ratings.\nAnswer: SELECT Orchestra FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID ORDER BY Official_ratings_(millions) DESC LIMIT 1\n\nQuestion: Show the performances with the highest attendance.\nAnswer: SELECT Performance_ID FROM show ORDER BY Attendance DESC LIMIT 1\n\nQuestion: Show the orchestras that have not had any shows yet.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)\nAnswer: ", "85a3c9f0b6179942f8a4e6d4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the name, population, and head of state for the country that has the largest area.\nPredicted SQL: SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)\nAnswer: ", "b07a63a608c2e526e1b0f960": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the air date of TV series with Episode \"A Love of a Lifetime\"?\nPredicted SQL: SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\"\nAnswer: ", "0110826f0dbf302b3a60d540": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the distinct breed type and size type combinations for dogs.\nPredicted SQL: SELECT DISTINCT breed_name, size_description FROM Breeds, Sizes, Dogs WHERE Dogs.breed_code = Breeds.breed_code AND Dogs.size_code = Sizes.size_code\nAnswer: ", "2f221f6dd86292b65abe60b1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the minimum down payment for properties with fewer than 5 rooms?\nPredicted SQL: This question cannot be answered with the given tables. The tables provided are related to student enrollment and courses, not properties.\nAnswer: ", "64f171150a38adacf03c480a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the legal name of the student with the least friends?\nPredicted SQL: SELECT first_name ,  last_name FROM students ORDER BY cell_mobile_number LIMIT 1\n\nQuestion: List the names of students who are enrolled in the most number of courses.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\n\nQuestion: List the names of students who have enrolled in some courses.\nAnswer: SELECT first_name ,  last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id\n\nQuestion: List the names of students who have not enrolled in any courses.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id NOT IN (SELECT student_id FROM student_enrolment)\n\nQuestion: What is the name of the course with the most number of enrolled students?\nAnswer: SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1\n\nQuestion: For each student, list the number of courses they are enrolled in.\nAnswer: SELECT T1.first_name ,  T1.last_name ,  count(*) FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id GROUP BY T1.student_id\n\nQuestion: What are the first and last names of all the students?\nAnswer: SELECT first_name ,  last_name FROM students\n\nQuestion: How many students are currently enrolled in the Computer Science degree program?\nAnswer: SELECT count(*) FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.department_id = \"Computer Science\"\nAnswer: ", "c355ff4d7f27517ab3b9f0f8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is name of the country that speaks the largest number of languages?\nPredicted SQL: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1)\nAnswer: ", "14de6552dda0933d8433f793": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the language that is used by the largest number of Asian nations?\nPredicted SQL: SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1\n\nQuestion: List the names of cities in countries with a population greater than 10 million.\nAnswer: SELECT Name FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE Population > 10000000)\n\nQuestion: Find the country with the highest life expectancy.\nAnswer: SELECT Name FROM country ORDER BY LifeExpectancy DESC LIMIT 1\n\nQuestion: List the names of countries where English is an official language.\nAnswer: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')\n\nQuestion: Find the country with the largest population.\nAnswer: SELECT Name FROM country ORDER BY Population DESC LIMIT 1\n\nQuestion: List the names of cities in countries where the head of state is a monarch.\nAnswer: SELECT Name FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm LIKE '%monarch%')\n\nQuestion: Find the country with the highest GNP.\nAnswer: SELECT Name FROM country ORDER BY GNP DESC LIMIT 1\n\nQuestion: List the names of countries in Europe with a population greater than 50 million.\nAnswer: SELECT Name FROM country WHERE Continent = 'Europe' AND Population > 50000000\n\nQuestion: Find the country with the largest surface area.\nAnswer: SELECT Name FROM country ORDER BY SurfaceArea DESC LIMIT 1\nAnswer: ", "2ad4aa3668d13ed704cab4d0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What are the maximum and minimum values of area codes?\nPredicted SQL: SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE\nAnswer: ", "33ed49eed5ca691cdf56a27c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the average volume of the shops?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "249c11ec294046c437868f24": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which Asian countries have a population that is larger than any country in Africa?\nPredicted SQL: SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')\nAnswer: ", "d701d859ada45ac13f53ea93": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many different degrees are offered?\nPredicted SQL: SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs\nAnswer: ", "dff1bd2604f1ad8be8dfe4a5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the average age of the high schoolers?\nPredicted SQL: SELECT AVG(age) FROM students WHERE grade = 'high school'\nAnswer: ", "602d2f8d59f787befaa350f1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: How many subscribers does Sky Music TV channel have?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "3e8c4825d77b89142403881e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the latest news on veterinary treatments in the treatment_types table.\nPredicted SQL: SELECT course_description FROM courses WHERE course_name = \"Veterinary Treatments\"\nAnswer: ", "629a89d1655b57ba578b162f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Create a text report on the voting patterns and trends.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "50b0b3bae06052d61c43144d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How many professionals have performed any treatment to dogs?\nPredicted SQL: SELECT COUNT(DISTINCT professional_id) FROM Treatments\nAnswer: ", "78c024015c615e19bce5ef6f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the characteristics of Prince's music style?\nPredicted SQL: SELECT * FROM singer WHERE Name = 'Prince'\nAnswer: ", "0515ff55fbb8673f087cb902": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Return the record companies of orchestras, sorted descending by the years in which they were founded.\nPredicted SQL: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\nQuestion: List the names of conductors who have conducted performances with official ratings over 5 million.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 5))\n\nQuestion: Show the orchestras that have performed more than once.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)\n\nQuestion: Find the nationalities of conductors who have conducted performances with a weekly rank in the top 3.\nAnswer: SELECT Nationality FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Weekly_rank <= 3))\n\nQuestion: List the performances with the highest share.\nAnswer: SELECT * FROM performance WHERE Share = (SELECT MAX(Share) FROM performance)\n\nQuestion: Show the orchestras that have not yet had their first show.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance WHERE Performance_ID IN (SELECT Performance_ID FROM show WHERE If_first_show = 'Yes'))\n\nQuestion: Find the names of conductors who have conducted performances with an official rating over 10 million and a share over 50%.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 10 AND Share > 50))\n\nQuestion: List the orchestras that have a major record format of 'Vinyl'.\nAnswer: SELECT Orchestra FROM orchestra WHERE Major_Record_Format = 'Vinyl'\nAnswer: ", "dea8a81612e89f5f308283ba": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Show the names of singers that have more than one song.\nPredicted SQL: SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)\nAnswer: ", "8b8939c72780a23c4f068e12": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Find the number of unique genres for the TV series.\nPredicted SQL: SELECT count(DISTINCT department_name) FROM departments\nAnswer: ", "04dabc4947337175f984ff20": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Do teachers influence social networks?\nPredicted SQL: SELECT DISTINCT F1.student_id, F2.friend_id\nFROM Friend F1, Friend F2\nWHERE F1.friend_id = F2.student_id\nAND F1.student_id <> F2.friend_id\nAnswer: ", "78ec930ff748a7f5c52a8a24": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: How much does Colin Davis cost in dollars?\nPredicted SQL: SELECT T1.other_details FROM students AS T1 WHERE T1.first_name = \"Colin\" AND T1.last_name = \"Davis\"\nAnswer: ", "7471f318af1e0bd9e4fd41d9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What makes Bob Marley a cultural icon?\nPredicted SQL: SELECT Name, Citizenship FROM singer WHERE Name = 'Bob Marley'\nAnswer: ", "ebd09a45c44cb0a8159524df": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the names of nations that speak both English and French.\nPredicted SQL: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')\nAnswer: ", "d58ba4b4a3ee036fd2c55add": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Cluster cities based on their population and geographical location.\nPredicted SQL: This question cannot be answered with the given tables as there is no population data available.\nAnswer: ", "d9ae14fa43aee004fa6793d2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the most common singer citizenship ?\nPredicted SQL: SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1\nAnswer: ", "bcba25bc18804a15a221d83f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the average expected life expectancy for countries in the region of Central Africa?\nPredicted SQL: SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'\nAnswer: ", "bb32b0d889b9ac064295f252": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: find the package option of the tv channel that do not have any cartoon directed by Ben Jones.\nPredicted SQL: SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\nAnswer: ", "7bd989ea709693e4762cd48a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Group departments based on similar course offerings.\nPredicted SQL: SELECT department_name, course_name \nFROM Departments \nJOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id \nJOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id \nJOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id \nJOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id \nGROUP BY department_name, course_name\nAnswer: ", "5528948af04efb24b7f7d2ed": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?\nPredicted SQL: SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955\nAnswer: ", "50dc8ac7d576a43d942e7687": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: List the contestant numbers and names, ordered by contestant name descending.\nPredicted SQL: SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC\n\nQuestion: How many votes were cast in each state? List the state and the count of votes.\nAnswer: SELECT state, COUNT(*) FROM VOTES GROUP BY state\n\nQuestion: Which contestant received the most votes in each state? List the state, contestant number, and the count of votes.\nAnswer: SELECT state, contestant_number, COUNT(*) FROM VOTES GROUP BY state, contestant_number ORDER BY COUNT(*) DESC\n\nQuestion: List the contestant names who received votes from all states.\nAnswer: SELECT contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(DISTINCT state) = (SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE))\n\nQuestion: How many votes were cast for each contestant? List the contestant number and the count of votes.\nAnswer: SELECT contestant_number, COUNT(*) FROM VOTES GROUP BY contestant_number\n\nQuestion: List the states with the highest number of votes cast.\nAnswer: SELECT state FROM VOTES GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1\n\nQuestion: List the contestant names who received votes from the state with the area code 123.\nAnswer: SELECT contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES WHERE state = '123')\n\nQuestion: List the contestant numbers and names who received votes on a specific date.\nAnswer: SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES WHERE created = 'specific_date')\nAnswer: ", "336bb42ec4f09b7065b5bd3c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the birth date of the poker player with the lowest earnings?\nPredicted SQL: SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)\nAnswer: ", "8f01942896df2af1d9380b2c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Count the number of countries whose language family is Indo-European.\nPredicted SQL: SELECT count(DISTINCT country) FROM Addresses WHERE other_address_details LIKE '%Indo-European%'\nAnswer: ", "5cd2a293dd846bc72d990864": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which religion is followed by the largest number of people?\nPredicted SQL: This question cannot be answered with the given tables as there is no table related to religion or religious beliefs.\nAnswer: ", "7f992c6c42d5accb734e2b70": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What earnings can graduates expect?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "87102096e1ae4f751420dcca": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the student IDs and numbers of friends corresponding to each.\nPredicted SQL: SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id\nAnswer: ", "6883d855e686aa49079453b4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the hardware model name of Houston?\nPredicted SQL: SELECT line_1 FROM Addresses WHERE city = 'Houston'\nAnswer: ", "1826a87821a6da5304134902": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the names of the singers that have more than one songs?\nPredicted SQL: SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)\nAnswer: ", "a108a28235a3b7ae6e117f84": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many degrees does the engineering department have?\nPredicted SQL: SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Engineering')\nAnswer: ", "04af5ecf452e0ebcdaf9f46b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: How many poker players are there?\nPredicted SQL: SELECT count(*) FROM poker_player\nAnswer: ", "24cc52398425ff176cb7d644": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the names of people who are not from Russia?\nPredicted SQL: SELECT Name FROM people WHERE Nationality <> 'Russia'\nAnswer: ", "b73d87cf2e6eec8db7df9afa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the names and areas of countries with the top 5 largest area?\nPredicted SQL: SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\nQuestion: Find the names and populations of cities in countries with a population greater than 100 million.\nAnswer: SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Population > 100000000\n\nQuestion: Find the names and life expectancies of countries in the continent 'Europe' with a life expectancy greater than 80.\nAnswer: SELECT Name, LifeExpectancy FROM country WHERE Continent = 'Europe' AND LifeExpectancy > 80\n\nQuestion: Find the names and percentages of official languages in countries with a GNP greater than 500 billion.\nAnswer: SELECT countrylanguage.Language, countrylanguage.Percentage FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.GNP > 500000000000\n\nQuestion: Find the names and populations of cities in countries where the head of state is 'Queen Elizabeth II'.\nAnswer: SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode = country.Code WHERE country.HeadOfState = 'Queen Elizabeth II'\n\nQuestion: Find the names and government forms of countries in the region 'South America' with a population greater than 50 million.\nAnswer: SELECT Name, GovernmentForm FROM country WHERE Region = 'South America' AND Population > 50000000\n\nQuestion: Find the names and percentages of official languages in countries with a life expectancy greater than 85.\nAnswer: SELECT countrylanguage.Language, countrylanguage.Percentage FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.LifeExpectancy > 85\n\nQuestion: Find the names and populations of cities in countries where the head of state is 'Vladimir Putin'.\nAnswer: SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode = country.Code WHERE country.HeadOfState = 'Vladimir Putin'\nAnswer: ", "8f0d0c426d0c7c2154890674": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List the first name of all the professionals along with the description of the treatment they have done.\nPredicted SQL: SELECT T1.first_name, T2.treatment_type_description \nFROM Professionals AS T1 \nJOIN Treatments AS T2 ON T1.professional_id = T2.professional_id\nAnswer: ", "a63b6b1714e014f3e6c98077": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the names of high schoolers who have 3 or more friends?\nPredicted SQL: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 3)\nAnswer: ", "5c70d7d74906f196adfd962a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What health benefits does owning a dog provide?\nPredicted SQL: This question cannot be answered directly from the given tables.\nAnswer: ", "8dfcd2a650e8af80bfc0c979": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Show the names of conductors that have conducted more than one orchestras.\nPredicted SQL: SELECT Name FROM conductor GROUP BY Conductor_ID HAVING COUNT(DISTINCT Orchestra_ID) > 1\n\nQuestion: List the orchestras that were founded after the year 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: What is the average official ratings for performances conducted by conductors from the USA?\nAnswer: SELECT AVG(Official_ratings_(millions)) FROM performance WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM orchestra WHERE Conductor_ID IN (SELECT Conductor_ID FROM conductor WHERE Nationality = 'USA'))\n\nQuestion: Show the names of conductors who have conducted performances with an official rating above 5 million.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 5))\n\nQuestion: List the orchestras that have a major record format of 'CD'.\nAnswer: SELECT Orchestra FROM orchestra WHERE Major_Record_Format = 'CD'\n\nQuestion: Show the names of conductors who conducted performances with a weekly rank in the top 3.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Weekly_rank <= 3))\n\nQuestion: What is the average share for performances conducted by conductors under the age of 40?\nAnswer: SELECT AVG(Share) FROM performance WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM orchestra WHERE Conductor_ID IN (SELECT Conductor_ID FROM conductor WHERE Age < 40))\n\nQuestion: List the orchestras that have a record company starting with 'S'.\nAnswer: SELECT Orchestra FROM orchestra WHERE Record_Company LIKE 'S%'\nAnswer: ", "78a85622714eff4e203f332b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Return the codes of countries for which Spanish is the predominantly spoken language.\nPredicted SQL: SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50\nAnswer: ", "c2b0e6b66d98e2ecfe05e1f8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What are some staging tips for selling a home?\nPredicted SQL: SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'staging_tip'\nAnswer: ", "401f54a0943baf3abef13b3e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Show the date of the transcript which shows the least number of results, also list the id.\nPredicted SQL: SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1)\nAnswer: ", "2f9f23473afbbd8b190d53d9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What's known about the effectiveness of online courses?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "e943a938629d250af96a37cd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: When did Abigail Johnson leave the university?\nPredicted SQL: SELECT date_left FROM students WHERE first_name = 'Abigail' AND last_name = 'Johnson'\nAnswer: ", "ecd74d9826a9c48e7515ad68": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many cities in each district have a population that is above the average population across all cities?\nPredicted SQL: SELECT district, COUNT(*) \nFROM city \nWHERE population > (SELECT AVG(population) FROM city) \nGROUP BY district\nAnswer: ", "3154f8de13a5188c76fc9a30": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which continent has the most diverse languages?\nPredicted SQL: SELECT continent FROM countrylanguage GROUP BY continent ORDER BY count(DISTINCT language) DESC LIMIT 1\n\nQuestion: What is the average population of countries in each region?\nAnswer: SELECT region, AVG(population) FROM country GROUP BY region\n\nQuestion: List the countries with a population greater than 100 million and a life expectancy greater than 70.\nAnswer: SELECT name FROM country WHERE population > 100000000 AND lifeexpectancy > 70\n\nQuestion: Find the country with the highest GNP.\nAnswer: SELECT name FROM country ORDER BY GNP DESC LIMIT 1\n\nQuestion: List the countries where English is an official language.\nAnswer: SELECT name FROM countrylanguage WHERE language = 'English' AND isofficial = 'T'\n\nQuestion: What is the total population of countries in each continent?\nAnswer: SELECT continent, SUM(population) FROM country GROUP BY continent\n\nQuestion: Find the country with the highest life expectancy.\nAnswer: SELECT name FROM country ORDER BY lifeexpectancy DESC LIMIT 1\n\nQuestion: List the countries with a population greater than the average population.\nAnswer: SELECT name FROM country WHERE population > (SELECT AVG(population) FROM country)\nAnswer: ", "b54378187cc1740fcf883c07": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: How many high schoolers are there in grade 9 or 10?\nPredicted SQL: SELECT count(*) FROM Highschooler WHERE grade IN (9, 10)\nAnswer: ", "7986e71ce6bf1b685233572c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the common reasons dogs are abandoned?\nPredicted SQL: SELECT charge_type FROM charges WHERE charge_amount  >  0\nAnswer: ", "f25dd602ded93d60ef38f7c3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What keeps poker players calm?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "f7aa5ddcbf636f5ace09d297": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Tell me about the tuition comparison with national averages.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "ec50fba352f5de192aebe469": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Find the package choice and series name of the TV channel that has high definition TV.\nPredicted SQL: SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'\nAnswer: ", "8ce0633fb136e85570e6f333": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Count the number of owners who are male.\nPredicted SQL: SELECT count(*) FROM students WHERE gender = 'male'\nAnswer: ", "e6abc2df853a573627e1e428": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the genre of the episode titled \"Friendly Skies\"?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "9d44a5144365340bb3a641c2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What internships can students find?\nPredicted SQL: SELECT T2.course_name FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN courses AS T3 ON T2.course_id = T3.course_id WHERE T3.course_name LIKE '%Internship%'\nAnswer: ", "1a0e4d4d8c01be2cf7ed815a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Convert the names and nationalities of the top 10 poker players into an audio format.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "21190a2dda8cb738910dc833": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Show the capacities of the contestants.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "5e3c2a09cc49c33d659af7dd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What study abroad options are there?\nPredicted SQL: SELECT T1.course_name FROM courses AS T1 JOIN sections AS T2 ON T1.course_id = T2.course_id WHERE T2.section_name = \"Study Abroad\"\nAnswer: ", "b6d1b1a35fd61d831dfe5bb2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the invoice number of the song Mysterious Girl?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "31a06cc66f2fd33446588aa4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the SSN of the student with the most friends?\nPredicted SQL: SELECT ssn FROM students WHERE student_id = (SELECT student_id FROM student_enrolment GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)\nAnswer: ", "9cdc61a897995e78eee25846": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Tell me the ways in which language diversity shapes national identity.\nPredicted SQL: This question cannot be answered directly with the given tables.\nAnswer: ", "f45da0d551b88bd727b765fd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: List the names of people that are not poker players.\nPredicted SQL: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)\nAnswer: ", "e9bd9b67f51d8724732d4cfe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the average amount of money spent on dogs?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain any information related to money spent on dogs.\nAnswer: ", "abe11365ba3d1b186eb583c3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which record company is Tre Hamill affiliated with?\nPredicted SQL: SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN students AS T4 ON T3.student_id = T4.student_id WHERE T4.first_name = \"Tre\" AND T4.last_name = \"Hamill\"\nAnswer: ", "51afca755e1952faaddb1a78": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the names and descriptions of all the sections?\nPredicted SQL: SELECT section_name, section_description FROM Sections\nAnswer: ", "143a9e34f5255bf960fa6647": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the average speed in knots of the cartoons?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain any information related to cartoon speeds or knots.\nAnswer: ", "2c688c844924064a896572cc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which unique cities are in Asian countries where Chinese is the official language ?\nPredicted SQL: SELECT DISTINCT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Asia' \nAND countrylanguage.Language = 'Chinese' \nAND countrylanguage.IsOfficial = 'T'\nAnswer: ", "b4b475385b33e4ce0d08cc29": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the African countries that have a  population less than any country in Asia?\nPredicted SQL: SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')\nAnswer: ", "0b00d571ff0d1af413891c6e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Which student has the highest GPA?\nPredicted SQL: SELECT T1.first_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id \nJOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id \nGROUP BY T1.student_id \nORDER BY SUM(T5.grade_points) / COUNT(T5.grade_points) DESC \nLIMIT 1\nAnswer: ", "b631e181bf11772d9697d1db": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Find the degree summary descriptions and their graduation requirements.\nPredicted SQL: SELECT degree_summary_description, other_details FROM degree_programs\nAnswer: ", "ef979676b46052141b6e9bc8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What are the names of properties that are either houses or apartments with more than 1 room?\nPredicted SQL: SELECT property_name FROM Properties WHERE (property_type_code = 'apt' OR property_type_code = 'hse') AND room_count > 1\nAnswer: ", "73a33e84e28ac9cd9082b7c3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: List the phone numbers of contestants with more than one vote.\nPredicted SQL: SELECT cell_mobile_number FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment_courses GROUP BY student_id HAVING COUNT(*) > 1)\nAnswer: ", "c5dbbd5540d8d8167838a288": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Which property has the longest mortgage years?\nPredicted SQL: SELECT line_1,line_2,line_3 FROM addresses ORDER BY length(zip_postcode) DESC LIMIT 1\nAnswer: ", "d33a8da042c0d463e9f9efe8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Which property has the highest version number?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "fe713a73eccd08d6735d65f4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Who was the first winner of the WSOP?\nPredicted SQL: SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Best_Finish = 1 ORDER BY T1.Final_Table_Made LIMIT 1\n\nQuestion: List the names of all poker players and their earnings.\nAnswer: SELECT T2.Name ,  T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID\n\nQuestion: Show the names of poker players who have made it to the final table more than once.\nAnswer: SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Final_Table_Made > 1\n\nQuestion: Show the names of poker players who have earned more than $1 million.\nAnswer: SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 1000000\n\nQuestion: Show the names of poker players who have a money rank of 1.\nAnswer: SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Money_Rank = 1\n\nQuestion: Show the names of poker players who have a height of over 6 feet.\nAnswer: SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 6\n\nQuestion: Show the names of poker players who have a birth date after 1990.\nAnswer: SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Birth_Date > '1990-01-01'\n\nQuestion: Show the names of poker players who are not from the USA.\nAnswer: SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Nationality != 'USA'\nAnswer: ", "1f042fa23793bd2b166126ea": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?\nPredicted SQL: SELECT continent, SUM(population) AS total_population, AVG(lifeexpectancy) AS average_life_expectancy \nFROM country \nWHERE continent IN \n    (SELECT continent \n     FROM country \n     GROUP BY continent \n     HAVING AVG(lifeexpectancy) < 72) \nGROUP BY continent\nAnswer: ", "8c5e414add4c80331398b999": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the role of voice actors?\nPredicted SQL: SELECT Directed_by, Written_by FROM Cartoon\n\nQuestion: Show the series name and country of TV channels.\nAnswer: SELECT series_name, Country FROM TV_Channel\n\nQuestion: Show the title and original air date of cartoons.\nAnswer: SELECT Title, Original_air_date FROM Cartoon\n\nQuestion: Show the episode and rating of TV series.\nAnswer: SELECT Episode, Rating FROM TV_series\n\nQuestion: Show the title and channel of cartoons.\nAnswer: SELECT Title, Channel FROM Cartoon\n\nQuestion: Show the series name and language of TV channels.\nAnswer: SELECT series_name, Language FROM TV_Channel\n\nQuestion: Show the episode and viewers of TV series.\nAnswer: SELECT Episode, Viewers_m FROM TV_series\n\nQuestion: Show the title and production code of cartoons.\nAnswer: SELECT Title, Production_code FROM Cartoon\nAnswer: ", "c7ac9c91385badd16b4a429e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are 3 most highly rated episodes in the TV series table and what were those ratings?\nPredicted SQL: SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\nQuestion: List the titles of cartoons that were directed by 'John Smith'.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = 'John Smith'\n\nQuestion: Which TV series have a viewership of more than 1 million?\nAnswer: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Viewers_m > 1)\n\nQuestion: List the countries where TV channels are broadcasting TV series.\nAnswer: SELECT DISTINCT Country FROM TV_Channel\n\nQuestion: What are the titles of cartoons that were written by 'Jane Doe' and aired on 'ABC' channel?\nAnswer: SELECT Title FROM Cartoon WHERE Written_by = 'Jane Doe' AND Channel = (SELECT id FROM TV_Channel WHERE series_name = 'ABC')\n\nQuestion: List the TV series that have a weekly rank in the top 10.\nAnswer: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Weekly_Rank <= 10)\n\nQuestion: Which TV channels offer high definition TV?\nAnswer: SELECT series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'\n\nQuestion: List the TV series that have a rating share of more than 20%.\nAnswer: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Rating > 20)\nAnswer: ", "26d55c9def3779befc993ab0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the cartoons with more than 3 million viewers?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about cartoons or viewers.\nAnswer: ", "3996762c8fd30c8f2294e2fb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: How many different nationalities do conductors have?\nPredicted SQL: SELECT COUNT(DISTINCT Nationality) FROM conductor\nAnswer: ", "a6d3542a6d4001df2b34d472": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the grade of each high schooler?\nPredicted SQL: SELECT ID, grade FROM Highschooler\nAnswer: ", "208e0245fc9effd7c17cb542": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What psychological effects does abandonment have on dogs?\nPredicted SQL: This question cannot be answered directly with the given tables.\nAnswer: ", "35a64873cc270e507d0bf125": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?\nPredicted SQL: SELECT series_name, Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones') AND id IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Michael Chang')\nAnswer: ", "55ea03584830d19094816bfc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the room count of Jessica?\nPredicted SQL: SELECT COUNT(*) FROM Students WHERE first_name = 'Jessica'\nAnswer: ", "07a3252c60b07d450d8707d2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: List the contestant names and their birth states for those who received at least one vote.\nPredicted SQL: SELECT T1.first_name, T1.last_name, T1.state_province_county \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN courses AS T4 ON T3.course_id = T4.course_id \nWHERE T4.votes_received > 0\nAnswer: ", "69549bedab98db80f1f73a5d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the average area size among the TV series?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "bbdc968f7b67235b56493e44": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is last date created of votes from the state 'CA'?\nPredicted SQL: SELECT MAX(created) FROM VOTES WHERE state = 'CA'\nAnswer: ", "82df3dddf11c77b37c7a86e0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What's the name of the course with most number of enrollments?\nPredicted SQL: SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY count(*) DESC LIMIT 1)\nAnswer: ", "149241ad21adad0277640f42": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Group performances by official ratings and weekly rank.\nPredicted SQL: SELECT T1.official_ratings, T1.weekly_rank FROM performances AS T1 GROUP BY T1.official_ratings, T1.weekly_rank\nAnswer: ", "b87fe84698f458ceda41af48": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the gender of Roman Bragin?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "c5926023533caccf207e1a6a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the phone number of the student with the most friends?\nPredicted SQL: SELECT cell_mobile_number FROM students WHERE student_id = (SELECT student_id FROM student_enrolment GROUP BY student_id ORDER BY count(*) DESC LIMIT 1) \n\nQuestion: List the names of students who are enrolled in the Computer Science department.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Computer Science')))\n\nQuestion: Show the course names and descriptions for all courses in the Fall 2021 semester.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM sections WHERE semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'Fall 2021'))\n\nQuestion: List the names of students who have taken the most number of courses.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id = (SELECT student_id FROM student_enrolment_courses GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)\n\nQuestion: Show the department names and descriptions for all departments.\nAnswer: SELECT department_name, department_description FROM departments\n\nQuestion: What is the address of the student with the highest GPA?\nAnswer: SELECT line_1, line_2, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id = (SELECT current_address_id FROM students WHERE student_id = (SELECT student_id FROM student_enrolment_courses GROUP BY student_id ORDER BY sum(grade) DESC LIMIT 1))\n\nQuestion: List the names of students who have not registered for any courses.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id NOT IN (SELECT student_id FROM student_enrolment)\n\nQuestion: Show the course names and descriptions for all courses taken by students in the Spring 2022 semester.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'Spring 2022')))\nAnswer: ", "8256633263b066a482470e20": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the title of all cartoons in alphabetical order.\nPredicted SQL: SELECT Title FROM Cartoon ORDER BY Title ASC\n\nQuestion: What is the country of the TV channel that aired the most episodes?\nAnswer: SELECT Country FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series GROUP BY Channel ORDER BY COUNT(*) DESC LIMIT 1)\n\nQuestion: List the titles of cartoons that were directed by the same person who wrote them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: What is the language of the TV channel that has the highest weekly rank?\nAnswer: SELECT Language FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Weekly_Rank DESC LIMIT 1)\n\nQuestion: List the titles of cartoons that have a high definition TV option.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Hight_definition_TV = 'Yes')\n\nQuestion: What is the content of the TV channel that has the highest viewership?\nAnswer: SELECT Content FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Viewers_m DESC LIMIT 1)\n\nQuestion: List the titles of cartoons that have a pay-per-view option.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: What is the package option of the TV channel that has the highest rating?\nAnswer: SELECT Package_Option FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Rating DESC LIMIT 1)\nAnswer: ", "cdd33ed5d87bf95ef91b84cc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the average sea level of apartments sold for more than 300000?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about apartments or sea levels.\nAnswer: ", "23fd61436097cdc61e0140eb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the average life expectancy for countries in Africa which are republics?\nPredicted SQL: SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'\nAnswer: ", "4bbed4e5b2702912e07de50a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which owner owns the most dogs? List the owner id, first name and last name.\nPredicted SQL: SELECT owner_id, first_name, last_name \nFROM Owners \nWHERE owner_id IN (SELECT owner_id \n                   FROM Dogs \n                   GROUP BY owner_id \n                   ORDER BY COUNT(*) DESC \n                   LIMIT 1)\nAnswer: ", "89e2a2170764a7c0faae2875": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What are the performance scores of the contestants whose names contain the substring 'man'?\nPredicted SQL: SELECT T1.transcript_id FROM transcript_contents AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_course_id = T2.student_course_id JOIN courses AS T3 ON T2.course_id = T3.course_id WHERE T3.course_name LIKE '%man%'\nAnswer: ", "4026cb060a4d58e3e9199645": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: For each language, list the number of TV Channels that use it.\nPredicted SQL: SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\nAnswer: ", "abb704df148a36f56b2629cb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which regions speak Dutch or English?\nPredicted SQL: SELECT DISTINCT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' OR Language = 'English')\nAnswer: ", "1f3d1b37ee9890cb90bd87c3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Which cartoon has the highest weekly rank?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "c4e3cf17b10ed478885c191f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the average amount of market share among the players?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "ee33608bb50ed75d9ea12fe3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Find the number of cartoons directed by each of the listed directors.\nPredicted SQL: SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by\n\nQuestion: List the TV series with the highest rating.\nAnswer: SELECT * FROM TV_series ORDER BY Rating DESC LIMIT 1\n\nQuestion: Find the TV channels that offer high definition TV.\nAnswer: SELECT * FROM TV_Channel WHERE Hight_definition_TV = 'Yes'\n\nQuestion: List the TV series with the most viewers.\nAnswer: SELECT * FROM TV_series ORDER BY Viewers_m DESC LIMIT 1\n\nQuestion: Find the TV channels that offer pay per view.\nAnswer: SELECT * FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes'\n\nQuestion: List the TV series with the highest 18-49 rating share.\nAnswer: SELECT * FROM TV_series ORDER BY 18_49_Rating_Share DESC LIMIT 1\n\nQuestion: Find the TV channels that offer package options.\nAnswer: SELECT * FROM TV_Channel WHERE Package_Option = 'Yes'\n\nQuestion: List the TV series with the highest weekly rank.\nAnswer: SELECT * FROM TV_series ORDER BY Weekly_Rank DESC LIMIT 1\nAnswer: ", "1a704c135de62407122f6440": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the first names of owners living in Virginia and the names of dogs they own.\nPredicted SQL: SELECT T1.first_name, T2.name \nFROM Owners AS T1 \nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id \nWHERE T1.state = 'Virginia'\nAnswer: ", "330d89d909a836c13938d55c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are iconic animated TV characters?\nPredicted SQL: SELECT Title FROM Cartoon WHERE Directed_by = \"Walt Disney\" OR Directed_by = \"Hanna-Barbera\" OR Directed_by = \"Matt Groening\" OR Directed_by = \"Seth MacFarlane\" OR Directed_by = \"Hayao Miyazaki\" OR Directed_by = \"Genndy Tartakovsky\" OR Directed_by = \"Nick Park\" OR Directed_by = \"Chuck Jones\" OR Directed_by = \"Tex Avery\" OR Directed_by = \"Osamu Tezuka\"\nAnswer: ", "4cec33991addfa441db28fda": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Show different citizenship of singers and the number of singers of each citizenship.\nPredicted SQL: SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship\nAnswer: ", "d0dd496b86f716d9cd9a4b3f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Give me the id, role and email of the professionals who did not perform any treatment on dogs.\nPredicted SQL: SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)\nAnswer: ", "6269907f55e4c2251a79d939": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Who is the first student to register? List the first name, middle name and last name.\nPredicted SQL: SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered ASC LIMIT 1\n\nQuestion: What are the course names and descriptions for the courses enrolled by student with id 101?\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 101))\n\nQuestion: List the names of students who have enrolled in the degree program offered by the department with id 201.\nAnswer: SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE department_id = 201))\n\nQuestion: What is the current address of the student who left first?\nAnswer: SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id = (SELECT current_address_id FROM students ORDER BY date_left ASC LIMIT 1)\n\nQuestion: List the course names and descriptions for the courses enrolled by student with id 102 in the semester named 'Fall 2021'.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 102 AND semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'Fall 2021')))\n\nQuestion: What is the transcript date for the student who has the most recent transcript?\nAnswer: SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1\n\nQuestion: List the names of students who have enrolled in more than one degree program.\nAnswer: SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment GROUP BY student_id HAVING count(DISTINCT degree_program_id) > 1)\n\nQuestion: What are the course names and descriptions for the courses enrolled by student with id 103 in the semester named 'Spring 2022'?\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 103 AND semester_id = (SELECT semester_id FROM semesters WHERE semester_name = '\nAnswer: ", "be5d82ec4171ab6ad6ed9df0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which dogs are of the rarest breed? Show their names and treatment dates.\nPredicted SQL: SELECT D.name, T.date_of_treatment \nFROM Dogs AS D \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE D.breed_code = (\n    SELECT breed_code \n    FROM Breeds \n    WHERE breed_name = (\n        SELECT breed_name \n        FROM Breeds \n        GROUP BY breed_name \n        ORDER BY COUNT(*) ASC \n        LIMIT 1\n    )\n)\nAnswer: ", "c05b980a4f52f27431c1270a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the running time of the TV series with the highest viewers?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "7b7bc121e0697db6182607e2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Find the homepages of the countries in North America.\nPredicted SQL: SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Addresses WHERE country = 'North America'\nAnswer: ", "a770498f7caf8fe2488af65e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the name and id of the department with the most number of degrees ?\nPredicted SQL: SELECT department_name, department_id FROM Departments WHERE department_id IN (SELECT department_id FROM Degree_Programs GROUP BY department_id ORDER BY COUNT(*) DESC LIMIT 1)\nAnswer: ", "7eaa6b60c5f4b0b287c4ec66": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Suggest friends for a student based on their current friends.\nPredicted SQL: This question cannot be answered with the given tables as there is no table that stores information about friendships between students.\nAnswer: ", "873d14a1274725707526586f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Provide recent news about international relations involving countries in North America.\nPredicted SQL: This question cannot be answered using the provided tables as they do not contain information about international relations or countries in North America.\nAnswer: ", "7e12eed69881ce16ef59aa58": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the codes of countries where Spanish is spoken by the largest percentage of people?\nPredicted SQL: SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1\nAnswer: ", "6b8fcf491611484ccc2e7f88": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the date of the feature named BurglarAlarm introduced on the market?\nPredicted SQL: SELECT T1.transcript_date FROM transcripts AS T1 JOIN transcript_contents AS T2 ON T1.transcript_id = T2.transcript_id JOIN student_enrolment_courses AS T3 ON T2.student_course_id = T3.student_course_id JOIN courses AS T4 ON T3.course_id = T4.course_id WHERE T4.course_name = \"BurglarAlarm\"\nAnswer: ", "d7247d9a060f5e8604097717": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the regions that use English or Dutch?\nPredicted SQL: SELECT DISTINCT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch')\nAnswer: ", "66b0f4dc3a6215a38bfcc187": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the distance between Jordan and Kyle?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "b026671e4ea10cd722f7b2af": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: How many singers are there?\nPredicted SQL: SELECT COUNT(*) FROM singer\nAnswer: ", "3ea15e82b1ee568a1c3496c0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is Jimi Hendrix famous for?\nPredicted SQL: SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Jimi Hendrix')\nAnswer: ", "70dea3e544f55cce2db9fa65": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Tell me about the changes HD TV has brought to animation.\nPredicted SQL: SELECT Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by, Cartoon.Original_air_date, Cartoon.Production_code, Cartoon.Channel\nFROM Cartoon\nJOIN TV_Channel ON Cartoon.Channel = TV_Channel.id\nWHERE TV_Channel.Hight_definition_TV = 'Yes'\nAnswer: ", "4dc9c28b143703e36e8cbd3c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the market share of Teodor Salparov?\nPredicted SQL: SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id JOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN students AS T4 ON T3.student_id = T4.student_id WHERE T4.first_name = \"Teodor\" AND T4.last_name = \"Salparov\"\nAnswer: ", "94a5f5bfd3dd15f1535fb3ca": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the names of conductors whose nationalities are not \"USA\"?\nPredicted SQL: SELECT Name FROM conductor WHERE Nationality <> 'USA' \n\nQuestion: List the orchestras founded after 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: Show the performances with official ratings greater than 5 million.\nAnswer: SELECT * FROM performance WHERE Official_ratings_(millions) > 5\n\nQuestion: Find the names of the conductors who have conducted performances with weekly rank in the top 3.\nAnswer: SELECT DISTINCT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T3.Weekly_rank <= 3\n\nQuestion: List the orchestras with major record format as \"Vinyl\".\nAnswer: SELECT Orchestra FROM orchestra WHERE Major_Record_Format = 'Vinyl'\n\nQuestion: Show the performances with a share greater than 50%.\nAnswer: SELECT * FROM performance WHERE Share > 50\n\nQuestion: Find the names of the conductors who have conducted performances with official ratings over 10 million.\nAnswer: SELECT DISTINCT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T3.Official_ratings_(millions) > 10\n\nQuestion: List the orchestras with record company \"Sony Music\".\nAnswer: SELECT Orchestra FROM orchestra WHERE Record_Company = 'Sony Music'\nAnswer: ", "80fd69ab3290919efeb89636": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the operating system of Semen Poltakvskiy?\nPredicted SQL: SELECT T1.other_details FROM students AS T1 WHERE T1.first_name = \"Semen\" AND T1.last_name = \"Poltakvskiy\"\nAnswer: ", "caa4ffca2fd0f3ad2253405e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is average life expectancy in the countries where English is not the official language?\nPredicted SQL: SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')\nAnswer: ", "9b9e2d635e92f91e244f228b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What language is predominantly spoken in Aruba?\nPredicted SQL: SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = 'ABW')\nAnswer: ", "0311067e8ffbdbf5961f370b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?\nPredicted SQL: SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE contestant_name = 'Tabatha Gehling'\nAnswer: ", "cb652f18cc83d8120169922a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are years of founding for orchestras that have had more than a single performance?\nPredicted SQL: SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 1)\nAnswer: ", "124a7573bd7ba2b7d05fb1ca": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Analyze sentiment in reviews of Christy Walton's latest song.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "f2da7f63ab294c6f8d8ee88b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the name of the country in Asia with the lowest life expectancy.\nPredicted SQL: SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1\n\nQuestion: List the names of the cities in countries with a population greater than 10 million.\nAnswer: SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Population > 10000000\n\nQuestion: Find the country with the highest GNP.\nAnswer: SELECT Name FROM country ORDER BY GNP DESC LIMIT 1\n\nQuestion: List the languages spoken in countries where English is an official language.\nAnswer: SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')\n\nQuestion: Find the country with the highest population.\nAnswer: SELECT Name FROM country ORDER BY Population DESC LIMIT 1\n\nQuestion: List the names of the countries in Europe with a population greater than 50 million.\nAnswer: SELECT Name FROM country WHERE Continent = 'Europe' AND Population > 50000000\n\nQuestion: Find the country with the highest percentage of official languages.\nAnswer: SELECT Name FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1\n\nQuestion: List the names of the cities in countries where the head of state is a monarch.\nAnswer: SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.HeadOfState LIKE '%monarch%'\nAnswer: ", "7b885bbe7bbb37b52a47dc3b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the current address of the computer science department?\nPredicted SQL: SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Addresses WHERE address_id = (SELECT current_address_id FROM Students WHERE student_id = (SELECT student_id FROM Student_Enrolment WHERE degree_program_id = (SELECT degree_program_id FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Computer Science'))))\nAnswer: ", "95f0a4e8d84081404c97c9a2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the email address of the high school student with the most likes?\nPredicted SQL: SELECT T1.email_address FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\nAnswer: ", "a7f3bda23c199c21e7265f1f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Return the names of the contestants whose names contain the substring 'Al' .\nPredicted SQL: SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'\nAnswer: ", "5af5af55d2805f28d699b595": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the date and id of the transcript with at least 2 courses listed?\nPredicted SQL: SELECT transcript_date, transcript_id \nFROM Transcripts \nWHERE transcript_id IN \n(SELECT transcript_id \nFROM Transcript_Contents \nGROUP BY transcript_id \nHAVING COUNT(*) >= 2)\nAnswer: ", "77d7efdae628755d9503394c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the name of the high schooler with the highest salary?\nPredicted SQL: This question cannot be answered with the given tables as there is no information about salaries in the provided tables.\nAnswer: ", "cd253bea0e1e593f3974eac1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the first, middle, and last names for everybody enrolled in a Bachelors program?\nPredicted SQL: SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelors'))\nAnswer: ", "3becf41b92c7829857fe8a44": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the official language spoken in the country whose head of state is Beatrix?\nPredicted SQL: SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix' AND IsOfficial = 'T')\nAnswer: ", "038891c0484a98a382c034c2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the name of the conductor who has worked the greatest number of years?\nPredicted SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\nQuestion: List the orchestras founded after 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: How many performances have official ratings greater than 1 million?\nAnswer: SELECT COUNT(*) FROM performance WHERE Official_ratings_(millions) > 1\n\nQuestion: Show the orchestras and their conductors where the conductor's nationality is 'German'.\nAnswer: SELECT T1.Orchestra, T1.Conductor_ID, T2.Name FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Nationality = 'German'\n\nQuestion: List the performances with a weekly rank in the top 10.\nAnswer: SELECT * FROM performance WHERE Weekly_rank <= 10\n\nQuestion: What is the average share of all performances?\nAnswer: SELECT AVG(Share) FROM performance\n\nQuestion: Show the orchestras and their record companies where the record company is 'Sony'.\nAnswer: SELECT Orchestra, Record_Company FROM orchestra WHERE Record_Company = 'Sony'\n\nQuestion: How many shows had an attendance greater than 500?\nAnswer: SELECT COUNT(*) FROM show WHERE Attendance > 500\nAnswer: ", "fb7bd264a31f241ef79f61a8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.\nPredicted SQL: SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%'\nAnswer: ", "6522bd9bbcbf135865908151": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the names of the building managers for the channels in Italy?\nPredicted SQL: SELECT T1.first_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id \nJOIN departments AS T4 ON T3.department_id = T4.department_id \nWHERE T4.department_name = 'Italy'\nAnswer: ", "96ed8a0084228b4fced16de2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the names of conductors, sorted descending by the number of years they have worked?\nPredicted SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\nQuestion: List the orchestras with a record company that starts with 'S' and was founded after 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Record_Company LIKE 'S%' AND Year_of_Founded > 2000\n\nQuestion: How many performances have official ratings over 1 million and a weekly rank in the top 10?\nAnswer: SELECT count(*) FROM performance WHERE Official_ratings_(millions) > 1 AND Weekly_rank <= 10\n\nQuestion: Show the names of the conductors who have conducted performances with an official rating over 2 million.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 2))\n\nQuestion: List the orchestras that have had shows with an attendance of over 500.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Performance_ID IN (SELECT Performance_ID FROM show WHERE Attendance > 500))\n\nQuestion: How many performances have a share of over 50%?\nAnswer: SELECT count(*) FROM performance WHERE Share > 50\n\nQuestion: Show the names of the conductors who have conducted performances with a share over 60%.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Share > 60))\nAnswer: ", "e39ac9f2ca17a8319d3db573": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Return the maximum and minimum shares for performances that do not have the type \"Live final\".\nPredicted SQL: SELECT MAX(share), MIN(share) FROM performance WHERE type <> 'Live final' \n\nQuestion: List the names of conductors who have conducted performances with official ratings over 5 million.\nAnswer: SELECT DISTINCT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Official_ratings_(millions) > 5\n\nQuestion: Show the orchestras that were founded after the conductor's year of work.\nAnswer: SELECT o.Orchestra FROM orchestra o JOIN conductor c ON o.Conductor_ID = c.Conductor_ID WHERE o.Year_of_Founded > c.Year_of_Work\n\nQuestion: How many performances have an official rating over 10 million?\nAnswer: SELECT COUNT(*) FROM performance WHERE Official_ratings_(millions) > 10\n\nQuestion: List the orchestras that have not performed any live shows.\nAnswer: SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Type <> 'Live' OR p.Type IS NULL\n\nQuestion: Show the names of conductors who have conducted performances with a weekly rank in the top 3.\nAnswer: SELECT DISTINCT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Weekly_rank <= 3\n\nQuestion: List the orchestras that have a major record format of 'CD'.\nAnswer: SELECT Orchestra FROM orchestra WHERE Major_Record_Format = 'CD'\n\nQuestion: How many performances have an attendance of over 500?\nAnswer: SELECT COUNT(*) FROM show WHERE Attendance > 500\nAnswer: ", "a4036ea1419f81f626630ef9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Evaluate the sentiment in reviews for performances conducted by conductors of different nationalities.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "d3fffe0110fecf6459ead8b9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Group owners by state, city, dog breeds, and size.\nPredicted SQL: SELECT T1.state_province_county, T1.city, T2.dog_breeds, T2.size \nFROM Addresses AS T1 \nJOIN Dogs AS T2 ON T1.address_id = T2.address_id \nGROUP BY T1.state_province_county, T1.city, T2.dog_breeds, T2.size\nAnswer: ", "f6e50c7ccb712302b8268e48": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many faculties are in the history department?\nPredicted SQL: SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'History')\nAnswer: ", "baa5f4b542be99bbbfad29af": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Show the department email address for computer science.\nPredicted SQL: SELECT T1.email_address FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id WHERE T2.degree_summary_name = \"Computer Science\"\nAnswer: ", "7d4d912276740a1d6b1bd258": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: List the names of orchestras that have no performance.\nPredicted SQL: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)\nAnswer: ", "53245ec9d37005721c345f3f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many countries have a republic as their form of government?\nPredicted SQL: SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'\nAnswer: ", "3f9defd33457a296e39e7717": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the name of the player with the spouse with the latest birthdate of the year?\nPredicted SQL: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN addresses AS T2 ON T1.permanent_address_id = T2.address_id JOIN addresses AS T3 ON T1.current_address_id = T3.address_id WHERE T2.zip_postcode = T3.zip_postcode ORDER BY T2.zip_postcode, T1.date_first_registered DESC LIMIT 1\nAnswer: ", "536285fe855334047ce3b2f7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the number of distinct languages used around the world?\nPredicted SQL: SELECT COUNT(DISTINCT Language) FROM countrylanguage\nAnswer: ", "fdaf53a475336cfc1f44e0ff": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the time zone of the address for the student who most recently registered?\nPredicted SQL: SELECT T1.time_zone FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.current_address_id ORDER BY T2.date_first_registered DESC LIMIT 1\nAnswer: ", "dfdf0cceb707a5014c0fb911": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Return the number of likes that the high schooler named Kyle has.\nPredicted SQL: SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')\nAnswer: ", "84e1264925eb59ccf037fe36": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Cluster orchestras based on their year of foundation and major record format.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "670bc22385613200ae8615ca": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many type of governments are in Africa?\nPredicted SQL: SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'\nAnswer: ", "a67deade7caed10c43fa11fd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.\nPredicted SQL: SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))\nAnswer: ", "1acd91371770b0489e172d74": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?\nPredicted SQL: SELECT course_id, COUNT(course_id) AS course_count\nFROM Student_Enrolment_Courses\nGROUP BY course_id\nORDER BY course_count DESC\nLIMIT 1\nAnswer: ", "0c330f1a3f414cff1a267d8b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the earnings of poker players, ordered descending by value?\nPredicted SQL: SELECT Earnings FROM poker_player ORDER BY Earnings DESC\nAnswer: ", "d3c4e4ca52223ed1b207de57": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Retrieve the latest news headlines about the country with the highest population.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "2dad65a2914ca44e6f901068": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the number of credits for the math course?\nPredicted SQL: SELECT other_details FROM courses WHERE course_name = \"Math\"\nAnswer: ", "e8990b03f0674ed71a12c7b8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which country has the longest male life expectancy?\nPredicted SQL: SELECT country FROM addresses WHERE other_address_details = 'male life expectancy' ORDER BY length(line_1) DESC LIMIT 1\n\nQuestion: List the names of all courses offered in the department of Computer Science.\nAnswer: SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM sections WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Computer Science'))\n\nQuestion: Show the names of students who have enrolled in the semester named 'Fall 2021'.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'Fall 2021'))\n\nQuestion: List the names of students who have enrolled in the course 'Introduction to Programming'.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE course_id = (SELECT course_id FROM courses WHERE course_name = 'Introduction to Programming')))\n\nQuestion: Show the names of students who have left the university.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: List the names of students who have not yet left the university.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NULL\n\nQuestion: Show the names of students who have enrolled in more than one course.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment GROUP BY student_id HAVING count(*) > 1)\n\nQuestion: List the names of students who have transcripts.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\nAnswer: ", "b66a3740ae9f5db6e2c3f9df": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the names and grades for each high schooler?\nPredicted SQL: SELECT name, grade FROM Highschooler\nAnswer: ", "8528c0f2874c8b12dc960edc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are different nationalities of people and the corresponding number of people from each nation?\nPredicted SQL: SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality\nAnswer: ", "7f9089eb8b2504bf30e8c18d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: How do campaign strategies influence votes?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "402896024a57a76939088b76": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Show the date and id of the transcript with at least 2 course results.\nPredicted SQL: SELECT transcript_id, transcript_date \nFROM Transcripts \nWHERE transcript_id IN \n    (SELECT transcript_id \n     FROM Transcript_Contents \n     GROUP BY transcript_id \n     HAVING COUNT(*) >= 2)\nAnswer: ", "b6e0e749c2542f564ba30413": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the last name of the students who live in North Carolina but have not registered in any degree programs?\nPredicted SQL: SELECT last_name FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM student_enrolment)\nAnswer: ", "c9186f62cafdd58c7d11cf01": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Return the country codes for countries that do not speak English.\nPredicted SQL: SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')\nAnswer: ", "005e7984f350dcf461fc0170": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: List the record company shared by the most number of orchestras.\nPredicted SQL: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1\n\nQuestion: What is the nationality of the conductor who conducted the most performances?\nAnswer: SELECT T1.Nationality FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1\n\nQuestion: List the orchestras founded after 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: How many performances have official ratings over 5 million?\nAnswer: SELECT count(*) FROM performance WHERE Official_ratings_(millions) > 5\n\nQuestion: What is the average share of performances?\nAnswer: SELECT avg(Share) FROM performance\n\nQuestion: List the names of the conductors who conducted performances with weekly rank in the top 3.\nAnswer: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T3.Weekly_rank <= 3\n\nQuestion: Show the performances with the highest attendance.\nAnswer: SELECT * FROM performance ORDER BY Attendance DESC LIMIT 1\n\nQuestion: List the orchestras that have not had any shows yet.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)\nAnswer: ", "c92af61f0a38a1f7501e7d21": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the email address of the student with the most friends?\nPredicted SQL: SELECT email_address FROM students ORDER BY count(*) DESC LIMIT 1\n\nQuestion: List the names of students who are enrolled in the Computer Science degree program.\nAnswer: SELECT first_name ,  last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.department_id = \"Computer Science\"\n\nQuestion: List the names of students who are enrolled in the Fall 2021 semester.\nAnswer: SELECT first_name ,  last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN semesters AS T3 ON T2.semester_id = T3.semester_id WHERE T3.semester_name = \"Fall 2021\"\n\nQuestion: Show the course names and descriptions for all courses a student with SSN 123-45-6789 is enrolled in.\nAnswer: SELECT T2.course_name ,  T2.course_description FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN courses AS T4 ON T3.course_id = T4.course_id WHERE T1.ssn = \"123-45-6789\"\n\nQuestion: List the names of students who have left the program.\nAnswer: SELECT first_name ,  last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: Show the department names for all degree programs.\nAnswer: SELECT T2.department_name FROM degree_programs AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id\n\nQuestion: Show the course names and descriptions for all courses a student with ID 123 is enrolled in.\nAnswer: SELECT T2.course_name ,  T2.course_description FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN courses AS T4 ON T3.course_id = T4.course_id WHERE T1.student_id = 123\n\nQuestion: List the names of students who have not registered for any courses.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id NOT IN (SELECT student_id FROM student_enrolment)\nAnswer: ", "b5b43934e85bd4a5a22e66a5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List the email, cell phone and home phone of all the professionals.\nPredicted SQL: SELECT email_address, cell_number, home_phone FROM Professionals\n\nQuestion: What are the names of the owners who have abandoned dogs?\nAnswer: SELECT first_name, last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE abandoned_yn = 'Y')\n\nQuestion: List the treatment types and their descriptions.\nAnswer: SELECT treatment_type_code, treatment_type_description FROM Treatment_Types\n\nQuestion: Find the names of the dogs who have received treatments from professional with id 123.\nAnswer: SELECT name FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments WHERE professional_id = 123)\n\nQuestion: How many dogs are there for each breed?\nAnswer: SELECT breed_name, COUNT(*) FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY breed_name\n\nQuestion: List the treatment types and their costs.\nAnswer: SELECT treatment_type_description, cost_of_treatment FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code\n\nQuestion: Find the names of the professionals who have treated dogs with a cost greater than $100.\nAnswer: SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment > 100)\n\nQuestion: List the names of the owners who have dogs with a weight greater than 50.\nAnswer: SELECT first_name, last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE weight > 50)\nAnswer: ", "e3910b111e8bb3b36a0185c0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many people live in countries that do not speak English?\nPredicted SQL: SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')\nAnswer: ", "36310118c8f141c91b6fcb4a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Show the name of singers whose birth year is either 1948 or 1949?\nPredicted SQL: SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\nAnswer: ", "c6711489d5b763f89ab61af1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.\nPredicted SQL: SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'\nAnswer: ", "8a2c4e1e302acaea6d7bd463": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: How does social media affect friendships?\nPredicted SQL: This question cannot be answered directly with the given tables. The tables provided do not contain information about social media or the nature of friendships.\nAnswer: ", "82d08f8d7e91c1c8c91209d0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the date and the operating professional's first name of each treatment?\nPredicted SQL: SELECT date_of_treatment, first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id\nAnswer: ", "a64ef6017f0cc8903735f0a2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is Kyle's SSN?\nPredicted SQL: SELECT ssn FROM students WHERE first_name = 'Kyle'\nAnswer: ", "11f724e5fe0aeec461a55e3c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Find conductors whose career trajectory deviates significantly from the norm based on age and years of work.\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about conductors or their career trajectories.\nAnswer: ", "1f354580370732834a2ecdd8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the job prospects for graduates?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "82d6bf3df3257a572a7abd9e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Which singer has the largest area size?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "07248c3fde45ca7398bfeb2d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the id, line 1, and line 2 of the address with the most students?\nPredicted SQL: SELECT address_id, line_1, line_2 FROM addresses WHERE address_id IN (SELECT current_address_id FROM students GROUP BY current_address_id ORDER BY count(*) DESC LIMIT 1)\n\nQuestion: List the names of the departments with more than 5 degree programs.\nAnswer: SELECT department_name FROM departments WHERE department_id IN (SELECT department_id FROM degree_programs GROUP BY department_id HAVING count(*) > 5)\n\nQuestion: Find the course names and descriptions for the courses enrolled by student with id 123.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 123))\n\nQuestion: What is the semester name and description for the semester with the most student enrolments?\nAnswer: SELECT semester_name, semester_description FROM semesters WHERE semester_id IN (SELECT semester_id FROM student_enrolment GROUP BY semester_id ORDER BY count(*) DESC LIMIT 1)\n\nQuestion: List the names of the students who have transcripts.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\n\nQuestion: Find the student names and addresses who are enrolled in the degree program with id 456.\nAnswer: SELECT first_name, last_name, line_1, line_2 FROM students JOIN addresses ON students.current_address_id = addresses.address_id WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 456)\n\nQuestion: What are the course names and descriptions for the courses in the section with id 789?\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM sections WHERE section_id = 789)\n\nQuestion: List the names of the students who have left the university.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NOT NULL\nAnswer: ", "1ba9b4a0e4cd1e00aefa7e3e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How much does the most recent treatment cost?\nPredicted SQL: SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1\n\nQuestion: List the first and last names of owners who have abandoned dogs.\nAnswer: SELECT first_name, last_name FROM owners WHERE owner_id IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'Y')\n\nQuestion: What is the breed name of the dog with the highest weight?\nAnswer: SELECT breed_name FROM breeds WHERE breed_code IN (SELECT breed_code FROM dogs WHERE weight = (SELECT max(weight) FROM dogs))\n\nQuestion: List the treatment types and their descriptions.\nAnswer: SELECT treatment_type_code, treatment_type_description FROM treatment_types\n\nQuestion: How many dogs have been treated by each professional? List the professional id and count.\nAnswer: SELECT professional_id, COUNT(*) FROM treatments GROUP BY professional_id\n\nQuestion: List the names of the professionals who have treated dogs with a cost of treatment greater than 100.\nAnswer: SELECT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment > 100)\n\nQuestion: What is the total cost of treatments for each dog? List the dog id and total cost.\nAnswer: SELECT dog_id, SUM(cost_of_treatment) FROM treatments GROUP BY dog_id\n\nQuestion: List the sizes of dogs that have been treated by a professional with the role code 'VET'.\nAnswer: SELECT size_description FROM sizes WHERE size_code IN (SELECT size_code FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments WHERE professional_id IN (SELECT professional_id FROM professionals WHERE role_code = 'VET')))\nAnswer: ", "8707467f0de1d31ad7105442": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which professional did not operate any treatment on dogs? List the professional's id, role and email.\nPredicted SQL: SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)\nAnswer: ", "971cb5c909900e7f0d50dafc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What grade is Kyle in?\nPredicted SQL: SELECT grade FROM Highschooler WHERE name = 'Kyle'\n\nQuestion: List the names of all high schoolers who have friends.\nAnswer: SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) OR ID IN (SELECT friend_id FROM Friend)\n\nQuestion: List the names of all high schoolers who have no friends.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) AND ID NOT IN (SELECT friend_id FROM Friend)\n\nQuestion: List the names of all high schoolers who like someone.\nAnswer: SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes)\n\nQuestion: List the names of all high schoolers who do not like anyone.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Likes)\n\nQuestion: List the names of all high schoolers who have friends and like someone.\nAnswer: SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)\n\nQuestion: List the names of all high schoolers who have friends but do not like anyone.\nAnswer: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID NOT IN (SELECT student_id FROM Likes)\n\nQuestion: List the names of all high schoolers who do not have friends but like someone.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)\nAnswer: ", "c0016695968dabd94ff716dd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?\nPredicted SQL: SELECT continent, AVG(lifeexpectancy) AS avg_life_expectancy, SUM(population) AS total_population \nFROM country \nGROUP BY continent \nHAVING AVG(lifeexpectancy) < 72\nAnswer: ", "81156c2aa464f64da96a4725": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the feature type name of feature AirCon?\nPredicted SQL: SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = (SELECT feature_type_code FROM Other_Available_Features WHERE feature_name = 'AirCon')\nAnswer: ", "5847b151c5ee9e4a233b0dd9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the birth date of the spouse of the poker player with the highest earnings?\nPredicted SQL: This question cannot be answered with the given tables as there is no table related to poker players or their spouses.\nAnswer: ", "d935972dd6ed247350e7286b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Count the number of language families in Asia.\nPredicted SQL: SELECT count(*) FROM Departments WHERE department_description = 'Language' AND other_details = 'Asia'\nAnswer: ", "1e64edb741404aca3567b648": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .\nPredicted SQL: SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000\nAnswer: ", "044c98fc01ca045299a9051f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: List the pet names of poker players who share the same nationality as Maksim Bltin.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "b3a4556a57081884aaf93723": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Create a phone call reminder for students about course registration deadlines.\nPredicted SQL: INSERT INTO Reminder (reminder_type, reminder_date, reminder_details)\nVALUES ('Phone Call', '2022-10-15', 'Reminder for students about course registration deadlines')\nAnswer: ", "5bde5711c55442403edf9db8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the names of people who do not play poker?\nPredicted SQL: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)\nAnswer: ", "0ee148546bada3dcf3858d97": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the names of singers from France who have won the most awards?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "dd15f160100d2548f6fce8ae": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: When is the first transcript released? List the date and details.\nPredicted SQL: SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1\n\nQuestion: What are the names of the students who have enrolled in the degree program with id 5?\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 5)\n\nQuestion: List the course names and descriptions for the courses enrolled by student with id 10.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 10))\n\nQuestion: What is the current address of the student with id 15?\nAnswer: SELECT line_1, line_2, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id = (SELECT current_address_id FROM students WHERE student_id = 15)\n\nQuestion: List the names and descriptions of the degree programs offered by the department with id 3.\nAnswer: SELECT degree_summary_name, degree_summary_description FROM degree_programs WHERE department_id = 3\n\nQuestion: How many students are enrolled in the semester with id 7?\nAnswer: SELECT COUNT(*) FROM student_enrolment WHERE semester_id = 7\n\nQuestion: List the names and descriptions of the departments.\nAnswer: SELECT department_name, department_description FROM departments\n\nQuestion: What are the details of the transcript with id 20?\nAnswer: SELECT transcript_date, other_details FROM transcripts WHERE transcript_id = 20\nAnswer: ", "2eaad528a90805e24372acb5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Return the grade that has the greatest number of high schoolers.\nPredicted SQL: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1\n\nQuestion: Find the names of the high schoolers who have friends.\nAnswer: SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)\n\nQuestion: Find the names of the high schoolers who have no friends.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\nQuestion: Find the names of the high schoolers who like someone.\nAnswer: SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes)\n\nQuestion: Find the names of the high schoolers who do not like anyone.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Likes)\n\nQuestion: Find the names of the high schoolers who like someone who does not like them back.\nAnswer: SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes) AND ID NOT IN (SELECT liked_id FROM Likes WHERE liked_id = Highschooler.ID)\n\nQuestion: Find the names of the high schoolers who have friends in the same grade.\nAnswer: SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend WHERE friend_id IN (SELECT ID FROM Highschooler WHERE grade = Highschooler.grade))\n\nQuestion: Find the names of the high schoolers who have friends in a different grade.\nAnswer: SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend WHERE friend_id IN (SELECT ID FROM Highschooler WHERE grade != Highschooler.grade))\nAnswer: ", "a297fce14d6acf5ef1894d6a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Generate an artistic portrait of Christy Walton.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "66da345173041a2a9be2f240": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What are the implications of low voter turnout?\nPredicted SQL: This question cannot be answered directly with the given tables.\nAnswer: ", "4c240584926fe6d76a8b6637": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Which record label is singer Abigail Johnson affiliated with?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "76b7125aa4c80c62170f5dd7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the names of nations speak both English and French?\nPredicted SQL: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')\nAnswer: ", "3ae8723d8b7320bea3175ec3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.\nPredicted SQL: SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(*) AS num_enrollments\nFROM Students AS T1\nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id\nGROUP BY T1.student_id\nORDER BY num_enrollments DESC\nLIMIT 1\nAnswer: ", "6498be8762b873b18efdf820": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the names of high schoolers who have likes, and numbers of likes for each.\nPredicted SQL: SELECT T1.name, COUNT(T2.liked_id) AS num_likes\nFROM Highschooler AS T1\nJOIN Likes AS T2 ON T1.ID = T2.student_id\nGROUP BY T1.ID\nAnswer: ", "f4155f1acb1b8d9bc93a37b1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Who is the earliest graduate of the school? List the first name, middle name and last name.\nPredicted SQL: SELECT first_name, middle_name, last_name FROM students ORDER BY date_left ASC LIMIT 1\n\nQuestion: What are the names of the departments that offer courses in the current semester?\nAnswer: SELECT department_name FROM departments WHERE department_id IN (SELECT department_id FROM degree_programs WHERE degree_program_id IN (SELECT degree_program_id FROM student_enrolment WHERE semester_id = (SELECT semester_id FROM semesters WHERE semester_name = 'current')))\n\nQuestion: List the course names and descriptions for the courses taken by student with ID 123.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 123))\n\nQuestion: What is the current address of the student with ID 456?\nAnswer: SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id = (SELECT current_address_id FROM students WHERE student_id = 456)\n\nQuestion: List the names of the students who have enrolled in the degree program with ID 789.\nAnswer: SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 789)\n\nQuestion: What courses are included in the transcript of student with ID 789?\nAnswer: SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 789))\nAnswer: ", "18adce893efccc447389682c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What ways does social media enhance TV shows?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "118d43a80c47f705c4e4f46a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the average number of bedrooms in properties with more than 5 rooms?\nPredicted SQL: This question does not seem to be related to the tables provided. Can you please provide a question related to the tables provided so that I can assist you with the SQL query translation?\nAnswer: ", "0624991e34efd6592749aa7f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.\nPredicted SQL: SELECT T1.first_name, T2.name \nFROM Owners AS T1 \nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id \nWHERE T1.state = 'Virginia'\nAnswer: ", "07ba6a83ad1ce3e11feb81ec": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which country has the highest horsepower?\nPredicted SQL: This question cannot be answered with the given tables as there is no information related to horsepower in the provided tables.\nAnswer: ", "80ce5f0f4b7c3950fedc263e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many unique languages are spoken in the world?\nPredicted SQL: SELECT COUNT(DISTINCT Language) FROM countrylanguage\nAnswer: ", "12a1ce801c4e813d0deec7af": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Show the weights of the apartments.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "07334723b7f53588eba2caf6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the name of the singer with the largest net worth?\nPredicted SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\nQuestion: List the titles of the songs sung by singers born after 1990.\nAnswer: SELECT Title FROM song AS S JOIN singer AS G ON S.Singer_ID = G.Singer_ID WHERE G.Birth_Year > 1990\n\nQuestion: How many singers have a citizenship of USA?\nAnswer: SELECT COUNT(*) FROM singer WHERE Citizenship = 'USA'\n\nQuestion: List the names of the singers who have sold more than 1 million copies of a song.\nAnswer: SELECT Name FROM singer AS G JOIN song AS S ON G.Singer_ID = S.Singer_ID WHERE Sales > 1000000\n\nQuestion: What is the average net worth of singers with a citizenship other than USA?\nAnswer: SELECT AVG(Net_Worth_Millions) FROM singer WHERE Citizenship != 'USA'\nAnswer: ", "0e850fd5aca25f94c9fdeaa3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the first name and last name of the professionals who have done treatment with cost below average?\nPredicted SQL: SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT avg(cost_of_treatment) FROM Treatments))\nAnswer: ", "dee39760c6baf216390a5c97": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the names of high schoolers who have likes, and how many likes does each have?\nPredicted SQL: SELECT T1.name, COUNT(T2.liked_id) AS num_likes \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.ID, T1.name\nAnswer: ", "412f63718f3bc1253fa29a08": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the names and grades of each high schooler.\nPredicted SQL: SELECT name, grade FROM Highschooler\nAnswer: ", "205b0998ec9ed3508016d5b3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Display a heatmap showing the total earnings by country for poker players.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "62c15f82061e8343e0ede3ee": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the episodes of all TV series sorted by Rotten Tomato ratings.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "84cba41f629e7d163483c394": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Which courses have the fewest number of credits?\nPredicted SQL: SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id ORDER BY count(*) ASC LIMIT 1)\nAnswer: ", "314614766043b472b7eeaca4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: find the pixel aspect ratio and nation of the tv channels that do not use English.\nPredicted SQL: SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'\nAnswer: ", "8dc42380cb8075c6f1af8840": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What leads to changes in voting trends over time?\nPredicted SQL: SELECT state, contestant_number, created FROM VOTES ORDER BY created\nAnswer: ", "7f8c8a7c45f973f2b9e8d117": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the name of the performance (not type) with the highest official ratings?\nPredicted SQL: SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1\nAnswer: ", "bffaecee36ca9e1b8237cb7e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What taxes apply to property sales?\nPredicted SQL: SELECT feature_name FROM Other_Available_Features WHERE feature_type_name = 'taxes'\nAnswer: ", "336d1b7895420ffec61d2a56": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List the arrival date and the departure date for all the dogs.\nPredicted SQL: SELECT date_arrived, date_departed FROM Dogs\n\nQuestion: What are the names of the professionals who have performed treatments on dogs?\nAnswer: SELECT DISTINCT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments)\n\nQuestion: List the names of the owners who have abandoned their dogs.\nAnswer: SELECT first_name, last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE abandoned_yn = 'Y')\n\nQuestion: How many treatments have been performed on each dog? List the dog id and the count.\nAnswer: SELECT dog_id, COUNT(*) FROM Treatments GROUP BY dog_id\n\nQuestion: Find the breed names of the dogs who have received treatments.\nAnswer: SELECT DISTINCT breed_name FROM Breeds WHERE breed_code IN (SELECT breed_code FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments))\n\nQuestion: List the treatment types and their descriptions.\nAnswer: SELECT treatment_type_code, treatment_type_description FROM Treatment_Types\n\nQuestion: What is the total cost of treatments for each dog? List the dog id and the total cost.\nAnswer: SELECT dog_id, SUM(cost_of_treatment) FROM Treatments GROUP BY dog_id\n\nQuestion: Find the names of the owners who have dogs that have received treatments from a professional with the role code 'VET'.\nAnswer: SELECT first_name, last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments WHERE professional_id IN (SELECT professional_id FROM Professionals WHERE role_code = 'VET')))\nAnswer: ", "6e35c29eee4a7dd174234903": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the maximum final tables made across all poker players who have earnings below 200000.\nPredicted SQL: SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\nAnswer: ", "ebae21f9856a3e94a31c1e12": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List pairs of the owner's first name and the dogs's name.\nPredicted SQL: SELECT O.first_name, D.name FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id\nAnswer: ", "e2e12991480af133b9baa27d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Translate the content descriptions of \"Sky Radio\" into Spanish.\nPredicted SQL: SELECT T1.course_description FROM courses AS T1 WHERE T1.course_name = \"Sky Radio\" AND T1.other_details = \"Spanish\"\nAnswer: ", "00f410f60091d8f8de734e8f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Who came up with Texas Hold'em?\nPredicted SQL: SELECT name FROM people WHERE Nationality = 'Texas' AND Name = 'Hold'em'\nAnswer: ", "bc069c4a030deb1898a296e4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Count the phone numbers of the contestants.\nPredicted SQL: SELECT count(cell_mobile_number) FROM students\n\nQuestion: Show the names of the students who have registered for courses.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment)\n\nQuestion: Show the names of the students who have not registered for any courses.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id NOT IN (SELECT student_id FROM student_enrolment)\n\nQuestion: List the names of the students who have registered for the most number of courses.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\n\nQuestion: Show the names of the students who have left the program.\nAnswer: SELECT first_name ,  last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: Show the names of the students who have not left the program.\nAnswer: SELECT first_name ,  last_name FROM students WHERE date_left IS NULL\n\nQuestion: List the names of the students who have registered for a specific course.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id WHERE T3.course_id = [specific_course_id]\n\nQuestion: Show the names of the students who have transcripts.\nAnswer: SELECT first_name ,  last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\nAnswer: ", "c7c0b9dc128cd86226ea1329": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Read out the capital of Angola.\nPredicted SQL: SELECT city FROM Addresses WHERE country = 'Angola' AND other_address_details LIKE '%capital%'\nAnswer: ", "8bd9dced1a1b8fb133ae000c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: List the names and birth dates of people in ascending alphabetical order of name.\nPredicted SQL: SELECT Name, Birth_Date FROM people ORDER BY Name ASC\nAnswer: ", "a86ddb923e1b7af244249aa8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show name of all students who have some friends and also are liked by someone else.\nPredicted SQL: SELECT DISTINCT H1.name \nFROM Highschooler AS H1 \nJOIN Friend AS F ON H1.ID = F.student_id \nJOIN Likes AS L ON H1.ID = L.student_id\nAnswer: ", "afbba10f521908c63fefab52": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the name of the conductor who has conducted the most orchestras?\nPredicted SQL: SELECT Name FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(Orchestra_ID) DESC LIMIT 1)\nAnswer: ", "7271f78b0c088e8542f94b0f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How many dogs have not gone through any treatment?\nPredicted SQL: SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments)\nAnswer: ", "0a0c62ee3eabd3acaa530838": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are each owner's first name, last name, and the size of their dog?\nPredicted SQL: SELECT O.first_name, O.last_name, S.size_description\nFROM Owners O\nJOIN Dogs D ON O.owner_id = D.owner_id\nJOIN Sizes S ON D.size_code = S.size_code\nAnswer: ", "8a6662d216b4e8ba650c3f94": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the average grade of high schoolers in math?\nPredicted SQL: SELECT avg(grade) FROM student_enrolment_courses WHERE course_id = (SELECT course_id FROM courses WHERE course_name = \"Math\")\nAnswer: ", "26815cef5927ea4d1f7305f8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the names of all the countries that became independent after 1950?\nPredicted SQL: SELECT Name FROM country WHERE IndepYear > 1950\n\nQuestion: List the names of the cities in the country with the highest population.\nAnswer: SELECT Name FROM city WHERE CountryCode = (SELECT Code FROM country ORDER BY Population DESC LIMIT 1)\n\nQuestion: Find the percentage of official languages in each country.\nAnswer: SELECT CountryCode, SUM(Percentage) FROM countrylanguage WHERE IsOfficial = 'T' GROUP BY CountryCode\n\nQuestion: What is the average life expectancy of countries in each continent?\nAnswer: SELECT Continent, AVG(LifeExpectancy) FROM country GROUP BY Continent\n\nQuestion: List the names of countries where the head of state is a monarch.\nAnswer: SELECT Name FROM country WHERE GovernmentForm LIKE '%monarch%'\n\nQuestion: Find the country with the highest GNP.\nAnswer: SELECT Name FROM country ORDER BY GNP DESC LIMIT 1\n\nQuestion: List the names of countries where English is an official language.\nAnswer: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')\nAnswer: ", "bd946edc9267785a7505c28a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Return the names and surface areas of the 5 largest countries.\nPredicted SQL: SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\nQuestion: List the names of the countries in Europe with a population greater than 50 million.\nAnswer: SELECT Name FROM country WHERE Continent = 'Europe' AND Population > 50000000\n\nQuestion: Find the country with the highest life expectancy.\nAnswer: SELECT Name FROM country ORDER BY LifeExpectancy DESC LIMIT 1\n\nQuestion: List the names of the countries where English is an official language.\nAnswer: SELECT Name FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T'\n\nQuestion: Find the country with the highest GNP.\nAnswer: SELECT Name FROM country ORDER BY GNP DESC LIMIT 1\n\nQuestion: List the names of the countries in Asia with a population greater than 100 million.\nAnswer: SELECT Name FROM country WHERE Continent = 'Asia' AND Population > 100000000\n\nQuestion: Find the country with the highest percentage of official languages.\nAnswer: SELECT Name FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1\n\nQuestion: List the names of the countries where Spanish is an official language.\nAnswer: SELECT Name FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'\nAnswer: ", "25be0ae80dba4671c2c051b3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Assess the sentiment of reactions to episodes of \"Music Box Italia\" using online reviews.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "5d822ec4dab708e2989a7a95": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: List the final tables made and the best finishes of poker players.\nPredicted SQL: SELECT Final_Table_Made, Best_Finish FROM poker_player\nAnswer: ", "e2c71f20bab0198ace3e2ba1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many official languages are spoken in Afghanistan?\nPredicted SQL: SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AF' AND IsOfficial = 'T'\nAnswer: ", "d6435a10413fa440e93398fd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Translate the list of poker players' names and nationalities into French.\nPredicted SQL: SELECT T1.first_name ,  T1.last_name ,  T1.nationality FROM students AS T1 JOIN people AS T2 ON T1.student_id = T2.person_id WHERE T2.nationality = \"French\"\nAnswer: ", "f940e053662f7085c56fd641": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Create a short biography for the oldest singer, including their name, birth year, citizenship, and net worth.\nPredicted SQL: SELECT T1.first_name, T1.last_name, (YEAR(CURRENT_DATE) - T1.birth_year) AS age, T1.citizenship, T1.net_worth\nFROM singers AS T1\nORDER BY age DESC\nLIMIT 1\nAnswer: ", "81e6a93d0acce672ca5817f4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the recent news articles related to dog ownership?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "217069ae533005e63bdcb57e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which country has the highest population of people in their 20s, and what percentage is it?\nPredicted SQL: SELECT country, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Students WHERE age BETWEEN 20 AND 29) AS percentage\nFROM Students\nWHERE age BETWEEN 20 AND 29\nGROUP BY country\nORDER BY COUNT(*) DESC\nLIMIT 1\nAnswer: ", "6f9af87be31ddeb07a196373": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Count the total number of faculties.\nPredicted SQL: SELECT count(*) FROM Departments\nAnswer: ", "238b4ca687d67a26f4aa4b4b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the average lake size among the contestants?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "0d050b39bfadc78623d8324c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".\nPredicted SQL: SELECT Episode FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')\nAnswer: ", "fd81898606cc3edc906cafed": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.\nPredicted SQL: SELECT last_name FROM students AS s\nJOIN addresses AS a ON s.current_address_id = a.address_id\nWHERE a.state_province_county = 'North Carolina'\nAND s.student_id NOT IN (SELECT student_id FROM student_enrolment)\nAnswer: ", "759075cda7b560d34ae55d46": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the number of high schoolers for each grade.\nPredicted SQL: SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade\nAnswer: ", "8de14a51f5c28ee7f6605f36": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the zip code of the address in the city Port Chelsea?\nPredicted SQL: SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea' \n\nQuestion: List the names of the departments and their descriptions.\nAnswer: SELECT department_name, department_description FROM departments\n\nQuestion: How many students are enrolled in the degree program with the id 5?\nAnswer: SELECT COUNT(*) FROM student_enrolment WHERE degree_program_id = 5\n\nQuestion: Show the course names and descriptions for the courses in the section with id 10.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM sections WHERE section_id = 10)\n\nQuestion: What is the semester name and description for the semester with id 3?\nAnswer: SELECT semester_name, semester_description FROM semesters WHERE semester_id = 3\n\nQuestion: List the student names and email addresses for students who have left the program.\nAnswer: SELECT first_name, email_address FROM students WHERE date_left IS NOT NULL\n\nQuestion: Show the course names for the courses in which student with id 7 is enrolled.\nAnswer: SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 7))\n\nQuestion: What is the transcript date for the transcript with id 15?\nAnswer: SELECT transcript_date FROM transcripts WHERE transcript_id = 15\nAnswer: ", "3151cc708df0baade5bf0593": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?\nPredicted SQL: SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 2)\nAnswer: ", "5b875623975ec50a956cd934": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Create a bar chart to visualize the distribution of contestants by state.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "ed4296be31e0d1cfc7876d82": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Find any unusual pricing patterns in the properties table.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "5ef53daa6cc2cc23d7bc4e33": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the number of cartoones written by Joseph Kuhr?\nPredicted SQL: SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'\nAnswer: ", "5ba8c4424cc9cabe5478d2fb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the names of orchestras with more than 30 members?\nPredicted SQL: SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id GROUP BY T1.department_name HAVING count(*) > 30\nAnswer: ", "91ddcc65c38722128c5d825b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Find the semester when both Master students and Bachelor students got enrolled in.\nPredicted SQL: SELECT semester_name \nFROM Semesters \nWHERE semester_id IN (\n    SELECT semester_id \n    FROM Student_Enrolment \n    WHERE degree_program_id IN (\n        SELECT degree_program_id \n        FROM Degree_Programs \n        WHERE degree_summary_name IN ('Master', 'Bachelor')\n    )\n    GROUP BY semester_id \n    HAVING COUNT(DISTINCT degree_program_id) = 2\n)\nAnswer: ", "e676a7b586323cf8ed18b9fe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Identify important factors that influence the official ratings.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "ea54e29a7eac8e498b4db853": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many departments offer any degree?\nPredicted SQL: SELECT count(*) FROM Departments WHERE department_id IN (SELECT department_id FROM Degree_Programs)\nAnswer: ", "3bb4d51302049bd03d1af725": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Give the name of the student with the most likes.\nPredicted SQL: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)\nAnswer: ", "529eedaaa25d8edb98c55ff9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What determines the market value of a home?\nPredicted SQL: The market value of a home is determined by the agreed_selling_price in the Properties table.\nAnswer: ", "8b0b891c80fdcdbb03764915": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the homepage of Hungary?\nPredicted SQL: SELECT line_1 FROM Addresses WHERE country = 'Hungary'\nAnswer: ", "d8fa1557d41d06bfe00b345b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.\nPredicted SQL: SELECT first_name, middle_name, last_name, student_id \nFROM Students \nWHERE student_id IN (\n    SELECT student_id \n    FROM Student_Enrolment \n    GROUP BY student_id, semester_id \n    HAVING COUNT(DISTINCT degree_program_id) = 2\n)\nAnswer: ", "6e6c75bc2b74932578d13260": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the total surface area covered by countries in Asia or Europe.\nPredicted SQL: SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')\nAnswer: ", "684b7f08265755578132bb00": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Which property has the highest down payment?\nPredicted SQL: SELECT line_1,line_2,line_3,city,zip_postcode,state_province_county,country FROM addresses ORDER BY down_payment DESC LIMIT 1\nAnswer: ", "458b13f676b0141bdc6f9f25": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the first name of the student whose permanent address is different from his or her current one?\nPredicted SQL: SELECT first_name FROM students WHERE permanent_address_id <> current_address_id\n\nQuestion: List the course names and descriptions for the courses enrolled by student with id 123.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 123))\n\nQuestion: Find the department names of the degree programs enrolled by student with id 456.\nAnswer: SELECT department_name FROM departments WHERE department_id IN (SELECT department_id FROM degree_programs WHERE degree_program_id IN (SELECT degree_program_id FROM student_enrolment WHERE student_id = 456))\n\nQuestion: List the student names and email addresses for students enrolled in the semester with id 789.\nAnswer: SELECT first_name, email_address FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE semester_id = 789)\n\nQuestion: Find the transcript dates for the student with id 789.\nAnswer: SELECT transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents WHERE student_course_id IN (SELECT student_course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 789)))\n\nQuestion: List the course names and descriptions for the courses enrolled by student with id 123 in the semester with id 456.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 123 AND semester_id = 456))\n\nQuestion: Find the student names and email addresses for students enrolled in the degree program with id 789.\nAnswer: SELECT first_name, email_address FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 789)\n\nQuestion: List the department names and descriptions for the departments of the degree programs enrolled by student with id 456.\nAnswer: SELECT department_name, department_description FROM departments WHERE department_id IN (SELECT department_id FROM degree_programs WHERE degree_program_id IN (SELECT degree_program_id FROM student_enrolment WHERE student_id = 456))\nAnswer: ", "333b9a8468261a47580485c9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Please show the most common citizenship of singers.\nPredicted SQL: SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1\nAnswer: ", "9ad120ac68504814bd37c9ae": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What impacts population growth in cities?\nPredicted SQL: SELECT city.Name, city.Population, country.Name, country.Population, countrylanguage.Language, countrylanguage.Percentage\nFROM city\nJOIN country ON city.CountryCode = country.Code\nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode\nWHERE countrylanguage.IsOfficial = 'T'\nORDER BY city.Population DESC, country.Population DESC, countrylanguage.Percentage DESC\nAnswer: ", "8f762a77fcd71d62e989234f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which language is spoken by the largest number of countries?\nPredicted SQL: SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1\n\nQuestion: What is the average population of countries in each continent?\nAnswer: SELECT Continent, AVG(Population) FROM country GROUP BY Continent\n\nQuestion: List the names of countries where the official language is English.\nAnswer: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')\n\nQuestion: What is the total population of countries where the head of state is a monarch?\nAnswer: SELECT SUM(Population) FROM country WHERE GovernmentForm LIKE '%monarch%'\n\nQuestion: List the names of countries where the capital city has a population greater than 1 million.\nAnswer: SELECT Name FROM country WHERE Capital IN (SELECT ID FROM city WHERE Population > 1000000)\n\nQuestion: What is the average life expectancy of countries in each region?\nAnswer: SELECT Region, AVG(LifeExpectancy) FROM country GROUP BY Region\n\nQuestion: List the names of countries where the percentage of the official language is greater than 50%.\nAnswer: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND Percentage > 50)\n\nQuestion: What is the total surface area of countries in each continent?\nAnswer: SELECT Continent, SUM(SurfaceArea) FROM country GROUP BY Continent\nAnswer: ", "b7c2c9c5e242ff0d3a49375c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Who owns the youngest dog? Give me his or her last name.\nPredicted SQL: SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs WHERE age = (SELECT MIN(age) FROM dogs))\nAnswer: ", "70a2a6caba26fd6e1bc7107c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many transcripts are listed?\nPredicted SQL: SELECT count(*) FROM transcripts\n\nQuestion: List the names of students who have enrolled in the degree program with id 5.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T2.degree_program_id  =  5\n\nQuestion: What is the description of the semester with id 3?\nAnswer: SELECT semester_description FROM semesters WHERE semester_id = 3\n\nQuestion: List the course names and descriptions for the courses in which student with id 10 is enrolled.\nAnswer: SELECT T2.course_name ,  T2.course_description FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.course_id WHERE T1.student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 10)\n\nQuestion: How many students are enrolled in the department with name 'Computer Science'?\nAnswer: SELECT count(*) FROM students WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Computer Science')\n\nQuestion: List the names of students who have transcripts.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id  =  T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id  =  T4.student_course_id\n\nQuestion: What is the current address of the student with id 15?\nAnswer: SELECT line_1 ,  line_2 ,  city ,  zip_postcode ,  state_province_county ,  country FROM addresses WHERE address_id = (SELECT current_address_id FROM students WHERE student_id = 15)\n\nQuestion: List the course names and descriptions for the courses in which student with id 20 is enrolled.\nAnswer: SELECT T2.course_name ,  T2.course_description FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.course_id WHERE T1.student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 20)\nAnswer: ", "605515c66d74716c5620424a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the aircraft of the conductors?\nPredicted SQL: This question cannot be answered with the given tables as there is no table related to aircraft or conductors.\nAnswer: ", "379517826180ddf4088009e4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the name of the singer who is worth the most?\nPredicted SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\nQuestion: List the titles of the songs with sales greater than 1 million.\nAnswer: SELECT Title FROM song WHERE Sales > 1000000\n\nQuestion: Find the citizenship of the singer with the highest position song.\nAnswer: SELECT Citizenship FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM song ORDER BY Highest_Position DESC LIMIT 1)\n\nQuestion: List the names of the singers born after 1990.\nAnswer: SELECT Name FROM singer WHERE Birth_Year > 1990\n\nQuestion: What is the net worth of the singer who sang the song with the highest sales?\nAnswer: SELECT Net_Worth_Millions FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM song ORDER BY Sales DESC LIMIT 1)\nAnswer: ", "71a100d5be58dfe436967921": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the maximum and minimum share of performances whose type is not \"Live final\".\nPredicted SQL: SELECT MAX(share), MIN(share) FROM performance WHERE type <> 'Live final'\nAnswer: ", "98e29983ff6b0cf918523cd5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Show distinct names of singers that have songs with sales more than 300000.\nPredicted SQL: SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)\nAnswer: ", "fcad8557ceac9a999547018d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Visualize the geographic distribution of votes across different states.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "16314ed5cf705eb15d274ff0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the names of the singers who are not French citizens?\nPredicted SQL: SELECT Name FROM singer WHERE Citizenship <> 'French'\nAnswer: ", "77d8fdbc380966937635dbc9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Translate the biographies of the top 5 poker players by earnings from English into Spanish.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "4a119c830d5c3e10b33c3797": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: How many unique voting methods are there?\nPredicted SQL: SELECT COUNT(DISTINCT voting_method) FROM voting_methods\nAnswer: ", "cbdfff22423e41037b32aebf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which professionals have done at least two treatments? List the professional's id, role, and first name.\nPredicted SQL: SELECT professional_id, role_code, first_name FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2\nAnswer: ", "a3b85b594f05c1483d43c34c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: List the years when the record companies were founded.\nPredicted SQL: SELECT EXTRACT(YEAR FROM transcript_date) FROM transcripts\nAnswer: ", "508cd5edb53b373e45b5a168": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: How many properties were built prior to 2000?\nPredicted SQL: SELECT count(*) FROM Addresses WHERE year_built < 2000\nAnswer: ", "01635f8f99557dcf0842e068": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Translate the official language of Aruba into Dutch.\nPredicted SQL: SELECT line_1 FROM addresses WHERE country = 'Aruba' AND other_address_details = 'official language: Dutch'\nAnswer: ", "beb83acdcf53aac74a448188": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the episode and air date of the TV series with the highest Rotten Tomatoes rating?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "0b62271d45ab5f8cfdb25489": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Which singer has the manager with the most net worth?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "7e63e64454fa6c01c7876cfc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the name of the high school student who got the highest math grade?\nPredicted SQL: SELECT T1.first_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN courses AS T4 ON T3.course_id = T4.course_id \nWHERE T4.course_name = \"Math\" \nORDER BY T4.grade DESC \nLIMIT 1\nAnswer: ", "63c8b97fd061f3bb4006b17d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What causes economic disparity between continents?\nPredicted SQL: SELECT Continent, sum(GNP) FROM country GROUP BY Continent ORDER BY sum(GNP) DESC\n\nQuestion: Show the names of countries with a population greater than 100 million.\nAnswer: SELECT Name FROM country WHERE Population > 100000000\n\nQuestion: Show the names of cities with a population greater than 1 million.\nAnswer: SELECT Name FROM city WHERE Population > 1000000\n\nQuestion: Show the names of countries with a life expectancy greater than 80.\nAnswer: SELECT Name FROM country WHERE LifeExpectancy > 80\n\nQuestion: Show the names of countries where English is an official language.\nAnswer: SELECT Name FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T'\n\nQuestion: Show the names of countries in the region of Europe.\nAnswer: SELECT Name FROM country WHERE Region = 'Europe'\n\nQuestion: Show the names of countries with a government form of Republic.\nAnswer: SELECT Name FROM country WHERE GovernmentForm = 'Republic'\n\nQuestion: Show the names of countries with a capital city that has a population greater than 1 million.\nAnswer: SELECT Name FROM country WHERE Capital IN (SELECT Name FROM city WHERE Population > 1000000)\nAnswer: ", "e70962ed3c524e6efbc75a78": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: List the earnings of poker players in descending order.\nPredicted SQL: SELECT Earnings FROM poker_player ORDER BY Earnings DESC\nAnswer: ", "1b8d087e03ed1a9704fa7ef7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the average age of all the dogs?\nPredicted SQL: SELECT AVG(age) FROM Dogs\nAnswer: ", "65cc1d8be3a1d1efa25a0c11": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Find the loudest student.\nPredicted SQL: SELECT first_name, last_name FROM students ORDER BY cell_mobile_number DESC LIMIT 1\nAnswer: ", "bf72c8e81ca8765677e44a6c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the lowest grade of students who do not have any friends?\nPredicted SQL: SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\nAnswer: ", "2fb9386cb567b066a75b1ce9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the names of students who have no friends?\nPredicted SQL: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\nAnswer: ", "103d299d5104ae9ea23065b7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Group TV series by similarity in 'rating' and 'share'.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "06f142593803e1762ccb4eb4": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What impact does technology have on orchestral performances?\nPredicted SQL: SELECT T2.Orchestra, T3.Type, T3.Date, T3.Official_ratings_(millions), T3.Weekly_rank, T3.Share FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T2.Major_Record_Format = \"Technology\"\nAnswer: ", "c4faeec204e8c3c0340e1662": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Generate a pie chart representing the proportion of students in each grade.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "d9d8e841b3367edc797815e5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Count the number of dogs with microchips.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "e5720131742e36f24f3127f2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Count the number of poker players.\nPredicted SQL: SELECT COUNT(*) FROM poker_player\nAnswer: ", "24d58bacadcee6a227261edf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Retrieve recent news articles about poker players with the most common nationality in the database.\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about poker players or their nationality.\nAnswer: ", "dec89d1a8d1e2acdd391a25c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Which political party is Maksim Botin affiliated with?\nPredicted SQL: SELECT party FROM driver WHERE name = 'Maksim Botin'\n\nQuestion: List the names of all students who have enrolled in the Computer Science degree program.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.department_id = 'Computer Science'\n\nQuestion: Show the course names for all students enrolled in the Fall 2021 semester.\nAnswer: SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id JOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN semesters AS T4 ON T3.semester_id = T4.semester_id WHERE T4.semester_name = 'Fall 2021'\n\nQuestion: List the names of all students who have transcripts.\nAnswer: SELECT T1.first_name ,  T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id\n\nQuestion: Show the department names for all students enrolled in the Spring 2022 semester.\nAnswer: SELECT T2.department_name FROM student_enrolment AS T1 JOIN degree_programs AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN departments AS T3 ON T2.department_id = T3.department_id JOIN semesters AS T4 ON T1.semester_id = T4.semester_id WHERE T4.semester_name = 'Spring 2022'\n\nQuestion: List the names of all students who have left the university.\nAnswer: SELECT first_name ,  last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: Show the course descriptions for all students enrolled in the Computer Science degree program.\nAnswer: SELECT T1.course_description FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id JOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN degree_programs AS T4 ON T3.degree_program_id = T4.degree\nAnswer: ", "05d968d49045e816934e3dd2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the names of all sponsors of the poker players.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "7ea6b90464fe500d43e53efb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the arriving date and the departing date of the dogs that received a treatment.\nPredicted SQL: SELECT date_arrived, date_departed FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)\nAnswer: ", "39f1fb96afcbdcd89ebbc26f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: List the first citizenships of the singers.\nPredicted SQL: SELECT T1.country FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.department_id = \"Singers\"\nAnswer: ", "b5d7b3061d69de7a063a8fc6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.\nPredicted SQL: SELECT c.Name, COUNT(cl.Language) AS Num_Languages \nFROM country c \nJOIN countrylanguage cl ON c.Code = cl.CountryCode \nGROUP BY c.Name \nHAVING COUNT(cl.Language) >= 3\nAnswer: ", "15601201bf230cdb1c2ac98e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the password of Cha Cha Slide?\nPredicted SQL: SELECT T1.other_details FROM courses AS T1 WHERE T1.course_name = \"Cha Cha Slide\"\nAnswer: ", "753c948d84590a2557c68c8d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the average age of the dogs who have gone through any treatments?\nPredicted SQL: SELECT avg(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)\nAnswer: ", "d95045b436149b3cfadf104b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Name all high schoolers whose hometown is NY.\nPredicted SQL: SELECT first_name, last_name FROM students WHERE middle_name IS NULL AND current_address_id IN (SELECT address_id FROM addresses WHERE city = 'NY')\nAnswer: ", "80329f488b977cff285fab01": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What are the traits that made Freddie Mercury stand out?\nPredicted SQL: SELECT * FROM singer WHERE Name = 'Freddie Mercury'\nAnswer: ", "35cf87fda563c3e2d0cbab3d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the first names that are used for professionals or owners but are not used as dog names.\nPredicted SQL: SELECT first_name FROM (SELECT first_name FROM professionals UNION SELECT first_name FROM owners) AS T1 WHERE first_name NOT IN (SELECT name FROM dogs)\nAnswer: ", "d625b9676d59fd6cd3d01fd1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are all of the episodes ordered by ratings?\nPredicted SQL: SELECT Episode FROM TV_series ORDER BY Rating DESC\n\nQuestion: List the titles of cartoons that were directed by 'John Smith'.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = 'John Smith'\n\nQuestion: Which TV series have the highest number of viewers?\nAnswer: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series ORDER BY Viewers_m DESC LIMIT 1)\n\nQuestion: List the titles of cartoons that were written by 'Jane Doe' and aired on 'ABC' channel.\nAnswer: SELECT Title FROM Cartoon WHERE Written_by = 'Jane Doe' AND Channel = (SELECT id FROM TV_Channel WHERE series_name = 'ABC')\n\nQuestion: What is the average rating of TV series aired on channels with 'Hight definition TV' option?\nAnswer: SELECT avg(Rating) FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE Hight_definition_TV = 'Yes')\n\nQuestion: List the titles of cartoons that were produced in the country 'USA' and have a rating above 8.\nAnswer: SELECT Title FROM Cartoon WHERE Country = 'USA' AND id IN (SELECT Channel FROM TV_series WHERE Rating > 8)\n\nQuestion: Which TV series have the highest weekly rank?\nAnswer: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series ORDER BY Weekly_Rank DESC LIMIT 1)\n\nQuestion: List the titles of cartoons that have a production code starting with 'PC' and were aired in the language 'English'.\nAnswer: SELECT Title FROM Cartoon WHERE Production_code LIKE 'PC%' AND Channel IN (SELECT id FROM TV_Channel WHERE Language = 'English')\nAnswer: ", "51a0ad21d9ca72f57226d2fa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the gender of the owner of the dog Kacey?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "5bb6d1c7fc69b13dd270382d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the total population and maximum GNP in Asia?\nPredicted SQL: SELECT sum(Population), max(GNP) FROM country WHERE Continent = 'Asia'\nAnswer: ", "cac2a4df46f16b20084d65c2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Show the courses offered by the countries in Asia.\nPredicted SQL: SELECT T2.course_name FROM addresses AS T1 JOIN students AS T2 ON T1.country = \"Asia\" JOIN student_enrolment_courses AS T3 ON T2.student_id = T3.student_id JOIN courses AS T4 ON T3.course_id = T4.course_id\nAnswer: ", "137a19d1f8c5ff0ab056ccb3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the average weight of people taller than 185cm?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about people's weight or height.\nAnswer: ", "3d031674101741dd754a94b1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What's the best-known poker tournament?\nPredicted SQL: SELECT MAX(Best_Finish) FROM poker_player\n\nQuestion: Show the names of poker players who have made it to the final table.\nAnswer: SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player WHERE Final_Table_Made = 'Yes')\n\nQuestion: Show the names of poker players who have earned more than $1 million.\nAnswer: SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player WHERE Earnings > 1000000)\n\nQuestion: Show the names of poker players who have a height greater than 6 feet.\nAnswer: SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Height > 6)\n\nQuestion: Show the names of poker players who have a birth date after 1990.\nAnswer: SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Birth_Date > '1990-01-01')\nAnswer: ", "6ffd8501f622b3760234b693": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?\nPredicted SQL: SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\nAnswer: ", "a32f0969743d112c8c8ff85c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the average weight of the owner who owns Husky?\nPredicted SQL: This question cannot be answered with the given tables as there is no information about weight or ownership of Husky.\nAnswer: ", "1d09fd52a8da57797a4df5bb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Find the government form name and total population for each government form whose average life expectancy is longer than 72.\nPredicted SQL: SELECT GovernmentForm, SUM(Population) FROM country WHERE GovernmentForm IN (SELECT GovernmentForm FROM country WHERE LifeExpectancy > 72) GROUP BY GovernmentForm\nAnswer: ", "85496d2797caef45dfcb6357": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Return the names of the 3 most populated countries.\nPredicted SQL: SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\nQuestion: List the names of the countries in Europe with a population greater than 50 million.\nAnswer: SELECT Name FROM country WHERE Continent = 'Europe' AND Population > 50000000\n\nQuestion: Find the country with the highest life expectancy.\nAnswer: SELECT Name FROM country ORDER BY LifeExpectancy DESC LIMIT 1\n\nQuestion: List the names of the countries where English is an official language.\nAnswer: SELECT Name FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T'\n\nQuestion: Find the country with the highest GNP.\nAnswer: SELECT Name FROM country ORDER BY GNP DESC LIMIT 1\n\nQuestion: List the names of the countries in Asia with a population greater than 100 million.\nAnswer: SELECT Name FROM country WHERE Continent = 'Asia' AND Population > 100000000\n\nQuestion: Find the country with the lowest life expectancy.\nAnswer: SELECT Name FROM country ORDER BY LifeExpectancy ASC LIMIT 1\n\nQuestion: List the names of the countries where Spanish is an official language.\nAnswer: SELECT Name FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T'\nAnswer: ", "ea259a4c39ba11411ab9177c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Return the owner id, first name and last name of the owner who has the most dogs.\nPredicted SQL: SELECT owner_id, first_name, last_name \nFROM Owners \nWHERE owner_id IN (SELECT owner_id \n                   FROM Dogs \n                   GROUP BY owner_id \n                   ORDER BY COUNT(*) DESC \n                   LIMIT 1)\nAnswer: ", "8275312528170a9ffcb8a226": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the id of the semester that had both Masters and Bachelors students enrolled?\nPredicted SQL: SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name IN ('Masters', 'Bachelors')) GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) = 2\n\nQuestion: List the names of the students who have enrolled in the course 'Computer Science'.\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment_Courses WHERE course_id IN (SELECT course_id FROM Courses WHERE course_name = 'Computer Science')))\n\nQuestion: What are the names of the students who have enrolled in more than one course?\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment_Courses GROUP BY student_enrolment_id HAVING COUNT(course_id) > 1))\n\nQuestion: List the course names and descriptions for the courses that have students enrolled in the current semester.\nAnswer: SELECT course_name, course_description FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment WHERE semester_id = (SELECT semester_id FROM Semesters WHERE semester_name = 'current')))\n\nQuestion: How many students are enrolled in the semester 'Fall 2021'?\nAnswer: SELECT COUNT(student_id) FROM Student_Enrolment WHERE semester_id = (SELECT semester_id FROM Semesters WHERE semester_name = 'Fall 2021')\n\nQuestion: List the names of the students who have left the university.\nAnswer: SELECT first_name, last_name FROM Students WHERE date_left IS NOT NULL\n\nQuestion: What are the addresses of the students who have enrolled in the course 'Mathematics'?\nAnswer: SELECT line_1, city, zip_postcode, state_province_county, country FROM Addresses WHERE address_id IN (SELECT current_address_id FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment_Courses WHERE course_id IN (SELECT course_id FROM Courses WHERE course_name = 'Mathematics'))))\n\nQuestion: List the names of the students who have transcripts.\nAnswer: SELECT first_name, last\nAnswer: ", "f16f323eaa50f49b38c892cb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: How many people are there of each nationality?\nPredicted SQL: SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality\n\nQuestion: List the names of poker players who have made it to the final table.\nAnswer: SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Final_Table_Made = 'Yes'\n\nQuestion: What is the best finish of the poker player named 'John Doe'?\nAnswer: SELECT Best_Finish FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Name = 'John Doe'\n\nQuestion: List the names of poker players who have earnings greater than $1 million.\nAnswer: SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Earnings > 1000000\n\nQuestion: How many poker players have a money rank of 1?\nAnswer: SELECT COUNT(*) FROM poker_player WHERE Money_Rank = 1\nAnswer: ", "253da0477a1404be0798916a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Provide a plain text description of the characteristics of the top three most populous cities.\nPredicted SQL: SELECT city, COUNT(*) AS population FROM addresses GROUP BY city ORDER BY population DESC LIMIT 3\nAnswer: ", "a7ecb1b2cf3bc2f3fd2f25eb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Find the name, population and expected life length of asian country with the largest area?\nPredicted SQL: SELECT c.Name, c.Population, c.LifeExpectancy \nFROM country c \nWHERE c.Continent = 'Asia' \nORDER BY c.SurfaceArea DESC \nLIMIT 1\nAnswer: ", "6d5e53bc54abff052e66a9b5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Cluster cartoons based on 'directed_by', 'written_by', and 'original_air_date' in the Cartoon table.\nPredicted SQL: This question seems to be related to a different set of tables. Could you please provide the correct question related to the tables provided in the prompt?\nAnswer: ", "6f9a71b9563674e3eaef1c78": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: How many cartoons did each director create?\nPredicted SQL: SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by\n\nQuestion: List the series names and countries of the TV channels that have high definition TV.\nAnswer: SELECT series_name, Country FROM TV_Channel WHERE Hight_definition_TV = 'Yes'\n\nQuestion: What is the average rating of TV series aired on channels with pay per view option?\nAnswer: SELECT AVG(Rating) FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: List the titles of cartoons that were written by the same person who directed them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: Which TV series have the highest number of viewers?\nAnswer: SELECT id, Viewers_m FROM TV_series ORDER BY Viewers_m DESC LIMIT 1\n\nQuestion: List the TV channels that air cartoons directed by the same person who wrote them.\nAnswer: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Directed_by = Written_by)\nAnswer: ", "7680915b149ffa2861dc4d08": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Count the number of current addresses for the departments.\nPredicted SQL: SELECT department_name, count(current_address_id) FROM departments JOIN students ON departments.department_id = degree_programs.department_id GROUP BY department_name\n\nQuestion: List the names of students who have enrolled in the most number of courses.\nAnswer: SELECT first_name, last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id GROUP BY students.student_id ORDER BY count(*) DESC LIMIT 1\n\nQuestion: Show the course names and descriptions for all sections.\nAnswer: SELECT course_name, course_description FROM courses JOIN sections ON courses.course_id = sections.course_id\n\nQuestion: List the names of students who have transcripts.\nAnswer: SELECT first_name, last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id JOIN transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id\n\nQuestion: Show the names of students who have left the program.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: List the names of students who have not registered for any courses.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id NOT IN (SELECT student_id FROM student_enrolment)\n\nQuestion: Show the names of students who have enrolled in courses for a specific semester.\nAnswer: SELECT first_name, last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id WHERE semester_id = [specific semester id]\n\nQuestion: Count the number of students enrolled in each degree program.\nAnswer: SELECT degree_summary_name, count(student_id) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name\nAnswer: ", "3df9764059a63ab8cf30ddc7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find images of dogs that are Medium in size.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "b2af76f10796e22b671cf1db": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Count the number of countries for which Spanish is the predominantly spoken language.\nPredicted SQL: SELECT COUNT(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50\nAnswer: ", "9d33ecc51e7db4e3198f9b3d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which African countries have a smaller population than that of any country in Asia?\nPredicted SQL: SELECT c1.Name \nFROM country c1 \nWHERE c1.Continent = 'Africa' \nAND c1.Population < ALL \n(SELECT c2.Population \nFROM country c2 \nWHERE c2.Continent = 'Asia')\nAnswer: ", "071ef906a237ebdb4c478d5d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the average attendance capacity for all the shows?\nPredicted SQL: SELECT avg(attendance_capacity) FROM shows\nAnswer: ", "de7276b6e350f7432226a8e3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Which record labels are most common among the singers?\nPredicted SQL: This question cannot be answered with the given tables as there are no tables related to record labels or singers.\nAnswer: ", "325ffee793793f052db7c687": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Which semesters do not have any student enrolled? List the semester name.\nPredicted SQL: SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)\nAnswer: ", "73094616bf003ef2e6e99727": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?\nPredicted SQL: SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'\nAnswer: ", "af8ac23e7d9c3a6cb8fe2a13": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Which floor is Jessie Alloway's office on?\nPredicted SQL: SELECT line_2 FROM addresses WHERE line_1 = \"Jessie Alloway's office\"\nAnswer: ", "74ac98d5c6df15fcc7f77913": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How much surface area do the countires in the Carribean cover together?\nPredicted SQL: SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'\nAnswer: ", "187b7c1e932e3c4343128596": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the birthplace of the singer Christy Walton?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "b64e59227f9425f892aa4163": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What training methods work best for large breed dogs?\nPredicted SQL: SELECT T3.treatment_type_description FROM dogs AS T1 JOIN sizes AS T2 ON T1.size_code = T2.size_code JOIN treatment_types AS T3 ON T1.treatment_type_code = T3.treatment_type_code WHERE T2.size_description = \"large\"\nAnswer: ", "4f094b86195c1da2fd23e4f9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?\nPredicted SQL: SELECT governmentForm, SUM(population) FROM country WHERE governmentForm IN (SELECT governmentForm FROM country WHERE lifeExpectancy > 72) GROUP BY governmentForm\nAnswer: ", "8044149051352e0fa68dec8c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Return the grade for the high schooler named Kyle.\nPredicted SQL: SELECT grade FROM Highschooler WHERE name = 'Kyle'\nAnswer: ", "f9c541564d20b4cbae50492c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the mean life expectancy of countries in which English is not the official language.\nPredicted SQL: SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')\nAnswer: ", "73e15c40eb744b3844404bca": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Tell me how students support each other?\nPredicted SQL: SELECT T1.name AS student_name, T2.name AS friend_name FROM Highschooler AS T1 JOIN Friend ON T1.ID = Friend.student_id JOIN Highschooler AS T2 ON Friend.friend_id = T2.ID\n\nQuestion: List the names of students who like each other.\nAnswer: SELECT T1.name AS student_name, T2.name AS liked_name FROM Highschooler AS T1 JOIN Likes ON T1.ID = Likes.student_id JOIN Highschooler AS T2 ON Likes.liked_id = T2.ID\n\nQuestion: Show the names of students who are friends with students in the same grade.\nAnswer: SELECT T1.name AS student_name, T2.name AS friend_name FROM Highschooler AS T1 JOIN Friend ON T1.ID = Friend.student_id JOIN Highschooler AS T2 ON Friend.friend_id = T2.ID WHERE T1.grade = T2.grade\n\nQuestion: List the names of students who like students in the same grade.\nAnswer: SELECT T1.name AS student_name, T2.name AS liked_name FROM Highschooler AS T1 JOIN Likes ON T1.ID = Likes.student_id JOIN Highschooler AS T2 ON Likes.liked_id = T2.ID WHERE T1.grade = T2.grade\n\nQuestion: Show the names of students who have friends and also like someone.\nAnswer: SELECT T1.name AS student_name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend) AND T1.ID IN (SELECT student_id FROM Likes)\n\nQuestion: List the names of students who have friends but do not like anyone.\nAnswer: SELECT T1.name AS student_name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend) AND T1.ID NOT IN (SELECT student_id FROM Likes)\nAnswer: ", "d0b1ef84df6d8187231689e1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".\nPredicted SQL: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')\n\nQuestion: What is the country and language of the TV Channel that aired the most episodes?\nAnswer: SELECT Country, Language FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series GROUP BY Channel ORDER BY COUNT(*) DESC LIMIT 1)\n\nQuestion: List the titles of all Cartoons that have a higher rating than 8.\nAnswer: SELECT Title FROM Cartoon WHERE id IN (SELECT id FROM TV_series WHERE Rating > 8)\n\nQuestion: What is the average viewership of all TV series aired on channels with a pixel aspect ratio of 16:9?\nAnswer: SELECT AVG(Viewers_m) FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pixel_aspect_ratio_PAR = '16:9')\n\nQuestion: List the titles of all Cartoons that were written by the same person who directed them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: What is the average rating of all TV series aired on channels that offer pay-per-view options?\nAnswer: SELECT AVG(Rating) FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: List the titles of all Cartoons that aired on channels with high definition TV options.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Hight_definition_TV = 'Yes')\n\nQuestion: What is the total number of viewers for all TV series aired on channels with package options?\nAnswer: SELECT SUM(Viewers_m) FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE Package_Option = 'Yes')\nAnswer: ", "eff66eca9c46620065ef4807": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Tell me about the diversity of the student body.\nPredicted SQL: SELECT COUNT(DISTINCT student_id) FROM students\nAnswer: ", "ef2803e9de662b6b9c97ebb0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: How many likes does Kyle have?\nPredicted SQL: SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')\nAnswer: ", "d07c3780d6b559a88a05c65b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the name of the singer with the earliest debut year?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about singers or debut years.\nAnswer: ", "17534dff24a52f828bd92af0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What are the latest trends in home security?\nPredicted SQL: SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'HSE' ORDER BY feature_id DESC LIMIT 3\n\nQuestion: List the names and descriptions of all available property features.\nAnswer: SELECT feature_name, feature_description FROM Other_Available_Features\n\nQuestion: Show the details of properties with agreed selling price higher than vendor requested price.\nAnswer: SELECT * FROM Properties WHERE agreed_selling_price > vendor_requested_price\n\nQuestion: List the property names and addresses for properties with more than 5 rooms.\nAnswer: SELECT property_name, property_address FROM Properties WHERE room_count > 5\n\nQuestion: Show the property types and their descriptions.\nAnswer: SELECT property_type_code, property_type_description FROM Ref_Property_Types\n\nQuestion: Show the property features for properties with agreed selling price higher than buyer offered price.\nAnswer: SELECT * FROM Other_Property_Features WHERE property_id IN (SELECT property_id FROM Properties WHERE agreed_selling_price > buyer_offered_price)\n\nQuestion: List the property names and addresses for properties with room count less than 3.\nAnswer: SELECT property_name, property_address FROM Properties WHERE room_count < 3\n\nQuestion: Show the feature names and descriptions for property features.\nAnswer: SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'APT'\nAnswer: ", "832603a906777e75f2e42a90": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Find the highest performance score among the contestants.\nPredicted SQL: SELECT max(score) FROM Contestants\nAnswer: ", "a76de0116dc4b2822a13ddb7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Find the average grade of all students who have some friends.\nPredicted SQL: SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)\nAnswer: ", "dd3c0af7c27f033e8df4870f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the official language used in the country the name of whose head of state is Beatrix.\nPredicted SQL: SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix' AND IsOfficial = 'T')\nAnswer: ", "87b442b0056f6080b2fab78f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: what are all the addresses including line 1 and line 2?\nPredicted SQL: SELECT line_1, line_2 FROM addresses\n\nQuestion: List the names and descriptions of all departments.\nAnswer: SELECT department_name, department_description FROM departments\n\nQuestion: Find the course names and descriptions for all courses.\nAnswer: SELECT course_name, course_description FROM courses\n\nQuestion: Show the names and descriptions of all degree programs.\nAnswer: SELECT degree_summary_name, degree_summary_description FROM degree_programs\n\nQuestion: List the names and descriptions of all sections.\nAnswer: SELECT section_name, section_description FROM sections\n\nQuestion: What are the names and descriptions of all semesters?\nAnswer: SELECT semester_name, semester_description FROM semesters\n\nQuestion: Show the details of all student enrolments.\nAnswer: SELECT * FROM student_enrolment\n\nQuestion: List the course names for all student enrolment courses.\nAnswer: SELECT course_name FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id\n\nQuestion: Find the names and details of all students.\nAnswer: SELECT first_name, last_name, other_student_details FROM students\n\nQuestion: Show the transcript dates and other details for all transcripts.\nAnswer: SELECT transcript_date, other_details FROM transcripts\nAnswer: ", "b605f6a2bfc7ce153f78f5bf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the name of the course with the most students enrolled?\nPredicted SQL: SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY count(*) DESC LIMIT 1)\nAnswer: ", "c72560024ef9d7d66cc6f106": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the most common dog color?\nPredicted SQL: This question is not related to the tables provided.\nAnswer: ", "fa10abf4ba85a9821070cfa3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Return the codes of countries that do not speak English and do not have Republics for governments.\nPredicted SQL: SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm != 'Republic'\nAnswer: ", "2c8216122a6c857cd66f403e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the produdction code and channel of the most recent cartoon ?\nPredicted SQL: SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\nQuestion: List the series name and country of the TV series with the highest rating.\nAnswer: SELECT series_name, Country FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Rating DESC LIMIT 1)\n\nQuestion: Find the title and directed by of the cartoons aired on the channel with the highest viewership.\nAnswer: SELECT Title, Directed_by FROM Cartoon WHERE Channel = (SELECT id FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Viewers_m DESC LIMIT 1))\n\nQuestion: List the episode and air date of the TV series with the highest weekly rank.\nAnswer: SELECT Episode, Air_Date FROM TV_series WHERE Weekly_Rank = (SELECT MAX(Weekly_Rank) FROM TV_series)\n\nQuestion: What is the language and content of the TV series with the highest 18-49 rating share?\nAnswer: SELECT Language, Content FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY 18_49_Rating_Share DESC LIMIT 1)\nAnswer: ", "1e2dcd0927a329f118d0207e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the semester which most student registered in? Show both the name and the id.\nPredicted SQL: SELECT T2.semester_name, T1.semester_id \nFROM Student_Enrolment AS T1 \nJOIN Semesters AS T2 ON T1.semester_id = T2.semester_id \nGROUP BY T1.semester_id \nORDER BY COUNT(T1.student_enrolment_id) DESC \nLIMIT 1\nAnswer: ", "ea0917967539816801ca3c8e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: In what ways did Elvis Presley transform music?\nPredicted SQL: This question cannot be answered directly with the given tables. Additional tables or columns related to the transformation of music by Elvis Presley would be needed to answer this question.\nAnswer: ", "0eba640870980777f91cff98": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the names of countries that speak more than 2 languages, as well as how many languages they speak?\nPredicted SQL: SELECT Name, COUNT(Language) AS Num_Languages \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nGROUP BY Name \nHAVING COUNT(Language) > 2\nAnswer: ", "9534aa9717c79608171868e1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.\nPredicted SQL: SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)\nAnswer: ", "102be75180606dc23ea52f6f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Retrieve recent articles about \"Music Box Italia\".\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "cc7bdf3e0ee402bdef5e8fd9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the age of the youngest conductor's spouse?\nPredicted SQL: This question cannot be answered with the given tables as there is no table or column that contains information about conductors or their spouses.\nAnswer: ", "5856cbcf19cd211924f14f4e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many countries speak both English and Dutch?\nPredicted SQL: SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2\nAnswer: ", "8364ad0470b853d6d13b1f86": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What common health issues do different dog breeds face?\nPredicted SQL: SELECT T1.breed_name ,  T3.treatment_type_description FROM breeds AS T1 JOIN dogs AS T2 ON T1.breed_code = T2.breed_code JOIN treatments AS T3 ON T2.dog_id = T3.dog_id JOIN treatment_types AS T4 ON T3.treatment_type_code = T4.treatment_type_code GROUP BY T1.breed_name ,  T3.treatment_type_description\nAnswer: ", "e57eacd4c3e35519245a560d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Show different citizenships and the maximum net worth of singers of each citizenship.\nPredicted SQL: SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship\nAnswer: ", "311abc48d783288d7c0163b7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Retrieve images of Husky.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "824395c6307733eafe6bacbe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the Package Option of TV Channel with serial name \"Sky Radio\"?\nPredicted SQL: SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\"\n\nQuestion: List the titles of cartoons that were directed by the same person who wrote them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: Which TV series have a rating higher than 8 and were aired on the channel with id 5?\nAnswer: SELECT * FROM TV_series WHERE Rating > 8 AND Channel = 5\n\nQuestion: List the titles of cartoons that were aired on channels that offer Pay per View.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: What is the language of the TV series with the highest viewership?\nAnswer: SELECT Language FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Viewers_m DESC LIMIT 1)\n\nQuestion: List the TV series that have a Weekly Rank in the top 10.\nAnswer: SELECT * FROM TV_series WHERE Weekly_Rank <= 10\n\nQuestion: Which TV channels air cartoons directed by the same person who wrote them?\nAnswer: SELECT * FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Directed_by = Written_by)\nAnswer: ", "077b03447dff1649705f6deb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: How many orchestras allow pets?\nPredicted SQL: SELECT count(*) FROM Courses WHERE course_name LIKE '%orchestra%' AND other_details LIKE '%allow pets%'\nAnswer: ", "dd20b917df8ff00e603de98c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the average net worth of the managers of the singers?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "ddba6c83f5f2018696c89819": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the average datetime payment among the departments?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "2ad12efaf82dd5f4ae454fb2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.\nPredicted SQL: SELECT owner_id, zip_code \nFROM Owners \nWHERE owner_id IN (\n    SELECT owner_id \n    FROM Dogs \n    WHERE dog_id IN (\n        SELECT dog_id \n        FROM Treatments \n        GROUP BY dog_id \n        ORDER BY SUM(cost_of_treatment) DESC \n        LIMIT 1\n    )\n)\nAnswer: ", "f2f3f9d3ceaebcc0b4260524": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Return the birth date of the poker player with the lowest earnings.\nPredicted SQL: SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)\nAnswer: ", "5c46a9a5124109d4d3724366": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Predict future trends in the agreed selling prices.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "3efed486748a52f56891f73c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Identify and correct any discrepancies in the property address data.\nPredicted SQL: SELECT * FROM Addresses WHERE line_1 IS NULL OR city IS NULL OR country IS NULL\n\nQuestion: List all the courses offered in the department of Computer Science.\nAnswer: SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Sections WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Computer Science'))\n\nQuestion: Show the names of students who are enrolled in the semester named \"Fall 2021\".\nAnswer: SELECT first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE semester_id = (SELECT semester_id FROM Semesters WHERE semester_name = 'Fall 2021'))\n\nQuestion: List the names of students who have not yet left the university.\nAnswer: SELECT first_name, last_name FROM Students WHERE date_left IS NULL\n\nQuestion: Show the course names for all students enrolled in the degree program with the summary name \"Bachelor of Science in Engineering\".\nAnswer: SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment WHERE degree_program_id = (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelor of Science in Engineering')))\n\nQuestion: How many students are enrolled in the semester named \"Spring 2022\"?\nAnswer: SELECT count(*) FROM Student_Enrolment WHERE semester_id = (SELECT semester_id FROM Semesters WHERE semester_name = 'Spring 2022')\n\nQuestion: List the names of students who have their current address and permanent address in different countries.\nAnswer: SELECT first_name, last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses) AND permanent_address_id IN (SELECT address_id FROM Addresses) AND current_address_id != permanent_address_id AND country != (SELECT country FROM Addresses WHERE address_id = permanent_address_id)\n\nQuestion: Show the department names for all students enrolled in the course named \"Introduction to Computer Science\".\nAnswer: SELECT department_name FROM Departments WHERE department_id IN (SELECT department_id FROM Sections WHERE course_id = (SELECT course_id FROM Courses WHERE course_name = 'Introduction to Computer Science'))\nAnswer: ", "5defb8a1d272e984ebf4bda1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the language that is spoken in the most countries.\nPredicted SQL: SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1\n\nQuestion: List the names of countries in Europe with a population greater than 10 million.\nAnswer: SELECT Name FROM country WHERE Continent = 'Europe' AND Population > 10000000\n\nQuestion: What is the average life expectancy of countries in Asia?\nAnswer: SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia'\n\nQuestion: List the names of countries where English is an official language.\nAnswer: SELECT Name FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T'\n\nQuestion: Find the country with the highest GNP (Gross National Product).\nAnswer: SELECT Name FROM country ORDER BY GNP DESC LIMIT 1\n\nQuestion: List the names of cities in countries with a population greater than 5 million.\nAnswer: SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Population > 5000000\n\nQuestion: What is the total population of countries in Africa?\nAnswer: SELECT SUM(Population) FROM country WHERE Continent = 'Africa'\n\nQuestion: List the names of countries where the head of state is a monarch.\nAnswer: SELECT Name FROM country WHERE HeadOfState LIKE '%monarch%'\nAnswer: ", "f4543c26765a32ed682aa65b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the average earnings after tax?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "042ea2bccddee382e1f31261": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Find the most common last name among the deans of the departments.\nPredicted SQL: SELECT T2.last_name, COUNT(*) AS count FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.last_name ORDER BY count DESC LIMIT 1\n\nQuestion: List the names of students who are enrolled in the Computer Science department.\nAnswer: SELECT T3.first_name, T3.last_name FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id JOIN Student_Enrolment AS T3 ON T1.degree_program_id = T3.degree_program_id WHERE T2.department_name = \"Computer Science\"\n\nQuestion: Show the course names and descriptions for all courses in the Fall 2021 semester.\nAnswer: SELECT T2.course_name, T2.course_description FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T3 ON T1.student_enrolment_id = T3.student_enrolment_id JOIN Courses AS T2 ON T3.course_id = T2.course_id JOIN Semesters AS T4 ON T1.semester_id = T4.semester_id WHERE T4.semester_name = \"Fall 2021\"\n\nQuestion: List the names of students who have not left the program.\nAnswer: SELECT first_name, last_name FROM Students WHERE date_left IS NULL\n\nQuestion: Show the department names and descriptions for all departments.\nAnswer: SELECT department_name, department_description FROM Departments\n\nQuestion: Find the student with the most number of enrolled courses.\nAnswer: SELECT T3.first_name, T3.last_name FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN Students AS T3 ON T1.student_id = T3.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1\n\nQuestion: List the names of students who have a transcript.\nAnswer: SELECT T2.first_name, T2.last_name FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id JOIN Students AS T3 ON T2.student_id = T3.student_id\n\nQuestion: Show the course names and descriptions for all courses in the Computer Science department.\nAnswer: SELECT T2.course_name, T2.course_description FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id JOIN Student_Enrolment_C\nAnswer: ", "33dd210813cfc20791ae5d2d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the name of the series that has the episode \"A Love of a Lifetime\"?\nPredicted SQL: SELECT series_name FROM TV_series WHERE Episode = \"A Love of a Lifetime\"\nAnswer: ", "8e71f908921ab437942e6f80": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Generate an image of the top-earning poker player's career timeline using their achievements.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "c97d5daf29cbd24633cf0774": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the average GNP and total population in all nations whose government is US territory?\nPredicted SQL: SELECT avg(GNP), sum(Population) FROM country WHERE GovernmentForm = 'US territory'\nAnswer: ", "8d6b7eb7cf361fd825f84b07": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What reasons do voters have for choosing specific contestants?\nPredicted SQL: SELECT T2.contestant_name ,  T1.created FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number\nAnswer: ", "8fb28041577d276f2e549599": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Which cartoon has the latest air date for a rerun?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "cf56a43c723a5c3ce7cd849b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: How much did it rain on the birthday of Roman Bragin?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "c3261448c4255cff2ad7c90a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How many dogs went through any treatments?\nPredicted SQL: SELECT count(*) FROM Treatments\nAnswer: ", "b70b5e558f1be74067699dbc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Identify the top three significant features that influence attendance.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "ed635794d5df2083a95328c6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: List the singers who left their university after 2011.\nPredicted SQL: SELECT first_name, last_name FROM students WHERE date_left > '2011'\nAnswer: ", "79d9f5f89b618ce5ab98501d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the first and second line for all addresses?\nPredicted SQL: SELECT line_1, line_2 FROM addresses\n\nQuestion: List the course names and descriptions for all courses.\nAnswer: SELECT course_name, course_description FROM courses\n\nQuestion: Find the department names and descriptions for all departments.\nAnswer: SELECT department_name, department_description FROM departments\n\nQuestion: Show the section names and descriptions for all sections.\nAnswer: SELECT section_name, section_description FROM sections\n\nQuestion: List the semester names and descriptions for all semesters.\nAnswer: SELECT semester_name, semester_description FROM semesters\n\nQuestion: What are the degree summary names and descriptions for all degree programs?\nAnswer: SELECT degree_summary_name, degree_summary_description FROM degree_programs\n\nQuestion: Show the student names and email addresses for all students.\nAnswer: SELECT first_name, email_address FROM students\n\nQuestion: Find the course names and descriptions for all courses enrolled by students.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)\n\nQuestion: List the transcript dates and other details for all transcripts.\nAnswer: SELECT transcript_date, other_details FROM transcripts\n\nQuestion: Show the student names and cell mobile numbers for all students.\nAnswer: SELECT first_name, cell_mobile_number FROM students\nAnswer: ", "4aa646b740adb55e7020b89b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the names of the countries that are in the continent of Europe and have a population of 80000?\nPredicted SQL: SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\nQuestion: List the names of the cities in the country with the code 'USA' and a population greater than 5000000.\nAnswer: SELECT Name FROM city WHERE CountryCode = 'USA' AND Population > 5000000\n\nQuestion: What is the life expectancy of the countries in the region of 'Caribbean'?\nAnswer: SELECT LifeExpectancy FROM country WHERE Region = 'Caribbean'\n\nQuestion: List the names of the countries where English is an official language.\nAnswer: SELECT Name FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T'\n\nQuestion: What is the surface area of the countries with a population greater than 1000000?\nAnswer: SELECT SurfaceArea FROM country WHERE Population > 1000000\n\nQuestion: List the names of the countries in the continent of 'Asia' with a GNP greater than 50000.\nAnswer: SELECT Name FROM country WHERE Continent = 'Asia' AND GNP > 50000\n\nQuestion: What is the government form of the countries with a life expectancy greater than 80?\nAnswer: SELECT GovernmentForm FROM country WHERE LifeExpectancy > 80\n\nQuestion: List the names of the cities in the country with the code 'FRA' and a population less than 100000.\nAnswer: SELECT Name FROM city WHERE CountryCode = 'FRA' AND Population < 100000\nAnswer: ", "99a260fa3680ef224e4299cb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Find the building manager of \"Rock TV\".\nPredicted SQL: SELECT T1.first_name, T1.last_name \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN Courses AS T4 ON T3.course_id = T4.course_id \nWHERE T4.course_name = \"Rock TV\"\nAnswer: ", "3c85935b87d33f0ec39feb23": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the heaviest property?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "3294fed9206da1351ec671b5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the count of singers?\nPredicted SQL: SELECT COUNT(*) FROM singer\nAnswer: ", "73b7db55cae53f3750df46bf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Which country has the most of TV Channels? List the country and number of TV Channels it has.\nPredicted SQL: SELECT Country, COUNT(*) AS Number_of_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_Channels DESC LIMIT 1\n\nQuestion: List the titles of cartoons that were directed by the same person who wrote them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: What is the average rating of TV series aired on channels with 'Hight_definition_TV' option?\nAnswer: SELECT AVG(Rating) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Hight_definition_TV = 'Yes'\n\nQuestion: List the series names and viewership numbers of TV series that have more than 1 million viewers.\nAnswer: SELECT series_name, Viewers_m FROM TV_series WHERE Viewers_m > 1\n\nQuestion: Show the titles of cartoons that were aired on channels with 'Pay_per_view_PPV' option.\nAnswer: SELECT Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Pay_per_view_PPV = 'Yes'\n\nQuestion: What is the average share of TV series aired on channels with 'Package_Option'?\nAnswer: SELECT AVG(Share) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Package_Option = 'Yes'\n\nQuestion: List the series names and ratings of TV series that have a rating above 8.\nAnswer: SELECT series_name, Rating FROM TV_series WHERE Rating > 8\n\nQuestion: Show the titles of cartoons that were aired on channels with 'Language' as English.\nAnswer: SELECT Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Language = 'English'\nAnswer: ", "f96b9a81c12f4cf02cc3f074": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the card number for 2294 Grant Square Apt. 235?\nPredicted SQL: SELECT line_1, line_2, line_3 FROM Addresses WHERE line_1 = '2294 Grant Square' AND line_2 = 'Apt. 235'\nAnswer: ", "9df059ddd786e5b18a72a2b2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Identify outliers in the net worth of singers based on their birth year.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "ecbb5f58b01e2122d1a6e683": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How many owners temporarily do not have any dogs?\nPredicted SQL: SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_adopted IS NULL AND date_departed IS NULL)\nAnswer: ", "65098eb912e04ec6660e5cb7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the name of the pet with the tallest height?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "e66f824ed2ace6c209f96dbc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: List the email addresses of the students' advisors.\nPredicted SQL: SELECT T2.email_address FROM students AS T1 JOIN advisors AS T2 ON T1.advisor_id = T2.advisor_id\nAnswer: ", "34f60bef6182749d92942803": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the currency of the country with the longest life expectancy?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "529c40f0a12eeb43b05f312e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the orchestras that do not have any performances?\nPredicted SQL: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)\nAnswer: ", "70d167a93cdcdf2032380c9e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What are the latest eco-friendly building materials?\nPredicted SQL: SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = 'ECO' ORDER BY feature_id DESC LIMIT 3\n\nQuestion: List the property names and addresses with the agreed selling price.\nAnswer: SELECT property_name ,  property_address FROM Properties WHERE agreed_selling_price IS NOT NULL\n\nQuestion: Show the property names and addresses with more than 5 rooms.\nAnswer: SELECT property_name ,  property_address FROM Properties WHERE room_count  >  5\n\nQuestion: Show the property names and addresses with a buyer offered price less than the vendor requested price.\nAnswer: SELECT property_name ,  property_address FROM Properties WHERE buyer_offered_price  <  vendor_requested_price\n\nQuestion: List the property names and addresses with the agreed selling price and the property type.\nAnswer: SELECT property_name ,  property_address ,  property_type_description FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE agreed_selling_price IS NOT NULL\n\nQuestion: Show the property names and addresses with the agreed selling price and the room count.\nAnswer: SELECT property_name ,  property_address ,  room_count FROM Properties WHERE agreed_selling_price IS NOT NULL\n\nQuestion: List the property names and addresses with the agreed selling price and the features.\nAnswer: SELECT property_name ,  property_address ,  feature_name FROM Properties JOIN Other_Property_Features ON Properties.property_id = Other_Property_Features.property_id JOIN Other_Available_Features ON Other_Property_Features.feature_id = Other_Available_Features.feature_id WHERE agreed_selling_price IS NOT NULL\n\nQuestion: Show the property names and addresses with the agreed selling price and the property type.\nAnswer: SELECT property_name ,  property_address ,  property_type_description FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE agreed_selling_price IS NOT NULL\nAnswer: ", "bbf729cb98f17cc9c09440ab": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Find the city with the largest population that uses English.\nPredicted SQL: SELECT city.Name \nFROM city \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' \nORDER BY city.Population DESC \nLIMIT 1\nAnswer: ", "c593c9f3c37b49b902480139": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: How many distinct nationalities are there?\nPredicted SQL: SELECT COUNT(DISTINCT Nationality) FROM people\nAnswer: ", "537c56318aa585f7a8528791": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the cost and treatment type description of each treatment?\nPredicted SQL: SELECT cost_of_treatment, treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code\nAnswer: ", "9e7308f5026af62352698be0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the description of the treatment type that costs the least money in total?\nPredicted SQL: SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code IN (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1)\nAnswer: ", "b4f4051cb8c96389af968729": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Detect unusual patterns in song sales compared to their chart positions.\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information related to song sales or chart positions.\nAnswer: ", "ac7167276f30acd484d1f255": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the orchestras that don't allow pets?\nPredicted SQL: SELECT T1.course_name FROM courses AS T1 WHERE T1.course_id NOT IN (SELECT T2.course_id FROM student_enrolment_courses AS T2 JOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN students AS T4 ON T3.student_id = T4.student_id WHERE T4.other_student_details LIKE '%orchestra%' AND T4.other_student_details NOT LIKE '%pets%')\nAnswer: ", "092c3e133899849ddde05b40": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the average grade of students who have friends?\nPredicted SQL: SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)\nAnswer: ", "adf535d8041730b8da378f0a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?\nPredicted SQL: SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin' \n\nQuestion: List the names of the dogs that have been abandoned.\nAnswer: SELECT name FROM dogs WHERE abandoned_yn = 'Y'\n\nQuestion: How many treatments have been done for each dog? List the dog id and the count.\nAnswer: SELECT dog_id, COUNT(*) FROM treatments GROUP BY dog_id\n\nQuestion: Show the first and last names of the owners who have dogs with a weight greater than 50.\nAnswer: SELECT first_name, last_name FROM owners WHERE owner_id IN (SELECT owner_id FROM dogs WHERE weight > 50)\n\nQuestion: What is the total cost of treatments for each dog? List the dog id and the total cost.\nAnswer: SELECT dog_id, SUM(cost_of_treatment) FROM treatments GROUP BY dog_id\n\nQuestion: List the breed names of the dogs that have received treatment type 'Vaccination'.\nAnswer: SELECT breed_name FROM breeds WHERE breed_code IN (SELECT breed_code FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments WHERE treatment_type_code = 'Vaccination'))\n\nQuestion: Show the first and last names of the owners who have dogs that have been adopted.\nAnswer: SELECT first_name, last_name FROM owners WHERE owner_id IN (SELECT owner_id FROM dogs WHERE date_adopted IS NOT NULL)\n\nQuestion: How many dogs are there for each breed? List the breed code and the count.\nAnswer: SELECT breed_code, COUNT(*) FROM dogs GROUP BY breed_code\n\nQuestion: List the treatment types and their descriptions for the treatments done by professional with id 123.\nAnswer: SELECT treatment_type_code, treatment_type_description FROM treatment_types WHERE treatment_type_code IN (SELECT treatment_type_code FROM treatments WHERE professional_id = 123)\nAnswer: ", "95bf5edeae417b9b54f03fbf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What are the hottest real estate markets this year?\nPredicted SQL: SELECT property_address FROM Properties WHERE date_on_market = YEAR(CURDATE()) AND date_sold IS NULL\nAnswer: ", "db7e4ebb5584cde0ab1d3512": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What leads to economic policy success?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "e6885ad3f706569898f787d9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the names of poker players, ordered ascending by the number of final tables they have made?\nPredicted SQL: SELECT p.Name \nFROM people p \nJOIN poker_player pp ON p.People_ID = pp.People_ID \nORDER BY pp.Final_Table_Made ASC\nAnswer: ", "1912196c94bc95fcf3262d47": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What is the agency id with the highest average agreed selling price?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "47c183f50c929ae80c9ff8c9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the average horsepower of the countries?\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "536a8ce0b6878458fae23356": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Find the title and director of the cartoon that has the maximum share.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "e96bc3de898f01962d88df9d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?\nPredicted SQL: SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\"\n\nQuestion: List the series names and countries of TV channels that have high definition TV.\nAnswer: SELECT series_name, Country FROM TV_Channel WHERE Hight_definition_TV = 'Yes'\n\nQuestion: Find the original air date of the cartoon with the title \"The Adventures of Tintin\"?\nAnswer: SELECT Original_air_date FROM Cartoon WHERE Title = \"The Adventures of Tintin\"\n\nQuestion: List the titles of cartoons that are written by \"Matt Groening\"?\nAnswer: SELECT Title FROM Cartoon WHERE Written_by = \"Matt Groening\"\n\nQuestion: What is the rating of the TV series aired on the channel with the id 5?\nAnswer: SELECT Rating FROM TV_series WHERE Channel = 5\n\nQuestion: List the series names and languages of TV channels that offer pay per view.\nAnswer: SELECT series_name, Language FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes'\n\nQuestion: Find the viewership of the TV series with the title \"Breaking Bad\"?\nAnswer: SELECT Viewers_m FROM TV_series WHERE Episode = \"Breaking Bad\"\n\nQuestion: List the titles of cartoons that are directed by \"Hayao Miyazaki\"?\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = \"Hayao Miyazaki\"\nAnswer: ", "3bd780716eb8078933071a67": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the population, name and leader of the country with the largest area?\nPredicted SQL: SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)\nAnswer: ", "47d44315d3665525ccc75a48": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the maximum and minimum share for the TV series?\nPredicted SQL: SELECT max(Share), min(Share) FROM TV_series\n\nQuestion: List the titles of cartoons that were directed by the same person who wrote them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: Which TV series has the highest viewership?\nAnswer: SELECT id FROM TV_series ORDER BY Viewers_m DESC LIMIT 1\n\nQuestion: List the names of TV channels that have high definition TV.\nAnswer: SELECT series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'\n\nQuestion: What is the average rating of cartoons directed by a specific person?\nAnswer: SELECT avg(Rating) FROM Cartoon WHERE Directed_by = 'specific_person'\n\nQuestion: List the titles of TV series that have a weekly rank in the top 10.\nAnswer: SELECT Episode FROM TV_series WHERE Weekly_Rank <= 10\n\nQuestion: Which TV channel has the most number of TV series?\nAnswer: SELECT id FROM TV_Channel GROUP BY id ORDER BY count(*) DESC LIMIT 1\n\nQuestion: List the titles of cartoons that were aired on a specific date.\nAnswer: SELECT Title FROM Cartoon WHERE Original_air_date = 'specific_date'\nAnswer: ", "1a27c9e972f35c6578d1f8cc": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Create an album cover for Alice Walton's newest song.\nPredicted SQL: This question is not related to the tables provided.\nAnswer: ", "1b8858333e0a74d9926d25ba": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What are the number of votes from state 'NY' or 'CA'?\nPredicted SQL: SELECT count(*) FROM votes WHERE state = 'NY' OR state = 'CA'\nAnswer: ", "4edb360e87d67bc7c5fd0d8b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the content of the series Sky Radio?\nPredicted SQL: SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'\n\nQuestion: List the titles of cartoons that were directed by the same person who wrote them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: Which TV series has the highest viewership?\nAnswer: SELECT id, Episode FROM TV_series ORDER BY Viewers_m DESC LIMIT 1\n\nQuestion: List the titles of cartoons that aired on channels with high definition TV.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Hight_definition_TV = 'Yes')\n\nQuestion: What is the country of origin for the TV series with the highest weekly rank?\nAnswer: SELECT Country FROM TV_Channel WHERE id = (SELECT Channel FROM TV_series ORDER BY Weekly_Rank DESC LIMIT 1)\nAnswer: ", "7fb5ba3a2fbf77272aad38f0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Tell me the age of the oldest dog.\nPredicted SQL: SELECT MAX(age) FROM Dogs\nAnswer: ", "d1076cc4d3fa4500f83c860c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the male life expectancy in the continent of Asia?\nPredicted SQL: This question cannot be answered with the given tables as they do not contain information about life expectancy or continents.\nAnswer: ", "5f134c244887bcbd6677c9bf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Return the name of the high school student with the most friends.\nPredicted SQL: SELECT name \nFROM Highschooler \nWHERE ID IN \n(SELECT student_id \nFROM Friend \nGROUP BY student_id \nORDER BY COUNT(friend_id) DESC \nLIMIT 1)\nAnswer: ", "12cceab9180fa1e4ddb756a8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give me Brazil\u2019s population and life expectancies.\nPredicted SQL: SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'\nAnswer: ", "146d098a5072b4f681b58740": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the arriving date and the departing date of the dogs who have gone through a treatment?\nPredicted SQL: SELECT date_arrived, date_departed FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)\nAnswer: ", "749f745b5beb9ef8ed432a7b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Count the number of different nationalities of conductors.\nPredicted SQL: SELECT COUNT(DISTINCT Nationality) FROM conductor\nAnswer: ", "849c2a4774a906538cb15da9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the benefits of educational cartoons?\nPredicted SQL: SELECT Content FROM TV_Channel WHERE series_name = \"Educational Cartoons\"\nAnswer: ", "e3fb86cb00776a605037684a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the name of the breed with the most dogs?\nPredicted SQL: SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)\nAnswer: ", "e0c3cdc3dd210ffd06b67e74": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Which department offers the most number of degrees? List department name and id.\nPredicted SQL: SELECT department_name, department_id FROM Departments WHERE department_id IN (SELECT department_id FROM Degree_Programs GROUP BY department_id ORDER BY COUNT(*) DESC LIMIT 1)\nAnswer: ", "0ea1cb2d61c5cf7d2b826259": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?\nPredicted SQL: SELECT name FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments GROUP BY dog_id HAVING sum(cost_of_treatment) <= 1000)\nAnswer: ", "878e5107787b954163fa1644": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the gender of the student with the least friends?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "f282ca30df9aec18fa82ad9f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the earliest date of a transcript release, and what details can you tell me?\nPredicted SQL: SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1\n\nQuestion: List the names of students who have enrolled in the degree program with the id 5.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 5)\n\nQuestion: How many courses are there in the semester with the id 3?\nAnswer: SELECT count(*) FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE semester_id = 3)\n\nQuestion: List the names of students who have left the program.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: What is the description of the department that offers the degree program with the id 7?\nAnswer: SELECT department_description FROM departments WHERE department_id IN (SELECT department_id FROM degree_programs WHERE degree_program_id = 7)\n\nQuestion: List the course names and descriptions for the courses in which student with id 10 is enrolled.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 10))\n\nQuestion: How many students are enrolled in the semester with the id 4?\nAnswer: SELECT count(*) FROM student_enrolment WHERE semester_id = 4\n\nQuestion: List the names of students who have their current and permanent addresses the same.\nAnswer: SELECT first_name, last_name FROM students WHERE current_address_id = permanent_address_id\nAnswer: ", "097c3a6b9913a7fa88213957": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are top themes in cartoons today?\nPredicted SQL: SELECT Content FROM TV_Channel WHERE series_name = 'Cartoon'\nAnswer: ", "03d49b20a8e13fe436129582": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What sparked John Lennon to create \"Imagine\"?\nPredicted SQL: SELECT Name FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM song WHERE Title = \"Imagine\")\nAnswer: ", "678960e03e810609d798eec6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the names of the high schoolers and how many friends does each have?\nPredicted SQL: SELECT name, COUNT(friend_id) AS num_friends\nFROM Highschooler\nJOIN Friend ON Highschooler.ID = Friend.student_id\nGROUP BY Highschooler.ID, name\nAnswer: ", "ba361cc1b20066ddeac3617d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the contact of the poker player with the lowest earnings?\nPredicted SQL: SELECT cell_mobile_number, email_address FROM students WHERE student_id = (SELECT student_id FROM student_enrolment WHERE student_id = (SELECT student_id FROM student_enrolment_courses WHERE course_id = (SELECT course_id FROM courses WHERE course_name = \"Poker\") AND student_id = (SELECT student_id FROM student_enrolment_courses WHERE course_id = (SELECT course_id FROM courses WHERE course_name = \"Poker\") ORDER BY earnings ASC LIMIT 1)))\nAnswer: ", "6046b513f23546c250ffd30e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.\nPredicted SQL: SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'\nAnswer: ", "eb604fa828f4528e3b5ba28d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the most populace city that speaks English?\nPredicted SQL: SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1\n\nQuestion: List the countries in Europe with a life expectancy greater than 80.\nAnswer: SELECT country.Name FROM country WHERE country.Continent = 'Europe' AND country.LifeExpectancy > 80\n\nQuestion: What is the total population of countries in Asia?\nAnswer: SELECT SUM(country.Population) FROM country WHERE country.Continent = 'Asia'\n\nQuestion: List the countries with a population greater than 100 million and a GNP greater than 500 billion.\nAnswer: SELECT country.Name FROM country WHERE country.Population > 100000000 AND country.GNP > 500000000000\n\nQuestion: What is the average life expectancy of countries in Africa?\nAnswer: SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Continent = 'Africa'\n\nQuestion: List the official languages spoken in countries with a population greater than 50 million.\nAnswer: SELECT DISTINCT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Population > 50000000 AND countrylanguage.IsOfficial = 'T'\n\nQuestion: What is the total surface area of countries in South America?\nAnswer: SELECT SUM(country.SurfaceArea) FROM country WHERE country.Continent = 'South America'\n\nQuestion: List the countries with a government form of 'Republic' and a head of state.\nAnswer: SELECT country.Name FROM country WHERE country.GovernmentForm = 'Republic' AND country.HeadOfState IS NOT NULL\nAnswer: ", "4b48ed020389c70c8cd3ed4d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".\nPredicted SQL: SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' \n\nQuestion: Find the series name of the TV series with the highest rating.\nAnswer: SELECT series_name FROM TV_series ORDER BY Rating DESC LIMIT 1\n\nQuestion: List the titles of cartoons that aired on channels with \"Hight_definition_TV\" option.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Hight_definition_TV = 'Yes')\n\nQuestion: Find the countries where TV series with the highest viewership were aired.\nAnswer: SELECT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series ORDER BY Viewers_m DESC LIMIT 1)\n\nQuestion: List the titles of cartoons that were written by the same person who directed them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: Find the channels that aired cartoons with a production code starting with \"ABC\".\nAnswer: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Production_code LIKE 'ABC%')\n\nQuestion: List the titles of cartoons that aired on channels with the \"Pay_per_view_PPV\" option.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: Find the TV series that aired on channels with the \"Package_Option\" available.\nAnswer: SELECT series_name FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE Package_Option = 'Yes')\nAnswer: ", "bb7bd4c22d338cd4c32e1d84": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the names of all high schoolers in grade 10.\nPredicted SQL: SELECT name FROM Highschooler WHERE grade = 10\nAnswer: ", "a7f8f5910569298410303f36": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the most common hometown among the high school students?\nPredicted SQL: SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1\nAnswer: ", "ec71f4942a28a4c6def9f336": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the cities whose population is between 160000 and 900000?\nPredicted SQL: SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000\nAnswer: ", "aecc4139af9821ba9ad26389": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Give me the description of the treatment type whose total cost is the lowest.\nPredicted SQL: SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1)\nAnswer: ", "744499da54346dc92e4dbbe9": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the average precipitation on the birthdays of the players?\nPredicted SQL: This question is not related to the tables provided.\nAnswer: ", "a20b5c0f4d4f4fc1e73aa0db": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the impact of climate on population numbers?\nPredicted SQL: SELECT c.Name, c.Population, cl.Language, cl.Percentage\nFROM city AS c\nJOIN country AS co ON c.CountryCode = co.Code\nJOIN countrylanguage AS cl ON co.Code = cl.CountryCode\nWHERE cl.IsOfficial = 'T'\nAnswer: ", "216b78da6d88a0e62d017a93": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: How many contestants are from the state of CA?\nPredicted SQL: SELECT count(*) FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'CA'\nAnswer: ", "b7e51710618d51f0fd6d584a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the id, role, and first name of the professionals who have performed two or more treatments?\nPredicted SQL: SELECT professional_id, role_code, first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY professional_id HAVING COUNT(*) >= 2\nAnswer: ", "1fe00cdfe51c550d564fc178": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What impact do economics have on concert attendance?\nPredicted SQL: SELECT Attendance, Official_ratings_(millions) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID\nAnswer: ", "fc4e367560be0889d43c8720": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Return the names of cities that have a population between 160000 and 900000 .\nPredicted SQL: SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000\nAnswer: ", "e1a93f4bb1f01b5833790cf2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.\nPredicted SQL: SELECT owner_id, last_name \nFROM Owners \nWHERE owner_id IN (\n    SELECT owner_id \n    FROM Dogs \n    WHERE dog_id IN (\n        SELECT dog_id \n        FROM Treatments \n        GROUP BY dog_id \n        ORDER BY SUM(cost_of_treatment) DESC \n        LIMIT 1\n    )\n)\nAnswer: ", "ada4fad3b9c0d8dae2a49b0b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the most common dog breeds in the US?\nPredicted SQL: This question is not related to the tables provided.\nAnswer: ", "1a6af648ff64599ad8cbc0a1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Describe the section h.\nPredicted SQL: SELECT section_description FROM sections WHERE section_name = 'h'\nAnswer: ", "629dbb17e02095c82998f81d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Count the dogs allergic to proteins.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "43cd5c6881b69e90a540d39a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the titles of the cartoons sorted alphabetically?\nPredicted SQL: SELECT Title FROM Cartoon ORDER BY Title ASC\n\nQuestion: List the names of the TV series that have a rating higher than 8.\nAnswer: SELECT series_name FROM TV_series WHERE Rating > 8\n\nQuestion: Which TV series have the highest number of viewers?\nAnswer: SELECT series_name FROM TV_series ORDER BY Viewers_m DESC LIMIT 1\n\nQuestion: Show the titles of the cartoons that were directed by 'John Smith'.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = 'John Smith'\n\nQuestion: List the TV series that were aired in the country 'USA'.\nAnswer: SELECT series_name FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE Country = 'USA'\n\nQuestion: What are the titles of the cartoons that were written by 'Jane Doe'?\nAnswer: SELECT Title FROM Cartoon WHERE Written_by = 'Jane Doe'\n\nQuestion: Show the TV series that have a weekly rank in the top 10.\nAnswer: SELECT series_name FROM TV_series WHERE Weekly_Rank <= 10\n\nQuestion: List the TV series that are available in high definition.\nAnswer: SELECT series_name FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE Hight_definition_TV = 'Yes'\nAnswer: ", "24247889318a84fb8eafe6b6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the names of students who have a grade higher than 5 and have at least 2 friends.\nPredicted SQL: SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 2)\nAnswer: ", "cecabe2bbed29f9f80ba4f6c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What are the names of the sections in reverse alphabetical order?\nPredicted SQL: SELECT section_name FROM sections ORDER BY section_name DESC\n\nQuestion: List the course names and descriptions for the courses enrolled by student with id 123.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id = (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = 123))\n\nQuestion: Find the student names who are enrolled in the degree program with id 456.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = 456)\n\nQuestion: List the names of the students who have left the university.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NOT NULL\n\nQuestion: What are the addresses of the students who are currently enrolled in the semester with id 789?\nAnswer: SELECT line_1, city, state_province_county, country FROM addresses WHERE address_id IN (SELECT current_address_id FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE semester_id = 789))\n\nQuestion: Find the course names and descriptions for the courses in the degree program with id 456.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE degree_program_id = 456))\n\nQuestion: List the names of the students who have transcripts.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\n\nQuestion: Find the names of the students who have transcripts in the semester with id 789.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE semester_id = 789 AND student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment_courses WHERE student_course_id IN (SELECT student_course_id FROM transcript_contents)))\nAnswer: ", "7e30a2ccadda16fba18d1552": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Create clusters of cities based on their proximity to the capital.\nPredicted SQL: This question cannot be answered with the given tables as there is no information provided about the proximity of cities to the capital.\nAnswer: ", "186bed2785357a17bfb96546": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the ids of all tv channels that have more than 2 TV channels?\nPredicted SQL: SELECT id FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon GROUP BY Channel HAVING count(*) > 2) OR id IN (SELECT Channel FROM TV_series GROUP BY Channel HAVING count(*) > 2)\nAnswer: ", "4e0e56fcb5ed566430405dc6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: How many horses does Sky Radio own?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "36004de0a3297a46a5e6f418": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the mobile phone number of the student named Timmothy Ward ?\nPredicted SQL: SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'\nAnswer: ", "744fd32d32a7e119f12ee89e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the amount of datetime payment for the medical department?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "8c86a03ac9923659a52ae9df": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.\nPredicted SQL: SELECT owner_id, last_name \nFROM Owners \nWHERE owner_id IN (\n    SELECT owner_id \n    FROM Dogs \n    WHERE dog_id IN (\n        SELECT dog_id \n        FROM Treatments \n        GROUP BY dog_id \n        ORDER BY SUM(cost_of_treatment) DESC \n        LIMIT 1\n    )\n)\nAnswer: ", "a205470ab2fd010ff2c40e31": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the names of high schoolers who have at least 3 friends.\nPredicted SQL: SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 3)\nAnswer: ", "55f8f9e89873e461af1fcf32": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Return the names of the 3 countries with the fewest people.\nPredicted SQL: SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\nQuestion: Find the names of the cities in the country with the highest population.\nAnswer: SELECT Name FROM city WHERE CountryCode = (SELECT Code FROM country ORDER BY Population DESC LIMIT 1)\n\nQuestion: What is the average life expectancy of countries in each continent?\nAnswer: SELECT Continent, AVG(LifeExpectancy) FROM country GROUP BY Continent\n\nQuestion: List the languages spoken in countries where English is an official language.\nAnswer: SELECT DISTINCT Language FROM countrylanguage WHERE CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')\n\nQuestion: Find the country with the highest GNP.\nAnswer: SELECT Name FROM country ORDER BY GNP DESC LIMIT 1\n\nQuestion: List the districts in countries where the percentage of the official language is greater than 50%.\nAnswer: SELECT DISTINCT District FROM city WHERE CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND Percentage > 50)\nAnswer: ", "10149b902e045def530f3b67": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the title of the album produced by singer Christy Walton?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "5b7d6174e45ee2778ff0bda2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the average price in dollars for conductors?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "e1e647c140dbfacb4d987e0d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Give the names of countries with English and French as official languages.\nPredicted SQL: SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')\nAnswer: ", "efa184eb05634f967a1e0fa3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which countries have either English or Dutch as an official language?\nPredicted SQL: SELECT DISTINCT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch' AND IsOfficial = 'T')\nAnswer: ", "5cb067e3fad0bf34dfa52bf3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the sname of every sing that does not have any song?\nPredicted SQL: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)\nAnswer: ", "b07f57d8dacc3e12a014851f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What is the average attendance of shows?\nPredicted SQL: SELECT AVG(Attendance) FROM show\nAnswer: ", "dc2c8baad8e77ac72458be23": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How many different forms of governments are there in Africa?\nPredicted SQL: SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'\nAnswer: ", "b3cf4d52678702a3d7725a15": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How does the size of a dog influence its dietary requirements?\nPredicted SQL: SELECT D.size_code, S.size_description, B.breed_name, B.breed_code\nFROM Dogs D\nJOIN Sizes S ON D.size_code = S.size_code\nJOIN Breeds B ON D.breed_code = B.breed_code\nAnswer: ", "88ced034f0fbe7affe590dfe": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: which countries' tv channels are not playing any cartoon written by Todd Casey?\nPredicted SQL: SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')\nAnswer: ", "2e47ef62ff1d4606767b05a3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the maximum number of final tables made among poker players with earnings less than 200000?\nPredicted SQL: SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\nAnswer: ", "a8318e6c6ef73129eddd0058": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the date of the most recent rerun of the cartoon \"Evil Under the Sea\"?\nPredicted SQL: SELECT T2.transcript_date FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Evil Under the Sea\" ORDER BY T2.transcript_date DESC LIMIT 1\nAnswer: ", "8077b3bcba2c2c36ff526a00": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: How many friends does the high school student Kyle have?\nPredicted SQL: SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')\nAnswer: ", "cd076fe8494949f88fba54fa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the money rank of the tallest poker player?\nPredicted SQL: SELECT Money_Rank FROM poker_player WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)\nAnswer: ", "eaacb676c263b587f61baf9b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: How many conductors are there?\nPredicted SQL: SELECT COUNT(*) FROM conductor\nAnswer: ", "b558707edbad15e608784157": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What is the role code of the owner Nora Haley at work?\nPredicted SQL: SELECT T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = \"Work\" AND T2.department_description = \"Owner\" AND T2.other_details = \"Nora Haley\"\nAnswer: ", "38cce00aff3cea5990b19205": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the record companies that the owners are affiliated with?\nPredicted SQL: SELECT T1.department_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN student_enrolment AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN students AS T4 ON T3.student_id = T4.student_id WHERE T4.first_name = \"owner\" AND T4.last_name = \"owner\"\nAnswer: ", "27e1eb8f0f70e63aa0ab4034": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?\nPredicted SQL: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')\nAnswer: ", "cac1ba32f6c0a08bec5526f7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: How many cartoons were written by \"Joseph Kuhr\"?\nPredicted SQL: SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'\nAnswer: ", "9a3542494f64063701453d28": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What are the maximum and minimum shares with the cartoons?\nPredicted SQL: SELECT max(course_name) ,  min(course_name) FROM courses WHERE course_description LIKE '%cartoon%'\nAnswer: ", "82dbe618440a5289a31a6a5d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?\nPredicted SQL: SELECT contestant_number, contestant_name \nFROM contestants \nWHERE contestant_number = (\n    SELECT contestant_number \n    FROM votes \n    GROUP BY contestant_number \n    ORDER BY COUNT(*) ASC \n    LIMIT 1\n)\nAnswer: ", "fab9100ba1060f3c94f23186": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What are the names of conductors as well as the corresonding orchestras that they have conducted?\nPredicted SQL: SELECT C.Name, O.Orchestra\nFROM conductor C\nJOIN orchestra O ON C.Conductor_ID = O.Conductor_ID\nAnswer: ", "091ff884276e6b641bc37aaa": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Which department was created earliest?\nPredicted SQL: SELECT department_name FROM departments ORDER BY other_details LIMIT 1\n\nQuestion: List the names of all students who have enrolled in the Computer Science degree program.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Computer Science')))\n\nQuestion: Show the course names and descriptions for all courses in the Fall 2021 semester.\nAnswer: SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM sections WHERE semester_id IN (SELECT semester_id FROM semesters WHERE semester_name = 'Fall 2021'))\n\nQuestion: List the names of students who have taken the most number of courses.\nAnswer: SELECT first_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)\n\nQuestion: Show the transcript date and other details for all transcripts.\nAnswer: SELECT transcript_date, other_details FROM transcripts\n\nQuestion: How many students are enrolled in the Computer Science degree program?\nAnswer: SELECT COUNT(*) FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Computer Science')))\n\nQuestion: List the names of students who have not left the program.\nAnswer: SELECT first_name, last_name FROM students WHERE date_left IS NULL\n\nQuestion: Show the names of students who have a permanent address in New York.\nAnswer: SELECT first_name, last_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE city = 'New York')\nAnswer: ", "30092b72a8d61be427bdc9cd": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the legal name of Jordan?\nPredicted SQL: SELECT first_name, middle_name, last_name FROM students WHERE first_name = 'Jordan'\nAnswer: ", "1516de4b19181df071c1c95a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Find the names and their states of the contestants.\nPredicted SQL: SELECT T1.first_name, T1.state_province_county \nFROM students AS T1 \nJOIN addresses AS T2 ON T1.current_address_id = T2.address_id\nAnswer: ", "ab874a26cb99f833fd02d4b7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What influences high school friendships?\nPredicted SQL: SELECT T1.name ,  T2.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id\nAnswer: ", "dc9dfe67e53c0154ebe08ddf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?\nPredicted SQL: SELECT SUM(Population), AVG(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000\nAnswer: ", "de4fc5e4e1825e2254b78f29": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: how many countries are in Asia?\nPredicted SQL: SELECT COUNT(*) FROM country WHERE Continent = 'Asia'\nAnswer: ", "cca07b3afb75562ae46d6124": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: List each charge type and its amount.\nPredicted SQL: SELECT charge_type, charge_amount FROM Charges\nAnswer: ", "0612dd57df6d0fa44facb205": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Please show the record formats of orchestras in ascending order of count.\nPredicted SQL: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC\n\nQuestion: List the names of conductors who have conducted performances with official ratings over 1 million.\nAnswer: SELECT DISTINCT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 1))\n\nQuestion: Show the orchestras that were founded after 2000 and have a record company.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000 AND Record_Company IS NOT NULL\n\nQuestion: List the nationalities of conductors who have conducted performances with a weekly rank in the top 10.\nAnswer: SELECT DISTINCT Nationality FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Weekly_rank <= 10))\n\nQuestion: Show the performances with the highest share.\nAnswer: SELECT * FROM performance WHERE Share = (SELECT MAX(Share) FROM performance)\n\nQuestion: List the orchestras that have conducted performances with official ratings over 2 million and a weekly rank in the top 5.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 2 AND Weekly_rank <= 5)\n\nQuestion: Show the names of conductors who have conducted performances with a share greater than 20.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Share > 20))\n\nQuestion: List the performances that were the first show and had an attendance of over 1000.\nAnswer: SELECT * FROM performance WHERE Performance_ID IN (SELECT Performance_ID FROM show WHERE If_first_show = 'Yes' AND Attendance > 1000)\nAnswer: ", "015d917e8e3ca31a843ebb44": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: How many high schoolers are in each grade?\nPredicted SQL: SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade\nAnswer: ", "474fe619fae762fe3bb2167c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the name of country that has the shortest life expectancy in Asia?\nPredicted SQL: SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1\n\nQuestion: List the names of cities in countries where English is an official language and the percentage of English speakers is more than 50%.\nAnswer: SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE Language = 'English' AND IsOfficial = 'T' AND Percentage > 50\n\nQuestion: What is the total population of countries in Europe?\nAnswer: SELECT SUM(Population) FROM country WHERE Continent = 'Europe'\n\nQuestion: List the names of countries where the head of state is a monarch.\nAnswer: SELECT Name FROM country WHERE GovernmentForm LIKE '%monarch%'\n\nQuestion: What is the average population of cities in countries where Spanish is an official language?\nAnswer: SELECT AVG(city.Population) FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE Language = 'Spanish' AND IsOfficial = 'T'\n\nQuestion: List the names of countries in Asia with a population greater than 100 million.\nAnswer: SELECT Name FROM country WHERE Continent = 'Asia' AND Population > 100000000\n\nQuestion: What is the total population of countries where English is an official language?\nAnswer: SELECT SUM(Population) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language = 'English' AND IsOfficial = 'T'\n\nQuestion: List the names of cities in countries where the head of state is a president.\nAnswer: SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE GovernmentForm LIKE '%president%'\nAnswer: ", "e5168c7a69eebb4b5923e27a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.\nPredicted SQL: SELECT first_name, middle_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%Bachelor%')) \n\nQuestion: What courses are included in the transcript of student with id 123?\nAnswer: SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment WHERE student_id = 123))\n\nQuestion: List the names of students who have left the university.\nAnswer: SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL\n\nQuestion: What is the current address of the student with id 456?\nAnswer: SELECT line_1, line_2, city, zip_postcode, state_province_county, country FROM Addresses WHERE address_id = (SELECT current_address_id FROM Students WHERE student_id = 456)\n\nQuestion: List the courses taken by the student with id 789.\nAnswer: SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment WHERE student_id = 789))\n\nQuestion: What is the department of the student with id 321?\nAnswer: SELECT department_name FROM Departments WHERE department_id = (SELECT department_id FROM Degree_Programs WHERE degree_program_id IN (SELECT degree_program_id FROM Student_Enrolment WHERE student_id = 321))\n\nQuestion: List the semester names in which student with id 654 is enrolled.\nAnswer: SELECT semester_name FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE student_id = 654)\n\nQuestion: What is the transcript date of the student with id 987?\nAnswer: SELECT transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents WHERE student_course_id IN (SELECT student_course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM Student_Enrolment WHERE student_id = 987)))\nAnswer: ", "43e70683241fb9dd694f3bc8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the pixel aspect ratio and country of origin for all TV channels that do not use English?\nPredicted SQL: SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English' \n\nQuestion: List the titles of cartoons that were directed by the same person who wrote them.\nAnswer: SELECT Title FROM Cartoon WHERE Directed_by = Written_by\n\nQuestion: Find the series names and ratings of TV series that have a viewership of more than 1 million.\nAnswer: SELECT series_name, Rating FROM TV_series WHERE Viewers_m > 1\n\nQuestion: Show the original air date and production code of cartoons that aired on channels that offer pay-per-view.\nAnswer: SELECT Original_air_date, Production_code FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Pay_per_view_PPV = 'Yes')\n\nQuestion: List the episode numbers and air dates of TV series that have a weekly rank in the top 10.\nAnswer: SELECT Episode, Air_Date FROM TV_series WHERE Weekly_Rank <= 10\n\nQuestion: Find the titles of cartoons that aired on channels that offer high definition TV.\nAnswer: SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Hight_definition_TV = 'Yes')\n\nQuestion: Show the series names and share ratings of TV series that have a rating share of 18-49.\nAnswer: SELECT series_name, 18_49_Rating_Share FROM TV_series WHERE 18_49_Rating_Share IS NOT NULL\n\nQuestion: What are the countries of origin for TV channels that have a package option?\nAnswer: SELECT Country FROM TV_Channel WHERE Package_Option = 'Yes'\nAnswer: ", "a414ae419e0148d45fa7b038": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: For the countries founded before 1930, what is the total number of distinct official languages?\nPredicted SQL: SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) AND IsOfficial = 'T'\nAnswer: ", "d9d530b1e1aaed276d79cd57": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the average running time of the TV series?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "e3471190a15b126d8d38fcc5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: Why is vote timing significant?\nPredicted SQL: SELECT created FROM VOTES ORDER BY created\nAnswer: ", "64c3f5dd2f3d59fb266ad35b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: Count the number of orchestras that have CD or DVD as their record format.\nPredicted SQL: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD') \n\nQuestion: List the names of conductors who have conducted performances with official ratings over 5 million.\nAnswer: SELECT DISTINCT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Official_ratings_(millions) > 5))\n\nQuestion: Find the orchestras that have performed more than once.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)\n\nQuestion: Show the names of orchestras that have a show with an attendance of over 1000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Performance_ID IN (SELECT Performance_ID FROM show WHERE Attendance > 1000))\n\nQuestion: List the names of conductors who have conducted orchestras founded before the year 2000.\nAnswer: SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded < 2000)\nAnswer: ", "017cec628701d1beaddf9363": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the email, cell phone and home phone of each professional?\nPredicted SQL: SELECT email_address, cell_number, home_phone FROM Professionals\nAnswer: ", "7da2af4fb8e92b0483e9fd8c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What is the weekly rank for the episode \"A Love of a Lifetime\"?\nPredicted SQL: SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\nQuestion: List the series names and countries of the TV channels that have a pixel aspect ratio of 16:9.\nAnswer: SELECT series_name, Country FROM TV_Channel WHERE Pixel_aspect_ratio_PAR = \"16:9\"\n\nQuestion: Find the original air date of the cartoons directed by \"John Smith\".\nAnswer: SELECT Original_air_date FROM Cartoon WHERE Directed_by = \"John Smith\"\n\nQuestion: List the series names and languages of the TV channels that offer pay per view.\nAnswer: SELECT series_name, Language FROM TV_Channel WHERE Pay_per_view_PPV = \"Yes\"\n\nQuestion: What is the rating of the episode with the production code \"ABC123\"?\nAnswer: SELECT Rating FROM TV_series WHERE Production_code = \"ABC123\"\n\nQuestion: Find the channel of the TV series with the highest number of viewers.\nAnswer: SELECT Channel FROM TV_series ORDER BY Viewers_m DESC LIMIT 1\n\nQuestion: List the titles of the cartoons written by \"Jane Doe\".\nAnswer: SELECT Title FROM Cartoon WHERE Written_by = \"Jane Doe\"\n\nQuestion: Find the TV channels that offer high definition TV.\nAnswer: SELECT series_name FROM TV_Channel WHERE Hight_definition_TV = \"Yes\"\nAnswer: ", "982080ecbe083e41b2a02aea": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.\nPredicted SQL: SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'\nAnswer: ", "d16bdd4e231d1fd5a8b8d7cf": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the area code in which the most voters voted?\nPredicted SQL: SELECT state FROM VOTES GROUP BY state ORDER BY count(*) DESC LIMIT 1\n\nQuestion: List the contestant names who received votes from the state with area code 123.\nAnswer: SELECT contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES WHERE state = '123')\n\nQuestion: How many votes were cast for each contestant?\nAnswer: SELECT contestant_name, count(*) FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number GROUP BY contestant_name\n\nQuestion: List the contestant names who did not receive any votes.\nAnswer: SELECT contestant_name FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)\n\nQuestion: What is the state with the highest number of votes cast?\nAnswer: SELECT state FROM VOTES GROUP BY state ORDER BY count(*) DESC LIMIT 1\n\nQuestion: List the contestant names who received votes from more than one state.\nAnswer: SELECT contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING count(DISTINCT state) > 1)\nAnswer: ", "af801834bfc72b79c062fa2b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What are the final tables made and best finishes for all poker players?\nPredicted SQL: SELECT Final_Table_Made, Best_Finish FROM poker_player\nAnswer: ", "0f6a48de4d63287dc8c8f725": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Assess the public sentiment towards the singer Liliane Bettencourt.\nPredicted SQL: This question cannot be answered with the given tables as they do not contain any information related to public sentiment or the singer Liliane Bettencourt.\nAnswer: ", "b361133f97c72ce7c0a23d8a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the number of nations that use English and Dutch?\nPredicted SQL: SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch')\nAnswer: ", "fad4803d8b796c73d6763884": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: List the names of TV series and their respective revenues.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "748770af0c4badee8150b1af": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How many years of experience does Veterinarian Vernice have?\nPredicted SQL: SELECT DATEDIFF(NOW(), date_first_registered) / 365 AS years_of_experience FROM students WHERE first_name = \"Vernice\" AND middle_name = \"Veterinarian\"\nAnswer: ", "fa303a873527970ed6b34ad5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the department description for the one whose name has the word computer?\nPredicted SQL: SELECT department_description FROM departments WHERE department_name LIKE '%computer%'\nAnswer: ", "b146c99f2e434347ace2a04d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: Find the passwords of the songs.\nPredicted SQL: This question does not seem to be related to the tables provided.\nAnswer: ", "465a043eba42abe75ffbf0a7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Show the names of high school students and their corresponding number of friends.\nPredicted SQL: SELECT H.name, COUNT(F.friend_id) AS num_friends\nFROM Highschooler H\nLEFT JOIN Friend F ON H.ID = F.student_id\nGROUP BY H.ID, H.name\nAnswer: ", "16c62ec738d38861692b6551": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Count the number of countries in Asia.\nPredicted SQL: SELECT COUNT(*) FROM country WHERE Continent = 'Asia'\nAnswer: ", "a337b30452aa09bd49f1e8b1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What is the zip code for Port Chelsea?\nPredicted SQL: SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'\nAnswer: ", "2b5dc7f8320128d41b2c4b2a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the most frequently performed treatment types done in Europe?\nPredicted SQL: This question cannot be answered with the given tables as they are related to student enrollment and courses, not medical treatments.\nAnswer: ", "0c1d5619dc4a0c6350bb17a7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: which countries' tv channels are playing some cartoon written by Todd Casey?\nPredicted SQL: SELECT DISTINCT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'\nAnswer: ", "c64e212d0e9c942534e1095b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What motivates voters to participate in contests?\nPredicted SQL: SELECT DISTINCT created FROM VOTES\n\nQuestion: Show the states and the number of votes cast in each state.\nAnswer: SELECT state ,  count(*) FROM VOTES GROUP BY state\n\nQuestion: Show the contestant names and the number of votes they received.\nAnswer: SELECT T2.contestant_name ,  count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T2.contestant_name\n\nQuestion: Show the contestant names and the states they received votes from.\nAnswer: SELECT T2.contestant_name ,  T1.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number\n\nQuestion: Show the contestant names and the number of votes they received in each state.\nAnswer: SELECT T2.contestant_name ,  T1.state ,  count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T2.contestant_name ,  T1.state\n\nQuestion: Show the contestant names and the number of votes they received in each state, ordered by contestant name and state.\nAnswer: SELECT T2.contestant_name ,  T1.state ,  count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T2.contestant_name ,  T1.state ORDER BY T2.contestant_name ,  T1.state\n\nQuestion: Show the states where contestant number 1 received votes.\nAnswer: SELECT state FROM VOTES WHERE contestant_number  =  1\n\nQuestion: Show the contestant names and the number of votes they received in each state, only for contestant number 2.\nAnswer: SELECT T2.contestant_name ,  T1.state ,  count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_number  =  2 GROUP BY T2.contestant_name ,  T1.state\nAnswer: ", "5250f2d00eb8c48f2830c10a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Count the number of religions in countries in Asia.\nPredicted SQL: SELECT count(DISTINCT country) FROM addresses WHERE country IN (SELECT country FROM addresses WHERE state_province_county = 'Asia')\nAnswer: ", "43904193302d47e992b86aa2": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What is the average salary among the high schoolers?\nPredicted SQL: This question cannot be answered with the given tables as there is no information about salaries or high schoolers.\nAnswer: ", "2213c48f8676218e880b0a59": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: List the names and nicknames of the contestants who received the most votes from NY.\nPredicted SQL: SELECT T1.first_name, T1.middle_name, T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN courses AS T4 ON T3.course_id = T4.course_id WHERE T1.current_address_id = (SELECT address_id FROM addresses WHERE city = 'NY') GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\nAnswer: ", "011778457202e278facc2cab": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What is the fan club name for the oldest singer?\nPredicted SQL: This question cannot be answered with the given tables as there is no table related to fan clubs or singers.\nAnswer: ", "3358c87e2c3c8deebafeb86a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the region and population of Angola?\nPredicted SQL: SELECT Region, Population FROM country WHERE Name = 'Angola'\nAnswer: ", "2a5a12e8b638ee57ecc6c845": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many courses are there?\nPredicted SQL: SELECT COUNT(*) FROM Courses\nAnswer: ", "382b8569ccbb8220fdd8c318": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: How long is the people\u2019s average life expectancy in Central Africa?\nPredicted SQL: SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'\nAnswer: ", "5ee2246a67bd98f1a3835341": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What is the average earnings of poker players?\nPredicted SQL: SELECT avg(Earnings) FROM poker_player\nAnswer: ", "335d3b2b12905003696d80a1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What impacts do local events have on voting trends?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "8f7270e72443b21ef4d2dab5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the majors of the dogs?\nPredicted SQL: This question does not make sense in the context of the provided tables.\nAnswer: ", "a042ff3fc6efec393dbf302a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: List all the student details in reversed lexicographical order.\nPredicted SQL: SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC\nAnswer: ", "4136f104e624476dbaa9cf7b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Which grades have 4 or more high schoolers?\nPredicted SQL: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4\nAnswer: ", "2707a0d9bbf73fcfdf4b9ab1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What is the average number of staff across the states?\nPredicted SQL: SELECT AVG(staff_count) FROM (SELECT state_province_county, COUNT(*) AS staff_count FROM Addresses GROUP BY state_province_county) AS T1\nAnswer: ", "ee4045a9c50f6872ce935628": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Which continent speaks the most languages?\nPredicted SQL: SELECT Continent, COUNT(DISTINCT Language) AS Num_Languages \nFROM countrylanguage \nJOIN country ON countrylanguage.CountryCode = country.Code \nGROUP BY Continent \nORDER BY Num_Languages DESC \nLIMIT 1\nAnswer: ", "01657018a1aaf00a9f2b639e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What criteria do orchestras use to select their repertoires?\nPredicted SQL: SELECT T2.Orchestra ,  T2.Major_Record_Format FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID\nAnswer: ", "6ed3cdbedd1fac5acea939ec": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: Initiate a phone call to students who have not registered.\nPredicted SQL: SELECT cell_mobile_number FROM students WHERE student_id NOT IN (SELECT student_id FROM student_enrolment)\nAnswer: ", "a0a902abe4888ff325731ce5": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: List the section_name in reversed lexicographical order.\nPredicted SQL: SELECT section_name FROM sections ORDER BY section_name DESC\nAnswer: ", "e68dd2cbebbb17b49c3073d6": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are the names of all high schoolers in grade 10?\nPredicted SQL: SELECT name FROM Highschooler WHERE grade = 10\n\nQuestion: Find the names of all high schoolers who have a friend with the same grade.\nAnswer: SELECT DISTINCT H1.name FROM Highschooler AS H1 JOIN Friend AS F1 ON H1.ID = F1.student_id JOIN Highschooler AS H2 ON F1.friend_id = H2.ID WHERE H1.grade = H2.grade\n\nQuestion: Find the names of all high schoolers who do not have any friends.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\nQuestion: Find the names of all high schoolers who have at least one friend who likes them.\nAnswer: SELECT DISTINCT H1.name FROM Highschooler AS H1 JOIN Friend AS F1 ON H1.ID = F1.student_id JOIN Likes AS L1 ON F1.friend_id = L1.student_id AND L1.liked_id = H1.ID\n\nQuestion: Find the names of all high schoolers who are friends with someone who does not like them.\nAnswer: SELECT DISTINCT H1.name FROM Highschooler AS H1 JOIN Friend AS F1 ON H1.ID = F1.student_id JOIN Likes AS L1 ON F1.friend_id = L1.student_id AND L1.liked_id != H1.ID\nAnswer: ", "b419b8a64676844972c5a9bb": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What is the effect of language diversity on education?\nPredicted SQL: This question cannot be answered directly with the given tables. Additional tables related to education and language diversity would be needed to answer this question.\nAnswer: ", "4d80a8fe52d74b3682d0c9e8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: Which treatment in the database has the longest duration?\nPredicted SQL: SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1\nAnswer: ", "30db6e3c9b3d7c213efe386c": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Tell me about a poker face.\nPredicted SQL: SELECT * FROM poker_player WHERE Final_Table_Made = 'Yes' AND Best_Finish = '1st'\nAnswer: ", "4ed82a42ac12b8ae7e75fd14": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What effects do zoning laws have on homes?\nPredicted SQL: SELECT hse_feature_1, hse_feature_2, hse_feature_3 FROM Properties WHERE property_type_code = 'HSE'\nAnswer: ", "522d50d6d63b22ec42b16b1b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What are ways for students to express likes?\nPredicted SQL: SELECT DISTINCT liked_id FROM Likes\n\nQuestion: Show the names of students who are friends with each other.\nAnswer: SELECT T1.name ,  T2.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id AND T1.ID = T2.friend_id\n\nQuestion: Show the names of students who are friends with someone in a higher grade.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.friend_id = T3.ID WHERE T1.grade < T3.grade\n\nQuestion: Show the names of students who like someone in the same grade.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.liked_id = T3.ID WHERE T1.grade = T3.grade\n\nQuestion: Show the names of students who do not have any friends.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\nQuestion: Show the names of students who like someone but are not friends with them.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.liked_id NOT IN (SELECT friend_id FROM Friend WHERE student_id = T1.ID)\n\nQuestion: Show the names of students who are friends with someone they like.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.student_id AND T2.friend_id = T3.liked_id\nAnswer: ", "56c506df7e8f0749cc5d7ca1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: What role does music play in cartoons?\nPredicted SQL: SELECT Directed_by ,  Written_by FROM Cartoon WHERE Title  =  \"music\" \n\nQuestion: Show the names of TV series and their channels.\nAnswer: SELECT T2.series_name ,  T3.Channel FROM TV_series AS T1 JOIN TV_Channel AS T3 ON T1.Channel  =  T3.id JOIN Cartoon AS T2 ON T2.Channel  =  T3.id\n\nQuestion: Show the names of TV series with a rating higher than 8.\nAnswer: SELECT series_name FROM TV_series WHERE Rating  >  8\n\nQuestion: Show the names of TV series with a rating higher than 8 and a share higher than 20.\nAnswer: SELECT series_name FROM TV_series WHERE Rating  >  8 AND Share  >  20\n\nQuestion: Show the names of TV series with a rating higher than 8 and a share higher than 20 and viewers more than 10 million.\nAnswer: SELECT series_name FROM TV_series WHERE Rating  >  8 AND Share  >  20 AND Viewers_m  >  10\n\nQuestion: Show the names of TV series with a rating higher than 8 and a share higher than 20 and viewers more than 10 million and weekly rank in top 10.\nAnswer: SELECT series_name FROM TV_series WHERE Rating  >  8 AND Share  >  20 AND Viewers_m  >  10 AND Weekly_Rank  <  10\n\nQuestion: Show the names of TV series with a rating higher than 8 and a share higher than 20 and viewers more than 10 million and weekly rank in top 10 and in English language.\nAnswer: SELECT series_name FROM TV_series WHERE Rating  >  8 AND Share  >  20 AND Viewers_m  >  10 AND Weekly_Rank  <  10 AND Language  =  \"English\"\n\nQuestion: Show the names of TV series with a rating higher than 8 and a share higher than 20 and viewers more than 10 million and weekly rank in top 10 and in English language and on a high definition TV.\nAnswer: SELECT series_name FROM TV_series WHERE Rating  >  8 AND Share  >  20 AND Viewers_m  >  10 AND Weekly_Rank  <  10 AND Language  =  \"English\" AND Hight_definition_TV  =  \"yes\"\nAnswer: ", "020f3e2c842235fd914928ed": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What effects do economic strategies have on population?\nPredicted SQL: This question cannot be answered directly with the given tables. Additional tables or data related to economic strategies would be needed to analyze the effects on population.\nAnswer: ", "3e3c059b4c9f36d440bad709": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: In what ways has conducting evolved?\nPredicted SQL: SELECT T1.Name ,  T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID ORDER BY T1.Year_of_Work\nAnswer: ", "b7a3ed5dbf85f007ac3f539b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: How do the temperaments of dogs differ by breed?\nPredicted SQL: SELECT T1.breed_name, T2.temperament FROM Breeds AS T1 JOIN Temperaments AS T2 ON T1.breed_code = T2.breed_code\nAnswer: ", "884ff6caa49b872713582ca8": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What marks Ella Fitzgerald's influence on jazz?\nPredicted SQL: SELECT * FROM singer WHERE Name = 'Ella Fitzgerald'\nAnswer: ", "b18a2618f641427f71f19f6a": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: What factors influence contestant popularity?\nPredicted SQL: SELECT state, contestant_name, count(*) as total_votes\nFROM VOTES\nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number\nGROUP BY state, contestant_name\nORDER BY total_votes DESC\nAnswer: ", "41a5fc7dcb51b55a6f7f011e": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: How many students reside on campus?\nPredicted SQL: SELECT count(*) FROM students WHERE current_address_id = permanent_address_id\nAnswer: ", "8d98a23bbb004adeb89f006d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: Who are the leading poker influencers?\nPredicted SQL: SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings DESC LIMIT 5\nAnswer: ", "0b8ebb70a6229f8ed48b646f": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: Tell me about the impact of interest rates on home prices.\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "ad60ef79ece5559ef3b68731": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: What role does peer pressure play?\nPredicted SQL: SELECT T1.name ,  T2.name FROM Highschooler AS T1 JOIN Friend AS T3 ON T1.ID  =  T3.student_id JOIN Highschooler AS T2 ON T3.friend_id  =  T2.ID\n\nQuestion: Show the names of students who like someone younger than them.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id JOIN Highschooler AS T3 ON T2.liked_id  =  T3.ID WHERE T1.grade  >  T3.grade\n\nQuestion: Show the names of students who like someone in the same grade.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id JOIN Highschooler AS T3 ON T2.liked_id  =  T3.ID WHERE T1.grade  =  T3.grade\n\nQuestion: Show the names of students who like someone older than them.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id JOIN Highschooler AS T3 ON T2.liked_id  =  T3.ID WHERE T1.grade  <  T3.grade\n\nQuestion: Show the names of students who like someone.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id JOIN Highschooler AS T3 ON T2.liked_id  =  T3.ID\n\nQuestion: Show the names of students who have friends.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id\n\nQuestion: Show the names of students who do not have friends.\nAnswer: SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\nQuestion: Show the names of students who like someone and have friends.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id JOIN Friend AS T3 ON T1.ID  =  T3.student_id\n\nQuestion: Show the names of students who like someone and do not have friends.\nAnswer: SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id WHERE T1\nAnswer: ", "1cd57cdb9dbef4c85bbe7273": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: Tell me about the effects of dubbing on animated series.\nPredicted SQL: SELECT Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by, Cartoon.Original_air_date, Cartoon.Production_code, Cartoon.Channel, TV_Channel.Language FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.Language != 'English'\nAnswer: ", "59d10538dbadb8467fc6e532": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: What are the effects of regional agreements?\nPredicted SQL: SELECT Region, count(*) FROM country GROUP BY Region\nAnswer: ", "0eb92ba628ed8905bc16b629": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What influence does culture have on music?\nPredicted SQL: This question cannot be answered directly with the given tables.\nAnswer: ", "4a3d69a36a8c73a00ea139f7": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Breeds, columns = [breed_code,breed_name]\nTable Charges, columns = [charge_id,charge_type,charge_amount]\nTable Dogs, columns = [dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [size_code,size_description]\nTable Treatment_Types, columns = [treatment_type_code,treatment_type_description]\nTable Treatments, columns = [treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]\nPrimary_keys = [Breeds.breed_code,Charges.charge_id,Sizes.size_code,Treatment_Types.treatment_type_code,Owners.owner_id,Dogs.dog_id,Professionals.professional_id,Treatments.treatment_id]\n\nQuestion: What are the recent advancements in veterinary medicine?\nPredicted SQL: SELECT treatment_type_description FROM treatment_types ORDER BY date_of_treatment DESC LIMIT 5\n\nQuestion: List the names of all dogs that have been abandoned.\nAnswer: SELECT name FROM dogs WHERE abandoned_yn = 'Y'\n\nQuestion: Show the names of all professionals who have treated dogs.\nAnswer: SELECT DISTINCT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments)\n\nQuestion: How many dogs have been treated by each professional?\nAnswer: SELECT professional_id, COUNT(dog_id) FROM treatments GROUP BY professional_id\n\nQuestion: List the names of all owners who have abandoned their dogs.\nAnswer: SELECT first_name, last_name FROM owners WHERE owner_id IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'Y')\n\nQuestion: Show the total cost of treatment for each dog.\nAnswer: SELECT dog_id, SUM(cost_of_treatment) FROM treatments GROUP BY dog_id\n\nQuestion: List the names of all dogs who have received a specific type of treatment.\nAnswer: SELECT name FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments WHERE treatment_type_code = 'specific_type_code')\n\nQuestion: Show the names of all professionals who have treated a specific breed of dog.\nAnswer: SELECT DISTINCT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE dog_id IN (SELECT dog_id FROM dogs WHERE breed_code = 'specific_breed_code'))\nAnswer: ", "144498c7fa70758ff448699b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable singer, columns = [Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]\nPrimary_keys = [singer.Singer_ID,song.Song_ID]\n\nQuestion: What contributions did Frank Sinatra make to jazz?\nPredicted SQL: SELECT * FROM singer WHERE Name = 'Frank Sinatra'\nAnswer: ", "d80e4cc9ed73cd2a4d5b9e43": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: How many votes were cast in the last election?\nPredicted SQL: SELECT count(*) FROM VOTES\n\nQuestion: List the contestant names and the number of votes they received in each state.\nAnswer: SELECT T2.contestant_name, count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_name, T1.state\n\nQuestion: Show the states where contestant number 5 received the most votes.\nAnswer: SELECT state FROM VOTES WHERE contestant_number = 5 GROUP BY state ORDER BY count(*) DESC LIMIT 1\n\nQuestion: List the contestant names and the number of votes they received in each area code.\nAnswer: SELECT T2.contestant_name, count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state GROUP BY T2.contestant_name, T3.area_code\n\nQuestion: Show the contestant names and the number of votes they received in each state, ordered by state.\nAnswer: SELECT T2.contestant_name, count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_name, T1.state ORDER BY T1.state\n\nQuestion: List the contestant names and the number of votes they received in each state, ordered by number of votes.\nAnswer: SELECT T2.contestant_name, count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_name, T1.state ORDER BY count(*) DESC\n\nQuestion: Show the states where contestant number 3 received the least votes.\nAnswer: SELECT state FROM VOTES WHERE contestant_number = 3 GROUP BY state ORDER BY count(*) ASC LIMIT 1\n\nQuestion: List the contestant names and the number of votes they received in each area code, ordered by number of votes.\nAnswer: SELECT T2.contestant_name, count(*) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state GROUP BY T2.contestant_name, T3.area_code ORDER BY count(*) DESC\nAnswer: ", "6caa438c7473939874084786": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Addresses, columns = [address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [department_id,department_name,department_description,other_details]\nTable Sections, columns = [section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [student_course_id,transcript_id]\nTable Transcripts, columns = [transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]\nPrimary_keys = [Addresses.address_id,Courses.course_id,Departments.department_id,Degree_Programs.degree_program_id,Sections.section_id,Semesters.semester_id,Students.student_id,Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.student_course_id,Transcripts.transcript_id]\n\nQuestion: What sports teams can students join?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: ", "b28795b8b018126e972b6ec1": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable people, columns = [People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]\nPrimary_keys = [poker_player.Poker_Player_ID,people.People_ID]\n\nQuestion: What's the record for the longest poker game?\nPredicted SQL: SELECT max(Best_Finish) FROM poker_player\nAnswer: ", "968acd61988fecf20834a95b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Other_Available_Features, columns = [feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [property_id,feature_id,property_feature_description]\nTable Properties, columns = [property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]\nPrimary_keys = [Ref_Feature_Types.feature_type_code,Ref_Property_Types.property_type_code,Other_Available_Features.feature_id,Properties.property_id]\n\nQuestion: What financing options are available for first-time homebuyers?\nPredicted SQL: SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = 'financing' AND feature_description = 'first-time homebuyers'\nAnswer: ", "5ed8c9be25f97f0544df5531": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Friend, columns = [student_id,friend_id]\nTable Highschooler, columns = [ID,name,grade]\nTable Likes, columns = [student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]\nPrimary_keys = [Highschooler.ID,Friend.student_id,Likes.student_id]\n\nQuestion: Signs of healthy friendships?\nPredicted SQL: SELECT T1.name ,  T2.name FROM friend AS T1 JOIN friend AS T2 ON T1.friend_id  =  T2.student_id AND T1.student_id  =  T2.friend_id\n\nQuestion: List the names of students who like someone younger than them.\nAnswer: SELECT T1.name FROM highschooler AS T1 JOIN likes AS T2 ON T1.ID  =  T2.student_id JOIN highschooler AS T3 ON T2.liked_id  =  T3.ID WHERE T1.grade  >  T3.grade\n\nQuestion: List the names of students who have friends in the same grade.\nAnswer: SELECT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.ID  =  T2.student_id JOIN highschooler AS T3 ON T2.friend_id  =  T3.ID WHERE T1.grade  =  T3.grade\n\nQuestion: List the names of students who like someone in a different grade.\nAnswer: SELECT T1.name FROM highschooler AS T1 JOIN likes AS T2 ON T1.ID  =  T2.student_id JOIN highschooler AS T3 ON T2.liked_id  =  T3.ID WHERE T1.grade  !=  T3.grade\n\nQuestion: List the names of students who have friends in a different grade.\nAnswer: SELECT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.ID  =  T2.student_id JOIN highschooler AS T3 ON T2.friend_id  =  T3.ID WHERE T1.grade  !=  T3.grade\n\nQuestion: List the names of students who like someone older than them.\nAnswer: SELECT T1.name FROM highschooler AS T1 JOIN likes AS T2 ON T1.ID  =  T2.student_id JOIN highschooler AS T3 ON T2.liked_id  =  T3.ID WHERE T1.grade  <  T3.grade\n\nQuestion: List the names of students who have friends in a different grade and like someone in a different grade.\nAnswer: SELECT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.ID  =  T2.student_id JOIN highschooler AS T3 ON T2.friend_id  =  T3.ID JOIN likes AS T4 ON T1.ID  =  T4.student_id JOIN highschooler AS T5 ON T4.liked_id  =  T\nAnswer: ", "f9dae39e1fe8557f43ce114d": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable Cartoon, columns = [id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]\nPrimary_keys = [TV_Channel.id,TV_series.id,Cartoon.id]\n\nQuestion: How do animated series impact merchandise?\nPredicted SQL: SELECT series_name, Content FROM TV_Channel WHERE Content = 'Animated series'\nAnswer: ", "fc330f8ee8ef0726d421b87b": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable city, columns = [ID,Name,CountryCode,District,Population]\nTable country, columns = [Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]\nPrimary_keys = [city.ID,country.Code,countrylanguage.CountryCode]\n\nQuestion: Tell me how government types affect health.\nPredicted SQL: SELECT governmentForm, AVG(LifeExpectancy) FROM country GROUP BY governmentForm\n\nQuestion: Show the names of cities with a population greater than 1 million.\nAnswer: SELECT Name FROM city WHERE Population > 1000000\n\nQuestion: Show the names of countries in Europe with a life expectancy greater than 80.\nAnswer: SELECT Name FROM country WHERE Continent = 'Europe' AND LifeExpectancy > 80\n\nQuestion: Show the names of countries where English is an official language.\nAnswer: SELECT Name FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T'\n\nQuestion: Show the names of countries with a population greater than 50 million and a GNP greater than 500 billion.\nAnswer: SELECT Name FROM country WHERE Population > 50000000 AND GNP > 500000000000\n\nQuestion: Show the names of countries with a capital city that has a population greater than 1 million.\nAnswer: SELECT Name FROM country WHERE Capital IN (SELECT ID FROM city WHERE Population > 1000000)\n\nQuestion: Show the names of countries with a government form of 'Constitutional Monarchy'.\nAnswer: SELECT Name FROM country WHERE GovernmentForm = 'Constitutional Monarchy'\n\nQuestion: Show the names of countries where Spanish is an official language and the percentage of Spanish speakers is greater than 50%.\nAnswer: SELECT Name FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50\nAnswer: ", "78ef374e00e504f0019949f0": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable conductor, columns = [Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]\nPrimary_keys = [conductor.Conductor_ID,orchestra.Orchestra_ID,performance.Performance_ID]\n\nQuestion: What qualities define a great conductor?\nPredicted SQL: SELECT Name, Age, Nationality, Year_of_Work FROM conductor WHERE Year_of_Work >= 10\n\nQuestion: List the orchestras with the highest official ratings.\nAnswer: SELECT Orchestra FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID ORDER BY Official_ratings_(millions) DESC\n\nQuestion: Show the names of conductors and their orchestras.\nAnswer: SELECT Name, Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\n\nQuestion: Show the orchestras founded after 2000.\nAnswer: SELECT Orchestra FROM orchestra WHERE Year_of_Founded > 2000\n\nQuestion: How many performances have official ratings over 5 million?\nAnswer: SELECT COUNT(*) FROM performance WHERE Official_ratings_(millions) > 5\n\nQuestion: Show the names of conductors who have worked for more than 15 years.\nAnswer: SELECT Name FROM conductor WHERE Year_of_Work > 15\n\nQuestion: List the orchestras with major record format as vinyl.\nAnswer: SELECT Orchestra FROM orchestra WHERE Major_Record_Format = 'vinyl'\n\nQuestion: Show the attendance for each show.\nAnswer: SELECT Show_ID, Attendance FROM show\nAnswer: ", "b12e1fab675391c545f93ef3": "#### Based on the question and predicted SQL, are you sure the SQL below is correct? If you consider the SQL is correct, answer me with 'correct'. If not, answer me with 'incorrect'. Only output your response without explanation.\nTable AREA_CODE_STATE, columns = [area_code,state]\nTable CONTESTANTS, columns = [contestant_number,contestant_name]\nTable VOTES, columns = [vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]\nPrimary_keys = [AREA_CODE_STATE.area_code,CONTESTANTS.contestant_number,VOTES.vote_id]\n\nQuestion: How do social networks affect voting?\nPredicted SQL: This question cannot be answered with the given tables.\nAnswer: "}