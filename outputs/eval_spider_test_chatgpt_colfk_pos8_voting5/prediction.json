{"04365723c5d125342e01f58a": ["SELECT first_name, last_name FROM Students WHERE date_first_registered < '2000-01-01'", "SELECT first_name, last_name FROM students WHERE date_first_registered < '2000-01-01'", "SELECT first_name, last_name FROM students WHERE date_first_registered < '2000-01-01'", "SELECT first_name, last_name FROM students WHERE date_first_registered < '2000-01-01'", "SELECT first_name, last_name FROM students WHERE date_first_registered < '2000-01-01' \n\n"], "2692e7406f0c53353684c790": ["WITH RECURSIVE FriendCircle AS (\n    SELECT student_id, friend_id\n    FROM Friend\n    UNION ALL\n    SELECT fc.student_id, f.friend_id\n    FROM FriendCircle fc\n    JOIN Friend f ON fc.friend_id = f.student_id\n)\nSELECT *\nFROM FriendCircle", "SELECT DISTINCT F1.student_id, F2.student_id, F3.student_id\nFROM Friend F1, Friend F2, Friend F3\nWHERE F1.friend_id = F2.student_id\nAND F2.friend_id = F3.student_id\nAND F3.friend_id = F1.student_id\nAND F1.student_id < F2.student_id\nAND F2.student_id < F3.student_id", "WITH RECURSIVE Clusters AS (\n  SELECT student_id, friend_id\n  FROM Friend\n  UNION ALL\n  SELECT f.student_id, f.friend_id\n  FROM Friend f\n  JOIN Clusters c ON f.friend_id = c.student_id OR f.student_id = c.friend_id\n)\nSELECT DISTINCT student_id, friend_id\nFROM Clusters", "WITH RECURSIVE Clusters AS (\n  SELECT student_id, friend_id\n  FROM Friend\n  UNION ALL\n  SELECT c.student_id, f.friend_id\n  FROM Clusters c\n  JOIN Friend f ON c.friend_id = f.student_id\n)\nSELECT *\nFROM Clusters", "WITH RECURSIVE friend_clusters AS (\n  SELECT student_id, friend_id\n  FROM Friend\n  UNION ALL\n  SELECT fc.student_id, f.friend_id\n  FROM friend_clusters fc\n  JOIN Friend f ON fc.friend_id = f.student_id\n)\nSELECT *\nFROM friend_clusters"], "984c0b107639c8f97c040783": ["SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date"], "c3076fcb9682fd04a77bb806": ["SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date", "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date"], "40c92ed87c22cb6083772444": ["SELECT T2.Package_Option, T1.series_name FROM TV_Channel AS T2 JOIN TV_series AS T1 ON T1.Channel = T2.id WHERE T2.Hight_definition_TV = TRUE\n\n", "SELECT T2.Package_Option, T1.series_name \nFROM TV_Channel AS T2 \nJOIN TV_series AS T1 ON T2.id = T1.Channel \nWHERE T2.Hight_definition_TV = 'Yes'", "SELECT T2.Package_Option, T1.series_name \nFROM TV_Channel AS T1 \nJOIN TV_series AS T2 ON T1.id = T2.Channel \nWHERE T1.Hight_definition_TV = true", "SELECT T2.Package_Option, T1.series_name FROM TV_Channel AS T2 JOIN TV_series AS T1 ON T2.id = T1.Channel WHERE T2.Hight_definition_TV = 'Yes'", "SELECT T1.Package_Option, T2.series_name \nFROM TV_Channel AS T1 \nJOIN TV_series AS T2 ON T1.id = T2.Channel \nWHERE T1.Hight_definition_TV = 'Yes'"], "5c36fc6291720986c709e906": ["SELECT * FROM Friend ORDER BY student_id, friend_id", "SELECT f1.student_id, f2.friend_id \nFROM Friend f1 \nJOIN Friend f2 ON f1.friend_id = f2.student_id AND f1.student_id = f2.friend_id \nWHERE f1.student_id < f1.friend_id", "SELECT f1.student_id, f2.friend_id\nFROM Friend f1\nJOIN Friend f2 ON f1.student_id = f2.friend_id AND f1.friend_id = f2.student_id", "SELECT * FROM Friend", "SELECT T1.student_id ,  T1.friend_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID ORDER BY T2.grade, T1.student_id, T1.friend_id"], "8742791c0587fc672464dde7": ["SELECT transcript_date, transcript_id \nFROM transcripts \nWHERE transcript_id IN \n    (SELECT transcript_id \n     FROM transcript_contents \n     GROUP BY transcript_id \n     ORDER BY COUNT(*) ASC \n     LIMIT 1)", "SELECT transcript_date, transcript_id \nFROM transcripts \nWHERE transcript_id IN (\n    SELECT transcript_id \n    FROM transcript_contents \n    GROUP BY transcript_id \n    ORDER BY COUNT(*) ASC \n    LIMIT 1\n)", "SELECT transcript_date, transcript_id \nFROM transcripts \nWHERE transcript_id IN \n(SELECT transcript_id \nFROM transcript_contents \nGROUP BY transcript_id \nORDER BY count(*) ASC \nLIMIT 1)", "SELECT transcript_date, transcript_id FROM transcripts ORDER BY (SELECT count(*) FROM transcript_contents WHERE transcript_id = transcripts.transcript_id) ASC LIMIT 1", "SELECT transcript_date, transcript_id FROM Transcripts AS T1 \nJOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id \nGROUP BY T1.transcript_id \nORDER BY count(*) ASC \nLIMIT 1"], "33d98926fa96cc21171e916b": ["SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)"], "9e0fd4a3d5488a7037ff91bc": ["SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)"], "974c37023e8dacc7e7e0ef2e": ["SELECT COUNT(*) FROM Highschooler WHERE name = 'Jordan'", "SELECT COUNT(*) FROM Highschooler WHERE name = 'Jordan' \n\n", "SELECT count(*) FROM Friend WHERE friend_id = (SELECT ID FROM Highschooler WHERE name = 'Jordan') OR student_id = (SELECT ID FROM Highschooler WHERE name = 'Jordan')", "SELECT COUNT(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Jordan') OR friend_id = (SELECT ID FROM Highschooler WHERE name = 'Jordan')", "SELECT count(*) FROM Highschooler WHERE name = 'Jordan'"], "30077054e1950e43a73d2676": ["This question does not involve querying the database and does not require an SQL query.", "This question does not require a SQL query as it is not related to retrieving data from the database.", "This question does not involve querying the database tables provided.", "This question is not related to the data in the tables provided above, therefore it cannot be translated into SQL.", "This question does not seem to be related to the provided tables."], "6ef4356d29a8b6ea0f2cdb71": ["This question is not applicable to the tables provided.", "This question cannot be answered with the given tables as there is no information related to currency in any of the tables.", "This question is not applicable to the provided tables.", "This question cannot be answered with the given tables as there is no currency information provided.", "This question cannot be answered with the provided tables as they do not contain information about currency."], "0e523dd3fc808e102301dc8e": ["SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)", "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)", "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)", "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)", "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)"], "1e26305a3c22be5b7316fc09": ["SELECT district FROM city WHERE Name = \"Kabul\"", "SELECT region FROM country WHERE code = (SELECT countrycode FROM city WHERE name = \"Kabul\")", "SELECT Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Kabul'", "SELECT District FROM city WHERE Name = 'Kabul'", "SELECT District FROM city WHERE Name = \"Kabul\""], "9e8bc6cb391063f3b2703765": ["SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id\n\n", "SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id", "SELECT student_id, count(*) FROM Likes GROUP BY student_id\n\n", "SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id\n\n", "SELECT student_id, COUNT(liked_id) FROM Likes GROUP BY student_id\n\n"], "d731f29e0fcbb014524ea349": ["SELECT performance.Type FROM performance WHERE Type = 'Auditions 1'\n\n", "SELECT performance.Performance_ID FROM performance WHERE Type = 'Auditions 1'", "SELECT Performance_ID FROM performance WHERE Type = 'Auditions 1'", "SELECT performance.Performance_ID, performance.Type, performance.Date FROM performance WHERE performance.Type = 'Auditions 1'", "SELECT performance_ID FROM performance WHERE type = 'Auditions 1'"], "29666d3775bd379b23f77816": ["SELECT count(*) FROM Highschooler WHERE grade IN (9,10)", "SELECT count(*) FROM Highschooler WHERE grade IN (9, 10)", "SELECT count(*) FROM Highschooler WHERE grade IN (9,10)", "SELECT count(*) FROM Highschooler WHERE grade IN (9,10)", "SELECT count(*) FROM Highschooler WHERE grade IN (9, 10)"], "095626f0a79e3deaea7320b1": ["SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n", "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n", "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n", "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n", "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n"], "2fa563e8d4fc8edc4a3e6c1a": ["SELECT max(Attendance) FROM show\n\n", "SELECT max(Attendance) FROM show\n\n", "SELECT max(Attendance) FROM show\n\n", "SELECT max(Attendance) FROM show\n\n", "SELECT MAX(Attendance) FROM show\n\n"], "f36a499da7496bb370f40c53": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "SELECT T2.name \nFROM Friend AS T1 \nJOIN Highschooler AS T2 ON T1.friend_id = T2.ID \nWHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "SELECT T2.name FROM friend AS T1 JOIN highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM highschooler WHERE name = 'Kyle') \n\n", "SELECT h.name\nFROM Highschooler h\nJOIN Friend f ON h.ID = f.friend_id\nWHERE f.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "SELECT T2.name FROM friend AS T1 JOIN highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT ID FROM highschooler WHERE name = 'Kyle') \n\n"], "b6e28f095d21ef5de7d48a54": ["SELECT T1.Name, T1.Age, T3.Type, T3.Official_ratings_(millions), T4.Result\nFROM conductor AS T1 \nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID \nJOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID \nJOIN show AS T4 ON T3.Performance_ID = T4.Performance_ID\n\n", "SELECT T1.Name ,  T1.Age ,  T2.Official_ratings_(millions) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID\n\n", "SELECT T1.Name, AVG(T2.Official_ratings_(millions)) AS Avg_ratings FROM conductor AS T1 \nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID \nJOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID \nGROUP BY T1.Name, T1.Age", "SELECT T1.Name, AVG(T3.Official_ratings_(millions)) AS avg_ratings\nFROM conductor AS T1\nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID\nJOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID\nGROUP BY T1.Name, T1.Age\nORDER BY avg_ratings DESC, T1.Age", "SELECT T1.Name, T1.Age, T2.Official_ratings_(millions) \nFROM conductor AS T1 \nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID \nJOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID \nWHERE T3.Official_ratings_(millions) > 0\n\n"], "c5f27aeca7eb6f7c3b8d781d": ["SELECT citizenship, count(*) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, count(*) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, count(*) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, count(*) FROM singer GROUP BY citizenship\n\n"], "17fa64cd16174a7585d91ea9": ["SELECT state FROM contestants WHERE contestant_name = 'Tabatha Gehling'", "SELECT state FROM contestants WHERE contestant_name = 'Tabatha Gehling'", "SELECT state FROM contestants WHERE contestant_name = 'Tabatha Gehling'\n\n", "SELECT state FROM CONTESTANTS WHERE contestant_name = \"Tabatha Gehling\"\n\n", "SELECT state FROM contestants WHERE contestant_name = 'Tabatha Gehling'"], "b2675b92eae2ca911c712dad": ["SELECT T1.Name, T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID\n\n", "SELECT T1.Name, T2.Orchestra \nFROM conductor AS T1 \nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID", "SELECT T1.Name, T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID\n\n", "SELECT T1.Name, T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID\n\n", "SELECT T1.Name, T2.Orchestra\nFROM conductor AS T1\nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID"], "eb033c46ae69feea1af53fa6": ["SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = \"Engineering\")", "SELECT count(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = \"Engineering\")", "SELECT count(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Engineering')", "SELECT count(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = \"Engineering\")", "SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Engineering')"], "a5d5cfca61d18f1a9d3d6ff1": ["SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\n", "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\n", "SELECT Name FROM country WHERE Continent = \"Europe\" AND Population = 80000", "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\n", "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000"], "bffe56bf0ce1729457a1e65c": ["SELECT COUNT(*) FROM Highschooler", "SELECT count(*) FROM Highschooler", "SELECT count(*) FROM Highschooler", "SELECT count(*) FROM Highschooler", "SELECT count(*) FROM Highschooler"], "bd35242925c6cd838d57a997": ["SELECT area_code \nFROM votes \nJOIN contestants ON votes.contestant_number = contestants.contestant_number \nWHERE contestant_name = 'Tabatha Gehling' OR contestant_name = 'Kelly Clauss' \nGROUP BY area_code \nHAVING COUNT(DISTINCT contestant_name) = 2", "SELECT state FROM VOTES WHERE contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling') INTERSECT SELECT state FROM VOTES WHERE contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss')", "SELECT area_code FROM votes AS T1 JOIN contestants AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling' INTERSECT SELECT area_code FROM votes AS T3 JOIN contestants AS T4 ON T3.contestant_number = T4.contestant_number WHERE T4.contestant_name = 'Kelly Clauss'", "SELECT area_code FROM VOTES AS V1 JOIN CONTESTANTS AS C1 ON V1.contestant_number = C1.contestant_number WHERE C1.contestant_name = 'Tabatha Gehling' INTERSECT SELECT area_code FROM VOTES AS V2 JOIN CONTESTANTS AS C2 ON V2.contestant_number = C2.contestant_number WHERE C2.contestant_name = 'Kelly Clauss'", "SELECT area_code FROM VOTES AS V1 JOIN CONTESTANTS AS C1 ON V1.contestant_number = C1.contestant_number WHERE C1.contestant_name = 'Tabatha Gehling' AND area_code IN (SELECT area_code FROM VOTES AS V2 JOIN CONTESTANTS AS C2 ON V2.contestant_number = C2.contestant_number WHERE C2.contestant_name = 'Kelly Clauss')"], "1fabd3f45a6945153eea68b5": ["SELECT address_id, line_1, line_2, line_3 FROM addresses WHERE address_id = (SELECT current_address_id FROM students GROUP BY current_address_id ORDER BY count(*) DESC LIMIT 1) \n\n", "SELECT address_id, line_1, line_2, line_3 FROM addresses WHERE address_id IN (SELECT current_address_id FROM students GROUP BY current_address_id ORDER BY COUNT(*) DESC LIMIT 1) \n\n", "SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3 \nFROM addresses AS T1 \nJOIN students AS T2 ON T1.address_id = T2.current_address_id \nGROUP BY T1.address_id \nORDER BY count(*) DESC \nLIMIT 1", "SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3 FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3 \nFROM addresses AS T1 \nJOIN students AS T2 ON T1.address_id = T2.current_address_id \nGROUP BY T1.address_id \nORDER BY count(*) DESC \nLIMIT 1\n\n"], "7592875dff42ca551a817c31": ["This question cannot be answered with the tables provided as there is no political party information available.", "This question cannot be answered with the given tables as there is no information about political parties.", "SELECT nationality FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player WHERE Final_Table_Made = 'Yes') GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1\n\n", "This question cannot be answered with the given tables as there are no columns related to political party in the tables provided.", "SELECT nationality, count(*) FROM people GROUP BY nationality ORDER BY count(*) DESC LIMIT 1\n\n"], "e7eaf74538d68d7c56effa22": ["SELECT size_description FROM sizes WHERE size_code = (SELECT size_code FROM breeds WHERE breed_name = 'Husky')", "SELECT size_description FROM sizes WHERE size_code = (SELECT size_code FROM breeds WHERE breed_name = 'Husky')", "SELECT size_description FROM Sizes WHERE size_code = (SELECT size_code FROM Dogs WHERE breed_code = (SELECT breed_code FROM Breeds WHERE breed_name = 'Husky'))", "SELECT size_description FROM sizes WHERE size_code = (SELECT size_code FROM breeds WHERE breed_name = 'Husky')", "SELECT size_description FROM sizes WHERE size_code = (SELECT size_code FROM breeds WHERE breed_name = 'Husky')"], "984c6346bf357416e68bd841": ["SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n", "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n", "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n", "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n", "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n"], "cc5ed80c86257f44a85cfcc7": ["SELECT state FROM VOTES GROUP BY state ORDER BY count(DISTINCT contestant_number) DESC LIMIT 1\n\n", "SELECT state FROM VOTES GROUP BY state ORDER BY count(DISTINCT contestant_number) DESC LIMIT 1\n\n", "SELECT state FROM VOTES GROUP BY state ORDER BY count(DISTINCT contestant_number) DESC LIMIT 1\n\n", "SELECT state, COUNT(DISTINCT contestant_number) AS num_contestants_supported\nFROM VOTES\nGROUP BY state\nORDER BY num_contestants_supported DESC\nLIMIT 1\n\n", "SELECT state, COUNT(DISTINCT contestant_number) AS num_contestants FROM VOTES GROUP BY state ORDER BY num_contestants DESC LIMIT 1\n\n"], "e8cc42774473620f77bb9875": ["SELECT nationality FROM people GROUP BY nationality HAVING count(*) >= 2\n\n", "SELECT nationality FROM people GROUP BY nationality HAVING count(*) >= 2\n\n", "SELECT Nationality FROM people GROUP BY Nationality HAVING count(*) >= 2\n\n", "SELECT nationality FROM people GROUP BY nationality HAVING count(*) >= 2\n\n", "SELECT nationality FROM people GROUP BY nationality HAVING count(*) >= 2\n\n"], "43e95f397db025ed6fe2d6cd": ["SELECT count(*) AS Number_of_Players, avg(Height) AS Average_Height FROM people AS P JOIN poker_player AS PP ON P.People_ID = PP.People_ID WHERE Nationality = 'Russia'", "SELECT * FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Nationality = \"Russia\"", "SELECT COUNT(*) AS TotalPlayers, AVG(Height) AS AverageHeight, MAX(Earnings) AS HighestEarnings, MIN(Birth_Date) AS YoungestPlayerBirthDate\nFROM people AS p\nJOIN poker_player AS pp ON p.People_ID = pp.People_ID\nWHERE p.Nationality = 'Russia'", "SELECT COUNT(*) as total_players, AVG(Height) as avg_height, MAX(Earnings) as max_earnings\nFROM poker_player\nJOIN people ON poker_player.People_ID = people.People_ID\nWHERE people.Nationality = 'Russia'", "SELECT COUNT(*) AS Number_of_Players, AVG(Height) AS Average_Height, MAX(Earnings) AS Highest_Earnings, MIN(Birth_Date) AS Youngest_Player FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Nationality = 'Russia'"], "7204dc555a6f917d172fd5f1": ["This question does not seem to be relevant to the given tables.", "SELECT avg(horses_owned) FROM channels", "This question does not seem applicable to the provided tables.", "This question does not seem relevant to the provided tables.", "SELECT avg(Hight_definition_TV) FROM TV_Channel"], "8d744f8a80fd2651a4a83e81": ["SELECT birth_year, citizenship, COUNT(*) FROM singer GROUP BY birth_year, citizenship\n\n", "SELECT birth_year, citizenship, count(*) FROM singer GROUP BY birth_year, citizenship", "SELECT Birth_Year, Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Birth_Year, Citizenship\n\n", "SELECT Birth_Year, Citizenship, COUNT(*) FROM singer GROUP BY Birth_Year, Citizenship\n\n", "SELECT Birth_Year, Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Birth_Year, Citizenship\n\n"], "5fdf47909429689d5f68df18": ["SELECT name, birth_date FROM people ORDER BY name ASC\n\n", "SELECT Name, Birth_Date FROM people ORDER BY Name ASC\n\n", "SELECT Name, Birth_Date FROM people ORDER BY Name ASC\n\n", "SELECT Name ,  Birth_Date FROM people ORDER BY Name", "SELECT Name, Birth_Date FROM people ORDER BY Name ASC\n\n"], "6f44d4af4e864d84c1f51a2f": ["SELECT professional_id, cell_number \nFROM Professionals \nWHERE professional_id IN (\n    SELECT professional_id \n    FROM Treatments \n    GROUP BY professional_id \n    HAVING COUNT(DISTINCT treatment_type_code) >= 2\n)", "SELECT professional_id, cell_number FROM Treatments \nGROUP BY professional_id \nHAVING COUNT(DISTINCT treatment_type_code) >= 2", "SELECT professional_id, cell_number FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2\n\n", "SELECT professional_id, cell_number FROM Professionals \nWHERE professional_id IN \n(SELECT professional_id FROM Treatments \nGROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)", "SELECT professional_id, cell_number FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2\n\n"], "ca7a6cffedb4249de6fd3a28": ["SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')"], "935d9baaa4e020a703422a6e": ["SELECT Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID\n\n", "SELECT Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID", "SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID", "SELECT Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID\n\n", "SELECT Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID"], "7692795cba0092233db6fb9c": ["SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = \"The Rise of the Blue Beetle!\" \n\n", "SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = \"The Rise of the Blue Beetle!\") \n\n", "SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = \"The Rise of the Blue Beetle!\" \n\n", "SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = \"The Rise of the Blue Beetle!\" \n\n", "SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = \"The Rise of the Blue Beetle!\" \n\n"], "c2e31d83c83d90286972a475": ["SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'", "SELECT cell_mobile_number FROM students WHERE first_name = \"Timmothy\" AND last_name = \"Ward\" \n\n", "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward' \n\n", "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward' \n\n", "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward' \n\n"], "517659d06f525adcce5465a7": ["SELECT state FROM owners INTERSECT SELECT state FROM professionals\n\n", "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "SELECT state FROM owners\nINTERSECT\nSELECT state FROM professionals", "SELECT DISTINCT state FROM owners INTERSECT SELECT DISTINCT state FROM professionals\n\n", "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals\n\n"], "3d26fb055d5473abfc5e6b75": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the provided tables.", "This question cannot be answered directly using the tables provided. Additional information or tables related to campus food quality would be needed.", "This question cannot be answered with the provided tables."], "cf9b6bc2c13f3977ec8b3614": ["SELECT name \nFROM Highschooler \nWHERE ID IN \n(SELECT student_id \nFROM Likes \nGROUP BY student_id \nHAVING COUNT(*) >= 2)", "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING count(*) >= 2)", "SELECT T1.name \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T2.student_id \nHAVING COUNT(*) >= 2", "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING count(*) >= 2)", "SELECT name \nFROM Highschooler \nWHERE ID IN (SELECT student_id \n             FROM Likes \n             GROUP BY student_id \n             HAVING COUNT(*) >= 2)"], "35951b681a7d7ab11983ae4d": ["SELECT * FROM TV_Channel WHERE series_name = \"Sky Radio\" ORDER BY Air_Date DESC LIMIT 1", "SELECT * FROM TV_Channel WHERE series_name = \"Sky Radio\" ORDER BY id DESC LIMIT 1", "SELECT * FROM TV_Channel WHERE series_name = \"Sky Radio\" ORDER BY Air_Date DESC LIMIT 1", "SELECT * FROM TV_Channel WHERE series_name = 'Sky Radio' ORDER BY Air_Date DESC LIMIT 1", "SELECT * FROM TV_Channel WHERE series_name = \"Sky Radio\" ORDER BY id DESC LIMIT 1"], "b670b1fc3f7bab4921cc7923": ["SELECT Birthplace FROM singer WHERE Citizenship = 'United States' GROUP BY Birthplace ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Birthplace, COUNT(*) FROM Singer WHERE Citizenship = 'United States' GROUP BY Birthplace ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Birthplace FROM Singer WHERE Citizenship = 'United States' GROUP BY Birthplace ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT birthplace FROM singer WHERE citizenship = 'United States' GROUP BY birthplace ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Birth_Year FROM singer WHERE Citizenship = 'United States' GROUP BY Birth_Year ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "595ba79c4d852f7066427eba": ["SELECT count(*) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND Language IN (SELECT Language FROM countrylanguage GROUP BY Language HAVING min(Percentage)))", "SELECT count(DISTINCT CountryCode) FROM countrylanguage WHERE IsOfficial = 'T' AND Language IN (SELECT Language FROM countrylanguage GROUP BY Language HAVING min(Percentage))", "SELECT count(*) FROM countrylanguage WHERE language IN (SELECT language FROM countrylanguage GROUP BY language HAVING MIN(Percentage))", "SELECT count(DISTINCT CountryCode) FROM countrylanguage WHERE IsOfficial = 'T' AND Language IN \n(SELECT Language FROM countrylanguage GROUP BY Language HAVING MIN(Percentage))", "SELECT count(*) FROM countrylanguage WHERE IsOfficial = 'T' AND Language IN (SELECT Language FROM countrylanguage GROUP BY Language HAVING min(Percentage))"], "940a9f330805989989aa4e03": ["SELECT DISTINCT grade FROM Highschooler", "SELECT DISTINCT grade FROM Highschooler", "SELECT DISTINCT grade FROM Highschooler", "SELECT DISTINCT grade FROM Highschooler", "SELECT DISTINCT grade FROM Highschooler"], "88c1c5a94ba1e98610003721": ["SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'", "SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'", "SELECT count(Language) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'", "SELECT COUNT(Language) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'", "SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'"], "92db0b461e6dbe59d8d505f3": ["SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = 'Brandon Vietti'\n\n", "SELECT studio FROM Cartoon WHERE Directed_by = 'Brandon Vietti'\n\n", "SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by = \"Brandon Vietti\"", "SELECT studio FROM Cartoon WHERE Directed_by = 'Brandon Vietti'\n\n", "SELECT studio FROM Cartoon WHERE Directed_by = 'Brandon Vietti'\n\n"], "fe734140d39efa9c9a02aa0f": ["SELECT feature_name FROM Other_Available_Features WHERE feature_id = (SELECT feature_id FROM Other_Property_Features WHERE property_id = (SELECT property_id FROM Properties ORDER BY date_on_market ASC LIMIT 1))\n\n", "SELECT feature_name FROM Other_Available_Features WHERE feature_id IN (SELECT feature_id FROM Other_Property_Features WHERE property_id IN (SELECT property_id FROM Properties ORDER BY date_on_market LIMIT 1))\n\n", "SELECT feature_name FROM Other_Available_Features WHERE feature_id IN (SELECT feature_id FROM Other_Property_Features WHERE property_id IN (SELECT property_id FROM Properties ORDER BY date_on_market ASC LIMIT 1))\n\n", "SELECT feature_name FROM Other_Available_Features WHERE feature_id IN (SELECT feature_id FROM Other_Property_Features WHERE property_id IN (SELECT property_id FROM Properties ORDER BY date_on_market LIMIT 1))\n\n", "SELECT max(date_on_market) FROM Properties\n\n"], "4ef254748ef822108b8ebe29": ["SELECT count(*) FROM countrylanguage WHERE Language = \"Spanish\" AND Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE Language = \"Spanish\")", "SELECT count(*) FROM countrylanguage WHERE Language = \"Spanish\" AND Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE Language = \"Spanish\")", "SELECT count(*) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE Language = 'Spanish')", "SELECT count(*) FROM countrylanguage WHERE Language = \"Spanish\" AND Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE Language = \"Spanish\")", "SELECT count(*) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE Language = 'Spanish')"], "939b52eb0700423a5de92de0": ["SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English' \n\n", "SELECT DISTINCT cl.CountryCode FROM countrylanguage AS cl WHERE cl.Language != 'English'", "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English' \n\n", "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English' \n\n", "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English' \n\n"], "85ecb75fc9070bafcd062475": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n"], "6725e3db26951441fa13f5be": ["SELECT DISTINCT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses)", "SELECT DISTINCT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)", "SELECT DISTINCT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)", "SELECT DISTINCT course_name FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id", "SELECT DISTINCT course_name FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id"], "9dc42e6bc903c1aa57b3a242": ["SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nHAVING COUNT(DISTINCT T2.degree_program_id) = 2", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nHAVING COUNT(DISTINCT T2.degree_program_id) = 2", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nHAVING COUNT(DISTINCT T2.degree_program_id) = 2", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name\nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id\nGROUP BY T1.student_id\nHAVING COUNT(DISTINCT T2.degree_program_id) = 2", "SELECT student_id, first_name, middle_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment GROUP BY student_id HAVING COUNT(DISTINCT degree_program_id) = 2)"], "029c4024d0a95c493924cf19": ["SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)", "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 1)", "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)", "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)", "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 1)"], "5cb62a6369126b9d45d4f437": ["SELECT Content FROM TV_Channel WHERE series_name = \"Emily\" \n\n", "SELECT Content FROM TV_Channel WHERE series_name = \"Emily\"", "SELECT Pixel_aspect_ratio_PAR FROM TV_Channel WHERE series_name = \"Emily\"", "SELECT content FROM TV_Channel WHERE series_name = \"Emily\"", "SELECT Content FROM TV_Channel WHERE series_name = \"Emily\" \n\n"], "bb94fde2ef4122c290b3dfaf": ["SELECT count(*) FROM AREA_CODE_STATE WHERE state = 'Alabama'", "SELECT count(*) FROM VOTES WHERE state = 'Alabama'", "SELECT count(*) FROM VOTES WHERE state = 'Alabama'", "SELECT count(*) FROM VOTES WHERE state = 'Alabama'", "SELECT count(*) FROM VOTES WHERE state = 'Alabama'"], "84e2252cf2ca5803aad40511": ["SELECT first_name FROM students WHERE permanent_address_id != current_address_id\n\n", "SELECT first_name FROM students WHERE permanent_address_id <> current_address_id\n\n", "SELECT first_name FROM students WHERE permanent_address_id <> current_address_id\n\n", "SELECT first_name FROM Students WHERE permanent_address_id <> current_address_id\n\n", "SELECT first_name FROM students WHERE permanent_address_id != current_address_id\n\n"], "36bec24b62350fcac2075739": ["This question cannot be answered with the provided tables.", "This question cannot be answered with the given tables. The tables provided do not have any information related to public transport or home prices.", "This question cannot be answered directly with the given tables. Additional data on public transport availability and its impact on home prices would be needed to answer this question.", "This question cannot be answered directly with the given tables. More information on the relationship between public transport availability and home prices would be needed in order to provide a SQL query for this question.", "This question cannot be answered with the provided tables."], "5b456d469e235bc1e619d405": ["SELECT * FROM Scholarships WHERE application_open = true", "SELECT scholarship_name FROM Scholarships WHERE application_open = true", "SELECT degree_summary_name FROM degree_programs WHERE other_details LIKE '%scholarship%'", "SELECT scholarship_name FROM Scholarships WHERE application_open = 'Yes'", "This question cannot be answered with the provided tables as there is no table related to scholarships."], "72296c4d0c0542cf720d5840": ["SELECT T2.first_name ,  T2.last_name ,  T4.size_description FROM Owners AS T1 JOIN Dogs AS T3 ON T1.owner_id = T3.owner_id JOIN Sizes AS T4 ON T3.size_code = T4.size_code", "SELECT O.first_name, O.last_name, S.size_description \nFROM Owners O \nJOIN Dogs D ON O.owner_id = D.owner_id \nJOIN Sizes S ON D.size_code = S.size_code", "SELECT T2.first_name, T2.last_name, T4.size_description \nFROM owners AS T2 \nJOIN dogs AS T3 ON T2.owner_id = T3.owner_id \nJOIN sizes AS T4 ON T3.size_code = T4.size_code", "SELECT T2.first_name ,  T2.last_name ,  T4.size_description FROM owners AS T2 JOIN dogs AS T3 ON T2.owner_id = T3.owner_id JOIN sizes AS T4 ON T3.size_code = T4.size_code", "SELECT T2.first_name, T2.last_name, T4.size_description \nFROM Owners AS T2 \nJOIN Dogs AS T3 ON T2.owner_id = T3.owner_id \nJOIN Sizes AS T4 ON T3.size_code = T4.size_code"], "8a13b4b67f3d9c921098f9f8": ["SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name\n\n", "SELECT T1.Name, SUM(T2.Sales) \nFROM singer AS T1 \nJOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID \nGROUP BY T1.Name", "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name", "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name", "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name"], "fdc9d6f96958104f51142363": ["SELECT T2.Title, T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\n\n", "SELECT T2.Title, T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\n\n", "SELECT T2.Title, T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\n\n", "SELECT T2.Title, T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\n\n", "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID\n\n"], "4a42fa222357e45dc2fb137b": ["SELECT max(age) FROM dogs", "SELECT max(age) FROM dogs", "SELECT max(age) FROM dogs", "SELECT max(age) FROM dogs", "SELECT max(age) FROM Dogs"], "b3585bc1c5383f5909679349": ["SELECT T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name = \"Contestant Name\"", "SELECT * FROM VOTES WHERE contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = \"Name\")", "SELECT contestant_name, phone_number FROM contestants AS c JOIN votes AS v ON c.contestant_number = v.contestant_number WHERE c.contestant_name = 'Name'", "SELECT * FROM VOTES WHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'name')", "SELECT * FROM contestants WHERE contestant_name = 'Name'"], "d150232bb9e3644d6fcad973": ["SELECT avg(volume) FROM Students WHERE date_first_registered > '2001-01-01'", "SELECT avg(volume) FROM students WHERE date_first_registered > '2001'", "SELECT avg(volume) FROM students WHERE date_first_registered > '2001-01-01'", "SELECT avg(volume) FROM student_enrolment WHERE date_first_registered > '2001-01-01'", "SELECT avg(volume) FROM students WHERE date_first_registered > '2001'"], "15e5c262cde4f7908490aff2": ["SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n", "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n", "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n", "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n", "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n"], "a89811daac02a0d1d31134e1": ["SELECT * FROM Students ORDER BY last_name DESC", "SELECT * FROM students ORDER BY last_name DESC", "SELECT * FROM Students ORDER BY last_name DESC", "SELECT * FROM Students ORDER BY last_name DESC", "SELECT * FROM Students ORDER BY last_name DESC"], "4557c3aa3f5c48016598615d": ["SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)", "SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)", "SELECT count(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)", "SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)", "SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)"], "d46bbf2ca54099b8b3f81e88": ["SELECT Name FROM singer WHERE Citizenship <> 'France'\n\n", "SELECT Name FROM singer WHERE Citizenship != 'France' \n\n", "SELECT Name FROM singer WHERE Citizenship != 'France' \n\n", "SELECT Name FROM singer WHERE Citizenship <> 'France'", "SELECT Name FROM singer WHERE Citizenship != 'France'"], "b71b5348e91cf931b258c535": ["SELECT department_description FROM departments WHERE department_name LIKE '%computer%'", "SELECT department_description FROM departments WHERE department_name LIKE '%computer%'", "SELECT department_description FROM departments WHERE department_name LIKE '%computer%'", "SELECT department_description FROM departments WHERE department_name LIKE '%computer%' \n\n", "SELECT department_description FROM departments WHERE department_name LIKE '%computer%'"], "0579ceef75d9951f3dd83f84": ["SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings DESC\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC\n\n", "SELECT Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY Earnings DESC\n\n", "SELECT name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY earnings DESC\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC\n\n"], "406990ea361751947d0fbbe1": ["SELECT T2.first_name, T2.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY T2.professional_id ORDER BY count(*) DESC\n\n", "SELECT T1.first_name, T1.last_name, COUNT(T3.treatment_id) AS num_treatments \nFROM Professionals AS T1 \nJOIN Treatments AS T3 ON T1.professional_id = T3.professional_id \nGROUP BY T1.professional_id \nORDER BY num_treatments DESC", "SELECT T1.first_name, T1.last_name, count(*) AS treatment_count\nFROM professionals AS T1\nJOIN treatments AS T2 ON T1.professional_id = T2.professional_id\nGROUP BY T1.professional_id\nORDER BY treatment_count DESC", "SELECT T2.first_name, T2.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY T2.professional_id ORDER BY count(*) DESC\n\n", "SELECT T1.first_name ,  T1.last_name ,  count(*) FROM professionals AS T1 JOIN treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id ORDER BY count(*) DESC\n\n"], "8068808cd35d750a1d595ddf": ["SELECT People_ID, Name FROM people WHERE Name = 'Teodor Salparov'", "SELECT * FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = 'Teodor Salparov'", "SELECT * FROM people WHERE name = 'Teodor Salparov'", "SELECT * FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = \"Teodor Salparov\"", "SELECT People_ID FROM people WHERE Name = 'Teodor Salparov'"], "3b412a6a60c56f7b94906e0c": ["SELECT district FROM city GROUP BY district ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT timezone FROM city GROUP BY timezone ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT district FROM city GROUP BY district ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT timezone FROM city GROUP BY timezone ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT timezone FROM city GROUP BY timezone ORDER BY count(*) DESC LIMIT 1\n\n"], "21cfb5d0d25fbf44b721ac96": ["This question cannot be answered with the given tables.", "This question cannot be translated into SQL as it is asking for an analysis or interpretation of the data, rather than a direct query.", "This question does not appear to be directly answerable with the given tables.", "This question cannot be directly answered with the given tables.", "This question is not directly answerable with the given tables."], "bd0110121ce5779f89015e36": ["SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000\n\n", "SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player WHERE Earnings > 300000)", "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000\n\n", "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000\n\n", "SELECT Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE Earnings > 300000\n\n"], "7f9e3619c3335f56d27906a6": ["SELECT max(charge_amount) FROM charges\n\n", "SELECT max(charge_amount) FROM charges\n\n", "SELECT max(charge_amount) FROM charges\n\n", "SELECT max(charge_amount) FROM charges\n\n", "SELECT max(charge_amount) FROM charges\n\n"], "a046a4ff02aa0df063972ffe": ["SELECT Region, Population FROM country WHERE Name = 'Angola'", "SELECT Region, Population FROM country WHERE Name = \"Angola\"", "SELECT Region, Population FROM country WHERE Name = 'Angola'", "SELECT Region, Population FROM country WHERE Name = 'Angola'", "SELECT Region, Population FROM country WHERE Name = 'Angola'"], "b23076496e10f602dba7d38a": ["SELECT Name FROM singer WHERE Citizenship = Name\n\n", "SELECT name FROM singer WHERE citizenship = name\n\n", "SELECT Name FROM singer WHERE Citizenship  =  Name", "SELECT * FROM singer WHERE Citizenship = Name", "SELECT Name FROM singer WHERE Citizenship = Nationality\n\n"], "52a8500919d544f142937711": ["SELECT name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID", "SELECT Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID", "SELECT Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID", "SELECT Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID", "SELECT Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID"], "46a0b5f3e96b3025d48f8cf4": ["SELECT avg(transcript_date) FROM transcripts", "SELECT AVG(transcript_date) FROM Transcripts", "SELECT avg(transcript_date) FROM transcripts", "SELECT AVG(transcript_date) FROM Transcripts", "SELECT avg(transcript_date) FROM transcripts"], "3f9c920a8980cc8fb15c2093": ["SELECT country.Name, country.LocalName FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Qandahar'", "SELECT T2.LocalName FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Qandahar'", "SELECT governmentform FROM country WHERE capital = (SELECT id FROM city WHERE name = 'Qandahar')", "SELECT T2.LocalName FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Qandahar'", "SELECT T2.LocalName FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Qandahar'"], "76b1dd4d13a386e809031207": ["SELECT property_address FROM Properties WHERE property_id = 3\n\n", "SELECT property_address FROM Properties WHERE property_id = 3\n\n", "SELECT property_address FROM properties WHERE property_id = 3\n\n", "SELECT property_address FROM Properties WHERE property_id = 3\n\n", "SELECT property_address FROM Properties WHERE property_id = 3\n\n"], "6f168d52eaf343495fdb312f": ["This question cannot be answered with the given tables as there is no table containing information about passwords.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the provided tables.", "This question cannot be answered with the given tables."], "92271095654f94668d490ef1": ["SELECT city.Name, city.Population, country.Population\nFROM city\nJOIN country ON city.CountryCode = country.Code\nWHERE city.District = 'Urban'\nORDER BY city.Population DESC, country.Population DESC", "SELECT city.Name, city.Population, country.Population \nFROM city \nJOIN country ON city.CountryCode = country.Code \nWHERE city.District = 'Urban' \nORDER BY city.Population DESC", "SELECT city.Name, city.Population, country.Population \nFROM city \nJOIN country ON city.CountryCode = country.Code \nWHERE city.District = 'Urban' \nORDER BY country.Population DESC, city.Population DESC", "SELECT Name, Population, LifeExpectancy FROM city JOIN country ON city.CountryCode = country.Code WHERE LifeExpectancy IS NOT NULL ORDER BY Population DESC\n\n", "SELECT city.Name, city.Population, country.Population, country.LifeExpectancy, countrylanguage.Language\nFROM city\nJOIN country ON city.CountryCode = country.Code\nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode\nWHERE city.Population > 1000000 AND country.Population > 5000000\nORDER BY country.LifeExpectancy DESC, countrylanguage.Language"], "4c36c79ea93ba6736ee878e7": ["SELECT breed_code, breed_name, count(*) as breed_count FROM Breeds GROUP BY breed_code, breed_name ORDER BY breed_count DESC LIMIT 1", "SELECT breed_code, count(*) FROM dogs GROUP BY breed_code ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT breed_code, COUNT(*) FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT size_description FROM sizes WHERE size_code IN (SELECT size_code FROM dogs GROUP BY size_code ORDER BY count(*) DESC LIMIT 1)", "SELECT size_code, COUNT(*) FROM dogs GROUP BY size_code ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "c5074e818fa40d98d2cbc5f1": ["SELECT country.Name, COUNT(countrylanguage.Language) AS NumLanguages\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE country.Continent = 'Africa'\nGROUP BY country.Code, country.Name", "SELECT c.Name, COUNT(cl.Language) AS Num_Languages\nFROM country c\nJOIN countrylanguage cl ON c.Code = cl.CountryCode\nWHERE c.Continent = 'Africa'\nGROUP BY c.Name\nORDER BY Num_Languages DESC", "SELECT country.Name, count(countrylanguage.Language) as NumberOfLanguages\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE country.Continent = 'Africa'\nGROUP BY country.Name", "SELECT c.Name, cl.Language, cl.Percentage\nFROM country c\nJOIN countrylanguage cl ON c.Code = cl.CountryCode\nWHERE c.Continent = 'Africa'", "SELECT Name, COUNT(Language) AS Number_of_Languages\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE continent = 'Africa'\nGROUP BY country.Code, country.Name"], "181c8e32e2afc64e65b72772": ["SELECT count(*) FROM Cartoon\n\n", "SELECT count(DISTINCT Directed_by) FROM Cartoon\n\n", "SELECT count(*) FROM Cartoon WHERE Directed_by  =  \"Animation Studio\"", "SELECT count(*) FROM Cartoon WHERE Directed_by LIKE '%Animation Studio%' OR Written_by LIKE '%Animation Studio%'", "SELECT count(*) FROM Cartoon WHERE Directed_by = \"Animation Studio\""], "b8ae87584fd9edcac60bef59": ["SELECT country.DrivingSide FROM country ORDER BY SurfaceArea ASC LIMIT 1\n\n", "SELECT country.Driving_side FROM country WHERE SurfaceArea = (SELECT MIN(SurfaceArea) FROM country)", "SELECT GovernmentForm FROM country WHERE SurfaceArea = (SELECT MIN(SurfaceArea) FROM country)", "SELECT GovernmentForm FROM country WHERE SurfaceArea = (SELECT min(SurfaceArea) FROM country)", "SELECT GovernmentForm FROM country ORDER BY SurfaceArea ASC LIMIT 1"], "d64abeeef34fd25ff2184f54": ["SELECT Title, Sales, Highest_Position FROM song ORDER BY Sales, Highest_Position", "SELECT Title, Sales, Highest_Position FROM song ORDER BY Sales, Highest_Position", "SELECT Title, Sales, Highest_Position FROM song", "SELECT Title, Sales, Highest_Position FROM song ORDER BY Sales, Highest_Position", "SELECT Sales, Highest_Position FROM song GROUP BY Sales, Highest_Position"], "8dde17586d1e740a1a242806": ["SELECT T1.role_code ,  count(*) FROM professionals AS T1 JOIN treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.treatment_type_code = \"adoption\" GROUP BY T1.role_code", "SELECT T2.first_name, T2.last_name, T2.email_address, T2.cell_number, COUNT(T3.dog_id) AS Number_of_Adoptions\nFROM Professionals AS T1\nJOIN Treatments AS T3 ON T1.professional_id = T3.professional_id\nJOIN Dogs AS T4 ON T3.dog_id = T4.dog_id\nWHERE T3.treatment_type_code = 'Adoption'\nGROUP BY T1.professional_id, T2.first_name, T2.last_name, T2.email_address, T2.cell_number\nORDER BY Number_of_Adoptions DESC", "SELECT T3.role_code, count(*) \nFROM dogs AS T1 \nJOIN treatments AS T2 ON T1.dog_id = T2.dog_id \nJOIN professionals AS T3 ON T2.professional_id = T3.professional_id \nWHERE T3.role_code = 'dog trainer' AND T1.date_adopted IS NOT NULL \nGROUP BY T3.role_code", "SELECT T1.first_name, T1.last_name, T2.treatment_type_description \nFROM professionals AS T1 \nJOIN treatments AS T2 ON T1.professional_id = T2.professional_id \nWHERE T2.treatment_type_description = 'Training' \nAND T2.date_of_treatment <= Dogs.date_adopted\nAND T2.date_of_treatment >= Dogs.date_arrived", "SELECT T2.first_name ,  T2.last_name ,  T2.email_address ,  T2.cell_number FROM professionals AS T1 JOIN treatments AS T3 ON T1.professional_id  =  T3.professional_id JOIN dogs AS T2 ON T3.dog_id  =  T2.dog_id WHERE T3.treatment_type_code = \"Training\" AND T2.date_adopted IS NOT NULL"], "b3aed91140fcaf03b4a61432": ["SELECT T1.degree_program_id, T1.degree_summary_name \nFROM degree_programs AS T1 \nJOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id \nGROUP BY T1.degree_program_id \nORDER BY count(*) DESC \nLIMIT 1\n\n", "SELECT T1.degree_program_id, T1.degree_summary_name \nFROM Degree_Programs AS T1 \nJOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id \nGROUP BY T1.degree_program_id \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT T1.degree_program_id, T1.degree_summary_name \nFROM degree_programs AS T1 \nJOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id \nGROUP BY T1.degree_program_id \nORDER BY count(*) DESC \nLIMIT 1", "SELECT T1.degree_program_id, T1.degree_summary_name FROM degree_programs AS T1 JOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.degree_program_id, T1.degree_summary_name FROM degree_programs AS T1 \nJOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id \nGROUP BY T1.degree_program_id \nORDER BY count(*) DESC LIMIT 1\n\n"], "3f8b9cf74bacadda6d734234": ["SELECT DISTINCT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'", "SELECT DISTINCT city.name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'", "SELECT DISTINCT c.Name \nFROM city c \nJOIN country co ON c.CountryCode = co.Code\nJOIN countrylanguage cl ON co.Code = cl.CountryCode\nWHERE co.Continent = 'Asia' AND cl.Language = 'Chinese' AND cl.IsOfficial = 'T'", "SELECT city.Name FROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'", "SELECT DISTINCT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'"], "1a1c91df8b04c5b77f52c47e": ["SELECT DISTINCT state, created FROM VOTES", "SELECT DISTINCT state, created FROM VOTES\n\n", "SELECT DISTINCT state, created FROM VOTES", "SELECT DISTINCT state, created FROM VOTES", "SELECT DISTINCT state, created FROM VOTES\n\n"], "ec9f84eb334c59fd281ba573": ["Weight can impact a dog's health and lifespan in various ways. Overweight dogs are at a higher risk for health issues such as diabetes, arthritis, and heart disease. They may also have a shorter lifespan due to these health complications. On the other hand, underweight dogs may have weakened immune systems and be more susceptible to illnesses, which can also impact their lifespan. It is important for dogs to maintain a healthy weight through proper diet and exercise to ensure optimal health and longevity.", "This question cannot be answered directly from the given tables as there is no specific data related to the impact of a dog's weight on its health and lifespan. Additional data and analysis would be needed to answer this question.", "SELECT T1.weight, T2.treatment_type_description FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id", "Weight can impact a dog's health and lifespan in various ways, including joint health, risk of obesity-related diseases, and overall mobility. Dogs that are overweight are at a higher risk for conditions such as diabetes, heart disease, and arthritis. Additionally, excess weight can put strain on a dog's joints and lead to decreased mobility and quality of life. It is important for dog owners to monitor their pet's weight and ensure they are receiving appropriate nutrition and exercise to maintain a healthy weight.", "Weight can impact a dog's health and lifespan by affecting its overall body condition, risk of certain diseases, and mobility. Overweight dogs are more prone to conditions such as diabetes, arthritis, and heart disease, which can decrease their lifespan. Additionally, excess weight can put strain on joints and organs, leading to decreased mobility and overall quality of life for the dog. Regular exercise and a balanced diet can help manage weight and improve a dog's health and longevity."], "4a360dea03010dd82c6d8897": ["This question cannot be answered directly with the given tables. The tables provided are related to properties, features, and property types, but do not contain information about recessions or their effects on real estate.", "This question cannot be answered directly with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered directly using the provided tables. More specific data or a different table structure is needed to answer this question.", "Sorry, the provided tables do not contain information related to the effects of recessions on real estate."], "26e59036b49ce11467ab3320": ["SELECT DISTINCT Name FROM city WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'India')", "SELECT Name FROM city WHERE CountryCode = 'IND'", "SELECT Name FROM city WHERE CountryCode = 'IND'", "SELECT Name FROM city WHERE CountryCode = 'IND'", "SELECT Name FROM city WHERE CountryCode = 'IND'"], "b7ac5a526a2acd4a8646161a": ["SELECT T1.name, T2.name\nFROM Highschooler AS T1\nJOIN Likes AS T2 ON T1.ID = T2.student_id\nJOIN Highschooler AS T3 ON T2.liked_id = T3.ID\nWHERE T1.ID <> T3.ID", "SELECT T2.name, T3.name\nFROM Highschooler AS T1\nJOIN Friend AS T2 ON T1.ID = T2.student_id\nJOIN Highschooler AS T3 ON T2.friend_id = T3.ID", "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id JOIN Highschooler AS T3 ON T2.liked_id = T3.ID WHERE T1.ID = T3.ID", "SELECT T2.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id", "SELECT T1.name ,  T2.grade FROM highschooler AS T1 JOIN likes AS T2 ON T1.ID = T2.student_id"], "f679bcac08fd484f53fb6b38": ["SELECT ID FROM Highschooler WHERE name = 'Kyle' \n\n", "SELECT ID FROM Highschooler WHERE name = 'Kyle'", "SELECT ID FROM Highschooler WHERE name = 'Kyle' \n\n", "SELECT ID FROM Highschooler WHERE name = 'Kyle'", "SELECT ID FROM Highschooler WHERE name = 'Kyle' \n\n"], "a34d767fbfce6475533a7d47": ["SELECT count(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')", "SELECT count(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')", "SELECT COUNT(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')", "SELECT count(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')", "SELECT count(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')"], "98cb361e063cd880fec6cdbc": ["SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1\n\n", "SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1\n\n", "SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1\n\n", "SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1\n\n", "SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1\n\n"], "3c8dfd129335dd4c4c37a41a": ["SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\n\n", "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\n\n", "SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)", "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\n\n", "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\n\n"], "94a58fbf85d9bfc7b2b840b0": ["SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'\n\n", "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'", "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'", "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'\n\n", "SELECT T2.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\""], "5636d3917273e15d9ad2a05a": ["This query cannot be directly answered with the given tables. It would require additional information on how the course descriptions are stored and how the audio format conversion would be implemented.", "This question cannot be answered with the given database schema as it does not contain any information related to audio formats or conversions.", "This question cannot be answered using the provided tables.", "This question cannot be answered with the provided tables.", "This question cannot be answered directly using the given tables."], "d2b5c3740e770df7ba155f92": ["SELECT Viewers_m FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = \"Music Box Italia\"", "SELECT * FROM TV_Channel WHERE series_name = \"Music Box Italia\"", "SELECT * FROM TV_Channel WHERE series_name = \"Music Box Italia\"", "SELECT * FROM TV_Channel WHERE series_name = \"Music Box Italia\"", "SELECT id,series_name FROM TV_Channel WHERE series_name = \"Music Box Italia\""], "b995bb0b8c71cc0194455ca5": ["SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n", "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n"], "5f2ac1b8be47c6a84e722f90": ["SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language <> 'English') AND GovernmentForm <> 'Republic'", "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language != 'English') AND GovernmentForm != 'Republic'", "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language != 'English') AND GovernmentForm != 'Republic'", "SELECT C.code FROM country C\nWHERE C.code NOT IN (SELECT CL.CountryCode FROM countrylanguage CL WHERE CL.Language = 'English')\nAND C.GovernmentForm != 'Republic'", "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language != 'English') AND GovernmentForm != 'Republic'"], "9600196d1933b067a75fa462": ["SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code IN (SELECT treatment_type_code FROM treatments WHERE dog_id IN (SELECT dog_id FROM dogs WHERE date_adopted IS NOT NULL) GROUP BY treatment_type_code ORDER BY count(*) DESC LIMIT 1)", "SELECT T2.treatment_type_description, COUNT(*) as count FROM treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code WHERE T2.treatment_type_description = \"Promoting dog adoption\" GROUP BY T2.treatment_type_description ORDER BY count DESC LIMIT 1", "SELECT T2.treatment_type_description, COUNT(*) AS frequency \nFROM Treatments AS T1 \nJOIN Treatment_Types AS T2 \nON T1.treatment_type_code = T2.treatment_type_code \nWHERE T2.treatment_type_description = 'promote adoption'\nGROUP BY T2.treatment_type_description \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT T1.treatment_type_description FROM treatment_types AS T1 JOIN treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code WHERE T2.date_of_treatment BETWEEN date_arrived AND date_adopted GROUP BY T1.treatment_type_code ORDER BY count(*) DESC LIMIT 1", "SELECT T2.treatment_type_description \nFROM treatments AS T1 \nJOIN treatment_types AS T2 \nON T1.treatment_type_code = T2.treatment_type_code \nWHERE T2.treatment_type_description = \"Promoting dog adoption\" \nGROUP BY T2.treatment_type_description \nORDER BY count(*) DESC \nLIMIT 1"], "d567bc6e8dc9d11914e6074d": ["SELECT series_name FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT id FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT series_name ,  Channel FROM TV_Channel WHERE series_name  =  \"Sky Radio\"\n\n", "INSERT INTO TV_Channel (series_name) VALUES (\"Sky Radio\")\n\n", "INSERT INTO TV_series (Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel) VALUES ('Phone survey initiated','2022-10-20','N/A','N/A','N/A','N/A','N/A',(SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')) \n\n"], "4f4ea6178c6dfabda1a5c36b": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables as there are no columns related to the height of the orchestras.", "SELECT avg(Official_ratings_(millions)) FROM performance", "SELECT avg(Official_ratings_(millions)) FROM performance\n\n", "This question cannot be answered with the given tables as there is no column for height in any of the tables."], "f7b5e902b1d7618ffd37ffda": ["SELECT course_description FROM courses WHERE course_name LIKE '%Math%' \n\n", "SELECT course_description FROM Courses WHERE course_name LIKE '%Math%'", "SELECT course_description FROM courses WHERE course_name LIKE '%Math%'\n\n", "SELECT course_description FROM Courses WHERE course_name LIKE '%Math%' \n\n", "SELECT course_description FROM courses WHERE course_name LIKE '%Math%'"], "110c1e320bcdb6b131cd5339": ["SELECT T1.name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings = (SELECT MAX(Earnings) FROM poker_player)", "SELECT T1.name \nFROM people AS T1 \nJOIN poker_player AS T2 ON T1.people_id = T2.people_id \nWHERE T2.earnings = (SELECT max(earnings) FROM poker_player)", "SELECT T2.name \nFROM poker_player AS T1 \nJOIN people AS T2 \nON T1.People_ID = T2.People_ID \nORDER BY T1.Earnings DESC \nLIMIT 1\n\n", "SELECT T2.Name \nFROM poker_player AS T1 \nJOIN people AS T2 ON T1.People_ID = T2.People_ID \nWHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)", "SELECT T2.Name \nFROM poker_player AS T1 \nJOIN people AS T2 ON T1.People_ID = T2.People_ID \nWHERE T1.Earnings = (SELECT MAX(Earnings) FROM poker_player)"], "6123bcc86ccb84ad179bf074": ["SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)", "SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_departed IS NULL)", "SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL)", "SELECT COUNT(*) FROM Owners WHERE owner_id NOT IN (SELECT DISTINCT owner_id FROM Dogs WHERE date_departed IS NULL)", "SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs)"], "46b83fdf0b632c222f8e5f7f": ["SELECT c.Name \nFROM country c\nJOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T'\nJOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T'", "SELECT T2.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T2.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T'", "SELECT DISTINCT c1.Name \nFROM country c1 \nJOIN countrylanguage cl1 ON c1.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T'\nJOIN countrylanguage cl2 ON c1.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T'", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T' INTERSECT SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')", "SELECT Name FROM country WHERE Code IN (\n    SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T'\n    INTERSECT\n    SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T'\n)"], "72d3deb192b1db99fb56a9f6": ["This question requires more statistical analysis and cannot be directly translated into SQL. We would need to use a statistical software like R or Python to perform the regression analysis.", "This question cannot be directly answered with the given tables. In order to perform regression analysis, we would need additional data points and variables to analyze the relationship between orchestra foundation year and performance ratings.", "This question cannot be answered directly with the given tables. A regression analysis would require additional data and variables to determine the relationship between orchestra foundation year and performance ratings.", "This question requires statistical analysis and cannot be directly translated into SQL. You would need to use a statistical software or programming language like R or Python to perform a regression analysis on the data.", "This question cannot be directly answered with the given tables. A regression analysis would require additional data points to determine the relationship between orchestra foundation year and performance ratings."], "3d2cfd01a060e8afd43f9e9a": ["SELECT course_description, COUNT(*) FROM courses GROUP BY course_description\n\n", "SELECT course_description, COUNT(*) FROM Courses GROUP BY course_description\n\n", "SELECT course_description, course_name FROM Courses ORDER BY course_description", "SELECT course_description, COUNT(*) FROM courses GROUP BY course_description\n\n", "SELECT course_description, COUNT(*) FROM Courses GROUP BY course_description\n\n"], "b98ff224ab0b91d9106b0532": ["SELECT AVG(GNP) AS Mean_GNP, SUM(Population) AS Total_Population FROM country WHERE Region = 'US Territory'", "SELECT avg(GNP) ,  sum(Population) FROM country WHERE Continent  =  'North America' AND GovernmentForm  =  'Nonmetropolitan Territory of the US' \n\n", "SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm LIKE '%US territory%'", "SELECT avg(GNP) ,  sum(population) FROM country WHERE Continent  =  \"North America\" AND GovernmentForm  =  \"US territory\"", "SELECT avg(GNP), sum(Population) FROM country WHERE Continent = 'North America' AND GovernmentForm = 'Nonmetropolitan Territory of the US'"], "8d66a515dbf570e0c91cf520": ["SELECT T2.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = \"A Love of a Lifetime\"\n\n", "SELECT T2.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = \"A Love of a Lifetime\"\n\n", "SELECT T2.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = \"A Love of a Lifetime\"\n\n", "SELECT T2.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = \"A Love of a Lifetime\"\n\n", "SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Episode = \"A Love of a Lifetime\")\n\n"], "723a2f591f631a4a3f377ca0": ["SELECT Birth_Year, count(*) FROM singer GROUP BY Birth_Year ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT Birth_Year FROM singer GROUP BY Birth_Year ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT Birth_Year, count(*) FROM singer GROUP BY Birth_Year ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT birth_year, COUNT(*) as debut_count FROM singer GROUP BY birth_year ORDER BY debut_count DESC LIMIT 1", "SELECT Birth_Year, count(*) FROM singer GROUP BY Birth_Year ORDER BY count(*) DESC LIMIT 1\n\n"], "d434da2313d24a24ae6c24c3": ["SELECT count(*) FROM country WHERE GovernmentForm LIKE '%Republic%'", "SELECT count(*) FROM country WHERE GovernmentForm LIKE '%Republic%'", "SELECT count(*) FROM country WHERE GovernmentForm LIKE '%Republic%'\n\n", "SELECT count(*) FROM country WHERE GovernmentForm LIKE '%Republic%'", "SELECT count(*) FROM country WHERE GovernmentForm LIKE '%Republic%'"], "caa1a9116ba4d646f6b42966": ["SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.student_id", "SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.student_id", "SELECT DISTINCT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID JOIN Likes AS T3 ON T2.ID = T3.student_id", "SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.student_id", "SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.student_id"], "5d6fe50a4b52cbdcd50b32da": ["SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200", "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200", "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200", "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200", "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200"], "d1e4b6005c13086bbe490d9d": ["SELECT Grade FROM school WHERE Location = \"Kabul\"", "SELECT Grade FROM school WHERE Location = 'Kabul'", "SELECT grade FROM city WHERE name = 'Kabul'", "SELECT Grade FROM school WHERE Location = 'Kabul' \n\n", "SELECT Grade FROM city WHERE Name = 'Kabul'"], "baea8f01fe8f7d2d7a2f0355": ["SELECT count(*) FROM Dogs WHERE abandoned_yn = 'N'\n\n", "SELECT count(*) FROM Dogs WHERE abandoned_yn = 'N'", "SELECT count(*) FROM Dogs WHERE microchipped_yn = 'Y'", "SELECT count(*) FROM Dogs WHERE abandoned_yn = 'N'\n\n", "SELECT count(*) FROM dogs WHERE abandoned_yn = 'N'"], "c04d65d095e1875bc75e9c70": ["SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = \"The Rise of the Blue Beetle\" \n\n", "SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = \"The Rise of the Blue Beetle\"", "SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = \"The Rise of the Blue Beetle\" \n\n", "SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = \"The Rise of the Blue Beetle\" \n\n", "SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = \"The Rise of the Blue Beetle\""], "3dfbb1d78dd0f5c3be710f91": ["SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)", "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)", "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)", "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)", "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)"], "b526df504c5145c874878769": ["SELECT count(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')", "SELECT count(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')", "SELECT COUNT(DISTINCT Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language = 'Chinese'", "SELECT count(DISTINCT continent) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Chinese')", "SELECT count(DISTINCT Continent) FROM country WHERE code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese' AND IsOfficial = 'T')"], "595b04e7e83d03df5f0934ca": ["SELECT SUM(Pay_per_view_PPV) FROM TV_Channel WHERE series_name = 'Emily'", "SELECT Revenue FROM TV_series WHERE Title = 'Emily' \n\n", "SELECT sum(Pay_per_view_PPV) FROM tv_channel WHERE series_name = \"Emily\"", "SELECT sum(Pay_per_view_PPV) FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Title = 'Emily'", "SELECT SUM(Pay_per_view_PPV) FROM TV_Channel WHERE series_name = 'Emily'"], "91303c9ab5ca7399c8b354bc": ["SELECT aspect_ratio FROM city GROUP BY aspect_ratio ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT City.Name, COUNT(*) FROM City GROUP BY City.Name ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Aspect_Ratio, COUNT(*) \nFROM city \nGROUP BY Aspect_Ratio \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT pixel_aspect_ratio \nFROM cities \nGROUP BY pixel_aspect_ratio \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT aspect_ratio FROM city GROUP BY aspect_ratio ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "a7fb6570ffd2f22c4cfc6b3d": ["SELECT agency_id FROM properties WHERE property_type_code = 'house' GROUP BY agency_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.agency_id FROM Properties AS T1 WHERE T1.property_type_code = 'house' GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT agent_id FROM Properties WHERE property_type_code = 'house' GROUP BY agent_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT agency_id FROM properties WHERE property_type_code = 'house' GROUP BY agency_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT agency_id FROM Properties WHERE property_type_code = 'house' ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "512e792acff3cd282fedab05": ["SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\n", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\n", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\n", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\n", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\n"], "aca1bdbd362f8ccadd3ac4e4": ["This question cannot be answered with the given tables as they do not contain information related to diversity in orchestras.", "This question cannot be answered directly using the provided tables. The tables do not contain information about the diversity of the orchestra or the benefits it brings.", "This question cannot be answered directly using the provided tables.", "This question cannot be answered directly with the given tables. The tables provided do not contain information about the advantages of diversity in an orchestra.", "This question cannot be directly answered using the provided tables."], "058f4b37b7ce66bc2f1813fc": ["SELECT Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Earnings > 300000\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000", "SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Earnings > 300000\n\n", "SELECT Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE Earnings > 300000\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings > 300000\n\n"], "a95276a7afb591dea2dd5570": ["SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "SELECT Name FROM country WHERE SurfaceArea > (SELECT max(SurfaceArea) FROM country WHERE Continent = 'Europe')", "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')", "SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')"], "3dc8148542f0d9333e630355": ["SELECT max(charge_amount) FROM charges\n\n", "SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1\n\n", "SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1\n\n", "SELECT max(charge_amount) FROM charges\n\n", "SELECT max(charge_amount) FROM charges\n\n"], "315cc24d16f7d4a5968170c5": ["SELECT Record_Company, COUNT(*) AS Orchestra_Count FROM orchestra GROUP BY Record_Company ORDER BY Orchestra_Count DESC LIMIT 1\n\n", "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Record_Company, COUNT(Orchestra_ID) AS Num_Orchestras FROM orchestra GROUP BY Record_Company ORDER BY Num_Orchestras DESC LIMIT 1\n\n", "SELECT record_company FROM orchestra GROUP BY record_company ORDER BY count(*) DESC LIMIT 1\n\n"], "948a8a93c03c5f4d6e7d272f": ["SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)", "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008\n\n", "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008\n\n", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)"], "6c1f4acb0db7cdd44c07d5c7": ["SELECT count(DISTINCT property_agency) FROM Properties", "SELECT count(DISTINCT property_agency) FROM properties", "SELECT COUNT(DISTINCT property_agency) FROM Properties", "SELECT count(DISTINCT agency_id) FROM Properties", "SELECT count(DISTINCT agency_name) FROM properties"], "2f5f8e70a2531cdcdbce1886": ["SELECT count(friend_id) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = \"Kyle\")", "SELECT count(*) FROM friend WHERE student_id = (SELECT ID FROM highschooler WHERE name = 'Kyle')", "SELECT COUNT(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')"], "c376d4d9d205a32ed3ec2afa": ["SELECT count(*) FROM conductor\n\n", "SELECT count(*) FROM conductor\n\n", "SELECT count(*) FROM conductor\n\n", "SELECT count(*) FROM conductor\n\n", "SELECT count(*) FROM conductor\n\n"], "4251b30dcc9c4dc59c40dd8b": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables. The tables provided do not contain information about website URLs for the players.", "This question cannot be answered with the provided tables. The tables do not contain information about website URLs.", "This question cannot be answered based on the given tables. The tables provided do not have website URLs for the players with the highest earnings.", "This question cannot be answered with the provided tables."], "1c991f0f760ff1cda5a2a955": ["SELECT Orchestra FROM orchestra ORDER BY Height DESC LIMIT 1\n\n", "SELECT Orchestra FROM orchestra ORDER BY Height DESC LIMIT 1\n\n", "SELECT Orchestra FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1\n\n", "SELECT Orchestra FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1\n\n", "SELECT Orchestra FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1\n\n"], "f9821920ac79b36b3d1f9e6a": ["SELECT contestant_name, COUNT(*) FROM CONTESTANTS GROUP BY contestant_name", "SELECT contestant_name FROM CONTESTANTS GROUP BY contestant_name\n\n", "SELECT contestant_name, COUNT(*) FROM CONTESTANTS GROUP BY contestant_name", "SELECT contestant_name, COUNT(*) as num_contestants\nFROM CONTESTANTS\nGROUP BY contestant_name", "SELECT contestant_name, COUNT(*) FROM CONTESTANTS GROUP BY contestant_name"], "eeb3c671b25a6f1452bb8e47": ["SELECT Birth_Year, Citizenship FROM singer\n\n", "SELECT Birth_Year ,  Citizenship FROM singer\n\n", "SELECT Birth_Year, Citizenship FROM singer\n\n", "SELECT Birth_Year, Citizenship FROM singer\n\n", "SELECT Birth_Year, Citizenship FROM singer\n\n"], "18d969398b050a81531083eb": ["SELECT avg(rank_points) FROM students WHERE date_first_registered < '2020-01-01'", "SELECT avg(rank_points) FROM students WHERE date_first_registered < '2020-01-01'", "SELECT avg(rank_points) FROM students WHERE date_first_registered < '2020-01-01'", "SELECT avg(rank_points) FROM students WHERE date_first_registered < '2020-01-01'", "SELECT avg(rank_points) FROM students WHERE date_first_registered < '2020-01-01'"], "5005ea6993085929b744e659": ["SELECT avg(gpa) FROM transcripts", "SELECT AVG(GPA) FROM Transcript_Contents JOIN Student_Enrolment_Courses ON Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id JOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id JOIN Students ON Student_Enrolment.student_id = Students.student_id", "SELECT avg(GPA) FROM transcripts", "SELECT avg(GPA) FROM Transcripts", "SELECT AVG(grade) FROM transcript_contents"], "5f6357bfc8755e8fa0e91f8e": ["SELECT T2.breed_name FROM dogs AS T1 JOIN breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.breed_name FROM dogs AS T1 JOIN breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT T2.breed_name FROM dogs AS T1 JOIN breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.breed_name FROM dogs AS T1 JOIN breeds AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_code ORDER BY count(*) DESC LIMIT 1\n\n"], "c9bbedf085c648e8be4aa129": ["SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs ORDER BY age DESC LIMIT 1)", "SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs ORDER BY age ASC LIMIT 1)", "SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs ORDER BY age ASC LIMIT 1)", "SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs ORDER BY age LIMIT 1)", "SELECT last_name \nFROM owners \nWHERE owner_id = (SELECT owner_id \n                  FROM dogs \n                  WHERE age = (SELECT MIN(age) \n                               FROM dogs))"], "b3c2d024b42b9993ec34bc53": ["SELECT property_type_description FROM ref_property_types WHERE date_sold - date_on_market = 10 ORDER BY agreed_selling_price - vendor_requested_price DESC LIMIT 1\n\n", "SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code IN (SELECT property_type_code FROM Properties WHERE date_sold - date_on_market > 10)", "SELECT property_type_description FROM ref_property_types WHERE agreed_selling_price > vendor_requested_price * 1.1 AND date_sold >= DATEADD(year, -10, GETDATE())", "SELECT property_type_description FROM ref_property_types WHERE date_sold - date_on_market > 3650 ORDER BY buyer_offered_price DESC\n\n", "SELECT T1.property_type_description FROM ref_property_types AS T1 JOIN properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T2.agreed_selling_price > T2.vendor_requested_price AND T2.date_sold - T2.date_on_market > 3650 GROUP BY T1.property_type_description"], "6868bbbc11951769aaa479db": ["SELECT nationality FROM people GROUP BY nationality HAVING count(*) >= 2\n\n", "SELECT Nationality FROM people GROUP BY Nationality HAVING count(*) >= 2\n\n", "SELECT nationality FROM people GROUP BY nationality HAVING count(*) >= 2\n\n", "SELECT nationality \nFROM people \nGROUP BY nationality \nHAVING count(*) >= 2", "SELECT nationality \nFROM people \nGROUP BY nationality \nHAVING count(*) >= 2"], "7971df37fc66391defc7adc5": ["SELECT T1.Code, T2.Language\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)", "SELECT T1.Code, T2.Language\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)", "SELECT T1.Code, T3.Language\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nJOIN (SELECT CountryCode, MAX(Percentage) AS MaxPercentage\n      FROM countrylanguage\n      GROUP BY CountryCode) AS T3 ON T2.CountryCode = T3.CountryCode AND T2.Percentage = T3.MaxPercentage", "SELECT T1.Code, T2.Language\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)", "SELECT T1.CountryCode, T2.Language \nFROM country AS T1 \nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode \nWHERE T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T2.CountryCode)"], "42e0d11acb5eb6bfd82a229f": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables as they do not contain any historical data related to poker or any information about changes in the poker industry over time.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables."], "1070df2e09ee850f13093708": ["SELECT DISTINCT line_1,line_2,line_3,city,zip_postcode,state_province_county,country FROM addresses WHERE address_id IN (SELECT current_address_id FROM students) OR address_id IN (SELECT permanent_address_id FROM students)", "SELECT DISTINCT line_1, line_2, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id IN (SELECT permanent_address_id FROM students UNION SELECT current_address_id FROM students)", "SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id IN (SELECT permanent_address_id FROM students) OR address_id IN (SELECT current_address_id FROM students)", "SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id IN (SELECT current_address_id FROM students) OR address_id IN (SELECT permanent_address_id FROM students)", "SELECT DISTINCT line_1, line_2, city, zip_postcode, state_province_county, country FROM addresses WHERE address_id IN (SELECT current_address_id FROM students) OR address_id IN (SELECT permanent_address_id FROM students)"], "147af44f9150277a7d3ef776": ["This question cannot be directly answered using SQL as SQL is a relational database query language and not designed for graph analysis. Graph theory analysis would typically be done using graph databases or specialized graph analysis tools.", "This question cannot be answered directly with SQL as SQL is not designed for graph theory analysis. Graph theory analysis would require a specialized graph database or tool.", "This question cannot be answered directly with SQL as it involves analyzing the network structure using graph theory concepts. You would need to use a graph database or a graph analysis tool to analyze the friendship network in this case.", "This question cannot be answered using SQL, as SQL is a query language for relational databases and does not have built-in capabilities for analyzing graph structures. You would need to use a graph database or a specialized graph analysis tool to analyze the friendship network using graph theory.", "This question cannot be answered directly using SQL as it involves analyzing the structure of the friendship network using graph theory, which is not typically handled by SQL databases. Graph theory analysis would require specialized tools or programming languages designed for graph analysis, such as Python with libraries like NetworkX."], "ec8a313d244f972d6719e1ee": ["SELECT Nationality FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra = 'Kirov Orchestra')\n\n", "SELECT Nationality FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra = \"Kirov Orchestra\")", "SELECT Nationality FROM conductor WHERE Conductor_ID = (SELECT Conductor_ID FROM orchestra WHERE Orchestra = 'Kirov Orchestra')", "SELECT Nationality FROM conductor WHERE Name = \"Kirov Orchestra\"", "SELECT Nationality FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID = 'Kirov')"], "23449abfb56fb2d4f05431ab": ["SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Nationality = 'Female' AND T1.Height > 180", "SELECT count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 180 AND T2.Nationality = 'female'", "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 180 AND T1.Nationality = 'Female'", "SELECT count(*) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 180 AND T2.Nationality = 'female'", "SELECT count(*) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Nationality = \"Female\" AND T1.Height > 180"], "68752c54a18affc80fa61a04": ["SELECT T2.email_address FROM dogs AS T1 JOIN owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.name = 'Mavis'", "SELECT T2.email_address FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.name = \"Mavis\" \n\n", "SELECT T2.email_address FROM dogs AS T1 JOIN owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.name = \"Mavis\"", "SELECT T2.email_address FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.name = 'Mavis' \n\n", "SELECT T2.email_address \nFROM dogs AS T1 \nJOIN owners AS T2 \nON T1.owner_id = T2.owner_id \nWHERE T1.name = 'Mavis'"], "8a58cce31810002b70513048": ["SELECT Episode FROM TV_series WHERE series_name = \"Sky Radio\"", "SELECT Episode FROM TV_series WHERE series_name = \"Sky Radio\"", "SELECT Episode FROM TV_series WHERE series_name = \"Sky Radio\"", "SELECT Episode FROM TV_series WHERE series_name = \"Sky Radio\"", "SELECT Episode FROM TV_series WHERE series_name = \"Sky Radio\" \n\n"], "251df7f905385785e0b2d4cd": ["SELECT T2.first_name, T1.name FROM Owners AS T2 JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id", "SELECT T2.first_name ,  T1.name FROM dogs AS T1 JOIN owners AS T2 ON T1.owner_id = T2.owner_id", "SELECT T2.first_name ,  T3.name FROM owners AS T2 JOIN dogs AS T3 ON T2.owner_id = T3.owner_id", "SELECT T1.first_name, T2.name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id", "SELECT T2.first_name, T1.name FROM Owners AS T2 JOIN Dogs AS T1 ON T2.owner_id = T1.owner_id"], "0836d13e3c6114749c9e25fc": ["SELECT count(Language) FROM countrylanguage WHERE CountryCode = 'ABW'", "SELECT count(Language) FROM countrylanguage WHERE CountryCode = 'ABW'", "SELECT count(*) FROM countrylanguage WHERE CountryCode = \"ABW\"", "SELECT count(*) FROM countrylanguage WHERE CountryCode = 'ABW'", "SELECT count(*) FROM countrylanguage WHERE CountryCode = 'ABW'"], "826d532af99d79716ed74828": ["SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language HAVING COUNT(*) = (SELECT MIN(cnt) FROM (SELECT COUNT(*) AS cnt FROM TV_Channel GROUP BY Language))", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language HAVING COUNT(*) = (SELECT MIN(channel_count) FROM (SELECT COUNT(*) AS channel_count FROM TV_Channel GROUP BY Language) AS temp)", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1\n\n", "SELECT Language, COUNT(*) AS Num_Channels \nFROM TV_Channel \nGROUP BY Language \nORDER BY Num_Channels ASC \nLIMIT 1"], "95f6f6800121d8c55539eca2": ["SELECT first_name FROM professionals ORDER BY age DESC LIMIT 1", "SELECT first_name FROM professionals ORDER BY age ASC LIMIT 1", "SELECT first_name FROM professionals ORDER BY age ASC LIMIT 1", "SELECT first_name FROM professionals ORDER BY age LIMIT 1", "SELECT first_name FROM professionals ORDER BY age ASC LIMIT 1"], "fae4b7179d35224b59227dba": ["This question cannot be answered with the given tables.", "This question does not directly relate to the given tables and cannot be answered with the provided data.", "This question cannot be answered with the provided tables.", "This question is not directly related to the tables provided and cannot be answered with the given data.", "This question does not pertain to the tables provided and cannot be translated into SQL."], "d2f5bfbcb9420f02a282ba56": ["SELECT count(*) FROM Other_Available_Features\n\n", "SELECT count(*) FROM Other_Available_Features\n\n", "SELECT count(*) FROM Other_Available_Features\n\n", "SELECT count(*) FROM Other_Available_Features\n\n", "SELECT count(*) FROM Other_Available_Features\n\n"], "1b40a3da304a244ad87e6198": ["SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded ASC LIMIT 1\n\n", "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded ASC LIMIT 1\n\n", "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded ASC LIMIT 1\n\n", "SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra)", "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded ASC LIMIT 1\n\n"], "b0d751dae8078a0a1751a555": ["SELECT count(DISTINCT grade) FROM Highschooler", "SELECT count(DISTINCT grade) FROM Highschooler", "SELECT count(DISTINCT grade) FROM Highschooler", "SELECT count(DISTINCT grade) FROM Highschooler", "SELECT count(DISTINCT grade) FROM Highschooler"], "7c29daf70dbb59297e0cc901": ["SELECT first_name, middle_name, last_name FROM students WHERE date_left IS NULL OR date_left = (SELECT MIN(date_left) FROM students)", "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered ASC LIMIT 1\n\n", "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_left ASC LIMIT 1", "SELECT first_name, middle_name, last_name \nFROM students \nWHERE date_left IS NOT NULL \nORDER BY date_left ASC \nLIMIT 1", "SELECT first_name, middle_name, last_name\nFROM students\nWHERE date_left IS NOT NULL\nORDER BY date_left ASC\nLIMIT 1"], "6b3d9977b40d8b22078dfe3f": ["SELECT state, contestant_name, count(*) as total_votes \nFROM VOTES \nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number \nGROUP BY state, contestant_name", "SELECT state, contestant_number, count(*) as total_votes FROM VOTES GROUP BY state, contestant_number", "SELECT state, contestant_number, COUNT(*) FROM VOTES GROUP BY state, contestant_number", "SELECT state, COUNT(DISTINCT phone_number) as unique_voters FROM VOTES GROUP BY state, contestant_number ORDER BY state, unique_voters DESC", "SELECT state, contestant_number, count(*) FROM VOTES GROUP BY state, contestant_number"], "fd3917b8b37d655e9a63a0dd": ["SELECT count(*) FROM Courses\n\n", "SELECT count(*) FROM Courses\n\n", "SELECT count(*) FROM Courses\n\n", "SELECT count(*) FROM courses\n\n", "SELECT count(*) FROM Courses"], "34c8eab8cbe2b3a75f285ffc": ["SELECT T3.course_name FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN courses AS T3 ON T2.course_id = T3.course_id WHERE T1.student_id = [insert student id]", "SELECT T2.course_name \nFROM student_enrolment_courses AS T1 \nJOIN courses AS T2 ON T1.course_id = T2.course_id \nWHERE T1.student_enrolment_id IN (SELECT student_enrolment_id \n                                  FROM student_enrolment \n                                  WHERE student_id = <student_id>) \nAND T1.course_id NOT IN (SELECT course_id \n                         FROM student_enrolment_courses \n                         WHERE student_enrolment_id = <student_enrolment_id>)", "SELECT T2.course_name \nFROM student_enrolment_courses AS T1 \nJOIN courses AS T2 ON T1.course_id = T2.course_id \nWHERE T1.student_enrolment_id IN (SELECT student_enrolment_id \n                                  FROM student_enrolment \n                                  WHERE student_id = <student_id>)", "SELECT T2.course_name \nFROM student_enrolment_courses AS T1 \nJOIN courses AS T2 ON T1.course_id = T2.course_id \nWHERE T1.student_enrolment_id IN \n    (SELECT student_enrolment_id \n     FROM student_enrolment \n     WHERE student_id = [student_id]) \nAND T1.course_id NOT IN \n    (SELECT course_id \n     FROM student_enrolment_courses \n     WHERE student_enrolment_id = [previous_enrollment_id])", "SELECT T2.course_name\nFROM student_enrolment_courses AS T1\nJOIN courses AS T2 ON T1.course_id = T2.course_id\nWHERE T1.student_enrolment_id IN (\n    SELECT student_enrolment_id\n    FROM student_enrolment\n    WHERE student_id = <student_id>\n)"], "be636b159a1cf4c1702bff84": ["SELECT T1.name, T1.gender FROM dogs AS T1 WHERE T1.gender = 'male'", "SELECT D.name FROM Dogs AS D WHERE D.gender = 'male'", "SELECT name FROM Dogs WHERE gender = 'male'", "SELECT T1.name FROM dogs AS T1 WHERE T1.gender = 'male'", "SELECT T1.name, T1.gender, T2.breed_name FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code WHERE T1.gender = 'male'"], "7a56941d297063f6f93c4f10": ["SELECT T2.name \nFROM Highschooler AS T1 \nJOIN Friend AS T3 ON T1.ID = T3.friend_id \nJOIN Likes AS T4 ON T1.ID = T4.student_id \nWHERE T4.liked_id NOT IN (SELECT friend_id FROM Friend WHERE student_id = T1.ID) \nAND T1.ID = [student_id]", "SELECT T2.name FROM Highschooler AS T1 JOIN Friend AS T3 ON T1.ID = T3.friend_id JOIN Likes AS T4 ON T1.ID = T4.liked_id JOIN Highschooler AS T2 ON T3.student_id = T2.ID WHERE T4.student_id = [student_id] AND T3.friend_id <> [student_id]", "SELECT T2.name \nFROM Likes AS T1 \nJOIN Highschooler AS T2 ON T1.liked_id = T2.ID \nWHERE T1.student_id IN \n    (SELECT friend_id \n     FROM Friend \n     WHERE student_id = [student_id]) \nAND T1.liked_id NOT IN \n    (SELECT liked_id \n     FROM Likes \n     WHERE student_id = [student_id])", "SELECT T2.name FROM likes AS T1 JOIN highschooler AS T2 ON T1.liked_id = T2.ID WHERE T1.student_id IN (SELECT friend_id FROM friend WHERE student_id = {student_id}) AND T1.liked_id NOT IN (SELECT liked_id FROM likes WHERE student_id = {student_id}) AND T1.liked_id != {student_id}", "SELECT T2.name FROM friend AS T1 JOIN highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = (SELECT student_id FROM highschooler WHERE name = 'student_name') AND T2.ID NOT IN (SELECT liked_id FROM likes WHERE student_id = (SELECT student_id FROM highschooler WHERE name = 'student_name'))"], "98b80857096ac12a8850f9f7": ["SELECT owner_id, zip_code\nFROM Owners\nWHERE owner_id IN (\n    SELECT owner_id\n    FROM Dogs\n    WHERE dog_id IN (\n        SELECT dog_id\n        FROM Treatments\n        GROUP BY dog_id\n        ORDER BY SUM(cost_of_treatment) DESC\n        LIMIT 1\n    )\n)", "SELECT T1.owner_id, T2.zip_code \nFROM Owners AS T2 \nJOIN Dogs AS T1 ON T1.owner_id = T2.owner_id \nJOIN Treatments AS T3 ON T1.dog_id = T3.dog_id \nGROUP BY T1.owner_id \nORDER BY sum(cost_of_treatment) DESC \nLIMIT 1", "SELECT owner_id, zip_code, sum(cost_of_treatment) as total_payment FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY owner_id, zip_code ORDER BY total_payment DESC LIMIT 1\n\n", "SELECT owner_id, zip_code, SUM(cost_of_treatment) AS total_cost\nFROM owners\nJOIN dogs ON owners.owner_id = dogs.owner_id\nJOIN treatments ON dogs.dog_id = treatments.dog_id\nGROUP BY owner_id, zip_code\nORDER BY total_cost DESC\nLIMIT 1", "SELECT owner_id, zip_code, sum(cost_of_treatment) AS total_cost FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY owner_id, zip_code ORDER BY total_cost DESC LIMIT 1\n\n"], "f1654322a5ae276982302006": ["SELECT T1.Title, T1.Air_Date, T1.Rating, T1.Share, T1.Channel, T2.Content \nFROM Cartoon AS T1 \nJOIN TV_Channel AS T2 ON T1.Channel = T2.id", "SELECT DISTINCT age_group_strategy FROM cartoon", "SELECT T1.Title ,  T2.Content FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id\n\n", "SELECT DISTINCT TV_Channel.Content FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel ORDER BY TV_Channel.Content", "SELECT DISTINCT Cartoon.id, Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by, Cartoon.Channel FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.Content = \"Family-friendly\" OR TV_Channel.Content = \"Adult\" OR TV_Channel.Content = \"Kids\" OR TV_Channel.Content = \"Teen\""], "118d14cab7902366b54bd914": ["INSERT INTO Sections (course_id, section_name, section_description, other_details) VALUES (SELECT course_id FROM Courses WHERE course_name = \"Relaxation Music Session\", \"Finals Week Relaxation Music Session\", \"Relax and destress with soothing music during finals week\", \"Session will be held in the student lounge\")", "INSERT INTO Courses (course_name, course_description)\nVALUES ('Relaxation Music Session', 'Session to help students relax during finals week')", "INSERT INTO Courses (course_name, course_description, other_details) VALUES ('Relaxation Music Session', 'Session to relax and destress during finals week', 'Scheduled for finals week for students')", "INSERT INTO Courses (course_name, course_description, other_details) VALUES ('Relaxation Music Session', 'Session to help students relax during finals week', 'Date and time to be scheduled')\n\n", "INSERT INTO Courses (course_name, course_description, other_details) VALUES ('Relaxation Music Session', 'Session to help students relax during finals week', 'Scheduled during finals week for student relaxation')"], "47b91bdd3578d01a9c76c03c": ["SELECT count(DISTINCT series_name) ,  count(DISTINCT Content) FROM TV_Channel\n\n", "SELECT count(DISTINCT series_name) ,  count(DISTINCT Content) FROM TV_Channel\n\n", "SELECT count(DISTINCT series_name) ,  count(DISTINCT Content) FROM TV_Channel\n\n", "SELECT count(DISTINCT series_name) ,  count(DISTINCT Content) FROM TV_Channel\n\n", "SELECT count(DISTINCT series_name), count(DISTINCT content) FROM TV_Channel"], "3e4e60f9eb74da95b7711c4f": ["SELECT * FROM singer WHERE Name = 'Adele'", "SELECT * FROM singer WHERE Name = 'Adele'", "SELECT * FROM singer WHERE Name = 'Adele'", "SELECT * FROM singer WHERE Name = 'Adele'", "SELECT * FROM singer WHERE Name = 'Adele'"], "337cad57f581e29a513fb76c": ["SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'F'", "SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'F'", "SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'F'", "SELECT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'F'", "SELECT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Europe' AND countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F'"], "c67c644f638c896271495296": ["SELECT contestant_name FROM contestants", "SELECT contestant_name FROM CONTESTANTS", "SELECT contestant_name FROM CONTESTANTS", "SELECT contestant_name FROM contestants", "SELECT contestant_name FROM contestants"], "c2fc8a1a659d5921c3166dda": ["SELECT name FROM Highschooler WHERE grade = '12' AND ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(liked_id) DESC LIMIT 1)", "SELECT name FROM highschooler WHERE grade = (SELECT max(grade) FROM highschooler)", "SELECT name FROM Highschooler WHERE grade = (SELECT MAX(grade) FROM Highschooler)", "SELECT name FROM highschooler WHERE grade = (SELECT MAX(grade) FROM highschooler)", "SELECT name FROM Highschooler WHERE grade = '12' ORDER BY ID DESC LIMIT 1\n\n"], "21dd352ef33e7dd8e2065b03": ["SELECT Name FROM singer WHERE Name = 'Bj\u00f6rk'", "SELECT Name FROM singer WHERE Name = 'Bj\u00f6rk'", "SELECT Name FROM singer WHERE Name = 'Bj\u00f6rk'", "SELECT Name FROM singer WHERE Name = 'Bj\u00f6rk'", "SELECT Name FROM singer WHERE Name = 'Bj\u00f6rk'"], "e7acaf71ce6b14969e71b108": ["SELECT other_details FROM departments WHERE department_name = \"Math\"", "SELECT department_name FROM departments WHERE department_description = \"math\"", "SELECT other_details FROM departments WHERE department_name = \"Math\"", "SELECT department_name FROM departments WHERE department_name = 'Mathematics'", "SELECT T1.other_details FROM Departments AS T1 WHERE department_name = \"Mathematics\""], "b034020da382211546a45db6": ["SELECT count(*) FROM Highschooler WHERE gender = 'M'", "SELECT count(*) FROM Highschooler WHERE gender = 'M'", "SELECT count(*) FROM Highschooler WHERE gender = 'male'", "SELECT count(*) FROM Highschooler WHERE gender = 'male'", "SELECT count(*) FROM Highschooler WHERE gender = 'male'"], "8e04acb6a07fddeaaa5f9717": ["SELECT T2.timezone FROM cities AS T1 JOIN timezones AS T2 ON T1.timezone_id = T2.timezone_id GROUP BY T2.timezone ORDER BY sum(T1.population) DESC LIMIT 1", "SELECT T2.timezone FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.timezone ORDER BY sum(T1.population) DESC LIMIT 1\n\n", "SELECT country.Region, SUM(city.Population) AS TotalPopulation\nFROM city\nJOIN country ON city.CountryCode = country.Code\nGROUP BY country.Region\nORDER BY TotalPopulation DESC\nLIMIT 1\n\n", "SELECT T1.District, sum(T2.Population) FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T1.District ORDER BY sum(T2.Population) DESC LIMIT 1\n\n", "SELECT c.Name, SUM(c.Population) AS total_population \nFROM city c \nJOIN country co ON c.CountryCode = co.Code \nGROUP BY co.Continent \nORDER BY total_population DESC \nLIMIT 1"], "74cf52f05d786dc2ea9f1f4c": ["SELECT state FROM area_code_state WHERE state = (\n    SELECT state FROM votes GROUP BY state ORDER BY count(*) DESC LIMIT 1\n)", "SELECT state FROM votes GROUP BY state ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT state FROM VOTES GROUP BY state ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT state FROM AREA_CODE_STATE WHERE state IN (SELECT state FROM VOTES GROUP BY state ORDER BY count(*) DESC LIMIT 1)", "SELECT state FROM VOTES GROUP BY state ORDER BY count(*) DESC LIMIT 1\n\n"], "fa5c04d7dfa68b193c4c9252": ["SELECT Language \nFROM countrylanguage \nWHERE CountryCode IN (\n    SELECT Code \n    FROM country \n    WHERE Continent = 'Asia'\n) \nORDER BY Percentage DESC \nLIMIT 1", "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') ORDER BY Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') ORDER BY Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') ORDER BY Percentage DESC LIMIT 1", "SELECT Language \nFROM countrylanguage \nWHERE CountryCode IN (SELECT Code \n                        FROM country \n                        WHERE Continent = 'Asia') \nORDER BY Percentage DESC \nLIMIT 1"], "ff79e34a988c4d49bd533cb5": ["This question cannot be answered with the given tables. The age of a property and its value are not directly linked in the provided schema.", "SELECT DATEDIFF(CURDATE(), date_on_market) AS age_of_property, agreed_selling_price FROM Properties", "This question cannot be answered directly with the given tables. The age of a property and its value are not explicitly mentioned in the tables provided. Additional information or tables related to property age and value would be needed to answer this question.", "SELECT property_age, AVG(agreed_selling_price) FROM (\n    SELECT property_id, property_name, property_address, \n        CASE \n            WHEN date_sold IS NULL THEN DATEDIFF(CURDATE(), date_on_market) \n            ELSE DATEDIFF(date_sold, date_on_market) \n        END AS property_age,\n        agreed_selling_price\n    FROM Properties\n) AS Property_Age_Group\nGROUP BY property_age", "This question cannot be answered directly with the given tables. Age of a property is not included in the provided tables, so there is no direct relationship between age and property value in the given schema."], "3350df67bfc704973c289463": ["This question cannot be answered with the provided tables.", "This question cannot be answered with the provided tables.", "This question cannot be answered with the provided tables.", "This question cannot be answered with the provided tables.", "This question cannot be answered with the given tables as there is no table containing information about the age of the contestants."], "011ec8388f2e6b3f4aa412be": ["SELECT address_id FROM Addresses\n\n", "SELECT address_id FROM Addresses\n\n", "SELECT address_id FROM Addresses\n\n", "SELECT address_id FROM Addresses\n\n", "SELECT address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details FROM Addresses\n\n"], "bfe18e3bb066e320c9ee06fc": ["SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = 1510", "SELECT T2.name \nFROM Friend AS T1 \nJOIN Highschooler AS T2 \nON T1.friend_id = T2.ID \nWHERE T1.student_id = 1510", "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = 1510", "SELECT T2.name FROM friend AS T1 JOIN highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id = 1510", "SELECT Name FROM Highschooler WHERE ID IN (SELECT friend_id FROM Friend WHERE student_id = 1510)"], "a4143d5702db04d0ce019d19": ["SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC\n\n", "SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC\n\n", "SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC\n\n", "SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC\n\n", "SELECT Major_Record_Format, COUNT(*) AS Frequency \nFROM orchestra \nGROUP BY Major_Record_Format \nORDER BY Frequency DESC\n\n"], "323244f8ea01240dcec24622": ["SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)", "SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)", "SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)", "SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)", "SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)"], "903362a5847dff68028dc9fe": ["SELECT count(*) FROM Transcripts\n\n", "SELECT count(*) FROM transcripts\n\n", "SELECT count(*) FROM Transcripts\n\n", "SELECT count(*) FROM transcripts\n\n", "SELECT count(*) FROM Transcripts\n\n"], "f7256dd3c22b7bb9c382be38": ["SELECT T1.name, COUNT(T2.liked_id) as popularity \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T2.liked_id \nORDER BY popularity DESC", "SELECT T1.liked_id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.liked_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT liked_id, count(*) FROM Likes GROUP BY liked_id ORDER BY count(*) DESC\n\n", "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.ID GROUP BY T1.liked_id ORDER BY count(*) DESC", "SELECT T2.name FROM likes AS T1 JOIN highschooler AS T2 ON T1.liked_id = T2.ID GROUP BY T1.liked_id ORDER BY count(*) DESC"], "a87c18a461cfc294018692bc": ["SELECT Name FROM conductor WHERE Age = (SELECT MAX(Age) FROM conductor)", "SELECT T2.Name FROM conductor AS T1 JOIN conductor AS T2 ON T1.Age = (SELECT max(Age) FROM conductor) AND T1.Conductor_ID = T2.Conductor_ID\n\n", "SELECT T2.Name FROM conductor AS T1 JOIN conductor AS T2 ON T1.Age = (SELECT MAX(Age) FROM conductor) \n\n", "SELECT T2.Name FROM conductor AS T1 JOIN conductor AS T2 ON T1.Age = (SELECT max(Age) FROM conductor) AND T1.Conductor_ID = T2.Conductor_ID\n\n", "SELECT T2.Name FROM conductor AS T1 JOIN conductor AS T2 ON T1.Age = (SELECT max(Age) FROM conductor) AND T1.Conductor_ID = T2.Conductor_ID\n\n"], "7df41c24b511a3c15384ae08": ["SELECT min(contestant_age) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)", "SELECT min(contestant_age) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)", "SELECT min(contestant_age) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)", "SELECT min(contestant_age) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)", "SELECT min(age) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)"], "3cd60e6cdbc0a814d98b0958": ["SELECT Name FROM city WHERE Population / SurfaceArea > 10000\n\n", "SELECT Name FROM city WHERE Population > (SELECT AVG(Population) FROM city)", "SELECT Name FROM city ORDER BY Population/District DESC\n\n", "SELECT Name FROM city ORDER BY Population/SurfaceArea DESC\n\n", "SELECT Name FROM city WHERE Population / SurfaceArea > 10000\n\n"], "7d96d90986819807d04cf2ab": ["SELECT feature_name, count(*) FROM other_available_features AS T1 JOIN other_property_features AS T2 ON T1.feature_id = T2.feature_id JOIN properties AS T3 ON T2.property_id = T3.property_id WHERE date_on_market >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR) AND feature_type_code = 'SEC' GROUP BY feature_name ORDER BY count(*) DESC LIMIT 1", "SELECT T1.feature_name, COUNT(*) AS count FROM Other_Available_Features AS T1 \nJOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id \nJOIN Properties AS T3 ON T2.property_id = T3.property_id\nWHERE T3.date_on_market >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR) \nAND T1.feature_type_code = 'SEC' \nGROUP BY T1.feature_name \nORDER BY count DESC \nLIMIT 1", "SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = 'SEC' AND feature_id IN (SELECT feature_id FROM Other_Property_Features WHERE property_id IN (SELECT property_id FROM Properties WHERE date_on_market >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR))) GROUP BY feature_id ORDER BY COUNT(*) DESC LIMIT 1", "SELECT T2.feature_name FROM properties AS T1 JOIN other_property_features AS T2 ON T1.property_id = T2.property_id JOIN other_available_features AS T3 ON T2.feature_id = T3.feature_id WHERE T1.date_on_market >= DATE_SUB(NOW(), INTERVAL 5 YEAR) AND T3.feature_type_code = 'SEC' GROUP BY T2.feature_name ORDER BY COUNT(*) DESC LIMIT 1", "SELECT T2.feature_name, COUNT(*) AS count FROM Properties AS T1 JOIN Other_Property_Features AS T3 ON T1.property_id = T3.property_id JOIN Other_Available_Features AS T2 ON T3.feature_id = T2.feature_id WHERE T1.date_on_market >= DATE_SUB(NOW(), INTERVAL 5 YEAR) AND T2.feature_type_name = 'Security' GROUP BY T2.feature_name ORDER BY count DESC LIMIT 1"], "2b63ba54d1ba65a0ad95821b": ["SELECT mortgage_lender, COUNT(*) FROM properties GROUP BY mortgage_lender ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT lender_name FROM mortgage_lender GROUP BY lender_name ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT T2.feature_name FROM other_available_features AS T2 JOIN other_property_features AS T1 ON T1.feature_id = T2.feature_id GROUP BY T2.feature_name ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT mortgage_lender FROM properties GROUP BY mortgage_lender ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT mortgage_lender FROM properties GROUP BY mortgage_lender ORDER BY count(*) DESC LIMIT 1\n\n"], "93bdb1c7510c61cb4d4c6366": ["SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)"], "238d20ff01204e95137a5caa": ["SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Rating = 0 OR T2.Share = 0 OR T2.Viewers_m = 0", "SELECT series_name FROM TV_Channel WHERE Content = 'show cancellation'", "SELECT DISTINCT TV_Channel.Content FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Air_Date IS NULL", "SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Rating = 0 AND T2.Share = 0 AND T2.18_49_Rating_Share = 0 AND T2.Viewers_m = 0", "SELECT DISTINCT Directed_by ,  Written_by FROM cartoon WHERE Production_code IS NULL\n\n"], "e79ad3821596e857c2910397": ["SELECT count(*) FROM Properties WHERE property_address LIKE '%100 feet above sea level%'", "SELECT count(*) FROM properties WHERE property_address LIKE '%100 feet above sea level%'", "SELECT count(*) FROM properties WHERE property_address LIKE '%100 feet above sea level%'", "SELECT count(*) FROM properties WHERE property_address LIKE '%100 feet above sea level%'", "SELECT count(*) FROM properties WHERE property_address LIKE '%100 feet above sea level%'"], "424473ee2a08666fccdd1ff0": ["SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1\n\n", "SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1\n\n", "SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1\n\n", "SELECT MAX(transcript_date) FROM transcripts", "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1\n\n"], "bfad0ffaf3ef2c0db60c646e": ["SELECT T1.first_name, T1.last_name FROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id \nJOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id \nORDER BY rank_point DESC LIMIT 1", "SELECT T1.student_id FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN transcript_contents AS T3 ON T2.student_course_id = T3.student_course_id JOIN transcripts AS T4 ON T3.transcript_id = T4.transcript_id GROUP BY T1.student_id ORDER BY sum(rank_points) DESC LIMIT 1", "SELECT T1.first_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id \nJOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id \nORDER BY rank_point DESC \nLIMIT 1", "SELECT T1.first_name, T1.last_name\nFROM students AS T1\nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id\nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id\nJOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id\nJOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id\nORDER BY T5.rank_point DESC\nLIMIT 1", "SELECT T1.first_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id \nJOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id \nORDER BY T5.rank_point DESC \nLIMIT 1"], "09bee9c9d602c6d605262ef6": ["SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)", "SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)", "SELECT contestant_number, contestant_name \nFROM CONTESTANTS \nWHERE contestant_number IN (\n    SELECT contestant_number \n    FROM VOTES \n    GROUP BY contestant_number \n    HAVING COUNT(*) >= 2\n)", "SELECT contestant_number, contestant_name \nFROM CONTESTANTS \nWHERE contestant_number IN (SELECT contestant_number \n                            FROM VOTES \n                            GROUP BY contestant_number \n                            HAVING COUNT(*) >= 2)", "SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)"], "96ef328d08f1ccdcb1f78a0b": ["SELECT sum(Population) FROM city WHERE District = 'Gelderland'", "SELECT sum(population) FROM city WHERE district = 'Gelderland'", "SELECT sum(population) FROM city WHERE district = 'Gelderland'", "SELECT sum(Population) FROM city WHERE District = 'Gelderland'", "SELECT sum(Population) FROM city WHERE District = 'Gelderland'"], "1594529174d86f345885e567": ["SELECT count(DISTINCT professional_id) FROM treatments", "SELECT count(DISTINCT professional_id) FROM Treatments\n\n", "SELECT count(DISTINCT professional_id) FROM treatments", "SELECT count(DISTINCT professional_id) FROM Treatments\n\n", "SELECT count(DISTINCT professional_id) FROM Treatments\n\n"], "bda2fc1cd107bdb2021838a6": ["SELECT T2.name \nFROM Highschooler AS T1 \nJOIN (SELECT student_id, COUNT(liked_id) AS num_likes \n      FROM Likes \n      GROUP BY student_id \n      ORDER BY num_likes DESC \n      LIMIT 1) AS T3 ON T1.ID = T3.student_id", "SELECT name \nFROM Highschooler \nWHERE ID IN (\n    SELECT student_id \n    FROM Likes \n    GROUP BY student_id \n    ORDER BY count(*) DESC \n    LIMIT 1\n)", "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.name \nFROM Highschooler AS T1 \nJOIN (SELECT student_id, COUNT(liked_id) AS num_likes \n      FROM Likes \n      GROUP BY student_id \n      ORDER BY num_likes DESC \n      LIMIT 1) AS T3 \nON T1.ID = T3.student_id", "SELECT T1.name \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.ID \nORDER BY COUNT(*) DESC LIMIT 1"], "0118e9a0beb2acf4c3d4c10c": ["SELECT charge_type, charge_amount FROM Charges\n\n", "SELECT charge_type, charge_amount FROM Charges\n\n", "SELECT charge_type, charge_amount FROM Charges\n\n", "SELECT charge_type, charge_amount FROM Charges\n\n", "SELECT charge_type, charge_amount FROM Charges\n\n"], "6ff03b16faf9cda9833d2bac": ["SELECT T2.name \nFROM Highschooler AS T1 \nJOIN (\n    SELECT student_id, COUNT(*) AS friend_count \n    FROM Friend \n    GROUP BY student_id \n    ORDER BY friend_count DESC \n    LIMIT 1\n) AS top_friend \nON T1.ID = top_friend.student_id", "SELECT T2.name\nFROM Friend AS T1 \nJOIN Highschooler AS T2 \nON T1.student_id = T2.ID \nGROUP BY T1.student_id \nORDER BY COUNT(T1.friend_id) DESC \nLIMIT 1", "SELECT T1.name\nFROM Highschooler AS T1\nJOIN Friend AS T2 ON T1.ID = T2.student_id\nGROUP BY T1.ID\nORDER BY COUNT(T2.friend_id) DESC\nLIMIT 1", "SELECT T2.name \nFROM Highschooler AS T2 \nJOIN Friend AS T1 ON T2.ID = T1.student_id \nGROUP BY T1.student_id \nORDER BY count(T1.friend_id) DESC \nLIMIT 1", "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\n\n"], "edca5824850ba858d0027811": ["SELECT feature_type_name, AVG(grade) FROM Ref_Feature_Types GROUP BY feature_type_name\n\n", "SELECT feature_type_name, AVG(grade) FROM Other_Available_Features GROUP BY feature_type_name\n\n", "SELECT feature_type_name, AVG(grade) FROM Other_Available_Features GROUP BY feature_type_name\n\n", "SELECT feature_type_name ,  avg(grade) FROM Other_Available_Features GROUP BY feature_type_name\n\n", "SELECT feature_type_name, AVG(grade) FROM ref_feature_types JOIN other_available_features ON ref_feature_types.feature_type_code = other_available_features.feature_type_code GROUP BY feature_type_name"], "629b776576156a90d2a0bbe9": ["SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered LIMIT 1", "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered LIMIT 1\n\n", "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered LIMIT 1", "SELECT first_name ,  middle_name ,  last_name FROM students ORDER BY date_first_registered LIMIT 1", "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered LIMIT 1"], "852c63a42a7c038a4bc61026": ["SELECT city.Name FROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Europe' \nAND countrylanguage.Language = 'English' \nAND countrylanguage.IsOfficial = 'F'", "SELECT c.Name \nFROM city AS c\nJOIN country AS co ON c.CountryCode = co.Code\nJOIN countrylanguage AS cl ON co.Code = cl.CountryCode\nWHERE co.Continent = 'Europe' AND cl.Language = 'English' AND cl.IsOfficial = 'F'", "SELECT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE country.Continent = 'Europe' AND countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F'", "SELECT city.Name FROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Europe' AND countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F'", "SELECT city.Name FROM city \nJOIN country ON city.CountryCode = country.Code\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE country.Continent = 'Europe' AND countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F'"], "b82ab6d1913c1768e63d7b6d": ["SELECT date_arrived, date_departed FROM Dogs\n\n", "SELECT date_arrived, date_departed FROM dogs\n\n", "SELECT date_arrived, date_departed FROM dogs\n\n", "SELECT date_arrived, date_departed FROM dogs\n\n", "SELECT date_arrived, date_departed FROM dogs\n\n"], "d9d0f32a5c76399b531f27b7": ["SELECT T2.property_type_description FROM properties AS T1 JOIN ref_property_types AS T2 ON T1.property_type_code = T2.property_type_code", "SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = property_type_code", "SELECT property_type_description FROM ref_property_types WHERE property_type_code = Properties.property_type_code\n\n", "SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = 'code'", "SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code IN (SELECT property_type_code FROM Properties)"], "444d2a0e46b3686b69a593c9": ["SELECT singer.Name FROM singer WHERE singer.Net_Worth_Millions = (SELECT max(Net_Worth_Millions) FROM singer)", "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID ORDER BY T1.Net_Worth_Millions DESC LIMIT 1", "SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT max(Net_Worth_Millions) FROM singer)", "SELECT T2.fan_club_name FROM singer AS T1 JOIN fan_club AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Net_Worth_Millions = (SELECT max(Net_Worth_Millions) FROM singer)", "SELECT T2.fan_club_name FROM singer AS T1 JOIN fan_clubs AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Net_Worth_Millions = (SELECT max(Net_Worth_Millions) FROM singer)"], "bb7e10c79cfbd3390a81694a": ["SELECT * FROM performance WHERE Official_ratings_(millions) < 0 OR Weekly_rank < 1 OR Share < 0.5\n\n", "SELECT * FROM performance WHERE Official_ratings_(millions) < 1 OR Weekly_rank > 10 OR Share < 0.1\n\n", "SELECT * FROM performance WHERE Official_ratings_(millions) < 10 OR Weekly_rank > 10 OR Share < 0.5\n\n", "SELECT * FROM performance WHERE Official_ratings_(millions) < 1 OR Weekly_rank > 10 OR Share < 0.5\n\n", "SELECT * FROM performance WHERE Official_ratings_(millions) < 10 AND Weekly_rank > 5\n\n"], "1d3720f7cc2fb82e4eada8da": ["SELECT count(DISTINCT Code) FROM countrylanguage WHERE Language = 'left-hand driving'", "SELECT count(DISTINCT Code) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'left-hand driving')", "SELECT count(*) FROM countrylanguage WHERE Language = 'left-hand driving'", "SELECT count(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T'", "SELECT count(*) FROM countrylanguage WHERE Language = \"English\" AND IsOfficial = \"T\""], "3b22b07edb7a07bb3d701783": ["SELECT mortgage_lender FROM properties GROUP BY mortgage_lender ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT lender_name FROM Mortgages GROUP BY lender_name ORDER BY COUNT(*) DESC LIMIT 1", "SELECT T1.property_id, T1.property_name, T2.property_address FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.feature_id = (SELECT feature_id FROM Other_Available_Features WHERE feature_name = 'Mortgage Lender') GROUP BY T1.property_id ORDER BY count(*) DESC LIMIT 1", "SELECT T1.vendor_requested_price FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id GROUP BY T1.vendor_requested_price ORDER BY count(*) DESC LIMIT 1", "SELECT mortgage_lender FROM Properties GROUP BY mortgage_lender ORDER BY count(*) DESC LIMIT 1\n\n"], "a2d6bf5fc242ab5e4167906a": ["SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)", "SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)", "SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)"], "d519f55f8085e90bcf9bfd50": ["SELECT Region FROM city WHERE Name = 'Kabul'", "SELECT Region FROM country WHERE Capital = 'Kabul'", "SELECT Region FROM city WHERE Name = 'Kabul'", "SELECT Region FROM city WHERE Name = 'Kabul'", "SELECT Region FROM city WHERE Name = 'Kabul'"], "7dcdd8d37bfe4053541db7b1": ["This question cannot be answered with the provided tables. The table schema does not include a column for genre, so we cannot determine the most common genre among the songs.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the provided tables. The table structure does not include a column for genre or any information related to genres of songs.", "This question cannot be answered with the given tables as there is no genre information provided."], "d02a356629aaad5baa10938d": ["SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments)", "SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)", "SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)", "SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)", "SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)"], "b957dd8922a6cbad2c3bcb25": ["SELECT Money_Rank FROM poker_player GROUP BY Money_Rank ORDER BY Earnings DESC LIMIT 1\n\n", "SELECT semester FROM poker_player GROUP BY semester ORDER BY sum(earnings) DESC LIMIT 1\n\n", "SELECT Final_Table_Made, max(Earnings) FROM poker_player GROUP BY Final_Table_Made", "SELECT semester, sum(earnings) FROM poker_player GROUP BY semester ORDER BY sum(earnings) DESC LIMIT 1\n\n", "SELECT Money_Rank, MAX(Earnings) FROM poker_player"], "e78b45bb68a79aa58861dbc5": ["SELECT count(*) FROM poker_player", "SELECT count(*) FROM poker_player", "SELECT count(*) FROM poker_player", "SELECT count(*) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Name IS NOT NULL", "SELECT count(*) FROM poker_player"], "aa89d12e8d69cc0a5a8c4368": ["SELECT count(DISTINCT Nationality) FROM conductor", "SELECT COUNT(DISTINCT Nationality) FROM conductor", "SELECT count(DISTINCT Nationality) FROM conductor", "SELECT count(DISTINCT Nationality) FROM conductor", "SELECT count(DISTINCT Nationality) FROM conductor"], "7b6e799a31b05359090394c1": ["This question does not seem to be relevant to the tables provided.", "This question is not related to the provided tables.", "This question is not relevant to the provided tables.", "There is no area size information available in the provided tables.", "This question is not relevant to the tables provided."], "595b461e0681a3ad92443d67": ["SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\"\n\n", "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\""], "50f30bbac849401597f5bb9a": ["SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1\n\n", "SELECT Language, COUNT(*) AS num_channels \nFROM TV_Channel \nGROUP BY Language \nORDER BY num_channels \nLIMIT 1\n\n", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1\n\n", "SELECT Language, COUNT(*) as Number_of_Channels \nFROM TV_Channel \nGROUP BY Language \nORDER BY Number_of_Channels ASC LIMIT 1", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1\n\n"], "a682d46f66d7dd6aaff304b7": ["SELECT population/SurfaceArea FROM city", "SELECT Population/SurfaceArea FROM city", "SELECT Population/SurfaceArea FROM city", "SELECT Population/SurfaceArea FROM city", "SELECT Population/SurfaceArea FROM city"], "717428e549a977234c2070c2": ["SELECT count(*) FROM people WHERE Nationality = 'Russia'", "SELECT count(*) FROM people WHERE Nationality = 'Russia'", "SELECT count(*) FROM people WHERE Nationality = 'Russia'", "SELECT count(*) FROM people WHERE Nationality = 'Russia'", "SELECT count(*) FROM people WHERE Nationality = 'Russia'"], "b36d112220b893739ebac999": ["SELECT count(DISTINCT Nationality) FROM people\n\n", "SELECT count(DISTINCT Nationality) FROM people\n\n", "SELECT count(DISTINCT Nationality) FROM people\n\n", "SELECT count(DISTINCT Nationality) FROM people\n\n", "SELECT count(DISTINCT Nationality) FROM people\n\n"], "fa1240b6545f8381bab954bf": ["SELECT sum(Viewers_m) FROM TV_Channel", "SELECT sum(Viewers_m) FROM TV_series", "SELECT sum(Viewers_m) FROM TV_Channel", "SELECT sum(Viewers_m) FROM TV_Channel JOIN TV_series ON TV_series.Channel = TV_Channel.id", "SELECT sum(Viewers_m) FROM TV_Channel"], "6a36b0cbebb64d41455f1ec7": ["SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE (Language = 'English' OR Language = 'Dutch') AND IsOfficial = 'T')", "SELECT DISTINCT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') OR Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T')", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T' UNION SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T')", "SELECT DISTINCT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') OR Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T')", "SELECT name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch' AND IsOfficial = 'T')"], "9e8bd9ce578a5de1e06a1018": ["SELECT course_name FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses)\n\n", "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id", "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id", "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id", "SELECT DISTINCT course_name FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id\n\n"], "f01b65bc5cea4e2c509b5e50": ["SELECT * FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling'", "SELECT * FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling'", "SELECT * FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling'", "SELECT * FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling'", "SELECT * FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling'"], "1d762b184fe76d7387918aed": ["This question is not related to the provided tables.", "This question cannot be answered with the provided tables as they do not contain social media data.", "This question cannot be answered using the provided tables.", "This question cannot be answered using the given tables.", "This question cannot be answered using the given tables."], "80e9d2e40102267cbfa1e85f": ["SELECT DISTINCT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)", "SELECT DISTINCT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)", "SELECT DISTINCT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)", "SELECT DISTINCT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)", "SELECT DISTINCT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)"], "b38c5100cbc4a764319ea6d8": ["SELECT state, contestant_number, count(*) as vote_count FROM votes GROUP BY state, contestant_number", "SELECT state ,  count(*) FROM votes GROUP BY state, contestant_number ORDER BY count(*)", "SELECT state, contestant_number, count(*) as vote_count FROM VOTES GROUP BY state, contestant_number", "SELECT state, contestant_number, count(*) FROM VOTES GROUP BY state, contestant_number", "SELECT state, contestant_number, count(*) as vote_count FROM VOTES GROUP BY state, contestant_number ORDER BY vote_count DESC"], "274891f5d464ae4df813196b": ["SELECT T1.name, T1.age, T1.gender, T1.weight, T2.first_name AS owner_first_name, T2.last_name AS owner_last_name\nFROM Dogs AS T1\nJOIN Owners AS T2 ON T1.owner_id = T2.owner_id\nWHERE T1.abandoned_yn = 'Y' AND T1.date_adopted IS NULL", "SELECT T1.name, T2.first_name, T2.last_name, T2.email_address, T2.home_phone, T2.cell_number \nFROM dogs AS T1 \nJOIN owners AS T2 ON T1.owner_id = T2.owner_id \nWHERE T1.abandoned_yn = 'Y' AND T1.date_adopted IS NULL", "SELECT D.name, D.age, D.gender, D.weight, O.first_name, O.last_name, O.email_address, O.home_phone, O.cell_number \nFROM Dogs AS D \nJOIN Owners AS O ON D.owner_id = O.owner_id \nWHERE D.abandoned_yn = 'Y' AND D.date_adopted IS NULL", "SELECT T1.dog_id, T1.name, T1.age, T1.gender, T1.size_code, T1.breed_code, T2.first_name AS owner_first_name, T2.last_name AS owner_last_name, T2.city AS owner_city, T2.state AS owner_state, T2.email_address AS owner_email\nFROM dogs AS T1 \nJOIN owners AS T2 ON T1.owner_id = T2.owner_id \nWHERE T1.abandoned_yn = 'N' AND T1.date_adopted IS NULL", "SELECT D.name, D.age, D.gender, D.weight, O.first_name, O.last_name, O.city, O.state \nFROM Dogs AS D \nJOIN Owners AS O ON D.owner_id = O.owner_id \nWHERE D.abandoned_yn = 'Y' AND D.date_adopted IS NULL"], "04725e6efdcffc3dd4372673": ["SELECT avg(Attendance) FROM show", "SELECT avg(Attendance) FROM show", "SELECT avg(Attendance) FROM show", "SELECT avg(Attendance) FROM show", "SELECT avg(Attendance) FROM show"], "4d6778de91504cb0db4cae32": ["SELECT T2.Record_Company FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN show AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T3.Attendance > 2000", "SELECT T2.Record_Company FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN show AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T3.Attendance > 2000", "SELECT T2.Record_Company FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN show AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T3.Attendance > 2000\n\n", "SELECT Record_Company FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Performance_ID IN (SELECT Performance_ID FROM show WHERE Attendance > 2000)) \n\n", "SELECT T3.Record_Company FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN orchestra AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID WHERE T2.Attendance > 2000\n\n"], "afd1034ac16e6c5e2c214382": ["SELECT property_address FROM properties WHERE property_type_code = 'apt' ORDER BY date_on_market ASC LIMIT 1", "SELECT property_address FROM Properties WHERE property_type_code = 'apt' ORDER BY date_on_market ASC LIMIT 1\n\n", "SELECT property_address FROM properties WHERE property_type_code = 'apt' ORDER BY date_on_market ASC LIMIT 1\n\n", "SELECT property_address FROM Properties WHERE property_type_code = 'apt' ORDER BY date_on_market ASC LIMIT 1", "SELECT property_address FROM Properties WHERE property_type_code = 'apt' ORDER BY date_on_market ASC LIMIT 1\n\n"], "4f04e7f41efae3282f4850ff": ["SELECT state, DATE(created), count(*) FROM VOTES GROUP BY state, DATE(created)", "SELECT state, DATE_FORMAT(created, '%Y-%m-%d %H') AS timestamp, COUNT(*) AS votes FROM VOTES GROUP BY state, timestamp", "SELECT state, created, count(*) FROM VOTES GROUP BY state, created", "SELECT state, DATE_FORMAT(created, '%Y-%m-%d') AS date, count(*) AS total_votes FROM votes GROUP BY state, date", "SELECT state, DATE_FORMAT(created, '%Y-%m-%d %H:%i:%s') AS timestamp, count(*) AS total_votes FROM VOTES GROUP BY state, timestamp"], "fb1ffb74297fb7e162daa82f": ["SELECT DISTINCT Directed_by FROM Cartoon\n\n", "SELECT DISTINCT Directed_by FROM Cartoon\n\n", "SELECT DISTINCT Directed_by FROM Cartoon\n\n", "SELECT DISTINCT Directed_by FROM Cartoon\n\n", "SELECT DISTINCT Directed_by FROM Cartoon\n\n"], "43b2720a8f3d1c56b95b17f3": ["SELECT contestant_name FROM contestants WHERE contestant_name = 'Nita Coster'", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name = 'Nita Coster'", "SELECT capacity FROM contestants WHERE contestant_name = 'Nita Coster'", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name = 'Nita Coster'", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name = 'Nita Coster'"], "a42072f597a4668c288f492c": ["SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'\n\n", "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'\n\n", "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'\n\n", "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'\n\n", "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'\n\n"], "d34a75e1d192b8218e7562c1": ["This question cannot be answered with the given tables as there is no information related to social media strategies in the provided tables.", "This question cannot be answered with the given tables.", "This question cannot be answered directly with the given tables. The tables provided do not contain information about strategies employed by orchestras in their use of social media.", "This question cannot be answered with the given tables.", "SELECT T2.Orchestra, T2.Major_Record_Format FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Type = 'social media'"], "02debdfcdc17e0bff4377aae": ["SELECT T1.first_name \nFROM owners AS T1 \nJOIN dogs AS T2 ON T1.owner_id = T2.owner_id \nORDER BY T1.weight + T2.weight DESC \nLIMIT 1", "SELECT T2.first_name \nFROM owners AS T2 \nJOIN dogs AS T1 ON T1.owner_id = T2.owner_id \nORDER BY (T1.weight + T1.weight) DESC \nLIMIT 1", "SELECT first_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id ORDER BY (T1.weight + T2.weight) DESC LIMIT 1\n\n", "SELECT first_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id ORDER BY T1.weight + T2.weight DESC LIMIT 1\n\n", "SELECT O.first_name \nFROM Owners O \nJOIN Dogs D ON O.owner_id = D.owner_id \nORDER BY O.weight + D.weight DESC \nLIMIT 1\n\n"], "f868d2cf23415c57e2042d72": ["SELECT role_code, COUNT(*) FROM Professionals GROUP BY role_code ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT role_code, count(*) FROM professionals GROUP BY role_code ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT role_code, COUNT(*) AS role_count \nFROM owners \nGROUP BY role_code \nORDER BY role_count DESC \nLIMIT 1", "SELECT role_code, COUNT(*) FROM professionals GROUP BY role_code ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT role_code, COUNT(*) AS count FROM professionals GROUP BY role_code ORDER BY count DESC LIMIT 1\n\n"], "c95eeb9b07653ac90c3918f1": ["SELECT property_type_code, property_name, room_count, Ref_Property_Types.property_type_description\nFROM Properties\nJOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code\nWHERE room_count NOT IN \n(SELECT CASE \n    WHEN Properties.property_type_code = 'APT' THEN 2\n    WHEN Properties.property_type_code = 'FLD' THEN 4\n    WHEN Properties.property_type_code = 'HSE' THEN 6\n    WHEN Properties.property_type_code = 'OTH' THEN 3\n    WHEN Properties.property_type_code = 'SHP' THEN 5\nEND)", "SELECT property_type_code, property_name, room_count FROM Properties WHERE room_count NOT IN (SELECT CASE WHEN property_type_code = 'apt' THEN apt_feature_1 WHEN property_type_code = 'fld' THEN fld_feature_1 WHEN property_type_code = 'hse' THEN hse_feature_1 WHEN property_type_code = 'oth' THEN oth_feature_1 WHEN property_type_code = 'shp' THEN shp_feature_1 ELSE NULL END AS standard_room_count FROM Properties)", "SELECT property_type_code, property_name, room_count FROM Properties WHERE room_count NOT IN (SELECT ref_room_count FROM Ref_Property_Types WHERE Properties.property_type_code = Ref_Property_Types.property_type_code)", "SELECT property_type_description, property_name, room_count FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE room_count NOT IN (SELECT standard_room_count FROM Room_Count_Standards WHERE Room_Count_Standards.property_type_code = Properties.property_type_code)", "SELECT property_type_description, property_name, room_count FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE room_count NOT IN (SELECT AVG(room_count) FROM Properties GROUP BY property_type_code)\n\n"], "3c0a56cb318f2ac3420e1d2d": ["SELECT sum(Height) FROM people WHERE Name = 'Aleksey Ostapenko'", "SELECT Height FROM people WHERE Name = 'Aleksey Ostapenko'", "SELECT SUM(Height) FROM people WHERE Name = 'Aleksey Ostapenko'", "SELECT Height FROM people WHERE Name = 'Aleksey Ostapenko'", "SELECT height, weight FROM people WHERE name = \"Aleksey Ostapenko\""], "84bf8d7661a3ca093583647c": ["SELECT sum(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')", "SELECT sum(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')", "SELECT sum(SurfaceArea) FROM country WHERE Continent IN ('Asia','Europe')", "SELECT sum(SurfaceArea) FROM country WHERE Continent = \"Asia\" OR Continent = \"Europe\"", "SELECT sum(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')"], "edc791ba4b763db7273f2fa7": ["SELECT avg(grade) FROM Highschooler", "SELECT avg(grade) FROM Highschooler", "SELECT avg(grade) FROM Highschooler", "SELECT AVG(grade) FROM Highschooler", "SELECT avg(grade) FROM Highschooler"], "43052fc2e5e1d4201e64c7da": ["SELECT T2.Orchestra ,  avg(T1.Official_ratings_(millions)) AS avg_ratings FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra", "SELECT T2.Orchestra, avg(T1.Official_ratings_(millions)) AS avg_ratings FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra", "SELECT T2.Orchestra, avg(T1.Official_ratings_(millions)) \nFROM performance AS T1 \nJOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID \nGROUP BY T2.Orchestra", "SELECT Orchestra, AVG(Official_ratings_(millions)) AS Avg_Rating FROM performance AS P JOIN orchestra AS O ON P.Orchestra_ID = O.Orchestra_ID GROUP BY Orchestra", "SELECT T2.Orchestra, avg(T3.Official_ratings_(millions)) AS Average_ratings FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra"], "3e9df97eca0931b4b5c381e9": ["SELECT title FROM cartoon WHERE title = \"Music Box Italia\" AND language = \"French\"", "SELECT T1.Title ,  T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  \"Music Box Italia\" AND T2.Language  =  \"French\"", "SELECT T1.Title ,  T2.Language FROM Cartoon AS T1 JOIN TV_Channel AS T3 ON T1.Channel  =  T3.id WHERE T3.series_name  =  \"Music Box Italia\" AND T2.Language  =  \"French\"", "SELECT T1.Title ,  T1.id ,  T2.Title FROM cartoon AS T1 JOIN tv_channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  \"Music Box Italia\" AND T2.Language  =  \"French\"", "SELECT T1.Title ,  T2.Language FROM cartoon AS T1 JOIN tv_channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  \"Music Box Italia\" AND T2.Language  =  \"French\"\n\n"], "82a182c5a3e81a6ca97f0694": ["SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id NOT IN (SELECT T2.Channel FROM Cartoon AS T2 WHERE Directed_by = 'Ben Jones')\n\n", "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\n\n", "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\n\n", "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\n\n", "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\n\n"], "65da8051d88b432cc753f47d": ["SELECT first_name FROM owners UNION SELECT first_name FROM professionals EXCEPT SELECT name FROM dogs", "SELECT first_name FROM (SELECT first_name FROM owners UNION SELECT first_name FROM professionals) AS T1 WHERE first_name NOT IN (SELECT name FROM dogs)", "SELECT DISTINCT first_name FROM (\n    SELECT first_name FROM owners\n    UNION\n    SELECT first_name FROM professionals\n) AS T1\nWHERE first_name NOT IN (SELECT name FROM dogs)", "SELECT first_name FROM professionals\nUNION\nSELECT first_name FROM owners\nEXCEPT\nSELECT name AS first_name FROM dogs", "SELECT first_name FROM Professionals\nUNION\nSELECT first_name FROM Owners\nEXCEPT\nSELECT name FROM Dogs"], "7eb02ada3c86975a77d7f73e": ["SELECT property_name FROM Properties WHERE property_id = 4", "SELECT version_number FROM properties WHERE property_id = 4\n\n", "SELECT version_number FROM properties WHERE property_id = 4\n\n", "SELECT property_type_code FROM properties WHERE property_id = 4", "SELECT version_number FROM Properties WHERE property_id = 4"], "bed9b93d1e2594e6fd580a9a": ["SELECT count(*) FROM contestants WHERE contestant_name LIKE '%Al%' \n\n", "SELECT count(*) FROM contestants WHERE contestant_name LIKE '%Al%' \n\n", "SELECT count(DISTINCT contestant_number) FROM contestants WHERE contestant_name LIKE '%Al%'", "SELECT count(*) FROM CONTESTANTS WHERE contestant_name LIKE '%Al%' \n\n", "SELECT count(*) FROM contestants WHERE contestant_name LIKE '%Al%'"], "5d6ae60cccb2e274cb4b96a6": ["SELECT avg(transcript_date) FROM transcripts", "SELECT avg(transcript_date) FROM Transcripts", "SELECT avg(transcript_date) FROM transcripts", "SELECT avg(transcript_date) FROM transcripts", "SELECT AVG(transcript_date) FROM transcripts"], "16d02c550768b903fbc0fbc4": ["SELECT * FROM Cartoon WHERE Directed_by = \"Ben Jones\"\n\n", "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\"\n\n", "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\"\n\n", "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\"\n\n", "SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones'\n\n"], "d95ea0fd49c96756b4a41358": ["SELECT T1.degree_program_id, T1.degree_summary_name FROM degree_programs AS T1 JOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.degree_program_id, T1.degree_summary_name FROM degree_programs AS T1 \nJOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id \nGROUP BY T1.degree_program_id \nORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.degree_program_id, T1.degree_summary_name\nFROM Degree_Programs AS T1 \nJOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id \nGROUP BY T1.degree_program_id \nORDER BY count(*) DESC \nLIMIT 1", "SELECT T1.degree_program_id, T1.degree_summary_name FROM degree_programs AS T1 JOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.degree_program_id, T1.degree_summary_name FROM degree_programs AS T1 JOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1\n\n"], "1c6fd76f42b29d90a86e2712": ["SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4\n\n", "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4\n\n", "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4\n\n", "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4\n\n", "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4\n\n"], "3be52a77c50d1ce8320f0c7d": ["SELECT Country, COUNT(*) AS Number_of_Channels\nFROM TV_Channel\nGROUP BY Country\nORDER BY Number_of_Channels DESC\nLIMIT 1", "SELECT country, count(*) FROM TV_Channel GROUP BY country ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT Country, COUNT(*) as Number_of_Channels FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT T2.Country, COUNT(*) FROM TV_Channel AS T1 JOIN TV_Channel AS T2 ON T1.Country = T2.Country GROUP BY T2.Country ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "1c5b5cbcaad7157c92683dff": ["SELECT COUNT(*) FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE email_address IS NOT NULL\n\n", "SELECT count(*) FROM dogs AS T1 JOIN owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.email_address IS NOT NULL", "SELECT count(*) FROM dogs AS T1 JOIN owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.email_address IS NOT NULL", "SELECT count(*) FROM dogs WHERE owner_id IN (SELECT owner_id FROM owners WHERE email_address IS NOT NULL)", "SELECT count(*) FROM dogs WHERE owner_id IN (SELECT owner_id FROM owners WHERE email_address IS NOT NULL)"], "146683bfdc1b9f3f4080e1dc": ["SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'\n\n", "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'", "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'", "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'", "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'"], "3fc8b7390cfcdd35435bec00": ["SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, count(*) AS enrollment_count \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nORDER BY enrollment_count DESC \nLIMIT 1", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS num_enrollments\nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id\nGROUP BY T1.student_id\nORDER BY num_enrollments DESC\nLIMIT 1", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS enrollment_count\nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id\nGROUP BY T1.student_id\nORDER BY enrollment_count DESC\nLIMIT 1", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS num_enrollments \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nORDER BY num_enrollments DESC \nLIMIT 1", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS num_enrollments \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nORDER BY num_enrollments DESC \nLIMIT 1"], "d88220c531826d93a2bfe46f": ["SELECT count(*) FROM TV_Channel WHERE Language = 'English'", "SELECT count(*) FROM TV_Channel WHERE Language = 'English'", "SELECT count(*) FROM TV_Channel WHERE Language = 'English'\n\n", "SELECT count(*) FROM TV_Channel WHERE Language = 'English'", "SELECT count(*) FROM TV_Channel WHERE Language = 'English'"], "51cfa06c945a4963cbba3527": ["SELECT phone_number FROM votes GROUP BY phone_number ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT phone_number ,  count(*) FROM votes GROUP BY phone_number ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT state, count(*) FROM votes GROUP BY state ORDER BY count(*) DESC LIMIT 1", "SELECT state, count(*) FROM VOTES GROUP BY state ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT phone_number FROM VOTES GROUP BY phone_number ORDER BY count(*) DESC LIMIT 1\n\n"], "b9222e6dd7888cfb8659d562": ["SELECT T1.name, T2.school\nFROM Highschooler AS T1\nJOIN School AS T2 ON T1.ID = T2.ID", "SELECT T1.name, T2.grade \nFROM Highschooler AS T1 \nJOIN Friend ON T1.ID = Friend.student_id \nJOIN Highschooler AS T2 ON Friend.friend_id = T2.ID", "SELECT T1.name ,  T2.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id\n\n", "SELECT T1.name, T2.school\nFROM Highschooler AS T1\nJOIN Friend AS T2 ON T1.ID = T2.student_id", "SELECT T1.name, T2.school\nFROM Highschooler AS T1\nJOIN Friend AS T2 ON T1.ID = T2.student_id"], "8929148ac97dfc4df908c74c": ["SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n"], "19f8cec9414add215f0db68d": ["SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1\n\n", "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1", "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1", "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1\n\n", "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1"], "61b5efa65081829a6695d800": ["SELECT student_course_id, COUNT(transcript_id) AS times_enrolled \nFROM Transcript_Contents \nGROUP BY student_course_id \nORDER BY times_enrolled DESC \nLIMIT 1\n\n", "SELECT student_course_id, COUNT(*) AS enrollment_count\nFROM transcript_contents\nGROUP BY student_course_id\nORDER BY enrollment_count DESC\nLIMIT 1", "SELECT student_course_id, COUNT(*) AS enrollment_count\nFROM student_enrolment_courses\nGROUP BY student_course_id\nORDER BY enrollment_count DESC\nLIMIT 1", "SELECT student_course_id, COUNT(transcript_id) AS num_transcripts\nFROM student_enrolment_courses\nJOIN transcript_contents ON student_enrolment_courses.student_course_id = transcript_contents.student_course_id\nGROUP BY student_course_id\nORDER BY num_transcripts DESC\nLIMIT 1\n\n", "SELECT student_course_id, COUNT(transcript_id) AS enrollment_count\nFROM Transcript_Contents\nGROUP BY student_course_id\nORDER BY enrollment_count DESC\nLIMIT 1"], "08809879736f0b72a9decec4": ["SELECT contestant_name, floor FROM CONTESTANTS JOIN AREA_CODE_STATE ON CONTESTANTS.state = AREA_CODE_STATE.state", "SELECT T1.contestant_name ,  T2.floor FROM contestants AS T1 JOIN area_code_state AS T2 ON T1.state  =  T2.state", "SELECT floor FROM OFFICES JOIN CONTESTANTS ON OFFICES.office_number = CONTESTANTS.office_number", "SELECT T1.contestant_name ,  T2.floor FROM contestants AS T1 JOIN office AS T2 ON T1.contestant_number  =  T2.contestant_number", "SELECT T1.contestant_name ,  T2.state FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number"], "31f4d80ac6bf85ea7bb83294": ["SELECT Name FROM city WHERE ID = (SELECT Capital FROM country ORDER BY SurfaceArea DESC LIMIT 1)", "SELECT Name FROM city ORDER BY SurfaceArea DESC LIMIT 1\n\n", "SELECT Name FROM city ORDER BY SurfaceArea DESC LIMIT 1\n\n", "SELECT Name FROM city ORDER BY SurfaceArea DESC LIMIT 1\n\n", "SELECT Name FROM city ORDER BY SurfaceArea DESC LIMIT 1\n\n"], "f7b50b5da5b7c2b6400f06b4": ["SELECT Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY Earnings DESC LIMIT 1", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC LIMIT 1", "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC LIMIT 1", "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC LIMIT 1\n\n", "SELECT T1.Name \nFROM people AS T1 \nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID \nORDER BY T2.Earnings DESC \nLIMIT 1"], "539a5c95ad7b38cfe54afa57": ["SELECT Language FROM countrylanguage ORDER BY IsOfficial DESC, Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE Percentage = (SELECT max(Percentage) FROM countrylanguage)", "SELECT Language FROM countrylanguage WHERE IsOfficial = 'T' ORDER BY Percentage ASC LIMIT 1\n\n", "SELECT Language FROM countrylanguage ORDER BY IsOfficial DESC, Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE Percentage = (SELECT max(Percentage) FROM countrylanguage)"], "cfc2e1cebfb6b98ba076cc8e": ["SELECT DISTINCT student_id FROM Friend INTERSECT SELECT DISTINCT student_id FROM Likes", "SELECT student_id FROM Friend WHERE student_id IN (SELECT student_id FROM Likes)", "SELECT student_id FROM Friend INTERSECT SELECT student_id FROM Likes", "SELECT student_id FROM Friend INTERSECT SELECT student_id FROM Likes", "SELECT student_id FROM Friend INTERSECT SELECT student_id FROM Likes"], "d3b264b4f8039cf85995867b": ["SELECT sum(cost_of_treatment) FROM treatments WHERE date_of_treatment BETWEEN '2018-01-01' AND '2018-12-31' AND dog_id = (SELECT dog_id FROM dogs WHERE name = 'Kacey')", "SELECT sum(cost_of_treatment) FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id WHERE T2.name = \"Kacey\" AND year(date_of_treatment) = 2018\n\n", "SELECT SUM(cost_of_treatment) FROM treatments WHERE dog_id IN (SELECT dog_id FROM dogs WHERE name = 'Kacey') AND date_of_treatment BETWEEN '2018-01-01' AND '2018-12-31'", "SELECT SUM(cost_of_treatment) FROM treatments WHERE date_of_treatment BETWEEN '2018-01-01' AND '2018-12-31'", "SELECT sum(cost_of_treatment) FROM treatments WHERE date_of_treatment LIKE '2018%' AND dog_id = (SELECT dog_id FROM dogs WHERE name = 'Kacey')"], "a3d57a761fced379eadbcc08": ["SELECT Title FROM song ORDER BY Duration ASC LIMIT 1\n\n", "SELECT Title FROM song ORDER BY Duration ASC LIMIT 1\n\n", "SELECT Title FROM song ORDER BY Duration LIMIT 1", "SELECT Title FROM song ORDER BY Duration ASC LIMIT 1\n\n", "SELECT title FROM song ORDER BY duration ASC LIMIT 1"], "6571b4c740fa40fc310993f4": ["SELECT count(*) FROM Highschooler", "SELECT count(*) FROM Highschooler", "SELECT count(*) FROM Highschooler", "SELECT count(*) FROM Highschooler", "SELECT count(*) FROM Highschooler"], "a41f425d4368ed2e107d8be6": ["SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC\n\n", "SELECT Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY Earnings DESC\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC\n\n", "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC\n\n"], "e3052a878bce12a2b148cc6b": ["This question cannot be answered directly with the given tables.", "This question cannot be answered directly with the given tables.", "This question cannot be answered directly with the provided tables.", "There is no SQL query that can directly answer this question as it is subjective and depends on various factors.", "This question cannot be answered directly with the given tables as they do not provide information on luck or skill in poker."], "c4e72ff014dac0f5024f3337": ["SELECT LocalName FROM country WHERE Name = 'Australia'", "SELECT HeadOfState FROM country WHERE Name = 'Australia'", "SELECT localname FROM country WHERE name = 'Australia'", "SELECT NationalAnthem FROM country WHERE Name = 'Australia'", "SELECT anthem FROM country WHERE name = 'Australia'"], "995cc14dd0c1866fb3c941b2": ["SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway' \n\n", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'"], "865bd5d3a5238ad055447b57": ["SELECT COUNT(DISTINCT time_zone) FROM Addresses", "SELECT count(DISTINCT time_zone) FROM Addresses\n\n", "SELECT COUNT(DISTINCT time_zone) FROM addresses\n\n", "SELECT count(DISTINCT timezone) FROM addresses", "SELECT count(DISTINCT timezone) FROM addresses\n\n"], "455723ab910ea188225ce636": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings ASC LIMIT 1\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings = (SELECT min(Earnings) FROM poker_player)", "SELECT T1.Name FROM poker_player AS T2 JOIN people AS T1 ON T2.People_ID = T1.People_ID ORDER BY T2.Earnings ASC LIMIT 1\n\n", "SELECT sponsor FROM poker_player WHERE Earnings = (SELECT min(Earnings) FROM poker_player)"], "328882d303933bd4ecb1b89c": ["SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade", "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade", "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade", "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade", "SELECT grade, count(*) FROM Highschooler GROUP BY grade"], "a420fab8640e6428a0fa5adb": ["SELECT avg(T1.age) FROM professionals AS T1 JOIN treatments AS T2 ON T1.professional_id = T2.professional_id", "SELECT avg(age) FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments)", "SELECT avg(age) FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments)", "SELECT avg(age) FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments)", "SELECT AVG(age) FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments)"], "b864bef448cff3396b27270b": ["SELECT T1.email_address FROM students AS T1 JOIN advisors AS T2 ON T1.student_id = T2.student_id WHERE T1.student_id = 2\n\n", "SELECT T1.email_address, T2.advisor_email_address\nFROM Students AS T1\nJOIN Advisors AS T2 ON T1.student_id = T2.student_id\nWHERE T1.student_id = 2", "SELECT T1.email_address, T3.email_address\nFROM Students AS T1\nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id\nJOIN Advisors AS T3 ON T2.advisor_id = T3.advisor_id\nWHERE T1.student_id = 2", "SELECT T1.email_address, T2.email_address\nFROM students AS T1\nJOIN advisors AS T2 ON T1.advisor_id = T2.advisor_id\nWHERE T1.student_id = 2", "SELECT T1.email_address, T2.advisor_email_address\nFROM Students AS T1\nJOIN Advisors AS T2 ON T1.student_id = T2.student_id\nWHERE T1.student_id = 2"], "21ef871c3e4cbafc0d887b75": ["SELECT nationality FROM people GROUP BY nationality ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT nationality FROM people GROUP BY nationality ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1\n\n", "SELECT nationality\nFROM people\nGROUP BY nationality\nORDER BY count(*) DESC\nLIMIT 1\n\n", "SELECT nationality FROM people GROUP BY nationality ORDER BY count(*) DESC LIMIT 1\n\n"], "ad8a07949b1a8e176d42be4f": ["SELECT citizenship FROM singer WHERE birth_year < 1945 INTERSECT SELECT citizenship FROM singer WHERE birth_year > 1955\n\n", "SELECT citizenship FROM singer WHERE birth_year < 1945 INTERSECT SELECT citizenship FROM singer WHERE birth_year > 1955\n\n", "SELECT citizenship FROM singer WHERE birth_year < 1945 INTERSECT SELECT citizenship FROM singer WHERE birth_year > 1955\n\n", "SELECT citizenship FROM singer WHERE birth_year < 1945 INTERSECT SELECT citizenship FROM singer WHERE birth_year > 1955\n\n", "SELECT citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT citizenship FROM singer WHERE Birth_Year > 1955\n\n"], "5aba387cffa6fa01162b2ea5": ["SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 UNION SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003\n\n", "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003\nINTERSECT\nSELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003\n\n", "SELECT Record_Company FROM Orchestra WHERE Year_of_Founded < 2003 OR Year_of_Founded > 2003", "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003\n\n", "SELECT DISTINCT T1.Record_Company FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T1.Year_of_Founded < 2003 INTERSECT SELECT DISTINCT T1.Record_Company FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T1.Year_of_Founded > 2003\n\n"], "68badc2e6e60d5218b73da52": ["SELECT * FROM Highschooler WHERE name = 'Logan'", "SELECT T2.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T1.name = 'Logan'", "SELECT T1.student_id ,  T2.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T2.name = \"Logan\"", "SELECT T2.grade FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.student_id = 'Logan' OR T1.liked_id = 'Logan'", "SELECT T2.name FROM likes AS T1 JOIN highschooler AS T2 ON T1.student_id = T2.ID WHERE T1.liked_id = \"Logan\" \n\n"], "813a4a8268f583c48700af6f": ["SELECT Title, Sales, Highest_Position FROM song ORDER BY Sales DESC\n\n", "SELECT Title, Sales, Highest_Position FROM song ORDER BY Sales DESC\n\n", "SELECT Title, Sales, Highest_Position FROM song ORDER BY Sales DESC\n\n", "SELECT Title, Sales, Highest_Position FROM song ORDER BY Sales DESC, Highest_Position LIMIT 1\n\n", "SELECT Title, Sales, Highest_Position FROM song ORDER BY Sales DESC\n\n"], "c28437fafe7f78f2d1992d58": ["SELECT sum(Height) FROM people WHERE Name = 'Teodor Salparov' OR Name = 'Pet'", "SELECT sum(Height) FROM people WHERE Name = 'Teodor Salparov'", "SELECT sum(height) FROM people WHERE Name = 'Teodor Salparov' OR Name = 'pet'", "SELECT SUM(Height) FROM people WHERE Name = \"Teodor Salparov\" OR Name = \"pet\"", "SELECT SUM(Height) FROM people WHERE Name = 'Teodor Salparov' OR Name = 'Pet'"], "7b29fcbc5acdaf45dc43bf30": ["SELECT phone_number FROM Highschooler WHERE name = 'Jessica'", "This question cannot be answered with the given tables.", "There is no phone number column in the provided tables.", "SELECT phone_number FROM Highschooler WHERE name = 'Jessica'", "This question cannot be answered with the given tables."], "6d650a40ed7753729be757f6": ["SELECT property_id ,  property_name FROM properties ORDER BY room_count DESC LIMIT 1\n\n", "SELECT property_name FROM Properties ORDER BY room_count DESC LIMIT 1\n\n", "SELECT property_name FROM Properties ORDER BY room_count DESC LIMIT 1\n\n", "SELECT property_name FROM Properties ORDER BY room_count DESC LIMIT 1\n\n", "SELECT property_name FROM properties ORDER BY room_count DESC LIMIT 1\n\n"], "63364ab444706fb1de24237e": ["SELECT student_id, count(*) FROM Likes GROUP BY student_id\n\n", "SELECT student_id, count(*) FROM Likes GROUP BY student_id\n\n", "SELECT student_id, count(*) FROM Likes GROUP BY student_id\n\n", "SELECT student_id ,  count(*) FROM likes GROUP BY student_id\n\n", "SELECT student_id, count(*) FROM Likes GROUP BY student_id\n\n"], "9fa59f7d6e21875d9e17c9ee": ["SELECT Language FROM countrylanguage WHERE CountryCode = \"ABW\" AND IsOfficial = \"T\"", "SELECT Language FROM countrylanguage WHERE CountryCode = \"ABW\" AND IsOfficial = \"T\"", "SELECT Language FROM countrylanguage WHERE CountryCode = \"ABW\" AND IsOfficial = \"T\"\n\n", "SELECT Language FROM countrylanguage WHERE CountryCode = \"ABW\" AND IsOfficial = \"T\"", "SELECT Language FROM countrylanguage WHERE CountryCode = \"ABW\" AND IsOfficial = \"T\""], "c54eeb0af202cfd645c00d31": ["There seems to be an error in the question provided. The tables given are related to conductors, orchestras, performances, and shows, not aircraft or individuals. Could you please provide a question related to the data in the tables provided?", "SELECT airplane FROM conductor WHERE name = 'Charles Dutoit'", "This question is not relevant to the provided tables.", "This question is not applicable to the tables provided.", "This question is not relevant to the tables provided above."], "f978ae31827bd3f4825ccad0": ["SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Highest_Position = (SELECT MAX(Highest_Position) FROM song))\n\n", "SELECT Name FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM song ORDER BY Sales DESC LIMIT 1)", "SELECT Name FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM song GROUP BY Singer_ID ORDER BY count(*) DESC LIMIT 1)", "SELECT Name FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM song GROUP BY Singer_ID ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT Name FROM singer ORDER BY Sales DESC LIMIT 1\n\n"], "ca9ad7b5f09e352367b6e316": ["SELECT count(*) FROM Dogs WHERE allergy_yn = 'yes'", "SELECT count(*) FROM dogs WHERE name IN (SELECT dog_id FROM treatments WHERE treatment_type_code = 'allergies')", "SELECT count(*) FROM dogs WHERE name IN (SELECT name FROM treatments WHERE treatment_type_code = 'allergy')", "SELECT count(*) FROM dogs WHERE breed_code = 'Allergies'", "SELECT count(*) FROM Dogs WHERE breed_code = 'Allergy'"], "5eb43b0207ac0481f8a3b31f": ["SELECT T2.name\nFROM Highschooler AS T1\nJOIN Friend AS T3 ON T1.ID = T3.student_id\nJOIN Highschooler AS T2 ON T3.friend_id = T2.ID\nWHERE T1.name = 'Kyle'", "SELECT T2.name \nFROM Friend AS T1 \nJOIN Highschooler AS T2 ON T1.friend_id = T2.ID \nWHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "SELECT DISTINCT T2.name \nFROM Friend AS T1 \nJOIN Highschooler AS T2 ON T1.friend_id = T2.ID \nWHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "SELECT T2.name\nFROM Friend AS T1\nJOIN Highschooler AS T2 ON T1.friend_id = T2.ID\nWHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "SELECT T2.name \nFROM Friend AS T1 \nJOIN Highschooler AS T2 ON T1.friend_id = T2.ID \nWHERE T1.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')"], "2559840ddc7cf14907518c5c": ["SELECT T1.Name ,  T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID ORDER BY T2.Official_ratings_(millions) DESC\n\n", "SELECT T1.Name ,  T2.Type FROM conductor AS T1 JOIN performance AS T2 ON T1.Conductor_ID  =  T2.Orchestra_ID ORDER BY T2.Official_ratings_(millions) DESC LIMIT 1\n\n", "SELECT name ,  official_ratings_(millions) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID ORDER BY official_ratings_(millions) DESC\n\n", "SELECT Name ,  Year_of_Work FROM conductor ORDER BY Year_of_Work DESC\n\n", "SELECT T1.Name ,  T2.Official_ratings_(millions) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID ORDER BY T2.Official_ratings_(millions) DESC\n\n"], "32bba5e8a8531f95fefe4208": ["SELECT c.Name \nFROM country AS c \nWHERE c.Continent = 'Asia' \nAND c.Population > (SELECT MAX(c2.Population) \n                    FROM country AS c2 \n                    WHERE c2.Continent = 'Africa')", "SELECT Name \nFROM country \nWHERE Continent = 'Asia' \nAND Population > (SELECT MAX(Population) \n                  FROM country \n                  WHERE Continent = 'Africa')", "SELECT c1.Name \nFROM country c1\nWHERE c1.Continent = 'Asia' \nAND c1.Population > (SELECT MAX(c2.Population) \n                     FROM country c2 \n                     WHERE c2.Continent = 'Africa')", "SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')", "SELECT c1.Name \nFROM country c1\nWHERE c1.Continent = 'Asia' \nAND c1.Population > (SELECT MAX(c2.Population) \n                     FROM country c2 \n                     WHERE c2.Continent = 'Africa')"], "30b658bf12a00685d00e4548": ["SELECT count(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)", "SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)", "SELECT count(*) FROM Dogs WHERE age < (SELECT avg(age) FROM Dogs)", "SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)", "SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs)"], "d48c99e5129524acc31cfc78": ["SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\n\n", "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\n\n", "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\n\n", "SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT max(Earnings) FROM poker_player)", "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\n\n"], "73c56b51ea3502a95616524a": ["SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n"], "8c1848c9b3d823fc4db1cd61": ["SELECT T2.series_name, T2.Country \nFROM Cartoon AS T1 \nJOIN TV_Channel AS T2 ON T1.Channel = T2.id \nWHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')", "SELECT series_name, Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Michael Chang'))", "SELECT T2.series_name ,  T2.Country FROM cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')", "SELECT T2.series_name, T2.Country \nFROM Cartoon AS T1 \nJOIN TV_Channel AS T2 ON T1.Channel = T2.id \nWHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')", "SELECT T2.series_name, T2.country \nFROM TV_Channel AS T1 \nJOIN Cartoon AS T3 ON T1.id = T3.Channel \nWHERE T3.Directed_by IN ('Ben Jones', 'Michael Chang')"], "533c7f3dfb306ca45cf5e10b": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n"], "241cecfe686dda1495b3616c": ["SELECT T2.Package_Option FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by != 'Ben Jones' OR T2.Directed_by IS NULL", "SELECT T2.Package_Option FROM TV_Channel AS T2 WHERE T2.id NOT IN (SELECT T1.Channel FROM Cartoon AS T1 WHERE Directed_by = 'Ben Jones')", "SELECT T2.Package_Option FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by != 'Ben Jones' OR T2.Directed_by IS NULL", "SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')", "SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')"], "a0d0e976ed6041ffa53deb1c": ["SELECT region, AVG(LifeExpectancy) FROM country GROUP BY region HAVING AVG(LifeExpectancy) > (SELECT AVG(LifeExpectancy) FROM country)", "SELECT Region, LifeExpectancy FROM country WHERE LifeExpectancy > (SELECT AVG(LifeExpectancy) FROM country)", "SELECT Region, AVG(LifeExpectancy) FROM country GROUP BY Region HAVING AVG(LifeExpectancy) > (SELECT AVG(LifeExpectancy) FROM country)\n\n", "SELECT Region, GovernmentForm, LifeExpectancy FROM country WHERE LifeExpectancy > (SELECT AVG(LifeExpectancy) FROM country)", "SELECT region, AVG(lifeexpectancy) AS avg_life_expectancy FROM country GROUP BY region ORDER BY avg_life_expectancy DESC\n\n"], "3af51a21c1a6602e8d8f22a7": ["SELECT feature_description FROM Other_Available_Features WHERE feature_name = 'Amenity' \n\n", "SELECT feature_name FROM Other_Available_Features WHERE feature_id = 2\n\n", "SELECT rank_point FROM Other_Available_Features WHERE feature_name = 'Amenity' \n\n", "SELECT feature_name FROM Other_Available_Features WHERE feature_id = \"Amenity\"", "SELECT rank_point FROM Other_Available_Features WHERE feature_name = 'Amenity'\n\n"], "b4ae446d3c31a21b778c665c": ["SELECT T2.Orchestra, T2.Major_Record_Format FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T1.Type = 'educational program'", "SELECT o.Orchestra, o.Record_Company FROM orchestra o WHERE o.Orchestra_ID IN (SELECT p.Orchestra_ID FROM performance p WHERE p.Type = 'Educational Program')", "SELECT T2.Orchestra ,  T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE T2.Record_Company  =  'educational'", "SELECT T2.Orchestra, T2.Record_Company FROM orchestra AS T2 JOIN performance AS T1 ON T2.Orchestra_ID = T1.Orchestra_ID WHERE T2.Major_Record_Format = \"Educational programs\"", "SELECT T2.Orchestra, T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Orchestra_ID IN (SELECT Orchestra_ID FROM performance WHERE Type = 'educational program')"], "5a4800b06851d29bd66e7c98": ["SELECT avg(Age) FROM conductor", "SELECT avg(age) FROM conductor", "SELECT AVG(age) FROM conductor", "SELECT avg(Age) FROM conductor", "SELECT avg(age) FROM conductor"], "bb374b1ad3485f16ffdcb85e": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables as there is no information about website URLs available.", "This question cannot be answered with the provided tables as there is no information about website URLs in the tables.", "This question cannot be answered with the given tables as there is no information about website URLs in the tables provided.", "This question cannot be answered with the given tables as there is no information about website URLs in the provided tables."], "265cd7796c15b657f6a71a5c": ["SELECT property_address, COUNT(*) as property_count FROM Properties GROUP BY property_address", "SELECT property_address FROM Properties GROUP BY property_address\n\n", "SELECT property_address FROM properties GROUP BY property_address", "SELECT property_address, COUNT(*) as property_count FROM Properties GROUP BY property_address", "SELECT property_address FROM properties GROUP BY property_address"], "915510a2f200def0f15484f5": ["SELECT continent FROM country WHERE name = 'Anguilla'", "SELECT Continent FROM country WHERE Name = 'Anguilla'", "SELECT continent FROM country WHERE name = \"Anguilla\"", "SELECT Continent FROM country WHERE Name = \"Anguilla\"", "SELECT Continent FROM country WHERE Code = \"AIA\""], "edbff89fb9f1c4aff8f314ea": ["SELECT Birth_Year, Citizenship FROM singer\n\n", "SELECT Birth_Year, Citizenship FROM singer\n\n", "SELECT Birth_Year, Citizenship FROM singer\n\n", "SELECT birth_year, citizenship FROM singer\n\n", "SELECT Birth_Year, Citizenship FROM singer\n\n"], "c6f4f2ee058d70de0dbe84ba": ["SELECT Weekly_Rank FROM Cartoon WHERE Title = \"The Eyes of Despero\" \n\n", "SELECT Weekly_Rank FROM Cartoon WHERE Title = \"The Eyes of Despero\" \n\n", "SELECT Weekly_Rank FROM Cartoon WHERE Title = \"The Eyes of Despero\"", "SELECT Weekly_Rank FROM Cartoon WHERE Title = \"The Eyes of Despero\" \n\n", "SELECT Weekly_Rank FROM Cartoon WHERE Title = \"The Eyes of Despero\""], "4c6d60eaecc691c0d9ee55b2": ["SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING count(*) > 2)", "SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2)", "SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING count(*) > 2)", "SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING count(*) > 2)", "SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING count(*) > 2)"], "23cebc6baa4c419d0b3a9879": ["SELECT c.Name, c.IndepYear, c.SurfaceArea FROM country AS c WHERE c.Population = (SELECT MIN(Population) FROM country)", "SELECT c.Name, c.IndepYear, c.SurfaceArea FROM country AS c WHERE c.Population = (SELECT min(Population) FROM country)", "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)", "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country) \n\n", "SELECT c.Name, c.IndepYear, c.SurfaceArea\nFROM country c\nWHERE c.Population = (SELECT MIN(Population) FROM country)"], "2c62900c33263ef9b9af5568": ["SELECT Name FROM singer WHERE Name = 'Alice Walton'", "SELECT Name FROM singer WHERE Name = \"Alice Walton\"", "SELECT * FROM singer WHERE Name = 'Alice Walton'", "SELECT advisor FROM singer WHERE Name = 'Alice Walton' \n\n", "SELECT * FROM singer WHERE Name = 'Alice Walton'"], "63e47257cddb28c8893aa090": ["SELECT T2.Orchestra FROM orchestra AS T1 JOIN (SELECT Orchestra_ID, COUNT(*) AS total_members FROM conductor GROUP BY Orchestra_ID) AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID ORDER BY total_members DESC LIMIT 1\n\n", "SELECT T2.Orchestra FROM orchestra AS T1 JOIN (SELECT Orchestra_ID, COUNT(*) AS num_members FROM musician GROUP BY Orchestra_ID) AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID ORDER BY num_members DESC LIMIT 1\n\n", "SELECT T2.Orchestra FROM orchestra AS T1 JOIN (SELECT Orchestra_ID, COUNT(*) AS num_members FROM performance GROUP BY Orchestra_ID) AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID ORDER BY num_members DESC LIMIT 1\n\n", "SELECT T2.Orchestra FROM orchestra AS T1 JOIN (SELECT Orchestra_ID, COUNT(*) AS num_members FROM performance GROUP BY Orchestra_ID ORDER BY num_members DESC LIMIT 1) AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID", "SELECT T1.Orchestra FROM orchestra AS T1 JOIN (SELECT Orchestra_ID, COUNT(*) AS num_members FROM conductor GROUP BY Orchestra_ID) AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID ORDER BY num_members DESC LIMIT 1\n\n"], "d4240a08136ecaaa5fcd6859": ["SELECT section_name, section_description FROM Sections\n\n", "SELECT section_name, section_description FROM Sections\n\n", "SELECT section_name, section_description FROM Sections\n\n", "SELECT section_name, section_description FROM Sections\n\n", "SELECT section_name, section_description FROM Sections\n\n"], "1fc5e0343fa65741f7a3b5da": ["SELECT Birth_Date, Earnings FROM people AS P JOIN poker_player AS PP ON P.People_ID = PP.People_ID WHERE Final_Table_Made > 30", "SELECT Birth_Date, Earnings FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Final_Table_Made > 30", "SELECT Birth_Date ,  Earnings FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE Final_Table_Made > 30", "SELECT Birth_Date ,  Earnings FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE Final_Table_Made  >  30", "SELECT Birth_Date, Earnings FROM people AS p JOIN poker_player AS pp ON p.People_ID = pp.People_ID WHERE Final_Table_Made > 30"], "85ca1e34ca1ce5b486882006": ["SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)", "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)", "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)", "SELECT c.Name, c.IndepYear, c.SurfaceArea\nFROM country AS c\nWHERE c.Population = (SELECT MIN(Population) FROM country)", "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)"], "946b0184404795452e8c2dff": ["SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player\n\n"], "d5f4e054c9fbb1fc07870f58": ["SELECT DISTINCT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') \n\n", "SELECT DISTINCT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "SELECT DISTINCT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') \n\n", "SELECT DISTINCT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "SELECT DISTINCT country.Code FROM country WHERE country.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')"], "d9ae71ed4dde93c9a03ef02f": ["SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)"], "aa4e543eefd9769b7e7c4f55": ["SELECT count(*) FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes) OR ID IN (SELECT liked_id FROM Likes) OR ID IN (SELECT student_id FROM Friend) OR ID IN (SELECT friend_id FROM Friend)", "SELECT count(*) FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes)\n\n", "SELECT count(*) FROM highschooler WHERE ID IN (SELECT student_id FROM likes)\n\n", "SELECT count(*) FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes) OR ID IN (SELECT friend_id FROM Friend)", "SELECT count(*) FROM Highschooler\n\n"], "f0b14a10b0b983d290e78351": ["SELECT Continent FROM country WHERE Name = \"Anguilla\"", "SELECT Continent FROM country WHERE Name = 'Anguilla'", "SELECT Continent FROM country WHERE Name = 'Anguilla'", "SELECT Continent FROM country WHERE Name = 'Anguilla'", "SELECT Continent FROM country WHERE Name = 'Anguilla'"], "d6d1ed9356ca7d782b10460d": ["SELECT Language \nFROM countrylanguage \nWHERE CountryCode IN \n(\n    SELECT Code \n    FROM country \n    WHERE GovernmentForm = 'Republic'\n)\nGROUP BY Language \nHAVING COUNT(CountryCode) = 1", "SELECT cl.Language \nFROM countrylanguage AS cl \nJOIN country AS c ON cl.CountryCode = c.Code \nWHERE cl.IsOfficial = 'T' \nAND c.GovernmentForm = 'Republic' \nGROUP BY cl.Language \nHAVING COUNT(DISTINCT cl.CountryCode) = 1", "SELECT DISTINCT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(CountryCode) = 1\n\n", "SELECT Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'T' AND T2.GovernmentForm = 'Republic' GROUP BY Language HAVING COUNT(*) = 1\n\n", "SELECT Language \nFROM countrylanguage \nWHERE IsOfficial = 'T' \nAND CountryCode IN (\n    SELECT Code \n    FROM country \n    WHERE GovernmentForm = 'Republic'\n) \nGROUP BY Language \nHAVING COUNT(*) = 1"], "2b49f84ee16c1f475a7847b8": ["SELECT T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Alana Bregman' \n\n", "SELECT T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Alana Bregman'\n\n", "SELECT contestant_name FROM contestants WHERE contestant_name = 'Alana Bregman' JOIN votes ON contestants.contestant_number = votes.contestant_number", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name = 'Alana Bregman' AND contestant_number IN (SELECT contestant_number FROM VOTES)", "SELECT T2.contestant_name, T2.phone_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Alana Bregman'"], "29901f2e5167af79999bc73e": ["SELECT feature_name, COUNT(*) AS feature_count, DATE(date_on_market) AS availability_date\nFROM Other_Available_Features AS T1\nJOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id\nJOIN Properties AS T3 ON T2.property_id = T3.property_id\nGROUP BY feature_name, DATE(date_on_market)", "SELECT feature_name, COUNT(*) AS feature_count, YEAR(date_on_market) AS year\nFROM Other_Available_Features\nJOIN Other_Property_Features ON Other_Available_Features.feature_id = Other_Property_Features.feature_id\nJOIN Properties ON Other_Property_Features.property_id = Properties.property_id\nGROUP BY feature_name, YEAR(date_on_market)", "SELECT feature_name, COUNT(*) AS feature_count, DATE(date_on_market) AS availability_date\nFROM Other_Available_Features\nJOIN Other_Property_Features ON Other_Available_Features.feature_id = Other_Property_Features.feature_id\nJOIN Properties ON Other_Property_Features.property_id = Properties.property_id\nGROUP BY feature_name, DATE(date_on_market)\nORDER BY availability_date, feature_count DESC", "SELECT feature_name, COUNT(*) FROM other_available_features JOIN other_property_features ON other_available_features.feature_id = other_property_features.feature_id WHERE date_sold IS NULL GROUP BY feature_name", "SELECT feature_name, COUNT(*) AS feature_count, MONTH(date_on_market) AS month\nFROM Other_Available_Features\nJOIN Other_Property_Features ON Other_Available_Features.feature_id = Other_Property_Features.feature_id\nJOIN Properties ON Other_Property_Features.property_id = Properties.property_id\nGROUP BY feature_name, MONTH(date_on_market)"], "d661d54e72df880828841563": ["SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'", "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'", "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'", "SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil'", "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'"], "5c18a6b7e0723f186d694775": ["SELECT breed_name, size_description FROM Breeds, Sizes", "SELECT breed_name, size_description FROM Breeds, Sizes", "SELECT breed_name, size_description FROM Breeds, Sizes", "SELECT breed_name, size_description FROM Breeds, Sizes", "SELECT breed_name, size_description FROM Breeds, Sizes"], "cd0ce093d0cbc681eac3e9ef": ["SELECT D.name, T.date_of_treatment\nFROM Dogs AS D \nJOIN Breeds AS B ON D.breed_code = B.breed_code\nJOIN Treatments AS T ON D.dog_id = T.dog_id\nWHERE B.breed_name = (SELECT breed_name FROM Breeds GROUP BY breed_name ORDER BY COUNT(*) ASC LIMIT 1)", "SELECT D.name, T.date_of_treatment\nFROM Dogs AS D\nJOIN Treatments AS T ON D.dog_id = T.dog_id\nWHERE D.breed_code = (SELECT breed_code FROM Breeds GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)", "SELECT T1.name, T2.date_of_treatment \nFROM Dogs AS T1 \nJOIN Treatments AS T2 ON T1.dog_id = T2.dog_id \nWHERE T1.breed_code = (SELECT breed_code FROM Breeds ORDER BY breed_code LIMIT 1)", "SELECT D.name, T.date_of_treatment\nFROM Dogs AS D\nJOIN Breeds AS B ON D.breed_code = B.breed_code\nJOIN Treatments AS T ON D.dog_id = T.dog_id\nWHERE B.breed_name = (SELECT breed_name FROM Breeds GROUP BY breed_name ORDER BY COUNT(*) ASC LIMIT 1)", "SELECT D.name, T.date_of_treatment \nFROM Dogs AS D \nJOIN Breeds AS B ON D.breed_code = B.breed_code\nJOIN Treatments AS T ON D.dog_id = T.dog_id\nWHERE B.breed_name = (SELECT breed_name FROM Breeds GROUP BY breed_name ORDER BY COUNT(*) ASC LIMIT 1)"], "c171f6bf058ed73ea548d848": ["SELECT sum(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')\n\n", "SELECT sum(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')\n\n", "SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')\n\n", "SELECT SUM(population) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language != 'English')", "SELECT sum(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')"], "0f7406c815b20c1c93b746bf": ["SELECT agency_name, AVG(agreed_selling_price) FROM agencies JOIN properties ON agencies.agency_id = properties.agency_id GROUP BY agency_name ORDER BY AVG(agreed_selling_price) DESC LIMIT 1", "SELECT agency_name FROM properties GROUP BY agency_name ORDER BY avg(agreed_selling_price) DESC LIMIT 1\n\n", "SELECT agency_name, avg(agreed_selling_price) FROM agencies JOIN Properties ON agencies.agency_id = Properties.agency_id GROUP BY agency_name ORDER BY avg(agreed_selling_price) DESC LIMIT 1\n\n", "SELECT agency_name FROM properties GROUP BY agency_name ORDER BY avg(agreed_selling_price) DESC LIMIT 1\n\n", "SELECT agency_id, avg(agreed_selling_price) FROM properties GROUP BY agency_id ORDER BY avg(agreed_selling_price) DESC LIMIT 1\n\n"], "cc8b4c1fb9a3000ad146ebae": ["SELECT ID FROM Highschooler WHERE name = 'Kyle' \n\n", "SELECT ID FROM Highschooler WHERE name = 'Kyle' \n\n", "SELECT ID FROM Highschooler WHERE name = 'Kyle'", "SELECT ID FROM Highschooler WHERE name = 'Kyle'", "SELECT ID FROM Highschooler WHERE name = 'Kyle'"], "9bcd81bd3e21f42ea8c96b24": ["SELECT count(DISTINCT dog_id) FROM Treatments", "SELECT count(*) FROM treatments", "SELECT count(*) FROM treatments", "SELECT count(*) FROM treatments", "SELECT count(*) FROM Treatments"], "48648034f73d5f8a6087cbd4": ["SELECT avg(years_experience) FROM professionals", "SELECT avg(date_of_birth - YEAR(CURDATE())) FROM Professionals", "SELECT avg(years_of_experience) FROM professionals", "SELECT avg(years_of_experience) FROM Professionals", "SELECT avg(EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM date_of_birth)) FROM Professionals"], "c59c8ad857e16e1edea16e4b": ["SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n"], "f548f855ea5b26b370cd0796": ["SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments WHERE cost_of_treatment > 1000)", "SELECT name FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments GROUP BY dog_id HAVING SUM(cost_of_treatment) > 1000)", "SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments WHERE cost_of_treatment <= 1000)", "SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments WHERE cost_of_treatment > 1000)", "SELECT D.name \nFROM Dogs AS D \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE T.cost_of_treatment <= 1000"], "51f7b20aa85fa130715776c3": ["SELECT T1.song FROM CONTESTANTS AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T2.state = T1.state", "SELECT T1.song FROM songs AS T1 JOIN contestants AS T2 ON T1.state = T2.state WHERE T2.contestant_number = [contestant_number]", "SELECT T2.song_name FROM CONTESTANTS AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T1.contestant_name = 'Contestant_Name'", "SELECT DISTINCT T1.song_name FROM songs AS T1 JOIN contestants AS T2 ON T1.state = T2.state WHERE T2.contestant_number = [contestant_number]", "SELECT T2.song_name FROM CONTESTANTS AS T1 JOIN SONGS AS T2 ON T1.state = T2.state WHERE T1.contestant_number = [contestant_number]\n\n"], "421341fe1930e12a3ae07e45": ["SELECT contestant_name FROM CONTESTANTS WHERE contestant_number = (SELECT contestant_number FROM VOTES GROUP BY contestant_number ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT contestant_name FROM contestants WHERE contestant_number = (SELECT contestant_number FROM votes GROUP BY contestant_number ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT contestant_name FROM contestants WHERE contestant_number = (SELECT contestant_number FROM votes GROUP BY contestant_number ORDER BY COUNT(*) DESC LIMIT 1) \n\n", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_number = (SELECT contestant_number FROM VOTES GROUP BY contestant_number ORDER BY count(*) DESC LIMIT 1)\n\n", "SELECT contestant_name FROM contestants WHERE contestant_number = (SELECT contestant_number FROM votes GROUP BY contestant_number ORDER BY COUNT(*) DESC LIMIT 1) \n\n"], "5866eeca7512093103282373": ["SELECT course_id, course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) <= 2)", "SELECT course_name, course_id \nFROM Courses \nWHERE course_id IN (\n    SELECT course_id \n    FROM Sections \n    GROUP BY course_id \n    HAVING count(*) <= 2\n)", "SELECT course_name, course_id FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) <= 2)", "SELECT course_name, course_id \nFROM Courses \nWHERE course_id IN \n(SELECT course_id \nFROM Sections \nGROUP BY course_id \nHAVING COUNT(*) <= 2)", "SELECT T1.course_name, T1.course_id \nFROM Courses AS T1 \nJOIN Sections AS T2 ON T1.course_id = T2.course_id \nGROUP BY T1.course_id \nHAVING COUNT(*) <= 2"], "d1e0f157253abfb48fbbfba3": ["SELECT Name FROM conductor WHERE Nationality <> 'USA' \n\n", "SELECT Name FROM conductor WHERE Nationality != 'USA'\n\n", "SELECT Name FROM conductor WHERE Nationality != \"USA\" \n\n", "SELECT Name FROM conductor WHERE Nationality != 'USA' \n\n", "SELECT Name FROM conductor WHERE Nationality != 'USA' \n\n"], "cec8b44ddcd7336cdf1ac995": ["SELECT DISTINCT Nationality, Major_Record_Format FROM conductor WHERE Nationality = 'UK'", "SELECT Nationality, Major_Record_Format FROM conductor WHERE Nationality = 'UK'", "SELECT Name ,  Nationality FROM conductor WHERE Nationality  =  'UK'", "SELECT Nationality ,  Year_of_Work FROM conductor WHERE Nationality  =  'UK'", "SELECT Nationality ,  Name FROM conductor WHERE Nationality  =  'UK'"], "5be095a93c1fab82f7ae5640": ["SELECT count(DISTINCT Record_Company) FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID", "SELECT count(*) FROM show WHERE result = 'Sponsor'", "SELECT count(DISTINCT show_id) FROM show\n\n", "SELECT count(DISTINCT Record_Company) FROM orchestra\n\n", "SELECT count(*) FROM show WHERE Result = 'sponsor'"], "dda867f635683dc5aef8962d": ["SELECT Name FROM people WHERE Nationality != 'Russia'\n\n", "SELECT name FROM people WHERE nationality != 'Russia' \n\n", "SELECT Name FROM people WHERE Nationality != 'Russia' \n\n", "SELECT Name FROM people WHERE Nationality <> 'Russia' \n\n", "SELECT Name FROM people WHERE Nationality <> \"Russia\" \n\n"], "eca9a0a99c50d65387de117f": ["SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')\n\n", "SELECT DISTINCT country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')", "SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')\n\n", "SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')\n\n", "SELECT DISTINCT T2.Country FROM cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by <> 'Todd Casey' \n\n"], "fcf7c243c430387cff663d17": ["SELECT Major_Record_Format FROM orchestra WHERE Major_Record_Format LIKE '%modern%'", "SELECT Major_Record_Format FROM orchestra WHERE Major_Record_Format LIKE '%modern%'\n\n", "SELECT Major_Record_Format FROM orchestra WHERE Major_Record_Format  =  \"modern\" \n\n", "SELECT Major_Record_Format FROM orchestra WHERE Major_Record_Format LIKE '%modern%'", "SELECT Major_Record_Format FROM orchestra WHERE Major_Record_Format = 'modern' OR Major_Record_Format = 'contemporary' OR Major_Record_Format = 'experimental' OR Major_Record_Format = 'avant-garde' OR Major_Record_Format = 'electronic'"], "d210506d6a7bbf3e12dcd210": ["SELECT country.Name, countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = 'T'", "SELECT c.Name, cl.Language FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE cl.IsOfficial = 'T'", "SELECT C.Name, C.LocalName FROM country AS C\n\n", "SELECT country.Name, countrylanguage.Language \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.IsOfficial = 'T'", "SELECT C.Name, CL.Language\nFROM country AS C\nJOIN countrylanguage AS CL ON C.Code = CL.CountryCode\nWHERE CL.IsOfficial = 'T'"], "67280700442da6d5020259c6": ["This question is not directly answerable using the given tables. Additional tables or information about the Beatles' impact on pop music would be needed to provide a meaningful SQL query.", "This question cannot be answered directly with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered using the provided tables.", "This question cannot be answered directly from the given tables."], "a190e35d5304c7eba7e717c8": ["SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'", "SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'", "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582' \n\n", "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = \"Haiti\") OR cell_mobile_number = \"09700166582\"", "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'"], "7f8ee10c2e23bef123856992": ["SELECT count(*) FROM conductor", "SELECT COUNT(*) FROM conductor", "SELECT count(*) FROM conductor\n\n", "SELECT COUNT(*) FROM conductor", "SELECT count(*) FROM conductor\n\n"], "450a224227a51fda989e202f": ["SELECT T2.Name FROM (SELECT CountryCode, COUNT(Language) AS Num_Languages FROM countrylanguage GROUP BY CountryCode ORDER BY Num_Languages DESC LIMIT 1) AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code", "SELECT T1.Name \nFROM country AS T1 \nJOIN (\n    SELECT CountryCode, COUNT(DISTINCT Language) AS num_languages\n    FROM countrylanguage \n    GROUP BY CountryCode \n    ORDER BY num_languages DESC \n    LIMIT 1\n) AS T2 \nON T1.Code = T2.CountryCode", "SELECT T2.Name \nFROM (\n    SELECT CountryCode, COUNT(DISTINCT Language) AS num_languages\n    FROM countrylanguage\n    GROUP BY CountryCode\n    ORDER BY num_languages DESC\n    LIMIT 1\n) AS T1\nJOIN country AS T2 ON T1.CountryCode = T2.Code", "SELECT T2.Name \nFROM country AS T1 \nJOIN (\n    SELECT CountryCode, COUNT(Language) AS num_languages\n    FROM countrylanguage\n    GROUP BY CountryCode\n    ORDER BY num_languages DESC\n    LIMIT 1\n) AS T3 ON T1.Code = T3.CountryCode", "SELECT Name FROM country JOIN (SELECT CountryCode, COUNT(Language) AS num_languages FROM countrylanguage GROUP BY CountryCode ORDER BY num_languages DESC LIMIT 1) AS T ON country.Code = T.CountryCode"], "e6cbcddc33e4fc8f790db891": ["SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1", "SELECT T1.name FROM highschooler AS T1 JOIN likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1", "SELECT T3.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "SELECT T1.name FROM Highschooler AS T1 JOIN (SELECT liked_id, count(*) AS num_likes FROM Likes GROUP BY liked_id ORDER BY num_likes DESC LIMIT 1) AS T2 ON T1.ID = T2.liked_id"], "140221e3de8f8efc4aa220c7": ["SELECT Name FROM conductor ORDER BY Age ASC\n\n", "SELECT Name FROM conductor ORDER BY Age ASC\n\n", "SELECT Name FROM conductor ORDER BY Age ASC\n\n", "SELECT Name FROM conductor ORDER BY Age ASC\n\n", "SELECT Name FROM conductor ORDER BY Age ASC\n\n"], "5150009a937a44e010366e32": ["SELECT Song_ID FROM song\n\n", "SELECT Song_ID FROM song\n\n", "SELECT Song_ID FROM song\n\n", "SELECT Song_ID FROM song\n\n", "SELECT Song_ID FROM song\n\n"], "b373bff536709312a7a65d36": ["This question cannot be answered with the given tables as there is no table containing news articles or information about poker players.", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Money_Rank LIMIT 5", "SELECT T1.Name, T2.Final_Table_Made, T2.Best_Finish, T2.Money_Rank, T2.Earnings \nFROM people AS T1 \nJOIN poker_player AS T2 ON T1.People_ID = T2.People_ID \nORDER BY T2.Money_Rank DESC LIMIT 10", "This question cannot be answered with the given tables. The tables provided do not contain any information about news articles or recent updates about poker players.", "This question cannot be answered with the given tables."], "b3ce6f0ac7f33386f5185c42": ["SELECT singer.Name, SUM(song.Sales) \nFROM singer \nJOIN song ON singer.Singer_ID = song.Singer_ID \nGROUP BY singer.Name", "SELECT singer.Name, SUM(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name\n\n", "SELECT singer.Name, SUM(song.Sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name\n\n", "SELECT singer.Name, SUM(song.Sales) \nFROM singer \nJOIN song ON singer.Singer_ID = song.Singer_ID \nGROUP BY singer.Name", "SELECT singer.name, SUM(song.sales) FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name"], "cefeacbd4e9d44dc250185e4": ["SELECT breed_name, AVG(weight) AS average_weight, size_description AS average_size\nFROM Dogs\nJOIN Breeds ON Dogs.breed_code = Breeds.breed_code\nJOIN Sizes ON Dogs.size_code = Sizes.size_code\nGROUP BY breed_name, size_description", "SELECT breed_code, breed_name, avg(weight) AS average_weight, size_description AS average_size FROM Dogs \nJOIN Breeds ON Dogs.breed_code = Breeds.breed_code \nJOIN Sizes ON Dogs.size_code = Sizes.size_code \nGROUP BY breed_code, size_code", "SELECT breed_name, avg(weight) AS average_weight, size_description AS average_size \nFROM Dogs \nJOIN Breeds ON Dogs.breed_code = Breeds.breed_code \nJOIN Sizes ON Dogs.size_code = Sizes.size_code \nGROUP BY breed_name, size_description", "SELECT breed_name, AVG(weight) as average_weight, size_description as average_size\nFROM Dogs\nJOIN Breeds ON Dogs.breed_code = Breeds.breed_code\nJOIN Sizes ON Dogs.size_code = Sizes.size_code\nGROUP BY breed_name, size_description", "SELECT breed_code, AVG(weight) AS average_weight, AVG(size_code) AS average_size\nFROM Dogs\nGROUP BY breed_code"], "9595f10ca476f36f6b560103": ["SELECT Title, Viewers_m FROM Cartoon", "SELECT Title, Viewers_m FROM Cartoon", "SELECT Title, Viewers_m FROM Cartoon", "SELECT Title, Viewers_m FROM Cartoon", "SELECT Title, Viewers_m FROM Cartoon"], "62264b06ee4d76775154102b": ["SELECT state FROM owners WHERE state IN (SELECT state FROM professionals)", "SELECT state FROM owners WHERE state IN (SELECT state FROM professionals)", "SELECT state \nFROM Owners \nWHERE state IN (SELECT state FROM Professionals)", "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "SELECT state FROM Owners WHERE state IN (SELECT state FROM Professionals)"], "da1b5017a4c16b7afd41397f": ["SELECT district, count(*) FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district", "SELECT district, count(*) FROM city WHERE population > (SELECT avg(population) FROM city) GROUP BY district", "SELECT district, count(*) FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district", "SELECT district, COUNT(*) FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district", "SELECT district, count(*) FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district"], "9d05c4fad703e457a3e89e47": ["SELECT T1.Record_Company \nFROM orchestra AS T1 \nJOIN orchestra AS T2 ON T1.Record_Company = T2.Record_Company \nWHERE T1.Year_of_Founded < 2003 \nAND T2.Year_of_Founded > 2003", "SELECT T1.Record_Company FROM orchestra AS T1 JOIN orchestra AS T2 ON T1.Record_Company = T2.Record_Company WHERE T1.Year_of_Founded < 2003 AND T2.Year_of_Founded > 2003", "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003\n\n", "SELECT T1.Record_Company FROM orchestra AS T1 JOIN orchestra AS T2 ON T1.Record_Company = T2.Record_Company WHERE T1.Year_of_Founded < 2003 AND T2.Year_of_Founded > 2003", "SELECT T1.Record_Company FROM orchestra AS T1 JOIN orchestra AS T2 ON T1.Record_Company = T2.Record_Company WHERE T1.Year_of_Founded < 2003 AND T2.Year_of_Founded > 2003"], "6857db6be9cd437b8053da00": ["SELECT T2.name \nFROM Likes AS T1 \nJOIN Highschooler AS T2 ON T1.student_id = T2.ID \nWHERE T1.liked_id = 1101", "SELECT name \nFROM Highschooler \nWHERE ID IN (SELECT student_id \n             FROM Likes \n             WHERE liked_id = 1101)", "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes WHERE liked_id = 1101)", "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes WHERE liked_id = 1101)", "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes WHERE liked_id = 1101)"], "a7e59fc1c2c1e9e8bc597ddd": ["SELECT T1.date_of_treatment, T2.first_name \nFROM Treatments AS T1 \nJOIN Professionals AS T2 ON T1.professional_id = T2.professional_id", "SELECT T1.date_of_treatment, T2.first_name \nFROM Treatments AS T1 \nJOIN Professionals AS T2 ON T1.professional_id = T2.professional_id", "SELECT date_of_treatment, first_name FROM treatments AS T1 JOIN professionals AS T2 ON T1.professional_id = T2.professional_id\n\n", "SELECT T1.date_of_treatment, T2.first_name \nFROM Treatments AS T1 \nJOIN Professionals AS T2 ON T1.professional_id = T2.professional_id", "SELECT T1.date_of_treatment, T2.first_name \nFROM Treatments AS T1 \nJOIN Professionals AS T2 ON T1.professional_id = T2.professional_id"], "da49dd65b76cd36e4ab8d251": ["SELECT age FROM Highschooler WHERE name = 'Tiffany'\n\n", "SELECT grade FROM Highschooler WHERE name = 'Tiffany' \n\n", "SELECT age FROM Highschooler WHERE name = 'Tiffany' \n\n", "SELECT grade FROM Highschooler WHERE name = 'Tiffany'\n\n", "SELECT age FROM highschooler WHERE name = 'Tiffany' \n\n"], "ecc74d5a22900d3159643009": ["This question cannot be answered with the given tables.", "There is no specific SQL query that can answer this question as it is not related to the data in the tables provided.", "There is no SQL query that can answer this question as it is not related to the data in the tables provided.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables."], "982e9ca73cb3ba3cfbac0a26": ["SELECT nationality, count(*) FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID GROUP BY nationality", "SELECT nationality, count(*) FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID GROUP BY nationality", "SELECT nationality, count(*) FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID GROUP BY nationality", "SELECT nationality, count(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY nationality", "SELECT nationality, count(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY nationality"], "30d72ad1d4f0de6a07fe90b5": ["SELECT f1.student_id, f1.friend_id\nFROM Friend f1\nJOIN Friend f2 ON f1.student_id = f2.friend_id AND f1.friend_id = f2.student_id", "SELECT * FROM Friend WHERE student_id IN (SELECT liked_id FROM Likes) OR friend_id IN (SELECT liked_id FROM Likes)", "SELECT friend_id FROM Friend WHERE student_id IN (SELECT liked_id FROM Likes) OR student_id IN (SELECT student_id FROM Likes)", "SELECT DISTINCT T1.student_id, T2.friend_id\nFROM Friend AS T1\nJOIN Friend AS T2 ON T1.friend_id = T2.student_id\nWHERE T1.student_id IN (SELECT student_id FROM Likes)\nAND T1.friend_id IN (SELECT liked_id FROM Likes)", "SELECT T1.student_id, T2.friend_id \nFROM Likes AS T1 \nJOIN Friend AS T2 ON T1.liked_id = T2.friend_id \nAND T1.student_id = T2.student_id"], "d3513c7ab967d04aa7af4b90": ["SELECT AVG(age) FROM Dogs", "SELECT avg(age) FROM dogs", "SELECT AVG(age) FROM Dogs", "SELECT AVG(age) FROM Dogs\n\n", "SELECT AVG(age) FROM dogs\n\n"], "3d6707afda55ce1a32f0abce": ["SELECT section_description FROM sections WHERE section_name = 'h'", "SELECT section_description FROM sections WHERE section_name = 'h'", "SELECT section_description FROM Sections WHERE section_name = 'h'", "SELECT section_description FROM sections WHERE section_name = 'h'", "SELECT section_description FROM sections WHERE section_name = 'h'"], "d658074af588c8e653b138a7": ["SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = 'VAC'", "SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = 'VAC'", "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = 'VAC'", "SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = 'VAC'", "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = 'VAC'"], "89f5c0dbed6f9ef846b51fd6": ["SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs WHERE name = 'Mavis')", "SELECT breed_name FROM Breeds WHERE breed_code = (SELECT breed_code FROM Dogs WHERE name = 'Mavis')", "SELECT color FROM dogs WHERE name = 'Mavis'", "SELECT T1.breed_name FROM breeds AS T1 JOIN dogs AS T2 ON T1.breed_code = T2.breed_code WHERE T2.name = \"Mavis\"", "SELECT breed_name FROM Breeds WHERE breed_code = (SELECT breed_code FROM Dogs WHERE name = 'Mavis')"], "c2ab53986ed2db6995eef182": ["SELECT count(DISTINCT Language) FROM countrylanguage WHERE IsOfficial = 'T' AND IndepYear < 1930", "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930)", "SELECT count(DISTINCT Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND IsOfficial = 'T'", "SELECT count(DISTINCT Language) FROM countrylanguage WHERE IsOfficial = 'T' AND IndepYear < 1930", "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930 AND IsOfficial = \"T\")"], "f3c1a9246c515eef30e32a8c": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n"], "f1d56d170dd3feec1b3d5518": ["SELECT Name FROM conductor ORDER BY Age\n\n", "SELECT Name FROM conductor ORDER BY Age\n\n", "SELECT Name FROM conductor ORDER BY Age\n\n", "SELECT Name FROM conductor ORDER BY Age\n\n", "SELECT Name FROM conductor ORDER BY Age\n\n"], "eddcc359ae1bc11844a8cb93": ["SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1", "SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1", "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1", "SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1\n\n", "SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1\n\n"], "0675bd6376b73adaa685bf03": ["SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1\n\n", "SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1\n\n", "SELECT C1.Name, C1.Population, C1.LifeExpectancy\nFROM country AS C1\nWHERE Continent = 'Asia'\nORDER BY SurfaceArea DESC\nLIMIT 1", "SELECT C1.Name, C1.Population, C1.LifeExpectancy \nFROM country AS C1 \nWHERE Continent = 'Asia' \nORDER BY SurfaceArea DESC \nLIMIT 1", "SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1\n\n"], "8dcf5645addc4e7e88def84c": ["SELECT room_count FROM Properties WHERE property_id = 2\n\n", "SELECT room_count FROM Properties WHERE property_id = 2\n\n", "SELECT room_count FROM properties WHERE property_id = 2\n\n", "SELECT room_count FROM properties WHERE property_id = 2", "SELECT room_count FROM properties WHERE property_id = 2\n\n"], "40c2392fb83dbde475b5bf89": ["SELECT AVG(DATEDIFF(date_sold, date_on_market)/365) FROM properties", "SELECT avg(DATEDIFF(date_sold, date_on_market)/365) FROM Properties", "SELECT AVG(DATEDIFF(date_sold, date_on_market) / 365) FROM Properties", "SELECT avg(date_sold - date_on_market) FROM properties", "SELECT avg(DATEDIFF(date_sold, date_on_market)/365) FROM Properties"], "457b092ec31ebf430a54b008": ["SELECT sum(SurfaceArea) FROM country WHERE Region = 'Caribbean'", "SELECT sum(SurfaceArea) FROM country WHERE Region = 'Caribbean'", "SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'", "SELECT sum(SurfaceArea) FROM country WHERE Region = 'Caribbean'", "SELECT sum(SurfaceArea) FROM country WHERE Region = \"Caribbean\""], "5ab5b96db9de1b28d2136a07": ["SELECT T1.name ,  T2.name FROM friend AS T3 JOIN highschooler AS T1 ON T3.student_id  =  T1.ID JOIN highschooler AS T2 ON T3.friend_id  =  T2.ID WHERE T1.grade  <>  T2.grade\n\n", "SELECT T1.name ,  T2.name FROM Friend AS T3 JOIN Highschooler AS T1 ON T3.student_id  =  T1.ID JOIN Highschooler AS T2 ON T3.friend_id  =  T2.ID WHERE T1.grade  <>  T2.grade\n\n", "SELECT T1.name AS Student1, T2.name AS Student2 FROM Friend AS F JOIN Highschooler AS T1 ON F.student_id = T1.ID JOIN Highschooler AS T2 ON F.friend_id = T2.ID WHERE F.student_id NOT IN (SELECT student_id FROM Friend WHERE friend_id = F.friend_id) OR F.friend_id NOT IN (SELECT friend_id FROM Friend WHERE student_id = F.friend_id)", "SELECT T1.name AS student_name, T2.name AS friend_name FROM Highschooler AS T1 JOIN Friend ON T1.ID = Friend.student_id JOIN Highschooler AS T2 ON Friend.friend_id = T2.ID WHERE T1.ID NOT IN (SELECT student_id FROM Friend WHERE friend_id = T1.ID)", "SELECT Highschooler1.name ,  Highschooler2.name FROM Friend AS F JOIN Highschooler AS Highschooler1 ON F.student_id = Highschooler1.ID JOIN Highschooler AS Highschooler2 ON F.friend_id = Highschooler2.ID WHERE F.friend_id NOT IN (SELECT friend_id FROM Friend WHERE student_id = F.friend_id) OR F.student_id NOT IN (SELECT student_id FROM Friend WHERE friend_id = F.student_id)"], "75b8bbe7e8301917d2cb4ed3": ["SELECT max(transcript_date) FROM transcripts", "SELECT max(transcript_date) FROM transcripts", "SELECT max(transcript_date) FROM Transcripts", "SELECT max(transcript_date) FROM transcripts", "SELECT max(transcript_date) FROM transcripts"], "ee39019fa0cc95c79442af7e": ["SELECT Date, Type, Duration FROM performance WHERE Type = 'Auditions 1' AND Date = 'June 9th'", "SELECT Date FROM performance WHERE Type = 'Auditions 1' AND Date = 'June 9th'", "SELECT Date FROM performance WHERE Type = 'Auditions 1' AND Date = 'June 9th'", "SELECT Date FROM performance WHERE Type = 'Auditions 1' AND Date = 'June 9th'", "SELECT Date ,  Type ,  Performance_ID FROM performance WHERE Date  =  'June 9th' AND Type  =  'Auditions 1'"], "235d060b71085de215fde0c6": ["SELECT state FROM Cartoon WHERE Directed_by = 'Todd Casey' OR Written_by = 'Todd Casey'", "SELECT Country FROM TV_Channel WHERE series_name = 'Todd Casey' \n\n", "This question cannot be answered with the provided tables as there is no information about the birthplace of Todd Casey.", "SELECT state FROM TV_Channel WHERE series_name = 'Todd Casey'", "SELECT T2.Country\nFROM Cartoon AS T1\nJOIN TV_Channel AS T2 ON T1.Channel = T2.id\nWHERE T1.Directed_by = 'Todd Casey' OR T1.Written_by = 'Todd Casey'"], "431dc82877d1770a57d697a4": ["SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)", "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n", "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n", "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)"], "51522ebff63a6cff4678d003": ["SELECT Best_Finish FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = 'Sergey Grankin'", "SELECT Final_Table_Made FROM poker_player WHERE People_ID = (SELECT People_ID FROM people WHERE Name = 'Sergey Grankin')", "SELECT Final_Table_Made FROM poker_player WHERE People_ID = (SELECT People_ID FROM people WHERE Name = 'Sergey Grankin')", "SELECT Final_Table_Made FROM poker_player WHERE People_ID = (SELECT People_ID FROM people WHERE Name = 'Sergey Grankin')", "SELECT T1.Final_Table_Made FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = \"Sergey Grankin\""], "384e6664eb64ba240ce37759": ["SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)", "SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)", "SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)"], "1a7e4215ca268dec3bb5914f": ["SELECT count(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD') \n\n", "SELECT count(*) FROM orchestra WHERE Major_Record_Format = \"CD\" OR Major_Record_Format = \"DVD\"", "SELECT count(*) FROM orchestra WHERE Major_Record_Format = \"CD\" OR Major_Record_Format = \"DVD\"", "SELECT count(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD' \n\n", "SELECT count(*) FROM orchestra WHERE Major_Record_Format = \"CD\" OR Major_Record_Format = \"DVD\" \n\n"], "a17ce37d80efe1281bec919a": ["SELECT student_id, count(friend_id) AS num_friends FROM Friend GROUP BY student_id", "SELECT student_id, COUNT(friend_id) AS num_friends FROM Friend GROUP BY student_id", "SELECT student_id, COUNT(friend_id) AS num_friends FROM Friend GROUP BY student_id", "SELECT student_id, COUNT(friend_id) AS num_friends\nFROM Friend\nGROUP BY student_id", "SELECT student_id, count(friend_id) AS num_friends \nFROM Friend \nGROUP BY student_id"], "314866c14172b67d1a9b34cf": ["SELECT SurfaceArea FROM city WHERE Name = 'Tilburg'", "SELECT SurfaceArea FROM city WHERE Name = 'Tilburg'", "SELECT SurfaceArea FROM city WHERE Name = 'Tilburg'", "SELECT SurfaceArea FROM city WHERE Name = 'Tilburg'", "SELECT SurfaceArea FROM city WHERE Name = 'Tilburg'"], "c57ab0d88cfa0f8019b2145b": ["SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'\n\n", "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'", "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'\n\n", "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English' \n\n", "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'"], "56826679caf7a26640128dd4": ["SELECT T2.Name, T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID", "SELECT T2.Title, T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID", "SELECT T2.Title, T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID", "SELECT T2.Title, T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID", "SELECT T2.Name, T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID"], "9971d8783c5d081da5c8b6c4": ["SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n", "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n", "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n", "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n", "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n"], "a7c180fe27414892d2a92c77": ["SELECT course_description FROM Courses WHERE course_name = \"Math\"", "SELECT course_description FROM courses WHERE course_name = \"Math\"", "SELECT course_description FROM courses WHERE course_name = \"Math\"", "SELECT course_description FROM Courses WHERE course_name = 'Math'", "SELECT course_description FROM courses WHERE course_name = \"Math\""], "59ec85630156dbe1d49273e2": ["SELECT currency FROM performances GROUP BY currency ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT currency, COUNT(*) AS frequency FROM performances GROUP BY currency ORDER BY frequency DESC LIMIT 1\n\n", "SELECT currency FROM performance GROUP BY currency ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT currency, COUNT(*) FROM performances GROUP BY currency ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT currency FROM performance GROUP BY currency ORDER BY count(*) DESC LIMIT 1\n\n"], "a9d5d026bf6b81acb2a02dad": ["SELECT count(*) FROM Departments WHERE email_address IS NOT NULL\n\n", "SELECT count(*) FROM Departments WHERE email_address IS NOT NULL\n\n", "SELECT count(*) FROM Departments WHERE department_name LIKE \"%email%\" OR department_description LIKE \"%email%\"", "SELECT count(*) FROM Departments WHERE email_address IS NOT NULL\n\n", "SELECT count(*) FROM Departments WHERE email_address IS NOT NULL\n\n"], "7166cb0a110e668df707cf09": ["SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'", "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'", "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'", "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'", "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'"], "0467ef37aa217ae5ed58ae1f": ["SELECT T1.date_first_registered FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id WHERE T4.department_name = \"linguistic\"", "SELECT date_first_registered FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id WHERE department_name = \"linguistic\"", "SELECT T1.date_first_registered FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id WHERE T4.department_name = \"Linguistic\" LIMIT 1\n\n", "SELECT date_first_registered FROM students AS T1\nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id\nJOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id\nJOIN departments AS T4 ON T3.department_id = T4.department_id\nWHERE T4.department_name = 'linguistic'", "SELECT T1.date_first_registered FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id WHERE T4.department_name = \"linguistic\""], "a2723ddf45f879722b32865e": ["SELECT T1.age ,  T1.size_code ,  T1.weight ,  T2.charge_type ,  T2.charge_amount FROM dogs AS T1 JOIN charges AS T2 ON T1.size_code  =  T2.charge_id", "SELECT D.breed_code, D.age, T.treatment_type_description\nFROM Dogs AS D\nJOIN Treatments AS T\nON D.dog_id = T.dog_id\nWHERE T.treatment_type_code = 'dietary_needs'", "SELECT T1.age ,  T2.dietary_needs FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code", "SELECT T1.dog_id, T1.age, T2.charge_type, T2.charge_amount \nFROM Dogs AS T1 \nJOIN Charges AS T2 ON T1.age BETWEEN 9 AND 12 AND T2.charge_type = 'food'", "SELECT T1.age ,  T2.charge_type FROM dogs AS T1 JOIN charges AS T2 ON T1.age  =  T2.charge_amount WHERE T2.charge_type LIKE \"%dietary needs%\""], "41a26b8d19c74ed3722c1dcb": ["SELECT nationality, COUNT(*) FROM people GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT nationality FROM people GROUP BY nationality ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT nationality, count(*) FROM people GROUP BY nationality ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT Nationality, COUNT(*) AS total_count \nFROM people \nGROUP BY Nationality \nORDER BY total_count DESC \nLIMIT 1\n\n", "SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1\n\n"], "5328dff9bfb9eeed5ff92a91": ["SELECT genre, count(*) FROM singer AS s JOIN song AS sng ON s.Singer_ID = sng.Singer_ID WHERE s.Citizenship = 'Chile' GROUP BY genre ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT genre, COUNT(*) \nFROM songs AS S \nJOIN singers AS R ON S.singer_id = R.singer_id \nWHERE R.country = 'Chile' \nGROUP BY genre \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT T2.genre \nFROM singer AS T1 \nJOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID\nWHERE T1.Citizenship = 'Chile'\nGROUP BY T2.genre\nORDER BY COUNT(*) DESC\nLIMIT 1\n\n", "SELECT genre FROM singers WHERE citizenship = 'Chile' GROUP BY genre ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT genre \nFROM songs \nJOIN singers \nON songs.singer_id = singers.singer_id \nWHERE singers.citizenship = \"Chile\" \nGROUP BY genre \nORDER BY COUNT(*) DESC \nLIMIT 1\n\n"], "78dcf6701a30e6ec0df78635": ["SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel\n\n", "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel\n\n", "SELECT COUNT(DISTINCT series_name) ,  COUNT(DISTINCT content) FROM TV_Channel\n\n", "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel\n\n", "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel\n\n"], "ef05062008df5a8dd9840b83": ["SELECT property_type_description, room_count, count(*) FROM Properties GROUP BY property_type_description, room_count", "SELECT room_count, property_type_description, count(*) FROM Properties GROUP BY room_count, property_type_description", "SELECT property_type_description, room_count FROM Properties GROUP BY property_type_description, room_count", "SELECT room_count, property_type_description FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code GROUP BY room_count, property_type_description\n\n", "SELECT property_type_description, room_count, count(*) FROM Properties GROUP BY property_type_description, room_count"], "9ce4ed99aa3470d7eb268679": ["SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_name = 'Edwina Burnam' \n\n", "SELECT count(*) FROM VOTES WHERE state = 'Edwina Burnam'", "SELECT COUNT(*) FROM VOTES WHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Edwina Burnam')", "SELECT count(*) FROM VOTES WHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Edwina Burnam')", "This question cannot be answered with the provided tables."], "3012e703aa8c5d9096f5c9b3": ["SELECT DISTINCT Country FROM TV_Channel", "SELECT DISTINCT c1.id, c1.Title, c1.Directed_by, c1.Written_by, c1.Original_air_date, c1.Production_code, c1.Channel, c2.Country, c2.Language\nFROM Cartoon AS c1\nJOIN TV_Channel AS c2 ON c1.Channel = c2.id", "SELECT DISTINCT Country FROM TV_Channel WHERE Content = \"Animation\"", "SELECT DISTINCT Country FROM TV_Channel", "SELECT DISTINCT Country, Content FROM TV_Channel"], "7584d23d795c687865ab4ada": ["SELECT sum(Population) FROM city WHERE District = 'Gelderland'", "SELECT sum(Population) FROM city WHERE District = 'Gelderland'", "SELECT sum(Population) FROM city WHERE District = 'Gelderland'", "SELECT sum(Population) FROM city WHERE District = 'Gelderland'", "SELECT sum(Population) FROM city WHERE District = 'Gelderland'"], "47eddad584fa48d066cb6a7d": ["SELECT count(*) FROM countrylanguage WHERE CountryCode = 'ABW'", "SELECT count(Language) FROM countrylanguage WHERE CountryCode = 'ABW'", "SELECT count(Language) FROM countrylanguage WHERE CountryCode = 'ABW'", "SELECT count(Language) FROM countrylanguage WHERE CountryCode = 'ABW'", "SELECT count(Language) FROM countrylanguage WHERE CountryCode = \"ABW\""], "f32f914fea4e8c19a86eabd9": ["SELECT MIN(Share), MAX(Share) FROM TV_series\n\n", "SELECT min(Share), max(Share) FROM TV_series", "SELECT min(Share), max(Share) FROM TV_series\n\n", "SELECT min(Share) ,  max(Share) FROM TV_series", "SELECT min(Share), max(Share) FROM TV_series\n\n"], "908471d2d8c8f3284662996d": ["SELECT Title FROM Cartoon WHERE Rating  >  8 AND Share  >  50\n\n", "SELECT title FROM Cartoon WHERE rating > 8.0 AND viewers_m > 5.0", "SELECT Title, Rating, Share, 18_49_Rating_Share, Viewers_m FROM Cartoon ORDER BY Rating DESC, Share DESC, 18_49_Rating_Share DESC, Viewers_m DESC LIMIT 1\n\n", "SELECT Title, Directed_by, Written_by, Original_air_date, Production_code, Channel FROM Cartoon WHERE Rating > 8 AND Viewers_m > 5\n\n", "SELECT title, rating FROM cartoon WHERE rating > (SELECT AVG(rating) FROM cartoon)"], "4672ee638d56e1a74eb88903": ["SELECT sum(Population) FROM country WHERE Continent = 'Asia' AND GNP = (SELECT max(GNP) FROM country WHERE Continent = 'Asia')", "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  'Asia'", "SELECT sum(Population) ,  max(GNP) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Asia'", "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  'Asia'\n\n", "SELECT sum(city.population), max(country.GNP) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = \"Asia\""], "e7d06c57fa3f77013995ce01": ["SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)", "SELECT Name FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM orchestra WHERE Year_of_Founded > 2008)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008) \n\n"], "7036be0ec126a7be940f216b": ["SELECT T2.other_details FROM student_enrolment_courses AS T1 JOIN sections AS T2 ON T1.course_id = T2.course_id WHERE T1.student_enrolment_id = (SELECT student_enrolment_id FROM student_enrolment WHERE student_id = :student_id)\n\n", "SELECT T1.student_id, T2.course_name, T2.course_description\nFROM student_enrolment AS T1\nJOIN student_enrolment_courses AS T3 ON T1.student_enrolment_id = T3.student_enrolment_id\nJOIN courses AS T2 ON T3.course_id = T2.course_id\nJOIN sections AS T4 ON T2.course_id = T4.course_id\nWHERE T1.student_id = [student_id of interest]", "SELECT T2.course_name, T4.other_details \nFROM student_enrolment AS T1 \nJOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id \nJOIN sections AS T3 ON T2.course_id = T3.course_id \nJOIN courses AS T4 ON T2.course_id = T4.course_id \nWHERE T1.student_id = {student_id}", "SELECT T1.section_description, T2.course_name, T3.course_description FROM sections AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id JOIN courses AS T3 ON T1.course_id = T3.course_id", "SELECT T1.section_name, T2.course_name, T2.course_description, T3.other_details \nFROM Sections AS T1 \nJOIN Courses AS T2 ON T1.course_id = T2.course_id \nJOIN Degree_Programs AS T3 ON T2.course_id = T3.degree_program_id"], "e250e2df99e3dc6c661aaf45": ["SELECT professional_id, cell_number FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2", "SELECT professional_id, cell_number FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2\n\n", "SELECT professional_id, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)", "SELECT professional_id, cell_number FROM Professionals \nWHERE professional_id IN (SELECT professional_id FROM Treatments \nGROUP BY professional_id \nHAVING COUNT(DISTINCT treatment_type_code) >= 2)", "SELECT professional_id, cell_number FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2\n\n"], "96861a4781bd89c3f401efe3": ["SELECT T2.Major_Record_Format FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T1.Type = 'Live final'", "SELECT major_record_format FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance WHERE performance_id IN (SELECT performance_id FROM show WHERE show_id IN (SELECT show_id FROM show WHERE result = 'Live final')))", "SELECT major_record_format FROM orchestra WHERE orchestra_id = (SELECT orchestra_id FROM performance WHERE performance_id = (SELECT performance_id FROM show WHERE result = 'Live final'))", "SELECT Major_Record_Format FROM orchestra WHERE Orchestra = 'Live Final' \n\n", "SELECT currency FROM performance WHERE Performance_ID = (SELECT Performance_ID FROM show WHERE Result = 'Live final') \n\n"], "cfc3edcc1c3d816866ca0822": ["SELECT * FROM Friend GROUP BY student_id, friend_id HAVING count(*) > 1", "SELECT DISTINCT f1.student_id, f1.friend_id\nFROM Friend f1, Friend f2\nWHERE f1.student_id = f2.friend_id\nAND f1.friend_id = f2.student_id\nAND f1.student_id != f1.friend_id", "SELECT * FROM Friend WHERE friend_id NOT IN (SELECT student_id FROM Friend) OR student_id NOT IN (SELECT ID FROM Highschooler) OR friend_id NOT IN (SELECT ID FROM Highschooler)", "SELECT student_id, friend_id\nFROM Friend\nGROUP BY student_id, friend_id\nHAVING count(*) > 1", "SELECT student_id, friend_id FROM Friend GROUP BY student_id, friend_id HAVING count(*) > 1"], "edbf7489aa31cab42faaa1e3": ["SELECT avg(buyer_offered_price) FROM properties WHERE property_name = \"Amenity\"", "SELECT avg(feature_rank_point) FROM Other_Available_Features WHERE feature_name = 'Amenity'", "SELECT avg(agreed_selling_price) FROM Properties WHERE property_type_code = \"Amenity\"", "SELECT avg(agreed_selling_price) FROM Properties WHERE property_type_code = 'Amenity'", "SELECT avg(feature_id) FROM Other_Available_Features WHERE feature_name = \"Amenity\""], "30782496c7ce3cd9854f2375": ["SELECT T3.first_name, T5.treatment_type_description\nFROM Treatments AS T1\nJOIN Dogs AS T2 ON T1.dog_id = T2.dog_id\nJOIN Professionals AS T3 ON T1.professional_id = T3.professional_id\nJOIN Treatment_Types AS T5 ON T1.treatment_type_code = T5.treatment_type_code", "SELECT T2.first_name, T4.treatment_type_description \nFROM Professionals AS T2 \nJOIN Treatments AS T3 ON T2.professional_id = T3.professional_id \nJOIN Treatment_Types AS T4 ON T3.treatment_type_code = T4.treatment_type_code", "SELECT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN treatments AS T2 ON T1.professional_id = T2.professional_id JOIN treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code", "SELECT T3.first_name, T5.treatment_type_description\nFROM Professionals AS T3\nJOIN Treatments AS T4 ON T3.professional_id = T4.professional_id\nJOIN Treatment_Types AS T5 ON T4.treatment_type_code = T5.treatment_type_code", "SELECT T1.first_name, T3.treatment_type_description \nFROM Professionals AS T1 \nJOIN Treatments AS T2 ON T1.professional_id = T2.professional_id \nJOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code"], "0f8896abd172d342f6041f24": ["This question cannot be answered with the given tables as there is no information about socioeconomic status in the tables provided.", "There is no specific question provided that can be translated into SQL for the given tables.", "This question cannot be answered with the given tables as there is no information related to socioeconomic status available.", "This question cannot be answered with the given tables as there is no table related to socioeconomic status.", "This question cannot be answered directly with the given tables."], "da364c68b0d991d86576e693": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\n\n"], "14cf4dd914c0d73d84cbaa3e": ["SELECT T2.semester_name, T1.semester_id FROM student_enrolment AS T1 JOIN semesters AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "SELECT T3.semester_name, T3.semester_id FROM student_enrolment AS T1 JOIN semesters AS T3 ON T1.semester_id = T3.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "SELECT T2.semester_name, T1.semester_id \nFROM student_enrolment AS T1 \nJOIN semesters AS T2 ON T1.semester_id = T2.semester_id \nGROUP BY T1.semester_id \nORDER BY count(T1.student_id) DESC \nLIMIT 1", "SELECT T1.semester_name, T1.semester_id \nFROM semesters AS T1 \nJOIN student_enrolment AS T2 ON T1.semester_id = T2.semester_id \nGROUP BY T1.semester_id \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT T1.semester_id, T2.semester_name FROM student_enrolment AS T1 JOIN semesters AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1"], "2703025a6e1ea7df9f64e9cf": ["SELECT state FROM VOTES AS V1 JOIN CONTESTANTS AS C1 ON V1.contestant_number = C1.contestant_number WHERE contestant_name = 'Tabatha Gehling'\nINTERSECT\nSELECT state FROM VOTES AS V2 JOIN CONTESTANTS AS C2 ON V2.contestant_number = C2.contestant_number WHERE contestant_name = 'Kelly Clauss'", "SELECT state FROM VOTES WHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling') AND contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss') GROUP BY state", "SELECT state FROM VOTES AS V1 JOIN AREA_CODE_STATE AS V2 ON V1.state = V2.state WHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling') INTERSECT SELECT state FROM VOTES AS V3 JOIN AREA_CODE_STATE AS V4 ON V3.state = V4.state WHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss')", "SELECT state FROM VOTES WHERE contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling') INTERSECT SELECT state FROM VOTES WHERE contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss')", "SELECT state FROM VOTES WHERE contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling') AND contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Kelly Clauss') GROUP BY state"], "c90ca1048c525d22c9ee6e5a": ["SELECT count(DISTINCT degree_summary_name) FROM degree_programs\n\n", "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs\n\n", "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs\n\n", "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "SELECT count(distinct degree_summary_name) FROM Degree_Programs\n\n"], "5413d7d6e1bc07c744dce308": ["SELECT T3.degree_summary_name FROM student_enrolment AS T1 JOIN degree_programs AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN departments AS T3 ON T2.department_id = T3.department_id GROUP BY T3.degree_summary_name ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T3.degree_summary_name FROM degree_programs AS T3 JOIN student_enrolment AS T2 ON T3.degree_program_id = T2.degree_program_id GROUP BY T3.degree_summary_name ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T3.degree_summary_name FROM degree_programs AS T3 \nJOIN student_enrolment AS T2 ON T3.degree_program_id = T2.degree_program_id \nGROUP BY T3.degree_summary_name \nORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T3.degree_summary_name FROM degree_programs AS T1 JOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN students AS T3 ON T2.student_id = T3.student_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T3.degree_summary_name FROM student_enrolment AS T1 JOIN degree_programs AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN departments AS T3 ON T2.department_id = T3.department_id GROUP BY T3.degree_summary_name ORDER BY count(*) DESC LIMIT 1\n\n"], "c535f960df01d5e65ab607cb": ["SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n", "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n", "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n", "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n", "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n"], "aacc03a1d2559e160d85e5e0": ["SELECT Language \nFROM countrylanguage \nWHERE IsOfficial = 'T'\nAND CountryCode IN (\n    SELECT Code \n    FROM country \n    WHERE GovernmentForm = 'Republic'\n    GROUP BY Code \n    HAVING COUNT(*) = 1\n)", "SELECT Language \nFROM countrylanguage \nJOIN country ON countrylanguage.CountryCode = country.Code \nWHERE GovernmentForm = 'Republic' \nGROUP BY Language \nHAVING COUNT(DISTINCT countrylanguage.CountryCode) = 1", "SELECT Language \nFROM countrylanguage \nWHERE CountryCode IN (\n    SELECT Code \n    FROM country \n    WHERE GovernmentForm = 'Republic'\n    GROUP BY Code \n    HAVING count(*) = 1\n)", "SELECT Language \nFROM countrylanguage \nWHERE IsOfficial = 'T' \nGROUP BY Language \nHAVING COUNT(DISTINCT CountryCode) = 1 \nAND CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic')", "SELECT Language \nFROM countrylanguage \nWHERE IsOfficial = 'T' AND CountryCode IN (\n    SELECT Code \n    FROM country \n    WHERE GovernmentForm LIKE '%Republic%'\n    GROUP BY Code \n    HAVING COUNT(*) = 1\n)"], "2e7efaf0ec85cdf5706fe58a": ["SELECT count(DISTINCT department_id) FROM Degree_Programs", "SELECT count(DISTINCT department_id) FROM Degree_Programs\n\n", "SELECT count(DISTINCT department_id) FROM Degree_Programs", "SELECT count(DISTINCT department_id) FROM Degree_Programs\n\n", "SELECT count(DISTINCT department_id) FROM Degree_Programs\n\n"], "852e9db95a48bea4312f6740": ["SELECT count(*) FROM AREA_CODE_STATE", "SELECT count(*) FROM AREA_CODE_STATE", "SELECT count(DISTINCT state) FROM AREA_CODE_STATE", "SELECT count(*) FROM AREA_CODE_STATE", "SELECT count(state) FROM AREA_CODE_STATE"], "e8a58227ca312abf8e49d2d6": ["SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'", "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'", "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'", "SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'", "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'"], "5068ae39be5520111e139664": ["SELECT citizenship, max(Net_Worth_Millions) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, max(Net_Worth_Millions) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, max(Net_Worth_Millions) FROM singer GROUP BY citizenship\n\n", "SELECT max(Net_Worth_Millions) ,  Citizenship FROM singer GROUP BY Citizenship"], "e8ef87ca423d8c0d5871cd95": ["SELECT degree_summary_description FROM Degree_Programs WHERE degree_program_id = 1\n\n", "SELECT degree_summary_name, degree_summary_description FROM degree_programs WHERE degree_program_id = 1\n\n", "SELECT course_name, course_description FROM courses WHERE course_id IN (SELECT course_id FROM student_enrolment_courses WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE degree_program_id = 1))", "SELECT degree_summary_description FROM degree_programs WHERE degree_program_id = 1\n\n", "SELECT degree_summary_description FROM Degree_Programs WHERE degree_program_id = 1\n\n"], "508df36b2abb9919bf85e731": ["SELECT role_code FROM professionals WHERE first_name = \"Mavis\"", "SELECT role_code FROM professionals WHERE first_name = \"Mavis\"", "SELECT role_code FROM professionals WHERE first_name = \"Mavis\"", "SELECT role_code FROM professionals WHERE first_name = \"Mavis\"", "SELECT role_code FROM professionals WHERE first_name = \"Mavis\""], "6a7890d45fbc40df1120667d": ["SELECT * FROM singer WHERE Name = \"Michael Jackson\"", "SELECT Name, Title FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE Name = 'Michael Jackson' AND Title = 'King of Pop'", "SELECT Name ,  Title FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE Name  =  \"Michael Jackson\" AND Title  =  \"King of Pop\"", "SELECT Net_Worth_Millions FROM singer WHERE Name = \"Michael Jackson\"", "SELECT Name, Net_Worth_Millions FROM singer WHERE Name = \"Michael Jackson\""], "146be42d1d8d1c1870f5456d": ["SELECT T1.Title ,  T1.id FROM cartoon AS T1 WHERE T1.Title  =  \"Evil Under the Sea!\"", "SELECT speed FROM Cartoon WHERE Title = \"Evil Under the Sea!\"", "SELECT speed FROM Cartoon WHERE Title = \"Evil Under the Sea!\" \n\n", "SELECT speed FROM Cartoon WHERE Title = \"Evil Under the Sea!\"", "SELECT speed_knots FROM Cartoon WHERE Title = \"Evil Under the Sea!\" \n\n"], "b1a58935bae214ac1261de4c": ["SELECT vote_id, phone_number, state FROM VOTES\n\n", "SELECT vote_id, phone_number, state FROM VOTES\n\n", "SELECT vote_id, phone_number, state FROM VOTES\n\n", "SELECT vote_id, phone_number, state FROM VOTES\n\n", "SELECT vote_id, phone_number, state FROM VOTES\n\n"], "b66d74853a652337af3d5aaa": ["SELECT Title FROM song ORDER BY Sales DESC LIMIT 1\n\n", "SELECT Title FROM song ORDER BY Sales DESC LIMIT 1\n\n", "SELECT Title, Singer_ID FROM song ORDER BY Sales DESC LIMIT 1\n\n", "SELECT Title, Sales FROM song ORDER BY Sales DESC LIMIT 1\n\n", "SELECT Title, Sales FROM song ORDER BY Sales DESC LIMIT 1\n\n"], "4fe3d125c1117f6ce979fc60": ["SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Final_Table_Made ASC\n\n", "SELECT Name FROM people AS P JOIN poker_player AS PP ON P.People_ID = PP.People_ID ORDER BY Final_Table_Made ASC\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC", "SELECT Name FROM people AS P JOIN poker_player AS PP ON P.People_ID = PP.People_ID ORDER BY Final_Table_Made ASC\n\n"], "0f122ff57fbf5504e2d91fe4": ["SELECT Nationality ,  count(*) FROM conductor GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT specialty, COUNT(*) FROM conductors GROUP BY specialty ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Nationality ,  count(*) FROM conductor GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT Nationality ,  count(*) FROM conductor GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT Nationality, COUNT(*) FROM conductor GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "87563ff69c484c11f5dcf235": ["SELECT avg(friend_id - student_id) FROM Friend", "SELECT avg(abs(H1.grade - H2.grade)) FROM Highschooler H1, Highschooler H2, Friend F WHERE H1.ID = F.student_id AND H2.ID = F.friend_id", "SELECT AVG(abs(friend_id - student_id)) FROM Friend", "SELECT AVG(ABS(friend.grade - Highschooler.grade)) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID", "SELECT avg(abs(T1.grade - T2.grade)) FROM Highschooler AS T1 JOIN Friend ON T1.ID = Friend.student_id JOIN Highschooler AS T2 ON Friend.friend_id = T2.ID"], "a27fd1694d1c9bf94ef904ee": ["SELECT Name FROM singer WHERE Citizenship = 'French'", "SELECT * FROM singer WHERE Citizenship = 'French'", "SELECT Name FROM singer WHERE Citizenship = 'French'", "SELECT Name FROM singer WHERE Citizenship = \"France\"", "SELECT Name FROM singer WHERE Citizenship = 'French'"], "1045989035f32c873abf8335": ["SELECT state, contestant_name, count(*) as total_votes\nFROM VOTES\nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number\nGROUP BY state, contestant_name", "SELECT state, contestant_name, count(*) as total_votes\nFROM VOTES\nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number\nGROUP BY state, contestant_name", "SELECT VOTES.state, CONTESTANTS.contestant_name, count(*) as total_votes \nFROM VOTES \nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number \nGROUP BY VOTES.state, CONTESTANTS.contestant_name", "SELECT c.contestant_name, a.state, COUNT(v.vote_id) AS total_votes\nFROM VOTES v\nJOIN CONTESTANTS c ON v.contestant_number = c.contestant_number\nJOIN AREA_CODE_STATE a ON v.state = a.state\nGROUP BY c.contestant_name, a.state", "SELECT C.contestant_name, A.state, COUNT(*) AS total_votes\nFROM VOTES AS V\nJOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number\nJOIN AREA_CODE_STATE AS A ON V.state = A.state\nGROUP BY C.contestant_name, A.state"], "2f7368d63467a2974ee707a4": ["SELECT student_id, liked_id FROM Likes\nWHERE liked_id NOT IN (SELECT student_id FROM Likes) OR student_id NOT IN (SELECT student_id FROM Likes)", "SELECT student_id, liked_id\nFROM Likes\nWHERE (student_id, liked_id) NOT IN \n(SELECT student_id, liked_id\nFROM Likes\nGROUP BY student_id\nHAVING COUNT(*) > 1)", "SELECT student_id, liked_id FROM Likes \nGROUP BY student_id, liked_id \nHAVING COUNT(*) > 1", "SELECT student_id, liked_id FROM Likes WHERE liked_id NOT IN (SELECT student_id FROM Likes) OR student_id NOT IN (SELECT student_id FROM Highschooler) OR liked_id NOT IN (SELECT student_id FROM Highschooler) \n\n", "SELECT student_id, liked_id FROM Likes \nGROUP BY student_id, liked_id \nHAVING COUNT(*) > 1"], "3f34dab1c534b191616bbd81": ["SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(*) > 1)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(DISTINCT Orchestra_ID) > 1)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(Orchestra_ID) > 1)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(Orchestra_ID) > 1)", "SELECT Name FROM conductor GROUP BY Conductor_ID HAVING COUNT(DISTINCT Orchestra_ID) > 1\n\n"], "4315fa400873bc82d581d46f": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1\n\n"], "c58afca16b36ec7227f59f6b": ["SELECT Earnings FROM poker_player", "SELECT T1.Best_Finish ,  T1.Money_Rank ,  T1.Earnings FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID", "SELECT Earnings ,  Money_Rank FROM poker_player", "SELECT T1.Earnings ,  T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID", "SELECT DISTINCT Money_Rank FROM poker_player"], "af210a974d01986b5c40421b": ["SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n", "SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n", "SELECT Record_Company, count(DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n", "SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n", "SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company\n\n"], "c6f2fe4468b0bafc6038e20d": ["SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = 'amenity'", "SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = 'amenity'", "SELECT feature_name FROM Other_Available_Features WHERE feature_id = 'amenity' \n\n", "SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = 'amenity'", "SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = 'feature_type_code'"], "72f16d2dcf84fa469348fc46": ["SELECT T1.cost_of_treatment, T2.treatment_type_description \nFROM Treatments AS T1 \nJOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code", "SELECT T1.cost_of_treatment, T2.treatment_type_description \nFROM Treatments AS T1 \nJOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code", "SELECT T1.cost_of_treatment, T2.treatment_type_description \nFROM Treatments AS T1 \nJOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code", "SELECT T1.cost_of_treatment, T2.treatment_type_description \nFROM Treatments AS T1 \nJOIN Treatment_Types AS T2 \nON T1.treatment_type_code = T2.treatment_type_code", "SELECT cost_of_treatment, treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code"], "6d27a7e5c2cd00f7e271c6e5": ["SELECT title ,  sales FROM song ORDER BY sales DESC LIMIT 1\n\n", "SELECT max(Sales) FROM song\n\n", "SELECT title, MAX(sales) FROM song\n\n", "SELECT MAX(Sales) FROM song\n\n", "SELECT max(duration) FROM song WHERE sales = (SELECT max(sales) FROM song) \n\n"], "0e4fdce5c4613ff0512bcee7": ["SELECT distinct Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')\n\n", "SELECT distinct Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')\n\n", "SELECT DISTINCT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'", "SELECT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'", "SELECT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'"], "6b0e3a5d3fe9998e2a5b1423": ["SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(property_address, ',', -2), ',', 1) AS city FROM properties\n\n", "SELECT DISTINCT SUBSTRING_INDEX(property_address, ',', 1) AS city FROM Properties\n\n", "SELECT DISTINCT SUBSTRING_INDEX(property_address, ',', 1) AS city FROM Properties\n\n", "SELECT DISTINCT SUBSTRING_INDEX(SUBSTRING_INDEX(property_address, ',', -2), ',', 1) AS city FROM properties\n\n", "SELECT DISTINCT SUBSTRING_INDEX(property_address, ',', 1) AS city FROM properties\n\n"], "a6f75ff789f157c471abe18e": ["SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT grade, COUNT(*) \nFROM Highschooler \nGROUP BY grade \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT grade, count(*) FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "2ad9610136f6cd1d224987e8": ["SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1\n\n", "SELECT Money_Rank FROM poker_player WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)", "SELECT Money_Rank FROM poker_player WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)", "SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1\n\n", "SELECT Money_Rank FROM poker_player WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)"], "2a8fc2c6e17466e2923c8b02": ["SELECT course_name, course_id FROM Courses WHERE course_id NOT IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) >= 2)", "SELECT course_name, course_id \nFROM Courses \nWHERE course_id NOT IN \n    (SELECT course_id \n     FROM Sections \n     GROUP BY course_id \n     HAVING COUNT(*) >= 2)", "SELECT course_name, course_id \nFROM Courses \nWHERE course_id NOT IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) >= 2)", "SELECT course_name, course_id FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) < 2)", "SELECT course_name, course_id FROM Courses WHERE course_id NOT IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) >= 2)"], "51c3189cb78a1e53697c5f45": ["SELECT Episode FROM TV_series ORDER BY Rating\n\n", "SELECT Episode FROM TV_series ORDER BY Rating\n\n", "SELECT Episode FROM TV_series ORDER BY Rating\n\n", "SELECT Episode FROM TV_series ORDER BY Rating", "SELECT Episode FROM TV_series ORDER BY Rating"], "180cf206adba237d33051df5": ["SELECT T3.department_name FROM degree_programs AS T1 JOIN departments AS T3 ON T1.department_id = T3.department_id JOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T3.department_name ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T3.degree_summary_name FROM student_enrolment AS T1 JOIN degree_programs AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN departments AS T3 ON T2.department_id = T3.department_id GROUP BY T3.degree_summary_name ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T3.department_name FROM degree_programs AS T1 JOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN departments AS T3 ON T1.department_id = T3.department_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T3.department_name FROM degree_programs AS T1 JOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN departments AS T3 ON T1.department_id = T3.department_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.degree_summary_name \nFROM degree_programs AS T1 \nJOIN student_enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id \nGROUP BY T1.degree_summary_name \nORDER BY count(*) DESC \nLIMIT 1"], "03a8c2a72bd6a74237d0abb3": ["SELECT Name FROM country WHERE IndepYear > 1950", "SELECT Name FROM country WHERE IndepYear > 1950\n\n", "SELECT Name FROM country WHERE IndepYear > 1950", "SELECT Name FROM country WHERE IndepYear > 1950\n\n", "SELECT Name FROM country WHERE IndepYear > 1950"], "6191d76f1608d8618bf0113e": ["SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\n\n", "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\n\n", "SELECT money_rank FROM poker_player ORDER BY earnings DESC LIMIT 1\n\n", "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\n\n", "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\n\n"], "c55441dd2beb8ee0a6fecc44": ["SELECT T1.name \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T2.student_id \nHAVING COUNT(*) >= 2", "SELECT name \nFROM Highschooler \nWHERE ID IN (\n    SELECT student_id \n    FROM Likes \n    GROUP BY student_id \n    HAVING COUNT(*) >= 2\n)", "SELECT T1.name FROM highschooler AS T1 JOIN (SELECT student_id, count(*) AS num_likes FROM likes GROUP BY student_id) AS T2 ON T1.ID = T2.student_id WHERE T2.num_likes >= 2\n\n", "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T2.student_id HAVING count(*) >= 2", "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T2.student_id HAVING count(*) >= 2"], "06fdbccb7911f6b516234b0e": ["SELECT avg(Earnings) FROM poker_player WHERE People_ID IN (SELECT People_ID FROM people WHERE Height > 200)", "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200", "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200", "SELECT avg(earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200", "SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200"], "76f7656dc3388abedd9ef6a5": ["SELECT T1.Name ,  T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID  =  T3.Orchestra_ID ORDER BY T1.Year_of_Work", "SELECT T1.Name ,  T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID ORDER BY T1.Year_of_Work", "SELECT T1.Name, T1.Age, T2.Year_of_Work FROM conductor AS T1 JOIN performance AS T2 ON T1.Conductor_ID = T2.Conductor_ID ORDER BY T2.Date", "SELECT conductor.Name, conductor.Year_of_Work FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID ORDER BY conductor.Year_of_Work", "SELECT T1.Name ,  T2.Year_of_Work FROM conductor AS T1 JOIN performance AS T2 ON T1.Conductor_ID  =  T2.Orchestra_ID ORDER BY T2.Date"], "955d628cabf132c371c85230": ["SELECT count(*) FROM TV_Channel WHERE Language = 'English'", "SELECT count(*) FROM TV_Channel WHERE Language = 'English'", "SELECT count(*) FROM TV_Channel WHERE Language = 'English'", "SELECT count(*) FROM TV_Channel WHERE Language = 'English'", "SELECT count(*) FROM TV_Channel WHERE Language = 'English'"], "636932d86608447e7dd729c0": ["SELECT avg(count(*)) FROM Student_Enrolment_Courses GROUP BY course_id", "SELECT avg(size) FROM (SELECT count(*) as size FROM student_enrolment_courses GROUP BY course_id) as class_sizes", "SELECT avg(count(*)) FROM student_enrolment_courses GROUP BY course_id", "SELECT avg(count(*)) FROM student_enrolment_courses GROUP BY course_id", "SELECT avg(count(*)) FROM student_enrolment_courses GROUP BY course_id"], "e456112264fd909f38472281": ["SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1\n\n"], "2f1d449c8d36c78121d4bf65": ["SELECT T2.Language \nFROM country AS T1 \nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode \nWHERE T2.Percentage = (\n    SELECT MAX(Percentage) \n    FROM countrylanguage \n    WHERE CountryCode = T1.Code\n)", "SELECT T2.name, T1.Language\nFROM countrylanguage AS T1\nJOIN country AS T2 ON T1.CountryCode = T2.Code\nWHERE T1.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.CountryCode)", "SELECT T2.Name, T1.Language \nFROM countrylanguage AS T1 \nJOIN country AS T2 \nON T1.CountryCode = T2.Code \nWHERE T1.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.CountryCode)", "SELECT T2.Name, T3.Language\nFROM country AS T2\nJOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode\nWHERE T3.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T3.CountryCode)", "SELECT T2.Name, T1.Language \nFROM countrylanguage AS T1 \nJOIN country AS T2 ON T1.CountryCode = T2.Code \nWHERE Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.CountryCode)"], "a82d64f8a62fc587d320a05a": ["SELECT count(DISTINCT current_address_id) FROM students", "SELECT COUNT(DISTINCT current_address_id) FROM students\n\n", "SELECT COUNT(DISTINCT current_address_id) FROM students\n\n", "SELECT count(DISTINCT current_address_id) FROM students", "SELECT count(DISTINCT current_address_id) FROM students"], "f877de4578b18f974897249a": ["SELECT property_address FROM Properties GROUP BY property_address ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.property_address FROM properties AS T1 JOIN other_property_features AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT property_address FROM properties WHERE date_sold IS NOT NULL GROUP BY property_address ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.property_address FROM Properties AS T1 WHERE T1.date_sold IS NOT NULL GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT property_address FROM properties WHERE property_id IN (SELECT property_id FROM properties WHERE date_sold IS NOT NULL GROUP BY property_id ORDER BY COUNT(*) DESC LIMIT 1)\n\n"], "5d4787a95f36e78d1f838e9a": ["SELECT Grade, COUNT(*) AS TotalCities \nFROM school \nWHERE Population > 30000 \nGROUP BY Grade \nORDER BY TotalCities DESC \nLIMIT 1", "SELECT grade, count(*) FROM city WHERE population > 30000 GROUP BY grade ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.Grade FROM city AS T1 JOIN school AS T2 ON T1.ID = T2.ID WHERE T1.Population > 30000 GROUP BY T2.Grade ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT grade, COUNT(*) AS num_cities FROM city WHERE population > 30000 GROUP BY grade ORDER BY num_cities DESC LIMIT 1\n\n", "SELECT Grade, COUNT(*) AS Count FROM school\nWHERE Population > 30000\nGROUP BY Grade\nORDER BY Count DESC\nLIMIT 1"], "dcd3630b05490796059dc74e": ["SELECT Date FROM performance ORDER BY Official_ratings_(millions) DESC LIMIT 1\n\n", "SELECT Date FROM performance ORDER BY Official_ratings_(millions) DESC LIMIT 1\n\n", "SELECT Date FROM performance ORDER BY Official_ratings_(millions) DESC LIMIT 1\n\n", "SELECT Date FROM performance ORDER BY Official_ratings_(millions) DESC LIMIT 1\n\n", "SELECT Date FROM performance ORDER BY Official_ratings_(millions) DESC LIMIT 1\n\n"], "227c46f05ff3c93f1fc54393": ["SELECT T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name = 'Kelly Clauss'", "SELECT T2.contestant_name\nFROM VOTES AS T1\nJOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number\nWHERE T2.contestant_name = 'Kelly Clauss'", "SELECT T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Kelly Clauss'", "SELECT T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.created = 'Kelly Clauss'", "SELECT T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name = 'Kelly Clauss'"], "19c83355b21195fc56a8a56c": ["SELECT Name FROM city WHERE CountryCode = \"AFG\" ORDER BY Population DESC LIMIT 1", "SELECT Name FROM city WHERE CountryCode = 'AFG' ORDER BY Population DESC LIMIT 1", "SELECT Name FROM city WHERE CountryCode = 'AFG' ORDER BY Population DESC LIMIT 1", "SELECT Name FROM city WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') ORDER BY Population DESC LIMIT 1", "SELECT Name FROM city WHERE CountryCode = 'AFG' ORDER BY Population DESC LIMIT 1\n\n"], "7ef70f25ffeff3d41e03b04d": ["SELECT (SUM(population * (SELECT percentage FROM countrylanguage WHERE countrycode = 'ABW' AND isofficial = 'T') / 100)) / (SELECT population FROM city WHERE name = 'Aruba') * 100 FROM country WHERE code = 'ABW'", "SELECT (SELECT population FROM city WHERE name = 'Aruba') * (SELECT sum(population) FROM city WHERE name = 'Aruba' AND age BETWEEN 20 AND 29) / (SELECT sum(population) FROM city WHERE name = 'Aruba') as percentage_people_in_20s", "SELECT (SELECT sum(population) FROM city WHERE name = \"Aruba\" AND population BETWEEN 20 AND 29) / (SELECT sum(population) FROM city WHERE name = \"Aruba\") * 100\n\n", "SELECT (SUM(population * percentage) / 100) FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T1.Name = \"Aruba\" AND T3.Language = \"Dutch\" AND T3.Percentage = 23.5\n\n", "SELECT (SELECT population FROM city WHERE name = 'Aruba') * (SELECT percentage FROM countrylanguage WHERE CountryCode = (SELECT CountryCode FROM city WHERE name = 'Aruba') AND Language = 'Dutch') / 100 as percentage_20s"], "b067dd3100780e91ba15aadb": ["SELECT Nationality FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player)", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables. Additional tables related to operating systems would be needed to provide an answer.", "SELECT DISTINCT nationality FROM people WHERE people_id IN (SELECT people_id FROM poker_player)"], "9904c2ef361c785cf400e76e": ["SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode HAVING COUNT(Language) > 1)", "SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name HAVING count(DISTINCT countrylanguage.Language) > 1", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode HAVING count(Language) > 1)", "SELECT T1.Name, COUNT(T2.Language) AS NumLanguages\nFROM country AS T1\nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode\nGROUP BY T1.Name\nHAVING COUNT(T2.Language) > 1", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode HAVING COUNT(Language) > 1)"], "e855c576bf35b72cd79aeb34": ["SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT avg(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)", "SELECT avg(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT avg(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)"], "a3b0f5051b554483667ea8da": ["SELECT T3.last_name FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id JOIN Students AS T3 ON T2.degree_program_id = T3.student_id WHERE T1.department_name = \"Management\"", "SELECT T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id WHERE T4.department_name = \"Management\"", "SELECT T1.last_name \nFROM Students AS T1 \nJOIN Degree_Programs AS T2 ON T1.student_id = T2.department_id \nJOIN Departments AS T3 ON T2.department_id = T3.department_id \nWHERE T3.department_name = \"Management\"", "SELECT T1.last_name \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id \nJOIN Departments AS T4 ON T3.department_id = T4.department_id \nWHERE T4.department_name = \"Management\" \nORDER BY T1.date_first_registered DESC \nLIMIT 1", "SELECT T1.last_name FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id JOIN students AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE department_name = \"Management\""], "4270d0c81c25fd2dea808bb9": ["SELECT feature_description FROM Other_Available_Features WHERE feature_name = \"open floor plans\"", "SELECT feature_name FROM Other_Available_Features WHERE feature_type_name = 'open floor plan'", "SELECT feature_name, feature_description \nFROM Other_Available_Features \nWHERE feature_type_code = (SELECT feature_type_code FROM Ref_Feature_Types WHERE feature_type_name = 'Open floor plans')", "SELECT feature_name FROM Other_Available_Features WHERE feature_type_name = 'Open Floor Plan'", "SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = (SELECT feature_type_code FROM Ref_Feature_Types WHERE feature_type_name = 'open floor plans')"], "8b14aa862da6475224aebd28": ["SELECT * FROM poker_player WHERE Final_Table_Made = 'Yes' AND Best_Finish >= 1 AND Money_Rank >= 10 AND Earnings >= 1000000", "SELECT T2.Name ,  T2.Nationality ,  T2.Birth_Date ,  T2.Height FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Final_Table_Made  =  'Yes' AND T1.Best_Finish  IS NOT NULL AND T1.Money_Rank  IS NOT NULL AND T1.Earnings  IS NOT NULL", "SELECT * FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Final_Table_Made = 'Yes' AND Money_Rank = 1", "SELECT * FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Final_Table_Made = 1 AND Best_Finish >= 1 AND Money_Rank >= 1 AND Earnings > 0", "SELECT * FROM poker_player WHERE Final_Table_Made = 'Yes' AND Best_Finish = 1 AND Money_Rank = 1"], "616da977764a9284b48ac172": ["This question cannot be answered with the given tables as there is no table related to news articles.", "This question cannot be answered with the given tables.", "SELECT * FROM news_articles WHERE content LIKE '%competition%' OR content LIKE '%contest%' OR content LIKE '%event%'", "This question cannot be answered with the provided tables.", "This question cannot be answered with the given tables as there is no table related to news articles."], "416157033dd81f9f4dd87e9c": ["SELECT DISTINCT Major_Record_Format FROM orchestra\n\n", "SELECT DISTINCT Major_Record_Format FROM orchestra\n\n", "SELECT DISTINCT Major_Record_Format FROM orchestra\n\n", "SELECT DISTINCT Major_Record_Format FROM orchestra\n\n", "SELECT DISTINCT Major_Record_Format FROM orchestra\n\n"], "85a3c9f0b6179942f8a4e6d4": ["SELECT Name, Population, HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1\n\n", "SELECT c.Name, c.Population, c.HeadOfState FROM country AS c ORDER BY c.SurfaceArea DESC LIMIT 1\n\n", "SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)", "SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)", "SELECT c.Name, c.Population, c.HeadOfState \nFROM country AS c \nWHERE c.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)"], "b07a63a608c2e526e1b0f960": ["SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n", "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n", "SELECT Air_Date FROM TV_series WHERE Title = \"A Love of a Lifetime\"", "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n"], "0110826f0dbf302b3a60d540": ["SELECT DISTINCT breed_code, size_code FROM Dogs\n\n", "SELECT DISTINCT breed_name, size_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code\n\n", "SELECT DISTINCT breed_name, size_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code", "SELECT DISTINCT breed_name, size_description FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code\n\n", "SELECT DISTINCT breed_code, size_code FROM Dogs"], "2f221f6dd86292b65abe60b1": ["SELECT min(buyer_offered_price * 0.10) FROM Properties WHERE room_count < 5", "SELECT MIN(buyer_offered_price * 0.1) FROM Properties WHERE room_count < 5", "SELECT min(buyer_offered_price * 0.1) FROM properties WHERE room_count < 5", "SELECT MIN(buyer_offered_price * 0.1) FROM Properties WHERE room_count < 5", "SELECT min(buyer_offered_price) FROM Properties WHERE room_count < 5"], "64f171150a38adacf03c480a": ["SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(friend_id) ASC LIMIT 1)", "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) ASC LIMIT 1)", "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) ASC LIMIT 1)", "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY COUNT(friend_id) ASC LIMIT 1)", "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) ASC LIMIT 1)"], "c355ff4d7f27517ab3b9f0f8": ["SELECT T2.Name \nFROM country AS T1 \nJOIN (\n    SELECT CountryCode, COUNT(Language) AS NumLanguages \n    FROM countrylanguage \n    GROUP BY CountryCode \n    ORDER BY NumLanguages DESC \n    LIMIT 1\n) AS T2 \nON T1.Code = T2.CountryCode", "SELECT Name FROM country WHERE Code = (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1)", "SELECT T2.Name FROM country AS T1 JOIN (SELECT CountryCode, COUNT(Language) AS lang_count FROM countrylanguage GROUP BY CountryCode ORDER BY lang_count DESC LIMIT 1) AS T3 ON T1.Code = T3.CountryCode", "SELECT T2.Name FROM country AS T2 JOIN (SELECT CountryCode, count(Language) AS num_languages FROM countrylanguage GROUP BY CountryCode ORDER BY num_languages DESC LIMIT 1) AS T1 ON T1.CountryCode = T2.Code\n\n", "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1\n\n"], "14de6552dda0933d8433f793": ["SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1\n\n", "SELECT Language FROM countrylanguage AS cl JOIN country AS c ON cl.CountryCode = c.Code WHERE c.Continent = 'Asia' GROUP BY Language ORDER BY COUNT(DISTINCT c.Code) DESC LIMIT 1\n\n", "SELECT language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "2ad4aa3668d13ed704cab4d0": ["SELECT max(area_code), min(area_code) FROM AREA_CODE_STATE\n\n", "SELECT max(area_code), min(area_code) FROM AREA_CODE_STATE\n\n", "SELECT max(area_code) ,  min(area_code) FROM AREA_CODE_STATE\n\n", "SELECT max(area_code), min(area_code) FROM AREA_CODE_STATE\n\n", "SELECT max(area_code) ,  min(area_code) FROM AREA_CODE_STATE\n\n"], "33ed49eed5ca691cdf56a27c": ["SELECT avg(room_count) FROM properties WHERE property_type_code = 'shp'", "SELECT avg(room_count) FROM Properties WHERE property_type_code = 'shp'", "SELECT avg(shp_feature_1 * shp_feature_2 * shp_feature_3) FROM properties WHERE property_type_code = \"shop\"", "SELECT avg(room_count) FROM Properties WHERE property_type_code = \"shp\"", "SELECT avg(room_count) FROM Properties WHERE property_type_code = \"shp\""], "249c11ec294046c437868f24": ["SELECT c1.Name \nFROM country c1 \nWHERE c1.Continent = 'Asia' \nAND c1.Population > (SELECT MAX(c2.Population) \n                     FROM country c2 \n                     WHERE c2.Continent = 'Africa')", "SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')", "SELECT Name \nFROM country \nWHERE Continent = \"Asia\" \nAND Population > (SELECT MAX(Population) \n                  FROM country \n                  WHERE Continent = \"Africa\")", "SELECT c1.Name \nFROM country AS c1\nWHERE c1.Continent = 'Asia' \nAND c1.Population > (SELECT MAX(c2.Population) \n                     FROM country AS c2 \n                     WHERE c2.Continent = 'Africa')", "SELECT c1.Name \nFROM country AS c1 \nWHERE Continent = 'Asia' \nAND Population > ALL(SELECT Population FROM country WHERE Continent = 'Africa')"], "d701d859ada45ac13f53ea93": ["SELECT count(DISTINCT degree_program_id) FROM Degree_Programs", "SELECT count(DISTINCT degree_program_id) FROM Degree_Programs", "SELECT count(DISTINCT degree_program_id) FROM Degree_Programs", "SELECT count(DISTINCT degree_program_id) FROM Degree_Programs", "SELECT count(DISTINCT degree_program_id) FROM Degree_Programs"], "dff1bd2604f1ad8be8dfe4a5": ["SELECT avg(age) FROM Highschooler", "SELECT avg(grade) FROM Highschooler", "SELECT avg(grade) FROM Highschooler", "SELECT avg(grade) FROM Highschooler", "SELECT avg(age) FROM Highschooler"], "602d2f8d59f787befaa350f1": ["SELECT package_option FROM TV_Channel WHERE series_name = 'Sky Music'", "SELECT count(*) FROM TV_Channel WHERE series_name = 'Sky Music'", "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Music'", "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Music\"", "SELECT SUM(Pay_per_view_PPV) FROM TV_Channel WHERE series_name = 'Sky Music'"], "3e8c4825d77b89142403881e": ["SELECT * FROM treatment_types ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT * FROM Treatment_Types ORDER BY treatment_type_code DESC LIMIT 1\n\n", "SELECT treatment_type_description FROM treatment_types ORDER BY treatment_type_code DESC LIMIT 1", "SELECT * FROM treatment_types ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT * FROM treatment_types ORDER BY date_of_treatment DESC LIMIT 1\n\n"], "629a89d1655b57ba578b162f": ["SELECT state, contestant_name, count(*) as total_votes \nFROM VOTES \nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number \nGROUP BY state, contestant_name \nORDER BY state, total_votes DESC, contestant_name", "SELECT state, contestant_name, count(vote_id) as total_votes, COUNT(DISTINCT phone_number) as total_voters, MAX(created) as last_vote_date\nFROM VOTES\nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number\nJOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state\nGROUP BY state, contestant_name\nORDER BY state, total_votes DESC, total_voters DESC, last_vote_date DESC", "SELECT state, contestant_name, count(*) AS total_votes\nFROM VOTES\nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number\nGROUP BY state, contestant_name\nORDER BY state, total_votes DESC, contestant_name", "SELECT state, contestant_name, COUNT(*) as total_votes\nFROM VOTES\nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number\nJOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state\nGROUP BY state, contestant_name\nORDER BY state, total_votes DESC", "SELECT state, contestant_name, count(*) AS total_votes\nFROM VOTES\nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number\nGROUP BY state, contestant_name\nORDER BY state, total_votes DESC, contestant_name"], "50b0b3bae06052d61c43144d": ["SELECT count(DISTINCT professional_id) FROM Treatments", "SELECT count(DISTINCT professional_id) FROM Treatments", "SELECT count(DISTINCT professional_id) FROM treatments", "SELECT count(DISTINCT professional_id) FROM Treatments", "SELECT count(DISTINCT professional_id) FROM Treatments"], "78c024015c615e19bce5ef6f": ["SELECT * FROM singer WHERE Name = 'Prince'", "SELECT * FROM singer WHERE Name = 'Prince'", "SELECT * FROM singer WHERE Name = 'Prince'", "SELECT * FROM singer WHERE Name = 'Prince'", "SELECT * FROM singer WHERE Name = 'Prince'"], "0515ff55fbb8673f087cb902": ["SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n", "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n", "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n", "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n", "SELECT DISTINCT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\n\n"], "dea8a81612e89f5f308283ba": ["SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING count(*) > 1)"], "8b8939c72780a23c4f068e12": ["SELECT COUNT(DISTINCT Content) FROM TV_Channel", "SELECT count(DISTINCT Content) FROM TV_Channel\n\n", "SELECT count(DISTINCT Content) FROM TV_Channel\n\n", "SELECT count(DISTINCT Content) FROM TV_Channel\n\n", "SELECT COUNT(DISTINCT Content) FROM TV_Channel\n\n"], "04dabc4947337175f984ff20": ["SELECT * FROM Friend WHERE student_id IN (SELECT ID FROM Highschooler) OR friend_id IN (SELECT ID FROM Highschooler)", "SELECT DISTINCT F1.student_id, F2.friend_id \nFROM Friend AS F1 \nJOIN Friend AS F2 ON F1.friend_id = F2.student_id \nWHERE F1.student_id <> F2.friend_id", "SELECT DISTINCT F1.student_id, F2.friend_id \nFROM Friend F1 \nJOIN Friend F2 ON F1.friend_id = F2.student_id \nWHERE F1.student_id <> F2.friend_id", "SELECT DISTINCT F1.student_id, F2.friend_id \nFROM Friend F1, Friend F2 \nWHERE F1.friend_id = F2.student_id OR F1.student_id = F2.friend_id", "SELECT DISTINCT F1.friend_id FROM Friend AS F1 JOIN Friend AS F2 ON F1.student_id = F2.friend_id AND F1.friend_id = F2.student_id"], "78ec930ff748a7f5c52a8a24": ["This question cannot be answered with the given tables.", "SELECT T1.Name ,  T1.Year_of_Work FROM conductor AS T1 WHERE T1.Name  =  'Colin Davis'", "SELECT Colin Davis FROM Conductor WHERE Nationality = 'USD'", "SELECT * FROM conductor WHERE name = 'Colin Davis'", "SELECT * FROM conductor WHERE Name = 'Colin Davis'"], "7471f318af1e0bd9e4fd41d9": ["SELECT citizenship FROM singer WHERE name = 'Bob Marley'", "SELECT Name FROM singer WHERE Name = 'Bob Marley'", "SELECT Name FROM singer WHERE Name = 'Bob Marley'", "SELECT Name FROM singer WHERE Name = 'Bob Marley'", "SELECT * FROM singer WHERE Name = 'Bob Marley'"], "ebd09a45c44cb0a8159524df": ["SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') INTERSECT SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') INTERSECT SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')"], "d58ba4b4a3ee036fd2c55add": ["SELECT Name, Population, District FROM city ORDER BY Population, District", "SELECT Name, CountryCode, District, Population,\nCASE\n    WHEN Population < 1000000 THEN 'Small City'\n    WHEN Population BETWEEN 1000000 AND 5000000 THEN 'Medium City'\n    ELSE 'Large City'\nEND AS Population_Cluster\nFROM city", "SELECT Name, Population,\nCASE \n    WHEN Population < 1000000 THEN 'Small'\n    WHEN Population >= 1000000 AND Population < 5000000 THEN 'Medium'\n    WHEN Population >= 5000000 THEN 'Large'\nEND AS Population_Category,\nCASE \n    WHEN District = 'North' OR District = 'South' THEN 'Northern/Southern'\n    WHEN District = 'East' OR District = 'West' THEN 'Eastern/Western'\nEND AS Geographical_Location\nFROM city", "SELECT Name, Population, District FROM city ORDER BY Population DESC, District", "SELECT Name, Population, District FROM city ORDER BY District, Population"], "d9ae14fa43aee004fa6793d2": ["SELECT citizenship FROM singer GROUP BY citizenship ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT citizenship FROM singer GROUP BY citizenship ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT citizenship, count(*) FROM singer GROUP BY citizenship ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT citizenship FROM singer GROUP BY citizenship ORDER BY count(*) DESC LIMIT 1\n\n"], "bcba25bc18804a15a221d83f": ["SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'"], "bb32b0d889b9ac064295f252": ["SELECT T2.Package_Option FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.ID = T2.Channel WHERE T2.Directed_by <> 'Ben Jones' OR T2.Directed_by IS NULL", "SELECT T2.Package_Option FROM TV_Channel AS T2 LEFT JOIN Cartoon AS T1 ON T2.id = T1.Channel WHERE T1.Directed_by != \"Ben Jones\" OR T1.Directed_by IS NULL", "SELECT T2.Package_Option FROM TV_Channel AS T2 LEFT JOIN Cartoon AS T1 ON T1.Channel = T2.id WHERE T1.Directed_by != 'Ben Jones' OR T1.Directed_by IS NULL", "SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')", "SELECT T2.Package_Option FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by <> 'Ben Jones' OR T2.id IS NULL"], "7bd989ea709693e4762cd48a": ["SELECT department_name, course_name FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id JOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id GROUP BY department_name, course_name\n\n", "SELECT department_name, GROUP_CONCAT(DISTINCT course_name) AS course_offerings \nFROM Departments \nJOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id \nJOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id \nJOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id \nJOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id \nGROUP BY department_name", "SELECT department_name, GROUP_CONCAT(course_name) AS course_offerings\nFROM Departments \nJOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id\nJOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id\nJOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id\nJOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id\nGROUP BY department_name\n\n", "SELECT department_name, GROUP_CONCAT(course_name) AS course_offerings\nFROM Departments\nJOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id\nJOIN Sections ON Degree_Programs.degree_program_id = Sections.course_id\nJOIN Courses ON Sections.course_id = Courses.course_id\nGROUP BY department_name\n\n", "SELECT department_name, COUNT(course_id) AS num_courses FROM Departments JOIN Courses ON Departments.department_id = Courses.department_id GROUP BY department_name\n\n"], "5528948af04efb24b7f7d2ed": ["SELECT citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT citizenship FROM singer WHERE Birth_Year > 1955\n\n", "SELECT citizenship FROM singer WHERE birth_year < 1945 INTERSECT SELECT citizenship FROM singer WHERE birth_year > 1955\n\n", "SELECT citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT citizenship FROM singer WHERE Birth_Year > 1955\n\n", "SELECT citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT citizenship FROM singer WHERE Birth_Year > 1955\n\n", "SELECT citizenship FROM singer WHERE birth_year < 1945 INTERSECT SELECT citizenship FROM singer WHERE birth_year > 1955"], "50dc8ac7d576a43d942e7687": ["SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC\n\n", "SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC\n\n", "SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC\n\n", "SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC\n\n", "SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC\n\n"], "336bb42ec4f09b7065b5bd3c": ["SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)\n\n", "SELECT birth_date FROM people WHERE people_id = (SELECT people_id FROM poker_player ORDER BY earnings ASC LIMIT 1)", "SELECT birth_date FROM people WHERE people_id = (SELECT people_id FROM poker_player ORDER BY earnings ASC LIMIT 1)\n\n", "SELECT Birth_Date FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)\n\n", "SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1) \n\n"], "8f01942896df2af1d9380b2c": ["SELECT count(DISTINCT Code) FROM countrylanguage WHERE Language  =  'Indo-European'", "SELECT count(*) FROM countrylanguage WHERE Language = 'Indo-European' AND IsOfficial = 'T'", "SELECT count(DISTINCT Code) FROM countrylanguage WHERE Language IN (SELECT Language FROM countrylanguage WHERE Language = 'Indo-European')", "SELECT count(DISTINCT Code) FROM countrylanguage WHERE Language IN (SELECT Language FROM countrylanguage WHERE Language = 'Indo-European')", "SELECT count(DISTINCT Code) FROM countrylanguage WHERE Language  =  'Indo-European'"], "5cd2a293dd846bc72d990864": ["SELECT language FROM countrylanguage GROUP BY language ORDER BY sum(population) DESC LIMIT 1\n\n", "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY sum(Percentage) DESC LIMIT 1\n\n", "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY sum(Percentage) DESC LIMIT 1\n\n", "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY Percentage DESC LIMIT 1\n\n", "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY SUM(Percentage * Population) DESC LIMIT 1\n\n"], "7f992c6c42d5accb734e2b70": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the provided tables."], "87102096e1ae4f751420dcca": ["SELECT student_id, count(friend_id) FROM friend GROUP BY student_id\n\n", "SELECT student_id, count(friend_id) FROM Friend GROUP BY student_id\n\n", "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id\n\n", "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id\n\n", "SELECT student_id, COUNT(friend_id) FROM Friend GROUP BY student_id\n\n"], "6883d855e686aa49079453b4": ["SELECT first_name FROM owners WHERE city = 'Houston'", "SELECT T2.first_name ,  T2.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  \"Houston\"", "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code WHERE T2.city = 'Houston'", "SELECT first_name ,  last_name FROM owners WHERE city  =  'Houston'", "SELECT first_name ,  last_name FROM owners WHERE city  =  'Houston'"], "1826a87821a6da5304134902": ["SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1)", "SELECT Name \nFROM singer \nWHERE Singer_ID IN (SELECT Singer_ID \n                    FROM song \n                    GROUP BY Singer_ID \n                    HAVING COUNT(*) > 1)"], "a108a28235a3b7ae6e117f84": ["SELECT count(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = \"Engineering\")", "SELECT count(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Engineering')", "SELECT count(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = \"Engineering\")", "SELECT count(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = \"Engineering\")", "SELECT count(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Engineering')"], "04af5ecf452e0ebcdaf9f46b": ["SELECT count(*) FROM poker_player\n\n", "SELECT count(*) FROM poker_player", "SELECT count(*) FROM poker_player\n\n", "SELECT count(*) FROM poker_player", "SELECT count(*) FROM poker_player\n\n"], "24cc52398425ff176cb7d644": ["SELECT Name FROM people WHERE Nationality != 'Russia' \n\n", "SELECT Name FROM people WHERE Nationality <> 'Russia'", "SELECT Name FROM people WHERE Nationality <> 'Russia' \n\n", "SELECT Name FROM people WHERE Nationality != 'Russia' \n\n", "SELECT Name FROM people WHERE Nationality != 'Russia'"], "b73d87cf2e6eec8db7df9afa": ["SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n", "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n", "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n", "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n", "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n"], "8f0d0c426d0c7c2154890674": ["SELECT T2.first_name, T4.treatment_type_description \nFROM Professionals AS T2 \nJOIN Treatments AS T3 ON T2.professional_id = T3.professional_id \nJOIN Treatment_Types AS T4 ON T3.treatment_type_code = T4.treatment_type_code", "SELECT T2.first_name, T3.treatment_type_description \nFROM Professionals AS T2 \nJOIN Treatments AS T1 ON T2.professional_id = T1.professional_id \nJOIN Treatment_Types AS T3 ON T1.treatment_type_code = T3.treatment_type_code", "SELECT T2.first_name, T4.treatment_type_description \nFROM Professionals AS T2 \nJOIN Treatments AS T3 ON T2.professional_id = T3.professional_id \nJOIN Treatment_Types AS T4 ON T3.treatment_type_code = T4.treatment_type_code", "SELECT T1.first_name, T2.treatment_type_description \nFROM professionals AS T1 \nJOIN treatments AS T2 ON T1.professional_id = T2.professional_id", "SELECT T2.first_name, T4.treatment_type_description \nFROM Professionals AS T2 \nJOIN Treatments AS T3 ON T2.professional_id = T3.professional_id \nJOIN Treatment_Types AS T4 ON T3.treatment_type_code = T4.treatment_type_code"], "a63b6b1714e014f3e6c98077": ["SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(friend_id) >= 3)", "SELECT name \nFROM Highschooler \nWHERE ID IN \n    (SELECT student_id \n     FROM Friend \n     GROUP BY student_id \n     HAVING count(*) >= 3)", "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 3)", "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 3)", "SELECT name \nFROM Highschooler \nWHERE ID IN (SELECT student_id \n             FROM Friend \n             GROUP BY student_id \n             HAVING COUNT(*) >= 3)"], "5c70d7d74906f196adfd962a": ["This question is not directly related to the given tables.", "This question cannot be answered directly from the given tables.", "There are no specific tables or columns in the provided database schema that directly address the health benefits of owning a dog.", "This question cannot be answered directly with the given tables. Additional information regarding the health benefits of owning a dog would be needed.", "This question cannot be answered directly from the given tables. Additional information is needed to determine the health benefits of owning a dog."], "8dfcd2a650e8af80bfc0c979": ["SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(Orchestra_ID) > 1)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(Orchestra_ID) > 1)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(*) > 1)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(*) > 1)", "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(Orchestra_ID) > 1)"], "78a85622714eff4e203f332b": ["SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50\n\n", "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50", "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50\n\n", "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50\n\n", "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50\n\n"], "c2b0e6b66d98e2ecfe05e1f8": ["SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'Staging Tips'", "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'STG'", "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'staging'", "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'HSE'\n\n", "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'staging_tip'"], "401f54a0943baf3abef13b3e": ["SELECT T1.transcript_date, T1.transcript_id\nFROM transcripts AS T1 \nJOIN transcript_contents AS T2 ON T1.transcript_id = T2.transcript_id \nGROUP BY T1.transcript_id \nORDER BY COUNT(T2.student_course_id) \nLIMIT 1", "SELECT transcript_date, transcript_id\nFROM transcripts\nWHERE transcript_id = (\n    SELECT transcript_id\n    FROM transcript_contents\n    GROUP BY transcript_id\n    ORDER BY COUNT(*) ASC\n    LIMIT 1\n)", "SELECT T2.transcript_id, T2.transcript_date\nFROM transcript_contents AS T1\nJOIN transcripts AS T2 ON T1.transcript_id = T2.transcript_id\nGROUP BY T1.transcript_id\nORDER BY COUNT(*) ASC\nLIMIT 1", "SELECT T1.transcript_date ,  T1.transcript_id FROM transcripts AS T1 JOIN transcript_contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1\n\n", "SELECT transcript_id, transcript_date FROM transcripts ORDER BY (SELECT count(*) FROM transcript_contents WHERE transcript_contents.transcript_id = transcripts.transcript_id) ASC LIMIT 1\n\n"], "2f9f23473afbbd8b190d53d9": ["This question cannot be answered with the provided tables.", "This question cannot be answered directly with the given tables. Additional information on the effectiveness of online courses would be needed in order to query the database.", "This question cannot be answered with the given tables.", "This question cannot be answered directly with the provided tables.", "This question cannot be answered with the given tables."], "e943a938629d250af96a37cd": ["This question cannot be answered with the given tables, as there is no table related to universities or Abigail Johnson.", "This question cannot be answered with the provided tables and columns.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the provided tables as there is no information about a university or Abigail Johnson in the tables."], "ecd74d9826a9c48e7515ad68": ["SELECT district, count(*) \nFROM city \nWHERE population > (SELECT AVG(population) FROM city) \nGROUP BY district", "SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District", "SELECT district, COUNT(*) FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district", "SELECT district, COUNT(ID) \nFROM city \nWHERE population > (SELECT AVG(population) FROM city) \nGROUP BY district", "SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District"], "3154f8de13a5188c76fc9a30": ["SELECT Continent FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY Continent ORDER BY count(DISTINCT Language) DESC LIMIT 1\n\n", "SELECT continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY continent ORDER BY COUNT(DISTINCT language) DESC LIMIT 1\n\n", "SELECT continent \nFROM country \nWHERE code IN (\n\tSELECT countrycode\n\tFROM countrylanguage\n\tGROUP BY countrycode\n\tHAVING COUNT(*) > 1\n)\nGROUP BY continent\nORDER BY COUNT(DISTINCT code) DESC\nLIMIT 1", "SELECT continent, COUNT(DISTINCT language) AS num_languages FROM countrylanguage AS cl JOIN country AS c ON cl.CountryCode = c.Code GROUP BY continent ORDER BY num_languages DESC LIMIT 1\n\n", "SELECT Continent FROM countrylanguage GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1\n\n"], "b54378187cc1740fcf883c07": ["SELECT count(*) FROM Highschooler WHERE grade IN (9,10)", "SELECT COUNT(*) FROM Highschooler WHERE grade IN (9,10)", "SELECT count(*) FROM Highschooler WHERE grade IN (9,10)", "SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10\n\n", "SELECT count(*) FROM Highschooler WHERE grade IN (9,10)"], "7986e71ce6bf1b685233572c": ["SELECT charge_type FROM charges WHERE charge_amount  >  0", "SELECT charge_type FROM charges WHERE charge_amount  >  0", "SELECT charge_type FROM charges WHERE charge_type = \"abandonment\"", "SELECT charge_type FROM charges WHERE charge_type = 'Abandonment'", "SELECT charge_type FROM charges WHERE charge_amount > 0"], "f25dd602ded93d60ef38f7c3": ["This question does not have a direct translation to SQL as it is a subjective question and does not involve querying data from the tables provided.", "This question cannot be answered with the given tables as there is no information provided on what keeps poker players calm.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables as there is no information related to what keeps poker players calm in the provided schema."], "f7aa5ddcbf636f5ace09d297": ["SELECT T1.other_details FROM degree_programs AS T1 JOIN other_details AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.other_details = \"tuition comparison with national averages\"", "SELECT T1.degree_summary_name, AVG(T2.other_details) as National_Average_Tuition, T1.other_details as Degree_Program_Tuition \nFROM Degree_Programs AS T1 \nJOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id \nGROUP BY T1.degree_summary_name, T1.other_details", "SELECT T1.degree_summary_name, T1.degree_summary_description, T1.other_details FROM degree_programs AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = \"Tuition Comparison with National Averages\"", "SELECT T1.course_name, T1.other_details, T2.other_details AS national_average FROM courses AS T1 JOIN (SELECT AVG(tuition) AS national_average FROM national_tuition_data) AS T2 ON T1.tuition > T2.national_average", "SELECT T1.course_name, AVG(T2.other_details) as national_avg_tuition, AVG(T3.other_details) as school_tuition\nFROM Courses as T1\nJOIN (SELECT AVG(other_details) as other_details FROM Courses) as T2\nJOIN Student_Enrolment_Courses as T3 ON T1.course_id = T3.course_id\nGROUP BY T1.course_name"], "ec50fba352f5de192aebe469": ["SELECT T2.Package_Option, T2.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'Yes'", "SELECT T2.Package_Option, T2.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'Yes'", "SELECT T2.Package_Option, T2.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = true\n\n", "SELECT T2.Package_Option, T2.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'Yes'", "SELECT T2.Package_Option, T2.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'Yes'"], "8ce0633fb136e85570e6f333": ["SELECT count(*) FROM owners WHERE gender = 'male'", "SELECT count(*) FROM Owners WHERE gender = 'male'", "SELECT count(*) FROM owners WHERE gender = 'male'", "SELECT count(*) FROM Owners WHERE gender = 'male'", "SELECT count(*) FROM owners WHERE gender = 'male'"], "e6abc2df853a573627e1e428": ["SELECT T2.Content FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = \"Friendly Skies\" \n\n", "SELECT Content FROM TV_Channel WHERE id = (SELECT Channel FROM Cartoon WHERE Title = \"Friendly Skies\") \n\n", "SELECT Content FROM TV_Channel WHERE id = (SELECT Channel FROM Cartoon WHERE Title = \"Friendly Skies\") \n\n", "SELECT T2.Content FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = \"Friendly Skies\" \n\n", "SELECT C.Content FROM TV_Channel AS C JOIN Cartoon AS T ON C.id = T.Channel WHERE T.Title = \"Friendly Skies\" \n\n"], "9d44a5144365340bb3a641c2": ["SELECT T1.course_name \nFROM courses AS T1 \nJOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id \nJOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN degree_programs AS T4 ON T3.degree_program_id = T4.degree_program_id \nJOIN departments AS T5 ON T4.department_id = T5.department_id \nWHERE T5.department_name = 'Internships'", "SELECT T2.course_name FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN courses AS T3 ON T2.course_id = T3.course_id WHERE T3.course_name LIKE '%Internship%'", "SELECT T2.course_name FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN courses AS T3 ON T2.course_id = T3.course_id WHERE T3.course_name = \"Internship\"", "SELECT T2.course_name \nFROM student_enrolment AS T1 \nJOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id \nJOIN courses AS T3 ON T2.course_id = T3.course_id \nWHERE T3.course_name LIKE '%internship%'", "SELECT T2.course_name FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN courses AS T3 ON T2.course_id = T3.course_id WHERE T3.course_name LIKE '%Internship%'"], "1a0e4d4d8c01be2cf7ed815a": ["This question cannot be answered with the given tables.", "This question cannot be translated into SQL as it involves converting text data into audio format, which is not a functionality of SQL.", "This question cannot be answered directly through SQL as it involves converting text data into audio format, which is not a standard SQL operation.", "This question cannot be answered directly using SQL as it involves converting text data into an audio format, which is not a standard feature of SQL. The conversion of text to audio would typically be done using a different programming language or tool outside of a database system.", "SELECT CONCAT(people.Name, ' - ', people.Nationality) AS audio_format \nFROM poker_player \nJOIN people ON poker_player.People_ID = people.People_ID \nORDER BY poker_player.Money_Rank \nLIMIT 10"], "21190a2dda8cb738910dc833": ["SELECT contestant_name ,  count(*) FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number", "SELECT contestant_name ,  count(*) FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number GROUP BY contestant_name", "SELECT contestant_name, COUNT(*) AS votes_received FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number GROUP BY contestant_name", "SELECT contestant_name, count(*) as votes_received FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number GROUP BY contestant_name", "SELECT contestant_name, count(*) FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number GROUP BY contestant_name"], "5e3c2a09cc49c33d659af7dd": ["SELECT course_name FROM courses WHERE course_description LIKE '%study abroad%'", "SELECT T1.course_name, T1.course_description\nFROM Courses AS T1\nJOIN Sections AS T2 ON T1.course_id = T2.course_id\nWHERE T2.section_name = 'Study Abroad'", "SELECT T1.degree_summary_name FROM degree_programs AS T1 WHERE T1.other_details = 'Study Abroad Option'", "SELECT T2.course_name FROM degree_programs AS T1 JOIN courses AS T2 ON T1.degree_summary_description = \"study abroad\" JOIN student_enrolment_courses AS T3 ON T2.course_id = T3.course_id JOIN student_enrolment AS T4 ON T3.student_enrolment_id = T4.student_enrolment_id", "SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id JOIN student_enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id WHERE T3.other_details LIKE '%study abroad%'"], "b6d1b1a35fd61d831dfe5bb2": ["SELECT Song_ID FROM song WHERE Title = 'Mysterious Girl'\n\n", "SELECT Song_ID FROM song WHERE Title = \"Mysterious Girl\" \n\n", "SELECT Song_ID FROM song WHERE Title = 'Mysterious Girl'\n\n", "SELECT Song_ID FROM song WHERE Title = 'Mysterious Girl'\n\n", "SELECT Song_ID FROM song WHERE Title = 'Mysterious Girl'\n\n"], "31a06cc66f2fd33446588aa4": ["SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(friend_id) DESC LIMIT 1\n\n", "SELECT T1.ID FROM Highschooler AS T1 JOIN (SELECT student_id, count(*) AS friend_count FROM Friend GROUP BY student_id ORDER BY friend_count DESC LIMIT 1) AS T2 ON T1.ID = T2.student_id\n\n", "SELECT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)", "SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) DESC LIMIT 1\n\n"], "9cdc61a897995e78eee25846": ["This question cannot be answered directly with the given tables.", "This question cannot be answered with the provided tables.", "This question cannot be answered directly with the given tables. It requires a more complex analysis of language data and its impact on national identity, which is not covered by the tables provided.", "This question cannot be directly answered using the provided tables. It requires a more complex analysis of language diversity and national identity, which is beyond the scope of the data available in the tables.", "This question cannot be answered directly with the given tables. It requires more specific data related to language diversity and national identity."], "f45da0d551b88bd727b765fd": ["SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)"], "e9bd9b67f51d8724732d4cfe": ["SELECT avg(cost_of_treatment) FROM treatments", "SELECT avg(cost_of_treatment) FROM treatments", "SELECT avg(cost_of_treatment) FROM treatments", "SELECT avg(cost_of_treatment) FROM treatments", "SELECT avg(cost_of_treatment) FROM Treatments"], "abe11365ba3d1b186eb583c3": ["SELECT T1.first_name ,  T1.last_name FROM professionals AS T1 WHERE professional_id = (SELECT professional_id FROM treatments WHERE treatment_id = (SELECT treatment_id FROM charges WHERE charge_id = (SELECT charge_id FROM treatments WHERE dog_id = (SELECT dog_id FROM dogs WHERE name = \"Tre Hamill\"))))", "SELECT T1.company_id FROM professionals AS T1 WHERE T1.first_name = \"Tre\" AND T1.last_name = \"Hamill\"", "SELECT T1.first_name, T1.last_name FROM professionals AS T1 WHERE T1.first_name = 'Tre' AND T1.last_name = 'Hamill'", "SELECT company_name FROM companies WHERE record_company_id = (SELECT record_company_id FROM artists WHERE artist_name = \"Tre Hamill\")", "SELECT professional_id FROM Professionals WHERE first_name = 'Tre' AND last_name = 'Hamill'"], "51afca755e1952faaddb1a78": ["SELECT section_name, section_description FROM Sections", "SELECT section_name, section_description FROM Sections", "SELECT section_name, section_description FROM Sections", "SELECT section_name, section_description FROM sections", "SELECT section_name, section_description FROM sections"], "143a9e34f5255bf960fa6647": ["This question does not have a direct answer based on the tables provided.", "This question is not applicable to the provided tables as they do not contain any information related to speed or knots.", "This question does not seem relevant to the provided tables.", "This question cannot be answered with the provided tables as there is no speed data available for cartoons.", "SELECT avg(speed_knots) FROM cartoons"], "2c688c844924064a896572cc": ["SELECT DISTINCT city.name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'", "SELECT DISTINCT city.Name \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'", "SELECT DISTINCT c.Name FROM city AS c \nJOIN country AS co ON c.CountryCode = co.Code \nJOIN countrylanguage AS cl ON co.Code = cl.CountryCode \nWHERE co.Continent = 'Asia' AND cl.Language = 'Chinese' AND cl.IsOfficial = 'T'", "SELECT DISTINCT city.Name FROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE country.Continent = \"Asia\" AND countrylanguage.Language = \"Chinese\" AND countrylanguage.IsOfficial = \"T\"", "SELECT DISTINCT city.Name\nFROM city \nJOIN country ON city.CountryCode = country.Code\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'"], "b4b475385b33e4ce0d08cc29": ["SELECT c1.Name \nFROM country c1 \nWHERE c1.Continent = 'Africa' \nAND c1.Population < (SELECT MIN(c2.Population) \n                     FROM country c2 \n                     WHERE c2.Continent = 'Asia')", "SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')", "SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')", "SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')", "SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')"], "0b00d571ff0d1af413891c6e": ["SELECT T1.first_name, T1.last_name \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id \nJOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id \nJOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id \nGROUP BY T1.student_id \nORDER BY avg(grade) DESC \nLIMIT 1", "SELECT T9.first_name, T9.last_name\nFROM (\n    SELECT T6.student_id, SUM(T4.grade * T4.credit_hours) / SUM(T4.credit_hours) AS GPA\n    FROM Student_Enrolment AS T1\n    JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id\n    JOIN Courses AS T3 ON T2.course_id = T3.course_id\n    JOIN Transcript_Contents AS T4 ON T2.student_course_id = T4.student_course_id\n    JOIN Transcripts AS T5 ON T4.transcript_id = T5.transcript_id\n    GROUP BY T6.student_id\n) AS T7\nJOIN Students AS T9 ON T7.student_id = T9.student_id\nORDER BY T7.GPA DESC\nLIMIT 1", "SELECT T1.first_name, T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id JOIN transcripts AS T5 ON T4.transcript_id = T5.transcript_id GROUP BY T1.student_id ORDER BY SUM(grade_points) / SUM(credit_hours) DESC LIMIT 1\n\n", "SELECT T1.student_id FROM student_enrolment AS T1 JOIN student_enrolment_courses AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id JOIN transcript_contents AS T3 ON T2.student_course_id = T3.student_course_id GROUP BY T1.student_id ORDER BY sum(grade_points) / count(*) DESC LIMIT 1\n\n", "SELECT T1.first_name, T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN student_enrolment_courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN transcript_contents AS T4 ON T3.student_course_id = T4.student_course_id GROUP BY T1.student_id ORDER BY sum(T4.grade_points) DESC LIMIT 1"], "b631e181bf11772d9697d1db": ["SELECT degree_summary_description, other_details FROM degree_programs", "SELECT degree_summary_description, other_details FROM Degree_Programs", "SELECT degree_summary_description ,  other_details FROM degree_programs\n\n", "SELECT degree_summary_description, other_details FROM degree_programs", "SELECT degree_summary_description, other_details FROM Degree_Programs"], "ef979676b46052141b6e9bc8": ["SELECT property_name FROM properties WHERE (property_type_code = \"apt\" OR property_type_code = \"hse\") AND room_count > 1", "SELECT property_name FROM properties WHERE (property_type_code = 'hse' OR property_type_code = 'apt') AND room_count > 1\n\n", "SELECT property_name FROM properties WHERE (property_type_code = 'apt' OR property_type_code = 'hse') AND room_count > 1\n\n", "SELECT property_name FROM properties WHERE (property_type_code = 'apt' OR property_type_code = 'hse') AND room_count > 1\n\n", "SELECT property_name FROM properties WHERE (property_type_code = 'hse' OR property_type_code = 'apt') AND room_count > 1\n\n"], "73a33e84e28ac9cd9082b7c3": ["SELECT phone_number FROM votes GROUP BY phone_number HAVING count(*) > 1\n\n", "SELECT phone_number FROM VOTES GROUP BY phone_number HAVING count(*) > 1\n\n", "SELECT phone_number FROM VOTES GROUP BY phone_number HAVING count(*) > 1\n\n", "SELECT phone_number FROM votes GROUP BY phone_number HAVING count(*) > 1\n\n", "SELECT phone_number FROM VOTES GROUP BY phone_number HAVING COUNT(*) > 1\n\n"], "c5dbbd5540d8d8167838a288": ["SELECT property_id, property_name, MAX(date_sold - date_on_market) AS mortgage_years FROM Properties", "SELECT property_id FROM Properties ORDER BY date_sold - date_on_market DESC LIMIT 1\n\n", "SELECT property_name FROM Properties ORDER BY date_sold - date_on_market DESC LIMIT 1\n\n", "SELECT property_name FROM Properties ORDER BY date_sold - date_on_market DESC LIMIT 1\n\n", "SELECT property_id FROM Properties ORDER BY date_sold - date_on_market DESC LIMIT 1\n\n"], "d33a8da042c0d463e9f9efe8": ["SELECT property_id FROM Properties ORDER BY date_sold DESC LIMIT 1\n\n", "SELECT property_name FROM Properties ORDER BY property_id DESC LIMIT 1\n\n", "SELECT property_id FROM Properties ORDER BY property_id DESC LIMIT 1\n\n", "SELECT property_id FROM Properties ORDER BY date_sold DESC LIMIT 1", "SELECT property_name FROM Properties ORDER BY property_id DESC LIMIT 1\n\n"], "fe713a73eccd08d6735d65f4": ["SELECT name FROM people WHERE People_ID = (SELECT People_ID FROM poker_player WHERE Best_Finish = 1)\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Best_Finish = 1 ORDER BY T1.Final_Table_Made LIMIT 1\n\n", "SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player WHERE Best_Finish = 1)", "SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player WHERE Best_Finish = 1)\n\n", "SELECT name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE Best_Finish = 1"], "1f042fa23793bd2b166126ea": ["SELECT continent, SUM(population) AS total_population, AVG(lifeexpectancy) AS average_life_expectancy \nFROM country \nWHERE continent IN (SELECT continent \n                    FROM country \n                    GROUP BY continent \n                    HAVING AVG(lifeexpectancy) < 72)\nGROUP BY continent", "SELECT continent, sum(population) as total_population, avg(lifeexpectancy) as average_life_expectancy\nFROM country\nWHERE continent IN (\n    SELECT continent\n    FROM country\n    GROUP BY continent\n    HAVING avg(lifeexpectancy) < 72\n)\nGROUP BY continent", "SELECT Continent, SUM(Population) AS Total_Population, AVG(LifeExpectancy) AS Average_Life_Expectancy\nFROM country\nWHERE Continent IN (SELECT Continent FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72)\nGROUP BY Continent", "SELECT continent, SUM(population), AVG(lifeexpectancy) \nFROM country \nWHERE continent IN (SELECT continent \n                    FROM country \n                    GROUP BY continent \n                    HAVING AVG(lifeexpectancy) < 72) \nGROUP BY continent", "SELECT c.Continent, SUM(c.Population) AS Total_Population, AVG(c.LifeExpectancy) AS Average_Life_Expectancy\nFROM country AS c\nGROUP BY c.Continent\nHAVING AVG(c.LifeExpectancy) < 72"], "8c5e414add4c80331398b999": ["SELECT DISTINCT Directed_by, Written_by FROM Cartoon\n\n", "SELECT Directed_by, Written_by FROM Cartoon", "SELECT Directed_by, Written_by FROM Cartoon\n\n", "SELECT Directed_by, Written_by FROM Cartoon", "SELECT Directed_by, Written_by FROM Cartoon"], "c7ac9c91385badd16b4a429e": ["SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n", "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n", "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n", "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3\n\n", "SELECT Title, Rating FROM Cartoon ORDER BY Rating DESC LIMIT 3\n\n"], "26d55c9def3779befc993ab0": ["SELECT Title FROM Cartoon WHERE id IN (SELECT id FROM TV_series WHERE Viewers_m > 3)", "SELECT Title FROM Cartoon WHERE id IN (SELECT id FROM TV_series WHERE Viewers_m > 3)", "SELECT Title FROM Cartoon WHERE id IN (SELECT id FROM TV_series WHERE Viewers_m > 3)", "SELECT Title FROM Cartoon WHERE id IN (SELECT id FROM TV_series WHERE Viewers_m > 3)\n\n", "SELECT Title FROM Cartoon WHERE id IN (SELECT id FROM TV_series WHERE Viewers_m > 3)"], "3996762c8fd30c8f2294e2fb": ["SELECT count(DISTINCT Nationality) FROM conductor\n\n", "SELECT count(DISTINCT Nationality) FROM conductor\n\n", "SELECT COUNT(DISTINCT Nationality) FROM conductor\n\n", "SELECT count(DISTINCT Nationality) FROM conductor\n\n", "SELECT count(DISTINCT Nationality) FROM conductor\n\n"], "a6d3542a6d4001df2b34d472": ["SELECT name, grade FROM Highschooler", "SELECT grade FROM Highschooler", "SELECT name, grade FROM Highschooler", "SELECT name, grade FROM Highschooler", "SELECT grade FROM Highschooler"], "208e0245fc9effd7c17cb542": ["This question cannot be directly answered with the given tables. Additional tables or data related to psychological effects of abandonment on dogs would be needed to provide a meaningful answer.", "This question cannot be answered with the given tables.", "This question cannot be answered directly from the provided tables. Additional tables containing information on psychological effects of abandonment on dogs would be needed to answer this question.", "This question cannot be answered directly with the given tables.", "This question cannot be answered directly with the given tables. It would require additional data on the psychological effects of abandonment on dogs to be able to retrieve such information from the database."], "35a64873cc270e507d0bf125": ["SELECT T2.series_name ,  T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T1.Directed_by  =  'Ben Jones' OR T1.Directed_by  =  'Michael Chang'", "SELECT T2.series_name ,  T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T1.Directed_by  =  'Ben Jones' OR T1.Directed_by  =  'Michael Chang'", "SELECT T2.series_name, T2.Country \nFROM Cartoon AS T1 \nJOIN TV_Channel AS T2 ON T1.Channel = T2.id \nWHERE T1.Directed_by = 'Ben Jones' OR T1.Directed_by = 'Michael Chang'", "SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = 'Ben Jones' OR T2.Directed_by = 'Michael Chang'", "SELECT T2.series_name ,  T2.Country \nFROM Cartoon AS T1 \nJOIN TV_Channel AS T2 ON T1.Channel  =  T2.id \nWHERE T1.Directed_by  =  'Ben Jones' OR T1.Directed_by  =  'Michael Chang'"], "55ea03584830d19094816bfc": ["SELECT grade FROM Highschooler WHERE name = 'Jessica'", "SELECT count(*) FROM Highschooler WHERE name = 'Jessica'", "SELECT count(*) FROM likes WHERE student_id = (SELECT ID FROM highschooler WHERE name = 'Jessica')", "SELECT count(*) FROM Highschooler WHERE name = 'Jessica'", "SELECT grade FROM Highschooler WHERE name = 'Jessica'"], "07a3252c60b07d450d8707d2": ["SELECT C.contestant_name, A.state \nFROM CONTESTANTS C \nJOIN VOTES V ON C.contestant_number = V.contestant_number \nJOIN AREA_CODE_STATE A ON V.state = A.state", "SELECT T2.contestant_name, T1.state \nFROM VOTES AS T1 \nJOIN CONTESTANTS AS T2 \nON T1.contestant_number = T2.contestant_number \nGROUP BY T2.contestant_name, T1.state", "SELECT T2.contestant_name, T1.state \nFROM VOTES AS T1 \nJOIN CONTESTANTS AS T2 \nON T1.contestant_number = T2.contestant_number \nGROUP BY T2.contestant_name, T1.state", "SELECT T2.contestant_name, T1.state \nFROM VOTES AS T1 \nJOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number \nGROUP BY T2.contestant_name, T1.state", "SELECT T2.contestant_name, T1.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number"], "69549bedab98db80f1f73a5d": ["SELECT avg(Content) FROM TV_Channel", "SELECT avg(Pixel_aspect_ratio_PAR) FROM TV_Channel", "SELECT avg(Content) FROM TV_Channel", "SELECT avg(Content) FROM TV_Channel", "SELECT avg(Content) FROM TV_Channel"], "bbdc968f7b67235b56493e44": ["SELECT max(created) FROM votes WHERE state = 'CA'", "SELECT max(created) FROM VOTES WHERE state = 'CA' \n\n", "SELECT MAX(created) FROM votes WHERE state = 'CA' \n\n", "SELECT MAX(created) FROM VOTES WHERE state = 'CA'", "SELECT max(created) FROM VOTES WHERE state = 'CA'"], "82df3dddf11c77b37c7a86e0": ["SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.course_name \nFROM student_enrolment_courses AS T1 \nJOIN courses AS T2 ON T1.course_id = T2.course_id \nGROUP BY T1.course_id \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.course_name FROM Student_Enrolment_Courses AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1\n\n"], "149241ad21adad0277640f42": ["SELECT official_ratings_(millions), weekly_rank FROM performance GROUP BY official_ratings_(millions), weekly_rank\n\n", "SELECT official_ratings_(millions), weekly_rank FROM performance GROUP BY official_ratings_(millions), weekly_rank\n\n", "SELECT Official_ratings_(millions), Weekly_rank FROM performance GROUP BY Official_ratings_(millions), Weekly_rank\n\n", "SELECT Official_ratings_(millions), Weekly_rank FROM performance GROUP BY Official_ratings_(millions), Weekly_rank\n\n", "SELECT Official_ratings_(millions), Weekly_rank FROM performance GROUP BY Official_ratings_(millions), Weekly_rank\n\n"], "b87fe84698f458ceda41af48": ["SELECT gender FROM people WHERE name = 'Roman Bragin'", "SELECT gender FROM people WHERE Name = 'Roman Bragin' \n\n", "SELECT gender FROM people WHERE name = 'Roman Bragin'", "SELECT gender FROM people WHERE Name = 'Roman Bragin'", "SELECT gender FROM people WHERE name = 'Roman Bragin' \n\n"], "c5926023533caccf207e1a6a": ["This question cannot be answered with the given tables as there is no phone number column provided in any of the tables.", "SELECT T1.ID FROM Highschooler AS T1 JOIN (SELECT student_id, count(*) AS total_friends FROM Friend GROUP BY student_id ORDER BY total_friends DESC LIMIT 1) AS T2 ON T1.ID = T2.student_id", "SELECT T2.phone_number FROM Highschooler AS T1 JOIN Phone_numbers AS T2 ON T1.ID = T2.ID WHERE T1.ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)", "This question cannot be answered with the given tables as there is no table containing phone numbers.", "This question cannot be answered with the given tables as there is no phone number column provided."], "8256633263b066a482470e20": ["SELECT Title FROM Cartoon ORDER BY Title ASC\n\n", "SELECT Title FROM Cartoon ORDER BY Title ASC\n\n", "SELECT Title FROM Cartoon ORDER BY Title ASC\n\n", "SELECT Title FROM Cartoon ORDER BY Title ASC\n\n", "SELECT Title FROM Cartoon ORDER BY Title ASC\n\n"], "cdd33ed5d87bf95ef91b84cc": ["SELECT avg(agreed_selling_price) FROM properties WHERE property_type_code = 'apt' AND agreed_selling_price > 300000", "SELECT avg(agreed_selling_price) FROM properties WHERE property_type_code = \"APT\" AND agreed_selling_price > 300000", "SELECT avg(agreed_selling_price) FROM properties WHERE property_type_code = 'APT' AND agreed_selling_price > 300000", "SELECT avg(sea_level) FROM properties WHERE property_type_code = \"APT\" AND agreed_selling_price > 300000", "SELECT avg(agreed_selling_price) FROM properties WHERE property_type_code = 'APT' AND agreed_selling_price > 300000"], "23fd61436097cdc61e0140eb": ["SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'", "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'", "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'", "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'", "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%'"], "4bbed4e5b2702912e07de50a": ["SELECT owner_id, first_name, last_name \nFROM Owners \nWHERE owner_id IN (SELECT owner_id \n                   FROM Dogs \n                   GROUP BY owner_id \n                   ORDER BY COUNT(*) DESC \n                   LIMIT 1)", "SELECT owner_id, first_name, last_name \nFROM owners \nWHERE owner_id IN (\n    SELECT owner_id \n    FROM dogs \n    GROUP BY owner_id \n    ORDER BY COUNT(*) DESC \n    LIMIT 1\n)", "SELECT T1.owner_id, T2.first_name, T2.last_name \nFROM dogs AS T1 \nJOIN owners AS T2 ON T1.owner_id = T2.owner_id \nGROUP BY T1.owner_id \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT owner_id, first_name, last_name \nFROM Owners \nWHERE owner_id IN (SELECT owner_id \n                   FROM Dogs \n                   GROUP BY owner_id \n                   ORDER BY COUNT(*) DESC \n                   LIMIT 1)", "SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1) \n\n"], "89e2a2170764a7c0faae2875": ["SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%man%'\n\n", "SELECT contestant_name, performance_score FROM CONTESTANTS WHERE contestant_name LIKE '%man%'\n\n", "SELECT T2.performance_score FROM CONTESTANTS AS T1 JOIN PERFORMANCE_SCORES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name LIKE '%man%' \n\n", "SELECT T2.performance_score FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name LIKE '%man%'\n\n", "SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%man%'\n\n"], "4026cb060a4d58e3e9199645": ["SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\n", "SELECT language, count(*) FROM TV_Channel GROUP BY language\n\n", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\n", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\n", "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language\n\n"], "abb704df148a36f56b2629cb": ["SELECT DISTINCT Region FROM countrylanguage AS cl JOIN country AS c ON cl.CountryCode = c.Code WHERE Language = 'Dutch' OR Language = 'English'", "SELECT Region FROM countrylanguage AS CL JOIN country AS C ON CL.CountryCode = C.Code WHERE Language = 'Dutch' OR Language = 'English' GROUP BY Region", "SELECT DISTINCT region FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Dutch' OR language = 'English')", "SELECT Region FROM countrylanguage AS cl JOIN country AS c ON cl.CountryCode = c.Code WHERE Language IN ('Dutch', 'English')", "SELECT DISTINCT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('Dutch', 'English'))"], "1f3d1b37ee9890cb90bd87c3": ["SELECT Title FROM Cartoon ORDER BY Weekly_Rank DESC LIMIT 1\n\n", "SELECT Title FROM Cartoon ORDER BY Weekly_Rank DESC LIMIT 1\n\n", "SELECT Title FROM Cartoon ORDER BY Weekly_Rank DESC LIMIT 1\n\n", "SELECT Title FROM Cartoon ORDER BY Weekly_Rank DESC LIMIT 1\n\n", "SELECT Title FROM Cartoon WHERE id = (SELECT id FROM TV_series ORDER BY Weekly_Rank DESC LIMIT 1)\n\n"], "c4e3cf17b10ed478885c191f": ["SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Money_Rank) FROM poker_player"], "ee33608bb50ed75d9ea12fe3": ["SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by\n\n", "SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by\n\n", "SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by\n\n", "SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by\n\n", "SELECT Directed_by, COUNT(*) \nFROM Cartoon \nGROUP BY Directed_by\n\n"], "1a704c135de62407122f6440": ["SELECT T2.first_name, T5.name\nFROM owners AS T2 \nJOIN dogs AS T5 ON T2.owner_id = T5.owner_id \nWHERE T2.state = 'Virginia'", "SELECT O.first_name, D.name \nFROM Owners AS O \nJOIN Dogs AS D ON O.owner_id = D.owner_id \nWHERE O.state = 'Virginia'", "SELECT T1.first_name, T2.name \nFROM owners AS T1 \nJOIN dogs AS T2 ON T1.owner_id = T2.owner_id \nWHERE T1.state = 'Virginia'", "SELECT T2.first_name, T5.name \nFROM Owners AS T2 \nJOIN Dogs AS T5 ON T2.owner_id = T5.owner_id \nWHERE T2.state = 'Virginia'", "SELECT T1.first_name, T4.name\nFROM owners AS T1\nJOIN dogs AS T4 ON T1.owner_id = T4.owner_id\nWHERE T1.state = 'Virginia'"], "330d89d909a836c13938d55c": ["SELECT title FROM cartoon WHERE directed_by = \"Walt Disney\" OR directed_by = \"Hayao Miyazaki\" OR directed_by = \"Matt Groening\"", "SELECT Title FROM Cartoon WHERE Directed_by = \"Hanna-Barbera\" OR Written_by = \"Matt Groening\" OR Written_by = \"Seth MacFarlane\" OR Directed_by = \"Genndy Tartakovsky\" OR Directed_by = \"Craig McCracken\" OR Directed_by = \"Butch Hartman\" OR Written_by = \"Craig McCracken\" OR Written_by = \"Butch Hartman\"", "SELECT Title FROM Cartoon WHERE Directed_by = \"Walt Disney\" OR Directed_by = \"Hayao Miyazaki\" OR Directed_by = \"Matt Groening\" OR Directed_by = \"Seth MacFarlane\" OR Directed_by = \"Hanna-Barbera\" OR Directed_by = \"Bill Hanna\" OR Directed_by = \"Joe Barbera\" OR Directed_by = \"Chuck Jones\"", "SELECT Title FROM Cartoon WHERE Directed_by = \"Hanna-Barbera\" OR Directed_by = \"Matt Groening\" OR Directed_by = \"Seth MacFarlane\" OR Directed_by = \"Walt Disney\" OR Directed_by = \"Nick Park\"", "SELECT title FROM cartoon WHERE id IN (SELECT id FROM TV_series)"], "4cec33991addfa441db28fda": ["SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship\n\n"], "d0dd496b86f716d9cd9a4b3f": ["SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)"], "6269907f55e4c2251a79d939": ["SELECT first_name ,  middle_name ,  last_name FROM students ORDER BY date_first_registered ASC LIMIT 1\n\n", "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered LIMIT 1\n\n", "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1\n\n", "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered LIMIT 1\n\n", "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered LIMIT 1\n\n"], "be5d82ec4171ab6ad6ed9df0": ["SELECT D.name, T.date_of_treatment \nFROM Dogs AS D \nJOIN Breeds AS B ON D.breed_code = B.breed_code \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE B.breed_name = (\n    SELECT breed_name \n    FROM Breeds \n    WHERE breed_code = (\n        SELECT breed_code \n        FROM Dogs \n        GROUP BY breed_code \n        ORDER BY COUNT(*) \n        LIMIT 1\n    )\n)", "SELECT D.name, T.date_of_treatment \nFROM Dogs AS D \nJOIN Breeds AS B ON D.breed_code = B.breed_code \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE B.breed_name IN (\n    SELECT breed_name \n    FROM Breeds \n    GROUP BY breed_name \n    HAVING COUNT(*) = 1\n)", "SELECT D.name, T.date_of_treatment \nFROM Dogs AS D \nJOIN Breeds AS B ON D.breed_code = B.breed_code \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE B.breed_name = (SELECT breed_name FROM Breeds GROUP BY breed_name HAVING count(*) = 1)", "SELECT D.name, T.date_of_treatment\nFROM Dogs AS D\nJOIN Treatments AS T ON D.dog_id = T.dog_id\nJOIN Breeds AS B ON D.breed_code = B.breed_code\nWHERE B.breed_name = (\n    SELECT breed_name\n    FROM Breeds\n    WHERE breed_code = (\n        SELECT breed_code\n        FROM Dogs\n        GROUP BY breed_code\n        ORDER BY count(*) ASC\n        LIMIT 1\n    )\n)", "SELECT D.name, T.date_of_treatment \nFROM Dogs AS D \nJOIN Breeds AS B ON D.breed_code = B.breed_code \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE B.breed_name = (\n    SELECT breed_name \n    FROM Breeds \n    WHERE breed_code = (\n        SELECT breed_code \n        FROM Dogs \n        GROUP BY breed_code \n        ORDER BY count(*) ASC \n        LIMIT 1\n    )\n)"], "c05b980a4f52f27431c1270a": ["SELECT max(Viewers_m) FROM TV_series", "SELECT MAX(Viewers_m) FROM TV_series", "SELECT MAX(Episode) FROM TV_series WHERE Viewers_m = (SELECT MAX(Viewers_m) FROM TV_series)", "SELECT max(Episode) FROM TV_series WHERE Viewers_m = (SELECT max(Viewers_m) FROM TV_series)", "SELECT max(Episode) FROM TV_series WHERE Viewers_m = (SELECT max(Viewers_m) FROM TV_series)"], "7b7bc121e0697db6182607e2": ["SELECT name, GovernmentForm FROM country WHERE Continent = 'North America'", "SELECT Name, GovernmentForm FROM country WHERE Continent = \"North America\"", "SELECT Name, GovernmentForm, HeadOfState FROM country WHERE Continent = 'North America'", "SELECT homepage FROM country WHERE Continent = 'North America'", "SELECT Name, GovernmentForm FROM country WHERE Continent = 'North America'"], "a770498f7caf8fe2488af65e": ["SELECT department_name, department_id \nFROM Departments \nWHERE department_id IN (\n    SELECT department_id \n    FROM Degree_Programs \n    GROUP BY department_id \n    ORDER BY COUNT(*) DESC \n    LIMIT 1\n)", "SELECT T2.department_name, T2.department_id \nFROM Degree_Programs AS T1 \nJOIN Departments AS T2 ON T1.department_id = T2.department_id \nGROUP BY T2.department_id \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT T1.department_name, T1.department_id FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(*) DESC LIMIT 1", "SELECT department_name, department_id FROM Departments WHERE department_id = (SELECT department_id FROM Degree_Programs GROUP BY department_id ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT T2.department_name, T2.department_id \nFROM Degree_Programs AS T1 \nJOIN Departments AS T2 ON T1.department_id = T2.department_id \nGROUP BY T2.department_id \nORDER BY COUNT(*) DESC \nLIMIT 1"], "7eaa6b60c5f4b0b287c4ec66": ["SELECT T2.name \nFROM Friend AS T1 \nJOIN Highschooler AS T2 ON T1.friend_id = T2.ID \nWHERE T1.student_id IN (\n    SELECT friend_id \n    FROM Friend \n    WHERE student_id = [current_student_id]\n) AND T1.friend_id NOT IN (\n    SELECT friend_id \n    FROM Friend \n    WHERE student_id = [current_student_id]\n) AND T2.ID != [current_student_id]", "SELECT T2.name \nFROM Friend AS T1 \nJOIN Highschooler AS T2 ON T1.friend_id = T2.ID \nWHERE T1.student_id IN (\n    SELECT friend_id \n    FROM Friend \n    WHERE student_id = [student_id]\n) AND T1.friend_id NOT IN (\n    SELECT friend_id \n    FROM Friend \n    WHERE student_id = [student_id]\n)", "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T1.student_id IN (SELECT friend_id FROM Friend WHERE student_id = {student_id}) AND T2.ID NOT IN (SELECT friend_id FROM Friend WHERE student_id = {student_id})", "SELECT DISTINCT T1.friend_id \nFROM friend AS T1 \nWHERE T1.student_id IN (\n    SELECT friend_id \n    FROM friend \n    WHERE student_id = [student_id]\n) AND T1.friend_id NOT IN (\n    SELECT friend_id \n    FROM friend \n    WHERE student_id = [student_id]\n)", "SELECT DISTINCT T2.name \nFROM Friend AS T1 \nJOIN Highschooler AS T2 ON T1.friend_id = T2.ID \nWHERE T1.student_id IN \n    (SELECT friend_id \n     FROM Friend \n     WHERE student_id = <student_id>) \nAND T1.friend_id NOT IN \n    (SELECT friend_id \n     FROM Friend \n     WHERE student_id = <student_id>) \nAND T1.friend_id != <student_id>"], "873d14a1274725707526586f": ["SELECT name, governmentform, headofstate FROM country WHERE continent = 'North America'", "SELECT * FROM country WHERE Continent = 'North America' AND IndepYear IS NOT NULL ORDER BY IndepYear DESC\n\n", "SELECT * FROM country WHERE Region = 'North America' AND IndepYear > 2000", "SELECT * FROM country WHERE Continent = 'North America' ORDER BY IndepYear DESC LIMIT 5\n\n", "SELECT * FROM country WHERE Continent = 'North America' ORDER BY IndepYear DESC LIMIT 5\n\n"], "7e12eed69881ce16ef59aa58": ["SELECT CountryCode FROM countrylanguage WHERE Language = \"Spanish\" ORDER BY Percentage DESC LIMIT 1", "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1", "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1", "SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1", "SELECT CountryCode FROM countrylanguage WHERE Language = \"Spanish\" ORDER BY Percentage DESC LIMIT 1"], "6b8fcf491611484ccc2e7f88": ["SELECT T1.date_on_market FROM properties AS T1 JOIN other_property_features AS T2 ON T1.property_id = T2.property_id JOIN other_available_features AS T3 ON T2.feature_id = T3.feature_id WHERE T3.feature_name = \"BurglarAlarm\"", "SELECT P.date_on_market FROM Properties AS P JOIN Other_Property_Features AS OPF ON P.property_id = OPF.property_id JOIN Other_Available_Features AS OAF ON OPF.feature_id = OAF.feature_id WHERE OAF.feature_name = \"BurglarAlarm\"", "SELECT date_on_market FROM properties WHERE property_id IN (SELECT property_id FROM other_property_features WHERE feature_id IN (SELECT feature_id FROM other_available_features WHERE feature_name = 'BurglarAlarm'))", "SELECT date_on_market FROM Properties WHERE property_id IN (SELECT property_id FROM Other_Property_Features WHERE feature_id IN (SELECT feature_id FROM Other_Available_Features WHERE feature_name = 'BurglarAlarm'))", "SELECT date_on_market FROM Properties WHERE property_id IN (SELECT property_id FROM Other_Property_Features WHERE feature_id = (SELECT feature_id FROM Other_Available_Features WHERE feature_name = 'BurglarAlarm'))"], "d7247d9a060f5e8604097717": ["SELECT DISTINCT region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch') \n\n", "SELECT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch')", "SELECT DISTINCT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch'))", "SELECT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch')", "SELECT DISTINCT region FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' OR language = 'Dutch')"], "66b0f4dc3a6215a38bfcc187": ["SELECT ABS(T1.grade - T2.grade) AS distance \nFROM Highschooler AS T1 \nJOIN Highschooler AS T2 \nON T1.name = 'Jordan' AND T2.name = 'Kyle'", "SELECT abs(T1.grade - T2.grade) AS distance FROM Highschooler AS T1 JOIN Highschooler AS T2 ON T1.name = 'Jordan' AND T2.name = 'Kyle'", "SELECT abs(T1.grade - T2.grade) AS distance FROM Highschooler AS T1 JOIN Highschooler AS T2 ON T1.name = 'Jordan' AND T2.name = 'Kyle'", "SELECT abs(T1.grade - T2.grade) AS distance FROM Highschooler AS T1 JOIN Highschooler AS T2 ON T1.name = \"Jordan\" AND T2.name = \"Kyle\"", "SELECT abs(T1.grade - T2.grade) FROM highschooler AS T1 JOIN highschooler AS T2 ON T1.name = \"Jordan\" AND T2.name = \"Kyle\""], "b026671e4ea10cd722f7b2af": ["SELECT count(*) FROM singer\n\n", "SELECT count(*) FROM singer", "SELECT count(*) FROM singer\n\n", "SELECT count(*) FROM singer\n\n", "SELECT count(*) FROM singer\n\n"], "3ea15e82b1ee568a1c3496c0": ["SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Jimi Hendrix')", "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Jimi Hendrix')", "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Jimi Hendrix')", "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = \"Jimi Hendrix\")", "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Jimi Hendrix')"], "70dea3e544f55cce2db9fa65": ["SELECT Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by, Cartoon.Original_air_date, Cartoon.Production_code\nFROM Cartoon \nJOIN TV_Channel ON Cartoon.Channel = TV_Channel.id\nWHERE TV_Channel.Hight_definition_TV = 'Yes'", "SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.Hight_definition_TV = 'Yes'", "SELECT Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by, Cartoon.Original_air_date\nFROM Cartoon \nJOIN TV_Channel ON Cartoon.Channel = TV_Channel.id\nWHERE TV_Channel.Hight_definition_TV = 'Yes'", "SELECT Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by \nFROM Cartoon \nJOIN TV_Channel ON Cartoon.Channel = TV_Channel.id\nWHERE TV_Channel.Hight_definition_TV = 'Yes'", "SELECT c.Title, c.Directed_by, c.Written_by, c.Original_air_date, c.Production_code, c.Channel\nFROM Cartoon c\nJOIN TV_Channel ch ON c.Channel = ch.id\nWHERE ch.Hight_definition_TV = 'Yes'"], "4dc9c28b143703e36e8cbd3c": ["SELECT Earnings FROM poker_player WHERE Name = 'Teodor Salparov'", "SELECT Earnings FROM poker_player WHERE Name = \"Teodor Salparov\"", "SELECT Earnings FROM poker_player WHERE Name = 'Teodor Salparov'", "SELECT Earnings FROM poker_player WHERE Name = 'Teodor Salparov'", "SELECT Earnings FROM poker_player WHERE Name = 'Teodor Salparov'"], "94a5f5bfd3dd15f1535fb3ca": ["SELECT Name FROM conductor WHERE Nationality <> 'USA'\n\n", "SELECT Name FROM conductor WHERE Nationality != \"USA\" \n\n", "SELECT Name FROM conductor WHERE Nationality <> 'USA'\n\n", "SELECT Name FROM conductor WHERE Nationality != 'USA'\n\n", "SELECT Name FROM conductor WHERE Nationality != \"USA\" \n\n"], "80fd69ab3290919efeb89636": ["SELECT best_finish FROM poker_player WHERE poker_player_id IN (SELECT poker_player_id FROM poker_player WHERE people_id IN (SELECT people_id FROM people WHERE name = 'Semen Poltakvskiy'))", "SELECT operating_system FROM people WHERE name = 'Semen Poltakvskiy'", "SELECT T1.OS FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Name = \"Semen Poltakvskiy\"", "SELECT operating_system FROM people WHERE name = 'Semen Poltakvskiy'", "SELECT operating_system FROM people WHERE name = \"Semen Poltakvskiy\""], "caa4ffca2fd0f3ad2253405e": ["SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')"], "9b9e2d635e92f91e244f228b": ["SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T' ORDER BY Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T' ORDER BY Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T' ORDER BY Percentage DESC LIMIT 1", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T'", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T' ORDER BY Percentage DESC LIMIT 1"], "0311067e8ffbdbf5961f370b": ["SELECT created ,  state ,  phone_number FROM votes AS T1 JOIN contestants AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'\n\n", "SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE contestant_name = 'Tabatha Gehling'\n\n", "SELECT created, state, phone_number FROM votes AS V JOIN contestants AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling'\n\n", "SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE contestant_name = 'Tabatha Gehling'\n\n", "SELECT created, state, phone_number FROM VOTES AS V JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling'\n\n"], "cb652f18cc83d8120169922a": ["SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 1)", "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 1)", "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1)", "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 1)", "SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 1)"], "124a7573bd7ba2b7d05fb1ca": ["This question cannot be answered with the given tables as there is no information about reviews or sentiment analysis in the provided tables.", "This question cannot be answered with the given tables as there is no information on reviews or sentiment analysis.", "This question cannot be answered with the provided tables as there is no information about reviews or sentiment analysis in the tables Singer and Song.", "This question cannot be answered with the provided tables.", "This question cannot be answered with the provided tables as there is no information about reviews or sentiment analysis in the tables Singer and Song."], "f2da7f63ab294c6f8d8ee88b": ["SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1\n\n", "SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1\n\n", "SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1\n\n", "SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1\n\n", "SELECT Name FROM country WHERE Continent = \"Asia\" ORDER BY LifeExpectancy ASC LIMIT 1\n\n"], "7b885bbe7bbb37b52a47dc3b": ["SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Addresses WHERE address_id = (SELECT current_address_id FROM Students WHERE student_id = (SELECT student_id FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = \"Computer Science\")))", "SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country \nFROM addresses \nJOIN departments ON addresses.address_id = departments.department_id \nWHERE department_name = 'Computer Science'", "SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM departments AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id WHERE department_name = \"Computer Science\"", "SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM departments AS T1 JOIN addresses AS T2 ON T1.department_id = T2.address_id WHERE department_name = \"Computer Science\"", "SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Departments AS T1 JOIN Addresses AS T2 ON T1.department_id = T2.address_id WHERE department_name = \"Computer Science\" \n\n"], "95f0a4e8d84081404c97c9a2": ["SELECT email_address FROM Highschooler JOIN (SELECT student_id, count(*) as num_likes FROM Likes GROUP BY student_id ORDER BY num_likes DESC LIMIT 1) as T1 ON Highschooler.ID = T1.student_id", "SELECT email_address FROM Highschooler WHERE ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT T2.email_address \nFROM Highschooler AS T1 \nJOIN People AS T2 ON T1.ID = T2.person_id \nJOIN Likes AS T3 ON T1.ID = T3.student_id \nGROUP BY T1.ID \nORDER BY count(*) DESC \nLIMIT 1", "SELECT T2.email_address FROM Highschooler AS T1 JOIN People AS T2 ON T1.ID = T2.person_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.email_address FROM highschooler AS T1 JOIN (SELECT liked_id, COUNT(*) AS num_likes FROM likes GROUP BY liked_id ORDER BY num_likes DESC LIMIT 1) AS T2 ON T1.ID = T2.liked_id"], "a7f3bda23c199c21e7265f1f": ["SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%' \n\n", "SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%' \n\n", "SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%' \n\n", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%' \n\n", "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%' \n\n"], "5af5af55d2805f28d699b595": ["SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING count(*) >= 2)", "SELECT T2.transcript_date, T1.transcript_id FROM transcript_contents AS T1 JOIN transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(*) >= 2", "SELECT T2.transcript_date, T1.transcript_id \nFROM Transcript_Contents AS T1 \nJOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id \nGROUP BY T1.transcript_id \nHAVING COUNT(*) >= 2", "SELECT transcript_id, transcript_date FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(course_id) >= 2)", "SELECT T2.transcript_id ,  T2.transcript_date FROM transcript_contents AS T1 JOIN transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2"], "77d7efdae628755d9503394c": ["This question cannot be answered with the provided tables, as there is no salary information in the tables.", "SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1\n\n", "This question cannot be answered with the given tables as there is no information about salary in any of the tables provided.", "There is no salary information in the provided tables.", "SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1\n\n"], "cd253bea0e1e593f3974eac1": ["SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelors'))", "SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelors'))", "SELECT first_name, middle_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE 'Bachelor%'))", "SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelors'))", "SELECT first_name, middle_name, last_name FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelors'))"], "3becf41b92c7829857fe8a44": ["SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix' AND IsOfficial = 'T')", "SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE HeadOfState = 'Beatrix' AND IsOfficial = 'T'", "SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix' AND IsOfficial = 'T')", "SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE HeadOfState = 'Beatrix') AND IsOfficial = 'T'", "SELECT Language FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix')"], "038891c0484a98a382c034c2": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n", "SELECT name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\n\n"], "fb7bd264a31f241ef79f61a8": ["SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%' \n\n", "SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%' \n\n", "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'", "SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%'", "SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%'"], "6522bd9bbcbf135865908151": ["SELECT Directed_by FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Country = 'Italy')", "SELECT T1.series_name ,  T1.Country FROM TV_Channel AS T1 WHERE T1.Country  =  \"Italy\"", "SELECT Directed_by FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Country = 'Italy')", "SELECT T1.series_name ,  T1.Directed_by FROM TV_Channel AS T1 WHERE T1.Country = \"Italy\"", "SELECT Directed_by FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE Country = 'Italy')"], "96ed8a0084228b4fced16de2": ["SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n", "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\n\n"], "e39ac9f2ca17a8319d3db573": ["SELECT max(Share) ,  min(Share) FROM performance WHERE Type <> \"Live final\"\n\n", "SELECT max(Share) ,  min(Share) FROM performance WHERE Type <> \"Live final\"\n\n", "SELECT max(Share) ,  min(Share) FROM performance WHERE Type <> 'Live final'\n\n", "SELECT max(Share) ,  min(Share) FROM performance WHERE Type != \"Live final\"\n\n", "SELECT max(Share) ,  min(Share) FROM performance WHERE Type != 'Live final'\n\n"], "a4036ea1419f81f626630ef9": ["SELECT T1.Nationality, AVG(T2.Official_ratings_(millions)) as average_ratings FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID GROUP BY T1.Nationality", "SELECT T1.Nationality, AVG(T2.Official_ratings_(millions)) as avg_sentiment FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID GROUP BY T1.Nationality", "SELECT T2.Nationality, AVG(T1.Official_ratings_(millions)) FROM performance AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Nationality\n\n", "SELECT T2.Nationality, avg(T3.Official_ratings_(millions)) as avg_ratings FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID GROUP BY T2.Nationality", "SELECT T2.Nationality, avg(T1.Official_ratings_(millions)) as avg_ratings FROM performance AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Nationality"], "d3fffe0110fecf6459ead8b9": ["SELECT O.state, O.city, D.breed_code, D.size_code\nFROM Owners O\nJOIN Dogs D ON O.owner_id = D.owner_id\nGROUP BY O.state, O.city, D.breed_code, D.size_code", "SELECT O.state, O.city, D.breed_code, D.size_code, COUNT(*) \nFROM Owners O \nJOIN Dogs D ON O.owner_id = D.owner_id \nGROUP BY O.state, O.city, D.breed_code, D.size_code", "SELECT state, city, breed_name, size_description FROM owners \nJOIN dogs ON owners.owner_id = dogs.owner_id\nJOIN breeds ON dogs.breed_code = breeds.breed_code\nJOIN sizes ON dogs.size_code = sizes.size_code\nGROUP BY state, city, breed_name, size_description", "SELECT T3.state, T3.city, T1.breed_code, T2.size_code\nFROM Dogs AS T1\nJOIN Sizes AS T2 ON T1.size_code = T2.size_code\nJOIN Owners AS T3 ON T1.owner_id = T3.owner_id\nGROUP BY T3.state, T3.city, T1.breed_code, T2.size_code", "SELECT state, city, breed_name, size_description, COUNT(*) \nFROM Owners \nJOIN Dogs ON Owners.owner_id = Dogs.owner_id \nJOIN Breeds ON Dogs.breed_code = Breeds.breed_code \nJOIN Sizes ON Dogs.size_code = Sizes.size_code \nGROUP BY state, city, breed_name, size_description"], "f6e50c7ccb712302b8268e48": ["SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'History')", "SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = \"History\")", "SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'History')", "SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'History')", "SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'History')"], "baa5f4b542be99bbbfad29af": ["SELECT other_details FROM departments WHERE department_name = \"Computer Science\"", "SELECT T1.email_address \nFROM departments AS T1 \nJOIN degree_programs AS T2 ON T1.department_id = T2.department_id \nWHERE T2.department_name = 'Computer Science'", "SELECT T1.email_address FROM departments AS T1 JOIN degree_programs AS T2 ON T1.department_id = T2.department_id WHERE T2.degree_summary_name = \"Computer Science\"", "SELECT other_details FROM Departments WHERE department_name = 'Computer Science'", "SELECT other_details FROM Departments WHERE department_name = \"Computer Science\""], "7d4d912276740a1d6b1bd258": ["SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "SELECT T2.Orchestra FROM orchestra AS T1 LEFT JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Performance_ID IS NULL\n\n", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance) \n\n"], "53245ec9d37005721c345f3f": ["SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'", "SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'", "SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'", "SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'", "SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'"], "3f9defd33457a296e39e7717": ["SELECT T1.Name FROM people AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Birth_Date = (SELECT MAX(Birth_Date) FROM people WHERE EXTRACT(YEAR FROM Birth_Date) = EXTRACT(YEAR FROM CURRENT_DATE))", "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.People_ID IN (SELECT People_ID FROM people WHERE Birth_Date = (SELECT MAX(Birth_Date) FROM people WHERE EXTRACT(YEAR FROM Birth_Date) = EXTRACT(YEAR FROM CURRENT_DATE)))", "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Birth_Date DESC LIMIT 1\n\n", "SELECT T1.name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.People_ID IN (SELECT People_ID FROM people WHERE Birth_Date = (SELECT max(Birth_Date) FROM people))", "SELECT T1.Name \nFROM people AS T1 \nWHERE T1.People_ID IN \n    (SELECT T2.People_ID \n    FROM people AS T2 \n    WHERE YEAR(T2.Birth_Date) = (SELECT MAX(YEAR(Birth_Date)) FROM people)\n    )"], "536285fe855334047ce3b2f7": ["SELECT count(DISTINCT Language) FROM countrylanguage\n\n", "SELECT count(DISTINCT Language) FROM countrylanguage\n\n", "SELECT count(DISTINCT Language) FROM countrylanguage\n\n", "SELECT count(DISTINCT Language) FROM countrylanguage", "SELECT count(DISTINCT Language) FROM countrylanguage\n\n"], "fdaf53a475336cfc1f44e0ff": ["SELECT T1.time_zone FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id ORDER BY T2.date_first_registered DESC LIMIT 1\n\n", "SELECT T1.timezone FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.current_address_id ORDER BY T2.date_first_registered DESC LIMIT 1\n\n", "SELECT T1.state_province_county FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.current_address_id ORDER BY T2.date_first_registered DESC LIMIT 1", "SELECT T1.time_zone FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.current_address_id ORDER BY T2.date_first_registered DESC LIMIT 1\n\n", "SELECT T1.time_zone FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.current_address_id ORDER BY date_first_registered DESC LIMIT 1\n\n"], "dfdf0cceb707a5014c0fb911": ["SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n", "SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n", "SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n", "SELECT count(*) FROM likes WHERE student_id = (SELECT ID FROM highschooler WHERE name = 'Kyle') \n\n", "SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n"], "84e1264925eb59ccf037fe36": ["SELECT Year_of_Founded, Major_Record_Format FROM orchestra GROUP BY Year_of_Founded, Major_Record_Format\n\n", "SELECT Year_of_Founded ,  Major_Record_Format FROM orchestra GROUP BY Year_of_Founded ,  Major_Record_Format\n\n", "SELECT Year_of_Founded, Major_Record_Format, COUNT(Orchestra_ID) FROM orchestra GROUP BY Year_of_Founded, Major_Record_Format\n\n", "SELECT Year_of_Founded, Major_Record_Format FROM orchestra GROUP BY Year_of_Founded, Major_Record_Format\n\n", "SELECT Year_of_Founded, Major_Record_Format FROM orchestra GROUP BY Year_of_Founded, Major_Record_Format\n\n"], "670bc22385613200ae8615ca": ["SELECT DISTINCT GovernmentForm FROM country WHERE Continent = 'Africa'", "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Region = 'Africa'", "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'"], "a67deade7caed10c43fa11fd": ["SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))", "SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))", "SELECT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments))", "SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))", "SELECT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT avg(cost_of_treatment) FROM treatments))"], "1acd91371770b0489e172d74": ["SELECT course_id, count(course_id) as course_count \nFROM Student_Enrollment_Courses \nGROUP BY course_id \nORDER BY course_count DESC \nLIMIT 1\n\n", "SELECT course_id, count(course_id) FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY count(course_id) DESC LIMIT 1\n\n", "SELECT course_id, COUNT(course_id) AS course_count FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY course_count DESC LIMIT 1\n\n", "SELECT course_id, count(*) as course_count FROM student_enrolment_courses GROUP BY course_id ORDER BY course_count DESC LIMIT 1\n\n", "SELECT course_id, count(*) as course_count\nFROM Student_Enrolment_Courses\nGROUP BY course_id\nORDER BY course_count DESC\nLIMIT 1\n\n"], "0c330f1a3f414cff1a267d8b": ["SELECT Earnings FROM poker_player ORDER BY Earnings DESC\n\n", "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\n\n", "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\n\n", "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\n\n", "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\n\n"], "d3c4e4ca52223ed1b207de57": ["SELECT Name FROM country WHERE Population = (SELECT max(Population) FROM country)", "SELECT Name FROM country WHERE Population = (SELECT MAX(Population) FROM country)\n\n", "SELECT Name, HeadOfState FROM country WHERE Population = (SELECT MAX(Population) FROM country)", "This question cannot be answered using the provided tables as there is no table containing news headlines or any information about news for countries.", "SELECT Name FROM country WHERE Population = (SELECT MAX(Population) FROM country)"], "2dad65a2914ca44e6f901068": ["SELECT course_id, course_name, COUNT(*) FROM Student_Enrolment_Courses WHERE course_id = (SELECT course_id FROM Courses WHERE course_name = \"Math\") GROUP BY course_id, course_name", "SELECT course_id, course_name, SUM(credit_hours) AS total_credits\nFROM Courses\nWHERE course_name = 'Math'\nGROUP BY course_id, course_name", "SELECT other_details FROM courses WHERE course_name = \"Math\"", "SELECT sum(credit_hours) FROM courses WHERE course_name = \"Math\"", "SELECT course_name, sum(credits) FROM courses WHERE course_name = \"Math\""], "e8990b03f0674ed71a12c7b8": ["SELECT name FROM country WHERE LifeExpectancy = (SELECT max(LifeExpectancy) FROM country WHERE HeadOfState != '') AND Continent = 'Europe' ORDER BY LifeExpectancy DESC LIMIT 1", "SELECT Name FROM country WHERE LifeExpectancy = (SELECT max(LifeExpectancy) FROM country)\n\n", "SELECT Name FROM country WHERE LifeExpectancy = (SELECT MAX(LifeExpectancy) FROM country WHERE HeadOfState != '')\n\n", "SELECT Name FROM country WHERE LifeExpectancy = (SELECT max(LifeExpectancy) FROM country)\n\n", "SELECT Name FROM country WHERE LifeExpectancy = (SELECT MAX(LifeExpectancy) FROM country WHERE HeadOfState = 'male')"], "b66a3740ae9f5db6e2c3f9df": ["SELECT name, grade FROM Highschooler", "SELECT name, grade FROM Highschooler", "SELECT name, grade FROM Highschooler", "SELECT name, grade FROM Highschooler", "SELECT name, grade FROM Highschooler"], "8528c0f2874c8b12dc960edc": ["SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality\n\n", "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality\n\n", "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality\n\n", "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality\n\n", "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality\n\n"], "7f9089eb8b2504bf30e8c18d": ["This question cannot be directly answered with the provided tables. Additional information on campaign strategies and their impact on votes would be needed in order to answer this question effectively.", "This question cannot be answered directly with the given tables. More information on campaign strategies and their impact on votes would be needed in order to write an SQL query for this question.", "This question cannot be answered directly with the provided tables. More information about the campaign strategies and their impact on votes would be needed in order to provide an SQL query for this question.", "SELECT state, contestant_name, count(*) as total_votes\nFROM VOTES\nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number\nGROUP BY state, contestant_name", "This question cannot be answered with the provided tables. More information on the campaign strategies and their impact on votes would be needed in order to analyze their influence."], "402896024a57a76939088b76": ["SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(*) >= 2)", "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(student_course_id) >= 2)", "SELECT transcript_id, transcript_date \nFROM Transcripts \nWHERE transcript_id IN \n(SELECT transcript_id \nFROM Transcript_Contents \nGROUP BY transcript_id \nHAVING COUNT(*) >= 2)", "SELECT T2.transcript_id, T2.transcript_date \nFROM transcript_contents AS T1 \nJOIN transcripts AS T2 ON T1.transcript_id = T2.transcript_id \nGROUP BY T1.transcript_id \nHAVING COUNT(*) >= 2", "SELECT T2.transcript_date, T1.transcript_id \nFROM transcripts AS T2 \nJOIN transcript_contents AS T1 ON T2.transcript_id = T1.transcript_id \nGROUP BY T1.transcript_id \nHAVING COUNT(*) >= 2"], "b6e0e749c2542f564ba30413": ["SELECT last_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = \"North Carolina\" AND T1.student_id NOT IN (SELECT student_id FROM student_enrolment)", "SELECT last_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM student_enrolment)", "SELECT last_name FROM students AS T1 JOIN addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM student_enrolment)", "SELECT last_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM student_enrolment)", "SELECT last_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = \"North Carolina\" AND T1.student_id NOT IN (SELECT student_id FROM student_enrolment)"], "c9186f62cafdd58c7d11cf01": ["SELECT DISTINCT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "SELECT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') \n\n", "SELECT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "SELECT DISTINCT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'"], "005e7984f350dcf461fc0170": ["SELECT record_company FROM orchestra GROUP BY record_company ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT T3.Record_Company FROM orchestra AS T1 JOIN (SELECT Record_Company, count(*) AS count FROM orchestra GROUP BY Record_Company ORDER BY count DESC LIMIT 1) AS T2 ON T1.Record_Company = T2.Record_Company JOIN conductor AS T3 ON T1.Conductor_ID = T3.Conductor_ID", "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1\n\n"], "c92af61f0a38a1f7501e7d21": ["SELECT email_address FROM People WHERE person_id = (SELECT student_id FROM Friends GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)", "SELECT T1.email_address FROM People AS T1 JOIN (SELECT student_id, COUNT(*) AS friend_count FROM Friend GROUP BY student_id ORDER BY friend_count DESC LIMIT 1) AS T2 ON T1.person_id = T2.student_id\n\n", "SELECT T2.email_address FROM Highschooler AS T1 JOIN People AS T2 ON T1.ID = T2.person_id WHERE T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)", "SELECT T2.email_address FROM Highschooler AS T1 JOIN People AS T2 ON T1.ID = T2.person_id WHERE T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)", "SELECT T1.email_address FROM People AS T1 JOIN (SELECT student_id, COUNT(*) AS friend_count FROM Friend GROUP BY student_id ORDER BY friend_count DESC LIMIT 1) AS T2 ON T1.person_id = T2.student_id\n\n"], "b5b43934e85bd4a5a22e66a5": ["SELECT email_address, cell_number, home_phone FROM Professionals\n\n", "SELECT email_address, cell_number, home_phone FROM professionals\n\n", "SELECT email_address, cell_number, home_phone FROM professionals\n\n", "SELECT email_address, cell_number, home_phone FROM Professionals\n\n", "SELECT email_address, cell_number, home_phone FROM professionals\n\n"], "e3910b111e8bb3b36a0185c0": ["SELECT SUM(city.population) FROM city WHERE city.countrycode NOT IN (SELECT countrylanguage.countrycode FROM countrylanguage WHERE language = 'English')", "SELECT sum(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = \"English\")", "SELECT SUM(population) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')", "SELECT sum(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')", "SELECT sum(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')"], "36310118c8f141c91b6fcb4a": ["SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\n\n", "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\n\n", "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\n\n", "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949\n\n", "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1949\n\n"], "c6711489d5b763f89ab61af1": ["SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'", "SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%'", "SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%'", "SELECT first_name ,  last_name ,  email_address FROM owners WHERE state LIKE '%North%' \n\n", "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'"], "8a2c4e1e302acaea6d7bd463": ["SELECT DISTINCT H1.name ,  H2.name FROM Highschooler AS H1 JOIN Friend AS F ON H1.ID  =  F.student_id JOIN Highschooler AS H2 ON F.friend_id  =  H2.ID\n\n", "This question cannot be answered directly from the given tables. Additional information or tables related to social media usage and interactions would be needed to analyze the impact of social media on friendships.", "SELECT T1.name ,  T2.name FROM friend AS T3 JOIN highschooler AS T1 ON T3.student_id  =  T1.ID JOIN highschooler AS T2 ON T3.friend_id  =  T2.ID\n\n", "SELECT * FROM Friend JOIN Likes ON Friend.friend_id = Likes.liked_id AND Friend.student_id = Likes.student_id", "This question cannot be answered directly with the given tables."], "82d08f8d7e91c1c8c91209d0": ["SELECT T5.date_of_treatment, T4.first_name \nFROM treatments AS T5 \nJOIN professionals AS T4 ON T5.professional_id = T4.professional_id", "SELECT date_of_treatment, first_name FROM treatments AS T1 JOIN professionals AS T2 ON T1.professional_id = T2.professional_id", "SELECT date_of_treatment, T2.first_name\nFROM treatments AS T1\nJOIN professionals AS T2 ON T1.professional_id = T2.professional_id\nORDER BY date_of_treatment, T2.first_name", "SELECT date_of_treatment, first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id\n\n", "SELECT date_of_treatment, first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id"], "a64ef6017f0cc8903735f0a2": ["SELECT ID FROM Highschooler WHERE name = 'Kyle' \n\n", "There is no SSN (Social Security Number) provided in the tables.", "SELECT ID FROM Highschooler WHERE name = 'Kyle' \n\n", "SELECT ID FROM Highschooler WHERE name = 'Kyle'", "There is no table provided that contains information about SSN (Social Security Number), so this question cannot be answered with the given tables."], "11f724e5fe0aeec461a55e3c": ["SELECT Name FROM conductor WHERE Age - Year_of_Work > 10 OR Year_of_Work - Age > 10\n\n", "SELECT Name FROM conductor WHERE (Age < 30 AND Year_of_Work > 10) OR (Age > 50 AND Year_of_Work < 5) \n\n", "SELECT Name FROM conductor WHERE (Age - Year_of_Work) > 10 OR (Age - Year_of_Work) < -10\n\n", "SELECT Name FROM conductor WHERE Age != (SELECT avg(Age) FROM conductor) OR Year_of_Work != (SELECT avg(Year_of_Work) FROM conductor) \n\n", "SELECT T1.Name FROM conductor AS T1 WHERE ABS(T1.Age - T1.Year_of_Work) > 10\n\n"], "1f354580370732834a2ecdd8": ["This question cannot be answered directly with the given tables. Additional tables or information related to job prospects for graduates would be needed to provide an answer.", "This question cannot be answered with the given tables.", "This question cannot be answered directly with the given tables. It would require additional information or tables related to job prospects for graduates.", "This question cannot be answered with the current tables provided.", "This question cannot be answered with the given tables."], "82d6bf3df3257a572a7abd9e": ["SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT max(Net_Worth_Millions) FROM singer) \n\n", "SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT max(Net_Worth_Millions) FROM singer)", "SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT max(Net_Worth_Millions) FROM singer)", "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT max(Net_Worth_Millions) FROM singer)"], "07248c3fde45ca7398bfeb2d": ["SELECT T1.address_id, T1.line_1, T1.line_2 \nFROM addresses AS T1 \nJOIN students AS T2 ON T1.address_id = T2.permanent_address_id\nGROUP BY T1.address_id\nORDER BY COUNT(*) DESC\nLIMIT 1", "SELECT address_id, line_1, line_2 FROM addresses WHERE address_id IN (SELECT permanent_address_id FROM students GROUP BY permanent_address_id ORDER BY COUNT(*) DESC LIMIT 1) OR address_id IN (SELECT current_address_id FROM students GROUP BY current_address_id ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT T1.address_id, T1.line_1, T1.line_2\nFROM addresses AS T1\nJOIN students AS T2 ON T1.address_id = T2.permanent_address_id\nGROUP BY T1.address_id\nORDER BY COUNT(*) DESC\nLIMIT 1", "SELECT T1.address_id, T1.line_1, T1.line_2 \nFROM addresses AS T1 \nJOIN students AS T2 ON T1.address_id = T2.current_address_id \nGROUP BY T1.address_id \nORDER BY count(*) DESC \nLIMIT 1", "SELECT T1.address_id, T1.line_1, T1.line_2 FROM addresses AS T1 JOIN students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1"], "1ba9b4a0e4cd1e00aefa7e3e": ["SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1\n\n"], "8707467f0de1d31ad7105442": ["SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments) \n\n", "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)", "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)"], "971cb5c909900e7f0d50dafc": ["SELECT grade FROM Highschooler WHERE name = 'Kyle'", "SELECT grade FROM Highschooler WHERE name = 'Kyle'", "SELECT grade FROM Highschooler WHERE name = 'Kyle' \n\n", "SELECT grade FROM Highschooler WHERE name = 'Kyle' \n\n", "SELECT grade FROM Highschooler WHERE name = 'Kyle' \n\n"], "c0016695968dabd94ff716dd": ["SELECT continent, AVG(lifeexpectancy), SUM(population) \nFROM country \nGROUP BY continent \nHAVING AVG(lifeexpectancy) < 72", "SELECT continent, avg(lifeexpectancy) AS avg_life_expectancy, sum(population) AS total_population \nFROM country \nGROUP BY continent \nHAVING avg_life_expectancy < 72", "SELECT continent, avg(lifeexpectancy), sum(population) FROM country GROUP BY continent HAVING avg(lifeexpectancy) < 72", "SELECT continent, avg(lifeexpectancy), sum(population) FROM country WHERE lifeexpectancy < 72 GROUP BY continent\n\n", "SELECT continent, AVG(lifeexpectancy), SUM(population) FROM country WHERE lifeexpectancy < 72 GROUP BY continent\n\n"], "81156c2aa464f64da96a4725": ["SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = (SELECT feature_type_code FROM other_available_features WHERE feature_name = 'AirCon')", "SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = (SELECT feature_type_code FROM Other_Available_Features WHERE feature_name = 'AirCon')", "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_name = \"AirCon\"", "SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = (SELECT feature_type_code FROM other_available_features WHERE feature_name = 'AirCon')", "SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code IN (SELECT feature_type_code FROM other_available_features WHERE feature_name = 'AirCon')"], "5847b151c5ee9e4a233b0dd9": ["SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1)", "SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1)", "SELECT birth_date FROM people WHERE people_id = (SELECT people_id FROM poker_player ORDER BY earnings DESC LIMIT 1)", "SELECT Birth_Date \nFROM people \nWHERE People_ID = (SELECT People_ID \n                   FROM poker_player \n                   WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)\n                   )", "SELECT birth_date FROM people WHERE people_id = (SELECT people_id FROM poker_player ORDER BY earnings DESC LIMIT 1)"], "d935972dd6ed247350e7286b": ["SELECT count(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = \"Asia\")", "SELECT count(DISTINCT Language) \nFROM countrylanguage \nWHERE CountryCode IN (SELECT Code \n                      FROM country \n                      WHERE Continent = 'Asia')", "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia')", "SELECT count(DISTINCT Language) FROM countryLanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia')", "SELECT count(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia')"], "1e64edb741404aca3567b648": ["SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  'North America' AND SurfaceArea  >  3000\n\n", "SELECT sum(Population) ,  avg(SurfaceArea) \nFROM country \nWHERE Continent = 'North America' AND SurfaceArea > 3000", "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Region  =  'North America' AND SurfaceArea  >  3000", "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000", "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Region  =  'North America' AND SurfaceArea  >  3000\n\n"], "044c98fc01ca045299a9051f": ["SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Nationality = (SELECT Nationality FROM people WHERE Name = 'Maksim Bltin')", "SELECT T2.name FROM people AS T1 JOIN poker_player AS T2 ON T1.people_id = T2.people_id WHERE T1.Nationality = (SELECT Nationality FROM people WHERE Name = 'Maksim Bltin')", "SELECT pet_name FROM pets WHERE owner_nationality IN (SELECT nationality FROM people WHERE name = 'Maksim Bltin')", "SELECT T2.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Nationality = (SELECT Nationality FROM people WHERE Name = \"Maksim Bltin\")", "SELECT T2.name FROM people AS T1 JOIN poker_player AS T2 ON T1.people_id = T2.people_id WHERE T1.nationality = (SELECT nationality FROM people WHERE name = 'Maksim Bltin')"], "b3a4556a57081884aaf93723": ["INSERT INTO Phone_Call_Reminders (student_id, reminder_date, reminder_details)\nSELECT student_id, '2022-10-15', 'Reminder about course registration deadline'\nFROM Students\n\n", "INSERT INTO reminders (reminder_type, reminder_date, reminder_description)\nVALUES ('Phone Call', '2022-12-01', 'Reminder for students to register for courses before deadline')", "INSERT INTO REMINDERS (reminder_id, reminder_type, reminder_description, reminder_date, student_id)\nVALUES (1, 'Phone Call', 'Reminder for course registration deadlines', '2022-10-15', \n(SELECT student_id FROM students WHERE date_left IS NULL))", "INSERT INTO phone_call_reminder (student_id, reminder_date, reminder_message)\nSELECT student_id, '2022-10-15', 'Reminder: Course registration deadline approaching. Please ensure to register for your courses before the deadline.'\nFROM students", "INSERT INTO Phone_Call_Reminders (student_id, reminder_date, reminder_details)\nSELECT student_id, registration_deadline, 'Reminder: Course registration deadline approaching' FROM Students"], "5bde5711c55442403edf9db8": ["SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)", "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)", "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)", "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)"], "0ee148546bada3dcf3858d97": ["SELECT Name FROM singer WHERE Citizenship = 'France' ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer WHERE Citizenship = 'France' ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer WHERE Citizenship = 'France' ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer WHERE Citizenship = 'France' ORDER BY Sales DESC LIMIT 1", "SELECT Name FROM singer WHERE Citizenship = 'France' ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n"], "dd15f160100d2548f6fce8ae": ["SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1\n\n", "SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date LIMIT 1\n\n", "SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date LIMIT 1\n\n", "SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1\n\n", "SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1\n\n"], "2eaad528a90805e24372acb5": ["SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT grade, COUNT(*) AS count FROM Highschooler GROUP BY grade ORDER BY count DESC LIMIT 1\n\n", "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1\n\n"], "a297fce14d6acf5ef1894d6a": ["SELECT * FROM singer WHERE name = 'Christy Walton'", "This question cannot be translated into SQL as it involves creating an artistic portrait, which is not a query that can be performed in SQL.", "SELECT * FROM singer WHERE Name = 'Christy Walton'", "SELECT * FROM singer WHERE Name = 'Christy Walton'", "SELECT * FROM singer WHERE Name = 'Christy Walton'"], "66da345173041a2a9be2f240": ["This question cannot be answered with the provided tables.", "This question cannot be answered directly with the given tables.", "This question cannot be answered directly with the given tables. It would require additional information such as the total number of eligible voters or the expected voter turnout to determine the implications of low voter turnout.", "This question cannot be answered directly with the provided tables.", "This question cannot be answered with the given tables."], "4c240584926fe6d76a8b6637": ["SELECT T1.Singer_ID, T1.Name, T2.Record_Label\nFROM singer AS T1\nJOIN record_label AS T2 ON T1.Singer_ID = T2.Singer_ID\nWHERE T1.Name = \"Abigail Johnson\"", "SELECT record_label FROM singer WHERE name = 'Abigail Johnson' \n\n", "SELECT T1.Record_Label FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Name = 'Abigail Johnson'", "SELECT T2.Record_Label FROM singer AS T1 JOIN record_label AS T2 ON T1.Record_Label_ID = T2.Record_Label_ID WHERE T1.Name = \"Abigail Johnson\"", "SELECT T1.Record_Label FROM singer AS T1 WHERE T1.Name = \"Abigail Johnson\" \n\n"], "76b7125aa4c80c62170f5dd7": ["SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') INTERSECT SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')", "SELECT c.Name \nFROM country AS c \nJOIN countrylanguage AS cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T' \nJOIN countrylanguage AS cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T'", "SELECT c.Name FROM country c\nJOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English'\nJOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French'"], "3ae8723d8b7320bea3175ec3": ["SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, count(*) as num_enrollments \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nORDER BY num_enrollments DESC \nLIMIT 1", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, count(T2.student_enrolment_id) as num_of_enrollments\nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nORDER BY num_of_enrollments DESC \nLIMIT 1", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS num_enrollments \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nORDER BY num_enrollments DESC \nLIMIT 1", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS num_enrollments\nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nORDER BY num_enrollments DESC \nLIMIT 1", "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) AS num_enrollments FROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nORDER BY num_enrollments DESC \nLIMIT 1"], "6498be8762b873b18efdf820": ["SELECT T1.name, COUNT(T2.student_id) \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.name", "SELECT T1.name, COUNT(T2.liked_id) \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.name", "SELECT T1.name, COUNT(T2.student_id) \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.name", "SELECT T1.name, COUNT(T2.liked_id) \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.ID, T1.name", "SELECT T2.name, COUNT(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T2.name\n\n"], "f4155f1acb1b8d9bc93a37b1": ["SELECT first_name, middle_name, last_name FROM students ORDER BY date_left ASC LIMIT 1\n\n", "SELECT first_name, middle_name, last_name FROM students ORDER BY date_left ASC LIMIT 1\n\n", "SELECT first_name, middle_name, last_name FROM students ORDER BY date_left ASC LIMIT 1\n\n", "SELECT first_name, middle_name, last_name FROM students ORDER BY date_left ASC LIMIT 1\n\n", "SELECT first_name, middle_name, last_name \nFROM students \nWHERE date_left IS NOT NULL \nORDER BY date_left ASC \nLIMIT 1\n\n"], "18adce893efccc447389682c": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables as there is no table related to social media or its impact on TV shows.", "This question cannot be answered with the given tables as there is no table related to social media in the provided schema.", "This question cannot be answered with the given tables as there is no table that contains information about social media.", "This question cannot be answered with the provided tables."], "118d43a80c47f705c4e4f46a": ["SELECT avg(room_count) FROM properties WHERE room_count > 5\n\n", "SELECT avg(room_count) FROM properties WHERE room_count > 5\n\n", "SELECT AVG(room_count) FROM Properties WHERE room_count > 5", "SELECT AVG(room_count) FROM Properties WHERE room_count > 5\n\n", "SELECT avg(room_count) FROM properties WHERE room_count > 5\n\n"], "0624991e34efd6592749aa7f": ["SELECT T2.first_name, T3.name\nFROM owners AS T2\nJOIN dogs AS T3 ON T2.owner_id = T3.owner_id\nWHERE T2.state = 'Virginia'", "SELECT T2.first_name, T1.name \nFROM Dogs AS T1 \nJOIN Owners AS T2 ON T1.owner_id = T2.owner_id \nWHERE T2.state = 'Virginia'", "SELECT T2.first_name, T3.name \nFROM owners AS T2 \nJOIN dogs AS T3 ON T2.owner_id = T3.owner_id \nWHERE T2.state = 'Virginia'", "SELECT T2.first_name, T1.name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.state = 'Virginia'", "SELECT T2.first_name ,  T1.name FROM dogs AS T1 JOIN owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.state = 'Virginia'\n\n"], "07ba6a83ad1ce3e11feb81ec": ["SELECT Name FROM country ORDER BY Population DESC LIMIT 1\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 1\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 1\n\n", "SELECT Name FROM country WHERE Population = (SELECT max(Population) FROM city)\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 1\n\n"], "80ce5f0f4b7c3950fedc263e": ["SELECT COUNT(DISTINCT Language) FROM countrylanguage\n\n", "SELECT count(DISTINCT Language) FROM countrylanguage\n\n", "SELECT COUNT(DISTINCT Language) FROM countrylanguage\n\n", "SELECT COUNT(DISTINCT Language) FROM countrylanguage\n\n", "SELECT COUNT(DISTINCT Language) FROM countrylanguage\n\n"], "12a1ce801c4e813d0deec7af": ["SELECT apt_feature_1, apt_feature_2, apt_feature_3 FROM Properties WHERE property_type_code = 'APT'", "SELECT room_count FROM properties WHERE property_type_code = \"APT\"", "SELECT apt_feature_1, apt_feature_2, apt_feature_3 FROM Properties WHERE property_type_code = 'APT'", "SELECT apt_feature_1, apt_feature_2, apt_feature_3 FROM Properties WHERE property_type_code = 'APT'", "SELECT apt_feature_1, apt_feature_2, apt_feature_3 FROM Properties WHERE property_type_code = 'APT'"], "07334723b7f53588eba2caf6": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n"], "0e850fd5aca25f94c9fdeaa3": ["SELECT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT avg(cost_of_treatment) FROM treatments))", "SELECT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)) \n\n", "SELECT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)) \n\n", "SELECT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments))", "SELECT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)) \n\n"], "dee39760c6baf216390a5c97": ["SELECT T2.name, COUNT(T1.liked_id) \nFROM Likes AS T1 \nJOIN Highschooler AS T2 ON T1.student_id = T2.ID \nGROUP BY T1.student_id", "SELECT T1.name, COUNT(T2.liked_id) \nFROM Highschooler AS T1 \nJOIN Likes AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.name", "SELECT T1.name ,  count(*) FROM highschooler AS T1 JOIN likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID", "SELECT T2.name, COUNT(T1.liked_id) FROM Likes AS T1 \nJOIN Highschooler AS T2 ON T1.student_id = T2.ID \nGROUP BY T2.name", "SELECT T1.name, count(T2.liked_id) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name\n\n"], "412f63718f3bc1253fa29a08": ["SELECT name, grade FROM Highschooler", "SELECT name, grade FROM Highschooler", "SELECT name, grade FROM Highschooler", "SELECT name, grade FROM Highschooler", "SELECT name, grade FROM Highschooler"], "205b0998ec9ed3508016d5b3": ["SELECT nationality, sum(earnings) FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY nationality", "SELECT Nationality, SUM(Earnings) AS Total_Earnings\nFROM people\nJOIN poker_player ON people.People_ID = poker_player.People_ID\nGROUP BY Nationality", "SELECT nationality, SUM(earnings) AS total_earnings\nFROM people JOIN poker_player ON people.People_ID = poker_player.People_ID\nGROUP BY nationality", "SELECT p.Nationality, SUM(pp.Earnings) AS Total_Earnings\nFROM people p\nJOIN poker_player pp ON p.People_ID = pp.People_ID\nGROUP BY p.Nationality\nORDER BY Total_Earnings DESC", "SELECT Nationality, SUM(Earnings) as Total_Earnings\nFROM people \nJOIN poker_player ON people.People_ID = poker_player.People_ID\nGROUP BY Nationality"], "62c15f82061e8343e0ede3ee": ["SELECT Episode FROM TV_series ORDER BY Rating DESC\n\n", "SELECT Episode FROM TV_series ORDER BY Rating DESC\n\n", "SELECT Episode FROM TV_series ORDER BY Rating DESC\n\n", "SELECT * FROM TV_series ORDER BY Rating DESC\n\n", "SELECT Episode FROM TV_series ORDER BY Rating DESC\n\n"], "84cba41f629e7d163483c394": ["SELECT course_name FROM courses ORDER BY credits ASC LIMIT 1", "SELECT course_name FROM courses ORDER BY credits LIMIT 1", "SELECT course_name FROM courses ORDER BY credits ASC LIMIT 1", "SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) LIMIT 1", "SELECT course_name FROM courses ORDER BY credits ASC LIMIT 1"], "314614766043b472b7eeaca4": ["SELECT Pixel_aspect_ratio_PAR , Country FROM TV_Channel WHERE Language != 'English' \n\n", "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English' \n\n", "SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language  <>  'English'\n\n", "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English' \n\n", "SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language <> \"English\" \n\n"], "8dc42380cb8075c6f1af8840": ["SELECT state, contestant_number, count(*) FROM VOTES GROUP BY state, contestant_number ORDER BY created", "SELECT state ,  contestant_number ,  count(*) FROM VOTES GROUP BY state ,  contestant_number ORDER BY created", "SELECT state, contestant_number, created FROM VOTES ORDER BY created", "SELECT state, contestant_number, created FROM VOTES ORDER BY created", "SELECT state, contestant_number, count(*) FROM VOTES GROUP BY state, contestant_number, created ORDER BY state, created"], "7f8c8a7c45f973f2b9e8d117": ["SELECT T1.Orchestra FROM performance AS T1 JOIN (SELECT MAX(Official_ratings_(millions)) AS max_ratings FROM performance) AS T2 ON T1.Official_ratings_(millions) = T2.max_ratings", "SELECT T2.Orchestra FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID ORDER BY T1.Official_ratings_(millions) DESC LIMIT 1", "SELECT T1.Performance_ID, T1.Orchestra_ID, T1.Type, T1.Date, T1.Official_ratings_(millions), T1.Weekly_rank, T1.Share FROM performance AS T1 JOIN (SELECT Performance_ID, MAX(Official_ratings_(millions)) AS Max_Ratings FROM performance) AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T1.Official_ratings_(millions) = T2.Max_Ratings", "SELECT T2.Orchestra FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID ORDER BY Official_ratings_(millions) DESC LIMIT 1", "SELECT Performance_ID FROM performance ORDER BY Official_ratings_(millions) DESC LIMIT 1\n\n"], "bffaecee36ca9e1b8237cb7e": ["SELECT DISTINCT feature_name FROM Other_Available_Features WHERE feature_type_name = 'Taxes'", "SELECT T1.property_id, T1.property_name, T1.property_address, T1.agreed_selling_price, T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.date_sold IS NOT NULL", "SELECT T2.feature_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_type_name = 'Taxes'", "SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = 'taxes'", "SELECT feature_name FROM Other_Available_Features WHERE feature_type_name = \"taxes\" \n\n"], "336d1b7895420ffec61d2a56": ["SELECT date_arrived, date_departed FROM Dogs\n\n", "SELECT date_arrived, date_departed FROM Dogs\n\n", "SELECT date_arrived, date_departed FROM Dogs\n\n", "SELECT date_arrived, date_departed FROM Dogs\n\n", "SELECT date_arrived, date_departed FROM Dogs\n\n"], "6e35c29eee4a7dd174234903": ["SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\n\n", "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\n\n", "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\n\n", "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\n\n", "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\n\n"], "ebae21f9856a3e94a31c1e12": ["SELECT O.first_name, D.name\nFROM Owners O\nJOIN Dogs D ON O.owner_id = D.owner_id", "SELECT T2.first_name, T1.name FROM dogs AS T1 JOIN owners AS T2 ON T1.owner_id = T2.owner_id", "SELECT T2.first_name, T1.name\nFROM dogs AS T1\nJOIN owners AS T2 ON T1.owner_id = T2.owner_id", "SELECT T2.first_name, T1.name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id", "SELECT T2.first_name, T1.name FROM dogs AS T1 JOIN owners AS T2 ON T1.owner_id = T2.owner_id"], "e2e12991480af133b9baa27d": ["SELECT series_name ,  Content FROM TV_Channel WHERE series_name  =  \"Sky Radio\" AND Language  =  \"Spanish\"", "SELECT series_name ,  Language FROM TV_Channel WHERE series_name  =  'Sky Radio' AND Language  =  'Spanish'\n\n", "SELECT series_name, Language FROM TV_Channel WHERE series_name = \"Sky Radio\" AND Language = \"Spanish\"", "SELECT series_name, Content FROM TV_Channel WHERE series_name = \"Sky Radio\" AND Language = \"Spanish\"", "SELECT T2.series_name ,  T2.Language FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T1.series_name  =  \"Sky Radio\" AND T2.Language  =  \"Spanish\"\n\n"], "00f410f60091d8f8de734e8f": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "SELECT name FROM people WHERE Nationality = \"United States\" AND Name = \"Unknown\"", "This question cannot be answered with the given tables as there is no information on who came up with Texas Hold'em.", "This question cannot be answered with the given tables."], "bc069c4a030deb1898a296e4": ["SELECT contestant_number, count(phone_number) FROM VOTES GROUP BY contestant_number\n\n", "SELECT contestant_number, count(phone_number) FROM VOTES GROUP BY contestant_number\n\n", "SELECT COUNT(DISTINCT phone_number) FROM VOTES\n\n", "SELECT count(phone_number) FROM VOTES\n\n", "SELECT COUNT(DISTINCT phone_number) FROM VOTES\n\n"], "c7c0b9dc128cd86226ea1329": ["SELECT Capital FROM country WHERE Name = \"Angola\"", "SELECT Capital FROM country WHERE Name = 'Angola'", "SELECT Capital FROM country WHERE Name = 'Angola'", "SELECT capital FROM country WHERE Name = 'Angola'", "SELECT Capital FROM country WHERE Name = 'Angola'"], "8bd9dced1a1b8fb133ae000c": ["SELECT Name, Birth_Date FROM people ORDER BY Name ASC\n\n", "SELECT Name, Birth_Date FROM people ORDER BY Name ASC\n\n", "SELECT Name, Birth_Date FROM people ORDER BY Name ASC\n\n", "SELECT Name, Birth_Date FROM people ORDER BY Name ASC\n\n", "SELECT Name, Birth_Date FROM people ORDER BY Name ASC\n\n"], "a86ddb923e1b7af244249aa8": ["SELECT DISTINCT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT friend_id FROM Friend) AND T1.ID IN (SELECT liked_id FROM Likes)", "SELECT DISTINCT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.student_id", "SELECT T1.name \nFROM Highschooler AS T1 \nJOIN Friend AS T2 ON T1.ID = T2.student_id \nJOIN Likes AS T3 ON T1.ID = T3.student_id", "SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT liked_id FROM Likes)", "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)"], "afbba10f521908c63fefab52": ["SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.Name \nFROM conductor AS T1 \nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID \nGROUP BY T1.Conductor_ID \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT T1.Name \nFROM conductor AS T1 \nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID \nGROUP BY T1.Conductor_ID \nORDER BY COUNT(T2.Orchestra_ID) DESC \nLIMIT 1", "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1\n\n"], "7271f78b0c088e8542f94b0f": ["SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)", "SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)", "SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)", "SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments)", "SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments)"], "0a0c62ee3eabd3acaa530838": ["SELECT T2.first_name, T2.last_name, T4.size_description \nFROM Owners AS T2 \nJOIN Dogs AS T3 ON T2.owner_id = T3.owner_id \nJOIN Sizes AS T4 ON T3.size_code = T4.size_code", "SELECT T2.first_name, T2.last_name, T4.size_description \nFROM Owners AS T2 \nJOIN Dogs AS T3 ON T2.owner_id = T3.owner_id \nJOIN Sizes AS T4 ON T3.size_code = T4.size_code", "SELECT T2.first_name, T2.last_name, T4.size_description\nFROM Owners AS T2 \nJOIN Dogs AS T3 ON T2.owner_id = T3.owner_id\nJOIN Sizes AS T4 ON T3.size_code = T4.size_code", "SELECT T2.first_name, T2.last_name, T4.size_description \nFROM Owners AS T2 \nJOIN Dogs AS T3 ON T2.owner_id = T3.owner_id \nJOIN Sizes AS T4 ON T3.size_code = T4.size_code", "SELECT T2.first_name, T2.last_name, T4.size_description \nFROM Owners AS T2 \nJOIN Dogs AS T3 ON T2.owner_id = T3.owner_id \nJOIN Sizes AS T4 ON T3.size_code = T4.size_code"], "8a6662d216b4e8ba650c3f94": ["SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes WHERE liked_id = \"Math\")", "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes WHERE liked_id = 'math')", "SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes WHERE liked_id IN (SELECT ID FROM Highschooler WHERE name = \"math\"))", "SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes WHERE liked_id = \"math\")", "SELECT avg(grade) FROM highschooler WHERE ID IN (SELECT student_id FROM likes WHERE liked_id = \"Math\")"], "26815cef5927ea4d1f7305f8": ["SELECT Name FROM country WHERE IndepYear > 1950", "SELECT Name FROM country WHERE IndepYear > 1950\n\n", "SELECT Name FROM country WHERE IndepYear > 1950\n\n", "SELECT Name FROM country WHERE IndepYear > 1950\n\n", "SELECT Name FROM country WHERE IndepYear > 1950\n\n"], "bd946edc9267785a7505c28a": ["SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n", "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n", "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n", "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n", "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\n\n"], "25be0ae80dba4671c2c051b3": ["SELECT sentiment FROM TV_series WHERE series_name = 'Music Box Italia' AND source = 'online reviews'", "SELECT sentiment_analysis FROM TV_series WHERE series_name = \"Music Box Italia\" AND source = \"online reviews\" \n\n", "SELECT * FROM TV_series WHERE series_name = \"Music Box Italia\" AND Rating = \"positive\" or Rating = \"negative\" or Rating = \"neutral\" \n\n", "SELECT sentiment FROM TV_series WHERE series_name = \"Music Box Italia\" AND content = \"online reviews\"", "SELECT sentiment FROM online_reviews WHERE series_name = \"Music Box Italia\""], "5d822ec4dab708e2989a7a95": ["SELECT Final_Table_Made, Best_Finish FROM poker_player\n\n", "SELECT Final_Table_Made, Best_Finish FROM poker_player\n\n", "SELECT Final_Table_Made, Best_Finish FROM poker_player\n\n", "SELECT Final_Table_Made, Best_Finish FROM poker_player\n\n", "SELECT Final_Table_Made ,  Best_Finish FROM poker_player\n\n"], "e2c71f20bab0198ace3e2ba1": ["SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AF' AND IsOfficial = 'T'", "SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'", "SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'", "SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'", "SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'"], "d6435a10413fa440e93398fd": ["SELECT Name ,  Nationality FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Nationality = 'French'", "SELECT Name ,  Nationality FROM people WHERE Nationality = 'French'", "SELECT Name, Nationality FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID", "SELECT Name ,  Nationality FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID", "This question cannot be answered with the given tables as there is no language translation feature available."], "f940e053662f7085c56fd641": ["SELECT Name, Birth_Year, Citizenship, Net_Worth_Millions FROM singer ORDER BY Birth_Year ASC LIMIT 1\n\n", "SELECT Name, Birth_Year, Citizenship, Net_Worth_Millions FROM singer ORDER BY Birth_Year ASC LIMIT 1\n\n", "SELECT Name, Birth_Year, Citizenship, Net_Worth_Millions FROM singer ORDER BY Birth_Year ASC LIMIT 1\n\n", "SELECT Name, Birth_Year, Citizenship, Net_Worth_Millions FROM singer ORDER BY Birth_Year ASC LIMIT 1\n\n", "SELECT Name, Birth_Year, Citizenship, Net_Worth_Millions FROM singer ORDER BY Birth_Year ASC LIMIT 1\n\n"], "81e6a93d0acce672ca5817f4": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables as they do not contain information about news articles.", "This question cannot be answered with the given tables as they do not contain any information about news articles.", "SELECT * FROM Dogs WHERE date_adopted IS NULL AND abandoned_yn = 'N' ORDER BY date_arrived DESC\n\n", "This question cannot be answered with the given tables."], "217069ae533005e63bdcb57e": ["SELECT c.Name, cl.Percentage \nFROM country AS c \nJOIN countrylanguage AS cl ON c.Code = cl.CountryCode \nWHERE cl.Language = 'English' AND cl.IsOfficial = 'T'\nORDER BY cl.Percentage DESC \nLIMIT 1", "SELECT T2.Name ,  MAX(T2.Population * T1.Percentage) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = '20s' GROUP BY T2.Name, T1.Percentage", "SELECT country.Name, MAX(country.Population * countrylanguage.Percentage / 100) AS Population_20s FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T' ORDER BY Population_20s DESC LIMIT 1", "SELECT T2.Name, MAX(T2.Population) AS Population, T1.Percentage\nFROM countrylanguage AS T1 \nJOIN country AS T2 ON T1.CountryCode = T2.Code \nWHERE T1.Language = '20s' \nGROUP BY T2.Name, T1.Percentage \nORDER BY Population DESC \nLIMIT 1", "SELECT c.Name, cl.Percentage \nFROM country AS c \nJOIN countrylanguage AS cl ON c.Code = cl.CountryCode \nWHERE cl.Language = 'English' \nORDER BY cl.Percentage DESC \nLIMIT 1"], "6f9af87be31ddeb07a196373": ["SELECT count(*) FROM Departments", "SELECT count(*) FROM Departments", "SELECT count(*) FROM departments", "SELECT count(*) FROM Departments", "SELECT count(*) FROM Departments"], "238b4ca687d67a26f4aa4b4b": ["This question cannot be answered with the given tables.", "This question cannot be answered with the provided tables as there is no information about lake sizes or any relationship between contestants and lake sizes.", "SELECT avg(contestant_number) FROM CONTESTANTS", "This question cannot be answered with the provided tables.", "This question cannot be answered with the given tables."], "0d050b39bfadc78623d8324c": ["SELECT T2.Episode FROM TV_series AS T1 JOIN TV_Channel AS T3 ON T1.Channel = T3.id WHERE T3.series_name = \"Sky Radio\"", "SELECT T2.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = \"Sky Radio\" \n\n", "SELECT T1.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = \"Sky Radio\"\n\n", "SELECT T2.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = \"Sky Radio\" \n\n", "SELECT Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = \"Sky Radio\" \n\n"], "fd81898606cc3edc906cafed": ["SELECT last_name FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM student_enrolment)", "SELECT last_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT student_id FROM student_enrolment)", "SELECT last_name FROM students AS T1 JOIN addresses AS T2 ON T1.current_address_id = T2.address_id WHERE state_province_county = 'North Carolina' AND student_id NOT IN (SELECT student_id FROM student_enrolment)\n\n", "SELECT last_name FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM student_enrolment)\n\n", "SELECT last_name FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM student_enrolment) \n\n"], "759075cda7b560d34ae55d46": ["SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade\n\n", "SELECT grade, count(*) FROM Highschooler GROUP BY grade\n\n", "SELECT grade, count(*) FROM Highschooler GROUP BY grade\n\n", "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade\n\n", "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade\n\n"], "8de14a51f5c28ee7f6605f36": ["SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'", "SELECT zip_postcode FROM addresses WHERE city = \"Port Chelsea\"", "SELECT zip_postcode FROM Addresses WHERE city = \"Port Chelsea\"", "SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'", "SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'"], "3151cc708df0baade5bf0593": ["SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 2)", "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING T1.grade > 5 AND COUNT(T2.friend_id) >= 2", "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)", "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(friend_id) >= 2)", "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING T1.grade > 5 AND count(*) >= 2"], "5b875623975ec50a956cd934": ["SELECT state, COUNT(*) as contestant_count\nFROM CONTESTANTS\nJOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number\nJOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state\nGROUP BY state", "SELECT state, count(*) as num_contestants\nFROM CONTESTANTS\nGROUP BY state\nORDER BY state", "SELECT state, COUNT(*) as num_contestants\nFROM CONTESTANTS\nGROUP BY state\nORDER BY num_contestants DESC\n\n", "SELECT state, COUNT(*) as contestant_count FROM CONTESTANTS GROUP BY state", "SELECT state, COUNT(contestant_number) AS num_contestants FROM CONTESTANTS GROUP BY state"], "ed4296be31e0d1cfc7876d82": ["SELECT property_id, vendor_requested_price, buyer_offered_price, agreed_selling_price FROM Properties WHERE (vendor_requested_price <> buyer_offered_price OR vendor_requested_price <> agreed_selling_price OR buyer_offered_price <> agreed_selling_price)\n\n", "SELECT property_id, property_name, vendor_requested_price, buyer_offered_price, agreed_selling_price \nFROM Properties \nWHERE vendor_requested_price != buyer_offered_price AND vendor_requested_price != agreed_selling_price AND buyer_offered_price != agreed_selling_price", "SELECT property_id, vendor_requested_price, buyer_offered_price, agreed_selling_price FROM Properties WHERE (vendor_requested_price > agreed_selling_price OR buyer_offered_price > agreed_selling_price) AND (vendor_requested_price != 0 AND buyer_offered_price != 0 AND agreed_selling_price != 0)", "SELECT property_id, vendor_requested_price, buyer_offered_price, agreed_selling_price FROM properties WHERE agreed_selling_price > (vendor_requested_price * 1.5) OR agreed_selling_price < (vendor_requested_price * 0.5) OR buyer_offered_price > (vendor_requested_price * 1.5) OR buyer_offered_price < (vendor_requested_price * 0.5) OR agreed_selling_price > (buyer_offered_price * 1.5) OR agreed_selling_price < (buyer_offered_price * 0.5)", "SELECT property_name, vendor_requested_price, buyer_offered_price, agreed_selling_price FROM Properties WHERE vendor_requested_price <> agreed_selling_price OR buyer_offered_price <> agreed_selling_price\n\n"], "5ef53daa6cc2cc23d7bc4e33": ["SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr' \n\n", "SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'", "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\"", "SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'", "SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'"], "5ba8c4424cc9cabe5478d2fb": ["SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 30)", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 30)", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 30)", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 30)", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 30)"], "91ddcc65c38722128c5d825b": ["SELECT T1.semester_name \nFROM semesters AS T1 \nJOIN student_enrolment AS T2 ON T1.semester_id = T2.semester_id \nJOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id \nWHERE T3.degree_summary_name IN ('Master', 'Bachelor') \nGROUP BY T1.semester_name \nHAVING COUNT(DISTINCT T3.degree_summary_name) = 2", "SELECT T1.semester_name FROM semesters AS T1 JOIN student_enrolment AS T2 ON T1.semester_id = T2.semester_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name IN ('Master','Bachelor') GROUP BY T1.semester_name HAVING COUNT(DISTINCT T3.degree_summary_name) = 2\n\n", "SELECT T1.semester_name FROM semesters AS T1 JOIN student_enrolment AS T2 ON T1.semester_id = T2.semester_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T1.semester_name HAVING COUNT(DISTINCT T3.degree_summary_name) = 2\n\n", "SELECT T1.semester_name FROM semesters AS T1 JOIN student_enrolment AS T2 ON T1.semester_id = T2.semester_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name IN ('Master', 'Bachelor') GROUP BY T1.semester_name HAVING COUNT(DISTINCT T3.degree_summary_name) = 2\n\n", "SELECT T1.semester_name \nFROM semesters AS T1 \nJOIN student_enrolment AS T2 ON T1.semester_id = T2.semester_id \nJOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id \nWHERE T3.degree_summary_name IN ('Master', 'Bachelor') \nGROUP BY T1.semester_id \nHAVING COUNT(DISTINCT T3.degree_summary_name) = 2"], "e676a7b586323cf8ed18b9fe": ["SELECT Type, Date, Official_ratings_(millions), Weekly_rank, Share FROM performance\n\n", "SELECT Type ,  Major_Record_Format ,  Official_ratings_(millions) ,  Weekly_rank ,  Share FROM performance JOIN orchestra ON performance.Orchestra_ID  =  orchestra.Orchestra_ID", "SELECT Official_ratings_(millions), count(*) FROM performance GROUP BY Official_ratings_(millions)", "SELECT Conductor.Name, Orchestra.Orchestra, Performance.Type, Performance.Official_ratings_(millions) FROM Conductor \nJOIN Orchestra ON Conductor.Conductor_ID = Orchestra.Conductor_ID \nJOIN Performance ON Orchestra.Orchestra_ID = Performance.Orchestra_ID \nORDER BY Performance.Official_ratings_(millions) DESC", "SELECT Official_ratings_(millions) ,  Share ,  Weekly_rank FROM performance\n\n"], "ea54e29a7eac8e498b4db853": ["SELECT count(*) FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id", "SELECT count(DISTINCT department_id) FROM Degree_Programs", "SELECT count(DISTINCT department_id) FROM degree_programs\n\n", "SELECT count(*) FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id", "SELECT count(DISTINCT department_id) FROM Degree_Programs\n\n"], "3bb4d51302049bd03d1af725": ["SELECT T2.name\nFROM Likes AS T1\nJOIN Highschooler AS T2 ON T1.student_id = T2.ID\nGROUP BY T1.student_id\nORDER BY count(*) DESC\nLIMIT 1", "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT name FROM Highschooler WHERE ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)", "SELECT T2.name \nFROM Likes AS T1 \nJOIN Highschooler AS T2 ON T1.student_id = T2.ID \nGROUP BY T1.student_id \nORDER BY count(*) DESC \nLIMIT 1", "SELECT name \nFROM Highschooler \nWHERE ID IN (\n    SELECT student_id \n    FROM Likes \n    GROUP BY student_id \n    ORDER BY count(*) DESC \n    LIMIT 1\n)"], "529eedaaa25d8edb98c55ff9": ["SELECT agreed_selling_price FROM Properties", "SELECT agreed_selling_price FROM properties WHERE property_type_code = 'hse'", "SELECT agreed_selling_price FROM Properties WHERE property_type_code = 'hse'", "The market value of a home is determined by various factors including the property type, room count, features, and location.", "SELECT agreed_selling_price FROM properties"], "8b0b891c80fdcdbb03764915": ["SELECT Name, Continent FROM country WHERE Name = 'Hungary'", "SELECT Name, GovernmentForm FROM country WHERE Name = \"Hungary\"", "SELECT HeadOfState FROM country WHERE Name = 'Hungary'", "SELECT HeadOfState FROM country WHERE Name = 'Hungary'", "SELECT Name, GovernmentForm FROM country WHERE Name = 'Hungary'"], "d8fa1557d41d06bfe00b345b": ["SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id, T2.degree_program_id, T2.semester_id \nHAVING COUNT(DISTINCT T2.degree_program_id) = 2 AND COUNT(DISTINCT T2.semester_id) = 1", "SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nHAVING COUNT(DISTINCT T2.degree_program_id) = 2", "SELECT first_name, middle_name, last_name, student_id \nFROM Students \nWHERE student_id IN (\n    SELECT student_id \n    FROM Student_Enrolment \n    GROUP BY student_id \n    HAVING COUNT(DISTINCT degree_program_id) = 2\n)", "SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id \nFROM Students AS T1 \nJOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id, T2.degree_program_id, T2.semester_id \nHAVING COUNT(DISTINCT T2.degree_program_id) = 2", "SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nGROUP BY T1.student_id \nHAVING COUNT(DISTINCT T2.degree_program_id) = 2"], "6e6c75bc2b74932578d13260": ["SELECT sum(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')", "SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'", "SELECT sum(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'", "SELECT sum(SurfaceArea) FROM country WHERE Continent = \"Asia\" OR Continent = \"Europe\"", "SELECT sum(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'"], "684b7f08265755578132bb00": ["SELECT property_name FROM Properties ORDER BY buyer_offered_price DESC LIMIT 1\n\n", "SELECT property_id, max(agreed_selling_price - buyer_offered_price) FROM Properties\n\n", "SELECT property_id, MAX(agreed_selling_price - buyer_offered_price) AS down_payment FROM Properties\n\n", "SELECT property_id, max(buyer_offered_price - agreed_selling_price) AS down_payment FROM properties", "SELECT property_id, agreed_selling_price - buyer_offered_price AS down_payment FROM Properties ORDER BY down_payment DESC LIMIT 1\n\n"], "458b13f676b0141bdc6f9f25": ["SELECT first_name FROM students WHERE permanent_address_id <> current_address_id\n\n", "SELECT first_name FROM students WHERE permanent_address_id <> current_address_id\n\n", "SELECT first_name FROM students WHERE current_address_id <> permanent_address_id\n\n", "SELECT first_name FROM students WHERE permanent_address_id != current_address_id\n\n", "SELECT first_name FROM students WHERE permanent_address_id <> current_address_id\n\n"], "333b9a8468261a47580485c9": ["SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1\n\n", "SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1\n\n", "SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1\n\n", "SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1\n\n"], "9ad120ac68504814bd37c9ae": ["SELECT c.Name, c.Population - (SELECT c.Population FROM city c WHERE c.ID = c.ID - 1) AS Population_Growth FROM city c ORDER BY Population_Growth DESC\n\n", "SELECT city.Name, city.Population, country.Population, country.Continent, country.Region FROM city JOIN country ON city.CountryCode = country.Code\n\n", "SELECT city.Name, city.Population - (SELECT city.Population FROM city WHERE city.ID = sqlite_sequence.seq) AS population_growth FROM city", "SELECT city.Name, country.Name, city.Population - (city.Population * country.Population / 100) AS Population_Growth FROM city JOIN country ON city.CountryCode = country.Code", "SELECT city.Name, city.Population - (SELECT city.Population FROM city WHERE city.ID = city.ID - 1) AS population_growth FROM city"], "8f762a77fcd71d62e989234f": ["SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT Language \nFROM countrylanguage \nGROUP BY Language \nORDER BY COUNT(DISTINCT CountryCode) DESC \nLIMIT 1\n\n", "SELECT language FROM countrylanguage GROUP BY language ORDER BY count(DISTINCT CountryCode) DESC LIMIT 1\n\n", "SELECT language FROM countrylanguage GROUP BY language ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(DISTINCT CountryCode) DESC LIMIT 1\n\n"], "b7c2c9c5e242ff0d3a49375c": ["SELECT last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs WHERE age = (SELECT MIN(age) FROM dogs))", "SELECT last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs ORDER BY date_of_birth ASC LIMIT 1)", "SELECT T2.last_name FROM dogs AS T1 JOIN owners AS T2 ON T1.owner_id = T2.owner_id ORDER BY age ASC LIMIT 1", "SELECT last_name \nFROM owners \nJOIN dogs ON owners.owner_id = dogs.owner_id \nORDER BY age \nLIMIT 1", "SELECT T2.last_name \nFROM dogs AS T1 \nJOIN owners AS T2 ON T1.owner_id = T2.owner_id \nWHERE T1.date_of_birth = (SELECT min(date_of_birth) FROM dogs)"], "70a2a6caba26fd6e1bc7107c": ["SELECT count(*) FROM transcripts\n\n", "SELECT count(*) FROM Transcripts\n\n", "SELECT count(*) FROM Transcripts\n\n", "SELECT count(*) FROM transcripts", "SELECT COUNT(*) FROM Transcripts\n\n"], "605515c66d74716c5620424a": ["SELECT Name FROM conductor", "This question is not relevant to the provided tables. Please provide a question that pertains to the tables conductor, orchestra, performance, and show.", "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID", "SELECT * FROM conductor", "SELECT Name FROM conductor"], "379517826180ddf4088009e4": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n"], "71a100d5be58dfe436967921": ["SELECT max(Share) ,  min(Share) FROM performance WHERE Type <> \"Live final\"\n\n", "SELECT max(Share) ,  min(Share) FROM performance WHERE Type != 'Live final'\n\n", "SELECT max(Share) ,  min(Share) FROM performance WHERE Type != \"Live final\"\n\n", "SELECT max(Share) ,  min(Share) FROM performance WHERE Type <> \"Live final\" \n\n", "SELECT max(Share) ,  min(Share) FROM performance WHERE Type <> \"Live final\" \n\n"], "98e29983ff6b0cf918523cd5": ["SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000) \n\n", "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)", "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)\n\n", "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000) \n\n", "SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000)"], "fcad8557ceac9a999547018d": ["SELECT state, COUNT(*) AS total_votes\nFROM VOTES\nGROUP BY state", "SELECT state, count(*) as total_votes\nFROM votes\nGROUP BY state", "SELECT state, count(*) as total_votes\nFROM VOTES\nGROUP BY state", "SELECT state, count(*) FROM VOTES GROUP BY state", "SELECT state, count(*) AS total_votes\nFROM VOTES\nGROUP BY state\nORDER BY state"], "16314ed5cf705eb15d274ff0": ["SELECT Name FROM singer WHERE Citizenship != 'French' \n\n", "SELECT Name FROM singer WHERE Citizenship <> 'French' \n\n", "SELECT Name FROM singer WHERE Citizenship != 'French' \n\n", "SELECT Name FROM singer WHERE Citizenship != 'French' \n\n", "SELECT Name FROM singer WHERE Citizenship <> 'French'"], "77d8fdbc380966937635dbc9": ["SELECT T1.Name, T1.Biography FROM poker_players AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Earnings IS NOT NULL ORDER BY T1.Earnings DESC LIMIT 5", "SELECT p1.Name ,  p1.Nationality ,  p1.Birth_Date ,  p1.Height ,  p2.Final_Table_Made ,  p2.Best_Finish ,  p2.Money_Rank ,  p2.Earnings FROM people AS p1 JOIN poker_player AS p2 ON p1.People_ID  =  p2.People_ID ORDER BY p2.Earnings DESC LIMIT 5", "SELECT T1.Name ,  T1.Biography_English ,  translate(T1.Biography_English ,  'English' ,  'Spanish') AS Biography_Spanish FROM poker_player AS T1 ORDER BY T1.Earnings DESC LIMIT 5\n\n", "SELECT people.Name, poker_player.Earnings FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings DESC LIMIT 5\n\n", "SELECT T1.Poker_Player_ID, T1.Name, T2.Earnings, T1.Biography FROM Poker_Player AS T1 JOIN People AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC LIMIT 5"], "4a119c830d5c3e10b33c3797": ["SELECT count(DISTINCT phone_number) FROM VOTES\n\n", "SELECT count(DISTINCT phone_number) FROM VOTES\n\n", "SELECT count(DISTINCT phone_number) FROM votes\n\n", "SELECT count(DISTINCT phone_number) FROM votes\n\n", "SELECT count(DISTINCT phone_number) FROM VOTES\n\n"], "cbdfff22423e41037b32aebf": ["SELECT professional_id, role_code, first_name\nFROM Treatments\nJOIN Professionals ON Treatments.professional_id = Professionals.professional_id\nGROUP BY professional_id\nHAVING COUNT(*) >= 2", "SELECT professional_id, role_code, first_name \nFROM treatments \nGROUP BY professional_id \nHAVING COUNT(*) >= 2", "SELECT professional_id, role_code, first_name\nFROM Treatments\nJOIN Professionals ON Treatments.professional_id = Professionals.professional_id\nGROUP BY professional_id\nHAVING COUNT(*) >= 2", "SELECT professional_id, role_code, first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY professional_id HAVING COUNT(*) >= 2", "SELECT professional_id, role_code, first_name \nFROM Treatments \nJOIN Professionals ON Treatments.professional_id = Professionals.professional_id \nGROUP BY professional_id \nHAVING COUNT(*) >= 2"], "a3b85b594f05c1483d43c34c": ["SELECT Year_of_Founded FROM orchestra\n\n", "SELECT DISTINCT Year_of_Founded FROM orchestra\n\n", "SELECT Year_of_Founded FROM orchestra\n\n", "SELECT DISTINCT Year_of_Founded FROM orchestra\n\n", "SELECT Year_of_Founded FROM orchestra\n\n"], "508cd5edb53b373e45b5a168": ["SELECT count(*) FROM Properties WHERE date_on_market < '2000-01-01'", "SELECT count(*) FROM Properties WHERE date_on_market < '2000-01-01'", "SELECT count(*) FROM Properties WHERE date_on_market < '2000-01-01'", "SELECT count(*) FROM properties WHERE date_on_market < '2000-01-01'", "SELECT count(*) FROM Properties WHERE date_on_market < '2000-01-01'"], "01635f8f99557dcf0842e068": ["SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T'", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T'", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T'", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T'", "SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T'"], "beb83acdcf53aac74a448188": ["SELECT Episode, Air_Date FROM TV_series ORDER BY Rating DESC LIMIT 1\n\n", "SELECT Episode, Air_Date FROM TV_series ORDER BY Rating DESC LIMIT 1\n\n", "SELECT Episode, Air_Date FROM TV_series ORDER BY Rating DESC LIMIT 1\n\n", "SELECT Episode, Air_Date FROM TV_series ORDER BY Rating DESC LIMIT 1\n\n", "SELECT Episode, Air_Date FROM TV_series ORDER BY Rating DESC LIMIT 1\n\n"], "0b62271d45ab5f8cfdb25489": ["SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\n\n", "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID ORDER BY sum(Net_Worth_Millions) DESC LIMIT 1)", "SELECT T1.Name FROM singer AS T1 JOIN (SELECT Singer_ID FROM song ORDER BY Net_Worth_Millions DESC LIMIT 1) AS T2 ON T1.Singer_ID = T2.Singer_ID\n\n", "SELECT T1.Name FROM singer AS T1 JOIN (SELECT * FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1) AS T2 ON T1.Singer_ID = T2.Singer_ID\n\n", "SELECT Name FROM singer WHERE Singer_ID = (SELECT Singer_ID FROM song GROUP BY Singer_ID ORDER BY sum(Sales) DESC LIMIT 1)"], "7e63e64454fa6c01c7876cfc": ["SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1\n\n", "SELECT name FROM highschooler WHERE grade = (SELECT max(grade) FROM highschooler)\n\n", "SELECT name FROM highschooler ORDER BY grade DESC LIMIT 1\n\n", "SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1\n\n", "SELECT name FROM Highschooler ORDER BY grade DESC LIMIT 1\n\n"], "63c8b97fd061f3bb4006b17d": ["SELECT continent, sum(GNP) AS total_GNP FROM country GROUP BY continent ORDER BY total_GNP DESC", "SELECT Continent, SUM(GNP) AS Total_GNP FROM country GROUP BY Continent ORDER BY Total_GNP DESC\n\n", "SELECT C.Continent, SUM(C.GNP) AS Total_GNP, SUM(C.Population) AS Total_Population, AVG(C.GNP/C.Population) AS GNP_Per_Capita \nFROM country AS C\nGROUP BY C.Continent\nORDER BY GNP_Per_Capita DESC", "SELECT T2.Continent, AVG(T2.GNP) - AVG(T2.GNPOld) AS Economic_Disparity FROM country AS T2 GROUP BY T2.Continent", "SELECT T2.Continent, sum(T2.GNP) - sum(T1.GNP) AS Economic_Disparity FROM country AS T1 JOIN country AS T2 ON T1.Continent != T2.Continent GROUP BY T2.Continent\n\n"], "e70962ed3c524e6efbc75a78": ["SELECT Earnings FROM poker_player ORDER BY Earnings DESC\n\n", "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\n\n", "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\n\n", "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\n\n", "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\n\n"], "1b8d087e03ed1a9704fa7ef7": ["SELECT avg(age) FROM dogs", "SELECT avg(age) FROM dogs", "SELECT AVG(age) FROM dogs", "SELECT avg(age) FROM Dogs\n\n", "SELECT avg(age) FROM dogs"], "65cc1d8be3a1d1efa25a0c11": ["SELECT first_name, last_name FROM Students WHERE cell_mobile_number = (SELECT MAX(cell_mobile_number) FROM Students)", "SELECT student_id FROM Students ORDER BY cell_mobile_number DESC LIMIT 1", "SELECT first_name, last_name FROM students ORDER BY cell_mobile_number DESC LIMIT 1", "SELECT first_name, last_name FROM students ORDER BY cell_mobile_number DESC LIMIT 1", "SELECT first_name, last_name FROM students ORDER BY cell_mobile_number DESC LIMIT 1"], "bf72c8e81ca8765677e44a6c": ["SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n", "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)", "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n", "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n"], "2fb9386cb567b066a75b1ce9": ["SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) \n\n", "SELECT name FROM highschooler WHERE ID NOT IN (SELECT student_id FROM friend)", "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) \n\n", "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)\n\n", "SELECT name FROM highschooler WHERE ID NOT IN (SELECT student_id FROM friend)\n\n"], "103d299d5104ae9ea23065b7": ["SELECT * FROM TV_series GROUP BY Rating, Share", "SELECT * FROM tv_series GROUP BY rating, share", "SELECT * FROM TV_series GROUP BY rating, share", "SELECT * FROM TV_series GROUP BY rating, share", "SELECT id,series_name FROM TV_series GROUP BY rating,share"], "06f142593803e1762ccb4eb4": ["SELECT T2.Orchestra, T3.Type, T3.Date, T3.Official_ratings_(millions), T3.Weekly_rank, T3.Share\nFROM orchestra AS T2\nJOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID\nWHERE T2.Major_Record_Format = \"Technology\"", "SELECT T1.Orchestra, T1.Major_Record_Format, T3.Type, T3.Date, T3.Official_ratings_(millions), T3.Weekly_rank, T3.Share, T5.If_first_show, T5.Result, T5.Attendance\nFROM orchestra AS T1\nJOIN performance AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID\nJOIN show AS T5 ON T3.Performance_ID = T5.Performance_ID\nWHERE T1.Major_Record_Format = 'Technology'", "SELECT T1.Orchestra, T2.Date, T2.Official_ratings_(millions), T2.Share FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T1.Major_Record_Format = \"Technology\"", "SELECT T2.Orchestra, T3.Type, T3.Official_ratings_(millions) FROM orchestra AS T1 JOIN performance AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID WHERE T1.Major_Record_Format = 'Digital' OR T1.Major_Record_Format = 'Streaming'", "SELECT T2.Orchestra, T3.Type, T3.Date, T3.Official_ratings_(millions), T3.Weekly_rank, T3.Share FROM orchestra AS T1 JOIN performance AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID WHERE T1.Major_Record_Format = 'digital' OR T1.Major_Record_Format = 'online' OR T1.Major_Record_Format = 'streaming'"], "c4faeec204e8c3c0340e1662": ["SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade", "SELECT grade, COUNT(*) as count FROM Highschooler GROUP BY grade", "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade", "SELECT grade, COUNT(*) AS count FROM Highschooler GROUP BY grade", "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade"], "d9d8e841b3367edc797815e5": ["SELECT count(*) FROM dogs WHERE owner_id IS NOT NULL", "SELECT count(*) FROM dogs WHERE abandoned_yn = 'N'", "SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'N'", "SELECT count(*) FROM Dogs WHERE abandoned_yn = 'N'", "SELECT count(*) FROM Dogs WHERE owner_id IS NOT NULL\n\n"], "e5720131742e36f24f3127f2": ["SELECT count(*) FROM poker_player\n\n", "SELECT count(*) FROM poker_player\n\n", "SELECT count(*) FROM poker_player\n\n", "SELECT count(*) FROM poker_player\n\n", "SELECT count(*) FROM poker_player\n\n"], "24d58bacadcee6a227261edf": ["SELECT * FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Nationality = (SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT * FROM poker_player WHERE People_ID IN (SELECT People_ID FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT * FROM poker_player WHERE People_ID IN (SELECT People_ID FROM people WHERE Nationality = (SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1))", "SELECT * FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Nationality = (SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT * FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Nationality = (SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1)"], "dec89d1a8d1e2acdd391a25c": ["SELECT nationality FROM people WHERE name = 'Maksim Botin'\n\n", "SELECT nationality FROM people WHERE name = 'Maksim Botin'\n\n", "SELECT nationality FROM people WHERE name = 'Maksim Botin'\n\n", "This question cannot be answered with the given tables as there is no information about political party affiliation.", "SELECT Nationality FROM people WHERE Name = 'Maksim Botin'\n\n"], "05d968d49045e816934e3dd2": ["SELECT T1.name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID", "SELECT T1.Name FROM poker_player AS T2 JOIN people AS T1 ON T2.People_ID = T1.People_ID", "SELECT T1.name FROM poker_player AS T2 JOIN people AS T1 ON T2.people_id = T1.people_id", "SELECT T1.Name \nFROM people AS T1 \nJOIN poker_player AS T2 \nON T1.People_ID = T2.People_ID", "SELECT T1.name \nFROM people AS T1 \nJOIN poker_player AS T2 ON T1.people_id = T2.people_id"], "7ea6b90464fe500d43e53efb": ["SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT date_arrived, date_departed FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)"], "39f1fb96afcbdcd89ebbc26f": ["SELECT DISTINCT citizenship FROM singer\n\n", "SELECT DISTINCT Citizenship FROM singer\n\n", "SELECT DISTINCT Citizenship FROM singer", "SELECT DISTINCT citizenship FROM singer\n\n", "SELECT DISTINCT citizenship FROM singer\n\n"], "b5d7b3061d69de7a063a8fc6": ["SELECT C.Name, COUNT(CL.Language) \nFROM Country C \nJOIN CountryLanguage CL ON C.Code = CL.CountryCode \nGROUP BY C.Name \nHAVING COUNT(CL.Language) >= 3", "SELECT country.Name, COUNT(countrylanguage.Language) AS Num_of_languages \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nGROUP BY country.Code \nHAVING COUNT(countrylanguage.Language) >= 3", "SELECT C.Name, COUNT(CL.Language) AS NumLanguages\nFROM country C\nJOIN countrylanguage CL ON C.Code = CL.CountryCode\nGROUP BY C.Name\nHAVING COUNT(CL.Language) >= 3", "SELECT C.Name, COUNT(CL.Language) AS NumLanguages \nFROM Country C \nJOIN CountryLanguage CL ON C.Code = CL.CountryCode \nGROUP BY C.Name \nHAVING COUNT(CL.Language) >= 3", "SELECT c.Name, COUNT(cl.Language) AS NumLanguages\nFROM country AS c\nJOIN countrylanguage AS cl ON c.Code = cl.CountryCode\nGROUP BY c.Name\nHAVING COUNT(cl.Language) >= 3"], "15601201bf230cdb1c2ac98e": ["SELECT password FROM singer WHERE Name = 'Cha Cha Slide'", "SELECT password FROM singer WHERE Name = \"Cha Cha Slide\"", "SELECT password FROM singers WHERE singer_id = (SELECT singer_id FROM songs WHERE title = \"Cha Cha Slide\")", "SELECT password FROM singer WHERE Name = 'Cha Cha Slide'", "SELECT password FROM singer WHERE name = 'Cha Cha Slide'"], "753c948d84590a2557c68c8d": ["SELECT AVG(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)", "SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT avg(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT avg(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)"], "d95045b436149b3cfadf104b": ["SELECT name FROM Highschooler WHERE ID IN (SELECT ID FROM Highschooler WHERE hometown = \"NY\")", "SELECT name FROM Highschooler WHERE hometown = 'NY'", "SELECT name FROM Highschooler WHERE ID IN (SELECT ID FROM Highschooler WHERE hometown = 'NY')", "SELECT name FROM Highschooler WHERE hometown = 'NY'", "SELECT name FROM Highschooler WHERE ID IN (SELECT ID FROM Highschooler WHERE hometown = 'NY')"], "80329f488b977cff285fab01": ["SELECT * FROM singer WHERE Name = 'Freddie Mercury'", "SELECT * FROM singer WHERE Name = \"Freddie Mercury\"", "SELECT * FROM singer WHERE Name = 'Freddie Mercury'", "This question cannot be answered with the given tables.", "SELECT * FROM singer WHERE Name = \"Freddie Mercury\""], "35cf87fda563c3e2d0cbab3d": ["SELECT first_name FROM professionals\nUNION\nSELECT first_name FROM owners\nEXCEPT\nSELECT name FROM dogs", "SELECT first_name FROM owners UNION SELECT first_name FROM professionals EXCEPT SELECT name FROM dogs", "SELECT first_name FROM (SELECT first_name FROM owners UNION SELECT first_name FROM professionals) AS T1 WHERE first_name NOT IN (SELECT name FROM dogs)", "SELECT first_name FROM owners\nUNION\nSELECT first_name FROM professionals\nEXCEPT\nSELECT name FROM dogs", "SELECT first_name FROM (SELECT first_name FROM professionals UNION SELECT first_name FROM owners) AS T1 WHERE first_name NOT IN (SELECT name FROM dogs)"], "d625b9676d59fd6cd3d01fd1": ["SELECT Episode FROM TV_series ORDER BY Rating", "SELECT * FROM TV_series ORDER BY Rating", "SELECT Episode FROM TV_series ORDER BY Rating", "SELECT * FROM TV_series ORDER BY Rating", "SELECT * FROM TV_series ORDER BY Rating"], "51a0ad21d9ca72f57226d2fa": ["SELECT O.gender FROM Owners AS O JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.name = 'Kacey'", "SELECT gender FROM owners WHERE owner_id = (SELECT owner_id FROM dogs WHERE name = \"Kacey\")", "SELECT O.gender\nFROM Dogs D\nJOIN Owners O ON D.owner_id = O.owner_id\nWHERE D.name = \"Kacey\"", "SELECT gender FROM owners WHERE owner_id = (SELECT owner_id FROM dogs WHERE name = 'Kacey')", "SELECT O.gender\nFROM Dogs D\nJOIN Owners O ON D.owner_id = O.owner_id\nWHERE D.name = 'Kacey'"], "5bb6d1c7fc69b13dd270382d": ["SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"", "SELECT sum(Population) ,  max(GNP) FROM country WHERE Region = \"Asia\"", "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent = 'Asia'", "SELECT sum(Population), max(GNP) FROM country WHERE Continent = 'Asia'", "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  'Asia'"], "cac2a4df46f16b20084d65c2": ["SELECT T3.Name FROM country AS T3 JOIN city AS T1 ON T3.Code = T1.CountryCode WHERE T3.Continent = \"Asia\"", "SELECT DISTINCT T2.Name FROM country AS T1 JOIN Courses AS T2 ON T1.Name = T2.country WHERE T1.Continent = 'Asia'", "SELECT DISTINCT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia')", "SELECT T2.Name FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = \"Asia\"", "SELECT T2.Name FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia'"], "137a19d1f8c5ff0ab056ccb3": ["SELECT avg(Weight) FROM people WHERE Height > 185", "SELECT avg(weight) FROM people WHERE height > 185", "SELECT avg(Weight) FROM people WHERE Height > 185cm\n\n", "SELECT avg(Weight) FROM People WHERE Height > 185cm\n\n", "SELECT avg(weight) FROM people WHERE height > 185"], "3d031674101741dd754a94b1": ["SELECT max(Best_Finish) FROM poker_player\n\n", "SELECT best_finish FROM poker_player ORDER BY best_finish DESC LIMIT 1\n\n", "SELECT MAX(Best_Finish) FROM poker_player\n\n", "SELECT MAX(Best_Finish) FROM poker_player\n\n", "SELECT MAX(Best_Finish) FROM poker_player\n\n"], "6ffd8501f622b3760234b693": ["SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\n\n", "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\n\n", "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\n\n", "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')\n\n", "SELECT T1.id \nFROM TV_Channel AS T1 \nLEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel \nWHERE T2.Directed_by != 'Ben Jones' OR T2.Directed_by IS NULL"], "a32f0969743d112c8c8ff85c": ["SELECT avg(weight) FROM dogs WHERE breed_code = \"Husky\" JOIN owners ON dogs.owner_id = owners.owner_id", "SELECT avg(weight) FROM dogs WHERE breed_code = 'Husky' JOIN owners ON dogs.owner_id = owners.owner_id\n\n", "SELECT AVG(weight) FROM Dogs WHERE breed_code = 'Husky'", "SELECT avg(weight) FROM dogs WHERE breed_code = 'Husky'", "SELECT avg(weight) FROM Dogs WHERE breed_code = 'Husky'"], "1d09fd52a8da57797a4df5bb": ["SELECT governmentForm, SUM(population) FROM country WHERE governmentForm IN (SELECT governmentForm FROM country WHERE AVG(lifeExpectancy) > 72) GROUP BY governmentForm", "SELECT governmentform, SUM(population) FROM country WHERE governmentform IN (SELECT governmentform FROM country WHERE lifeexpectancy > 72) GROUP BY governmentform", "SELECT governmentform, SUM(population) as total_population\nFROM country\nWHERE governmentform IN (\n    SELECT governmentform\n    FROM country\n    GROUP BY governmentform\n    HAVING AVG(lifeexpectancy) > 72\n)\nGROUP BY governmentform", "SELECT GovernmentForm, SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm", "SELECT governmentForm, SUM(population) FROM country WHERE lifeExpectancy > 72 GROUP BY governmentForm\n\n"], "85496d2797caef45dfcb6357": ["SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\n\n"], "ea259a4c39ba11411ab9177c": ["SELECT T1.owner_id, T1.first_name, T1.last_name\nFROM owners AS T1\nJOIN dogs AS T2 ON T1.owner_id = T2.owner_id\nGROUP BY T1.owner_id\nORDER BY COUNT(*) DESC\nLIMIT 1", "SELECT owner_id, first_name, last_name FROM owners GROUP BY owner_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs GROUP BY owner_id HAVING COUNT(*) = (SELECT MAX(owner_count) FROM (SELECT COUNT(*) AS owner_count FROM Dogs GROUP BY owner_id) AS owner_counts))", "SELECT owner_id, first_name, last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs GROUP BY owner_id ORDER BY count(*) DESC LIMIT 1)", "SELECT owner_id, first_name, last_name FROM owners WHERE owner_id IN (SELECT owner_id FROM dogs GROUP BY owner_id ORDER BY count(*) DESC LIMIT 1)"], "8275312528170a9ffcb8a226": ["SELECT T1.semester_id FROM student_enrolment AS T1 JOIN degree_programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2", "SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name IN ('Masters', 'Bachelors')) GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) = 2", "SELECT T1.semester_id \nFROM student_enrolment AS T1 \nJOIN degree_programs AS T2 ON T1.degree_program_id = T2.degree_program_id \nWHERE T2.degree_summary_name IN ('Masters', 'Bachelors') \nGROUP BY T1.semester_id \nHAVING COUNT(DISTINCT T2.degree_summary_name) = 2", "SELECT T1.semester_id FROM student_enrolment AS T1 JOIN degree_programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY T1.semester_id HAVING COUNT(DISTINCT T2.degree_summary_name) = 2", "SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name IN ('Masters', 'Bachelors')) GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) = 2"], "f16f323eaa50f49b38c892cb": ["SELECT nationality, count(*) FROM people GROUP BY nationality\n\n", "SELECT nationality, count(*) FROM people GROUP BY nationality\n\n", "SELECT nationality, count(*) FROM people GROUP BY nationality\n\n", "SELECT nationality, count(*) FROM people GROUP BY nationality\n\n", "SELECT nationality, count(*) FROM people GROUP BY nationality\n\n"], "253da0477a1404be0798916a": ["SELECT city.Name, city.District, city.Population, country.Name AS Country\nFROM city\nJOIN country ON city.CountryCode = country.Code\nORDER BY city.Population DESC\nLIMIT 3", "SELECT Name, Population, District, CountryCode FROM city ORDER BY Population DESC LIMIT 3", "SELECT Name, Population, District, Country.Name AS Country\nFROM city\nJOIN country ON city.CountryCode = country.Code\nORDER BY Population DESC\nLIMIT 3", "SELECT Name, Population, District, CountryCode FROM city ORDER BY Population DESC LIMIT 3\n\n", "SELECT Name, Population, District, CountryCode FROM city ORDER BY Population DESC LIMIT 3"], "a7ecb1b2cf3bc2f3fd2f25eb": ["SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1\n\n", "SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1\n\n", "SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1\n\n", "SELECT Name, Population, LifeExpectancy \nFROM country \nWHERE Continent = 'Asia' \nORDER BY SurfaceArea DESC \nLIMIT 1\n\n", "SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1\n\n"], "6d5e53bc54abff052e66a9b5": ["SELECT directed_by, written_by, original_air_date FROM Cartoon", "SELECT directed_by ,  written_by ,  original_air_date FROM cartoon", "SELECT directed_by, written_by, original_air_date FROM Cartoon", "SELECT directed_by, written_by, original_air_date FROM Cartoon", "SELECT Directed_by, Written_by, Original_air_date FROM Cartoon"], "6f9a71b9563674e3eaef1c78": ["SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by\n\n", "SELECT Directed_by, count(*) FROM Cartoon GROUP BY Directed_by\n\n", "SELECT Directed_by, count(id) FROM Cartoon GROUP BY Directed_by\n\n", "SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by\n\n", "SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by\n\n"], "7680915b149ffa2861dc4d08": ["SELECT department_name, count(DISTINCT current_address_id) FROM Students JOIN Degree_Programs ON Students.student_id = Degree_Programs.degree_program_id JOIN Departments ON Degree_Programs.department_id = Departments.department_id GROUP BY department_name\n\n", "SELECT department_name, COUNT(current_address_id) FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY department_name", "SELECT department_name, count(current_address_id) FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id JOIN students ON student_enrolment.student_id = students.student_id GROUP BY department_name", "SELECT department_name, COUNT(DISTINCT current_address_id) FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id JOIN Students ON Student_Enrolment.student_id = Students.student_id GROUP BY department_name", "SELECT department_name, count(current_address_id) FROM departments JOIN students ON departments.department_id = degree_programs.department_id GROUP BY department_name"], "3df9764059a63ab8cf30ddc7": ["SELECT * FROM Dogs WHERE size_code = (SELECT size_code FROM Sizes WHERE size_description = 'Medium')", "SELECT * FROM Dogs WHERE size_code = \"M\"", "This question cannot be answered with the given tables. There is no table or column that contains images of dogs.", "SELECT T1.dog_id FROM dogs AS T1 JOIN sizes AS T2 ON T1.size_code = T2.size_code WHERE T2.size_description = \"Medium\"", "This question cannot be answered with the given tables as there is no table for images of dogs."], "b2af76f10796e22b671cf1db": ["SELECT count(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50\n\n", "SELECT count(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50", "SELECT count(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50", "SELECT count(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T' AND Percentage > 50", "SELECT count(*) FROM countrylanguage WHERE Language = \"Spanish\" AND IsOfficial = \"T\" AND Percentage > 50"], "9d33ecc51e7db4e3198f9b3d": ["SELECT c1.Name \nFROM country c1 \nWHERE c1.Continent = 'Africa' \nAND c1.Population < (\n    SELECT MIN(c2.Population) \n    FROM country c2 \n    WHERE c2.Continent = 'Asia'\n)", "SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')", "SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')", "SELECT c1.Name \nFROM country c1 \nWHERE c1.Continent = 'Africa' \nAND c1.Population < (SELECT MIN(c2.Population) \n                     FROM country c2 \n                     WHERE c2.Continent = 'Asia')", "SELECT C1.Name \nFROM country AS C1 \nWHERE C1.Continent = 'Africa' \nAND C1.Population < (\n    SELECT MIN(Population) \n    FROM country \n    WHERE Continent = 'Asia'\n)"], "071ef906a237ebdb4c478d5d": ["SELECT avg(Attendance) FROM show", "SELECT avg(Attendance) FROM show", "SELECT avg(Attendance) FROM show", "SELECT avg(Attendance) FROM show", "SELECT avg(Attendance) FROM show"], "de7276b6e350f7432226a8e3": ["SELECT T1.Singer_ID ,  T1.Name ,  T2.record_label FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT record_label, COUNT(*) AS count FROM singers GROUP BY record_label ORDER BY count DESC LIMIT 1\n\n", "SELECT record_label, COUNT(*) FROM singers GROUP BY record_label ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT label, COUNT(*) as count FROM singers GROUP BY label ORDER BY count DESC LIMIT 1\n\n", "SELECT record_label, COUNT(*) FROM singers GROUP BY record_label ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "325ffee793793f052db7c687": ["SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)", "SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)", "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)", "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)", "SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)"], "73094616bf003ef2e6e99727": ["SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' \n\n", "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' \n\n", "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' \n\n", "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' \n\n", "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' \n\n"], "af8ac23e7d9c3a6cb8fe2a13": ["This question cannot be answered with the given tables.", "This question cannot be answered using the provided tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the provided tables.", "This question cannot be answered with the provided tables."], "74ac98d5c6df15fcc7f77913": ["SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'", "SELECT sum(SurfaceArea) FROM country WHERE Region = 'Caribbean'", "SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'", "SELECT sum(SurfaceArea) FROM country WHERE Region = 'Carribean'", "SELECT sum(SurfaceArea) FROM country WHERE Region = 'Caribbean'"], "187b7c1e932e3c4343128596": ["SELECT citizenship FROM singer WHERE name = 'Christy Walton' \n\n", "SELECT Birthplace FROM singer WHERE Name = 'Christy Walton' \n\n", "SELECT birthplace FROM singer WHERE name = 'Christy Walton'\n\n", "SELECT Birthplace FROM singer WHERE Name = 'Christy Walton' \n\n", "SELECT birthplace FROM singer WHERE name = 'Christy Walton'"], "b64e59227f9425f892aa4163": ["SELECT T3.treatment_type_description \nFROM dogs AS T1 \nJOIN sizes AS T2 ON T1.size_code = T2.size_code \nJOIN treatments AS T3 ON T1.dog_id = T3.dog_id \nWHERE T2.size_description = \"Large\"", "SELECT T3.treatment_type_description FROM dogs AS T1 JOIN sizes AS T2 ON T1.size_code = T2.size_code JOIN treatments AS T3 ON T1.dog_id = T3.dog_id WHERE T2.size_description = 'Large'", "SELECT T3.treatment_type_description FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id = T2.dog_id JOIN treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code JOIN sizes AS T4 ON T1.size_code = T4.size_code WHERE T4.size_description = \"large breed\"", "SELECT T3.treatment_type_description FROM Dogs AS T1 JOIN Sizes AS T2 ON T1.size_code = T2.size_code JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id WHERE T2.size_description = \"large\" GROUP BY T3.treatment_type_description ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T3.treatment_type_description \nFROM dogs AS T1 \nJOIN sizes AS T2 ON T1.size_code = T2.size_code \nJOIN treatments AS T3 ON T1.dog_id = T3.dog_id \nWHERE T2.size_description = 'Large'"], "4f094b86195c1da2fd23e4f9": ["SELECT governmentform, sum(population) \nFROM country \nWHERE governmentform IN \n    (SELECT governmentform \n     FROM country \n     WHERE lifeexpectancy > 72 \n     GROUP BY governmentform) \nGROUP BY governmentform", "SELECT GovernmentForm, SUM(Population) FROM country WHERE GovernmentForm IN \n(SELECT GovernmentForm FROM country WHERE LifeExpectancy > 72) GROUP BY GovernmentForm\n\n", "SELECT governmentForm, SUM(population) FROM country WHERE governmentForm IN (SELECT governmentForm FROM country WHERE lifeExpectancy > 72) GROUP BY governmentForm\n\n", "SELECT GovernmentForm, SUM(Population) \nFROM country \nWHERE LifeExpectancy > 72 \nGROUP BY GovernmentForm", "SELECT governmentForm, SUM(population) FROM country WHERE governmentForm IN (SELECT governmentForm FROM country WHERE lifeExpectancy > 72) GROUP BY governmentForm"], "8044149051352e0fa68dec8c": ["SELECT grade FROM Highschooler WHERE name = 'Kyle' \n\n", "SELECT grade FROM Highschooler WHERE name = 'Kyle'", "SELECT grade FROM Highschooler WHERE name = 'Kyle'", "SELECT grade FROM Highschooler WHERE name = 'Kyle' \n\n", "SELECT grade FROM Highschooler WHERE name = 'Kyle'"], "f9c541564d20b4cbae50492c": ["SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')", "SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')"], "73e15c40eb744b3844404bca": ["SELECT T1.name, T2.name FROM Highschooler AS T1 JOIN Friend ON T1.ID = Friend.student_id JOIN Highschooler AS T2 ON Friend.friend_id = T2.ID\n\n", "SELECT T1.name AS student_name, T2.name AS friend_name FROM Highschooler AS T1 JOIN Friend ON T1.ID = Friend.student_id JOIN Highschooler AS T2 ON Friend.friend_id = T2.ID\n\n", "SELECT T1.name AS student_name, T2.name AS friend_name\nFROM Highschooler AS T1\nJOIN Friend ON T1.ID = Friend.student_id\nJOIN Highschooler AS T2 ON Friend.friend_id = T2.ID", "SELECT T1.name AS student_name, T2.name AS friend_name \nFROM Highschooler AS T1 \nJOIN Friend ON T1.ID = Friend.student_id \nJOIN Highschooler AS T2 ON Friend.friend_id = T2.ID", "SELECT T1.name, T2.name FROM Highschooler AS T1 JOIN Friend ON T1.ID = Friend.student_id JOIN Highschooler AS T2 ON Friend.friend_id = T2.ID\n\n"], "d0b1ef84df6d8187231689e1": ["SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = \"Sky Radio\") \n\n", "SELECT Title FROM Cartoon WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = \"Sky Radio\") \n\n", "SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio') \n\n", "SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = \"Sky Radio\") \n\n", "SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = \"Sky Radio\") \n\n"], "eff66eca9c46620065ef4807": ["SELECT COUNT(DISTINCT student_id) / COUNT(*) AS diversity FROM students", "SELECT COUNT(DISTINCT student_id) FROM Students", "SELECT COUNT(DISTINCT student_id) FROM Students", "SELECT count(DISTINCT student_id) FROM students", "SELECT COUNT(DISTINCT student_id) FROM Students"], "ef2803e9de662b6b9c97ebb0": ["SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n", "SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n", "SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n", "SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n", "SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n"], "d07c3780d6b559a88a05c65b": ["SELECT Name FROM singer ORDER BY Birth_Year ASC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Birth_Year ASC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Birth_Year ASC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Birth_Year ASC LIMIT 1\n\n", "SELECT Name FROM singer ORDER BY Birth_Year ASC LIMIT 1\n\n"], "17534dff24a52f828bd92af0": ["SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_name = 'Home Security' ORDER BY feature_id DESC LIMIT 3\n\n", "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'hse' ORDER BY feature_id DESC LIMIT 3\n\n", "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = (SELECT feature_type_code FROM Ref_Feature_Types WHERE feature_type_name = 'Home Security')", "SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = 'hse' ORDER BY feature_id DESC LIMIT 3\n\n", "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'home_security' ORDER BY feature_id DESC LIMIT 3\n\n"], "832603a906777e75f2e42a90": ["SELECT MAX(contestant_number) FROM CONTESTANTS", "SELECT MAX(performance_score) FROM CONTESTANTS", "SELECT max(contestant_number) FROM CONTESTANTS\n\n", "SELECT MAX(contestant_number) FROM CONTESTANTS\n\n", "SELECT max(contestant_number) FROM CONTESTANTS\n\n"], "a76de0116dc4b2822a13ddb7": ["SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT DISTINCT student_id FROM Friend)\n\n", "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)", "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)", "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT DISTINCT student_id FROM Friend)", "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)"], "dd3c0af7c27f033e8df4870f": ["SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix' AND IsOfficial = 'T')", "SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T'", "SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix') AND IsOfficial = 'T'", "SELECT Language FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix') \n\n", "SELECT Language FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix') \n\n"], "87b442b0056f6080b2fab78f": ["SELECT line_1, line_2 FROM Addresses\n\n", "SELECT line_1, line_2 FROM Addresses\n\n", "SELECT line_1, line_2 FROM Addresses\n\n", "SELECT line_1, line_2 FROM Addresses\n\n", "SELECT line_1, line_2 FROM Addresses\n\n"], "b605f6a2bfc7ce153f78f5bf": ["SELECT T2.course_name \nFROM courses AS T2 \nJOIN student_enrolment_courses AS T1 ON T1.course_id = T2.course_id \nGROUP BY T2.course_name \nORDER BY count(*) DESC \nLIMIT 1", "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1", "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.course_name FROM student_enrolment_courses AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1\n\n"], "c72560024ef9d7d66cc6f106": ["SELECT T1.breed_name FROM breeds AS T1 JOIN dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T2.color ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT color FROM dogs GROUP BY color ORDER BY count(*) DESC LIMIT 1", "SELECT color FROM Dogs GROUP BY color ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT color FROM dogs GROUP BY color ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "fa10abf4ba85a9821070cfa3": ["SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm <> 'Republic'", "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm <> 'Republic'", "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm != 'Republic'", "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm <> 'Republic'", "SELECT DISTINCT c1.Code \nFROM country c1\nWHERE c1.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage cl WHERE cl.Language = 'English')\nAND c1.GovernmentForm NOT LIKE '%Republic%'"], "2c8216122a6c857cd66f403e": ["SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n", "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n", "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n", "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n", "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1\n\n"], "1e2dcd0927a329f118d0207e": ["SELECT T2.semester_name, T1.semester_id FROM student_enrolment AS T1 \nJOIN semesters AS T2 ON T1.semester_id = T2.semester_id \nGROUP BY T1.semester_id \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT T1.semester_name, T1.semester_id FROM semesters AS T1 JOIN student_enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.semester_name, T1.semester_id FROM student_enrolment AS T1 \nJOIN semesters AS T2 ON T1.semester_id = T2.semester_id \nGROUP BY T1.semester_id \nORDER BY count(*) DESC \nLIMIT 1", "SELECT T2.semester_name, T1.semester_id \nFROM student_enrolment AS T1 \nJOIN semesters AS T2 ON T1.semester_id = T2.semester_id \nGROUP BY T1.semester_id \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT T2.semester_name, T1.semester_id FROM student_enrolment AS T1 JOIN semesters AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "ea0917967539816801ca3c8e": ["SELECT * FROM singer WHERE Name = \"Elvis Presley\"", "This question cannot be answered directly with the given tables.", "SELECT * FROM singer WHERE name = \"Elvis Presley\"", "This question cannot be answered directly with the given tables.", "SELECT * FROM singer WHERE Name = \"Elvis Presley\""], "0eba640870980777f91cff98": ["SELECT c.Name, COUNT(cl.Language) AS num_languages\nFROM country AS c\nJOIN countrylanguage AS cl ON c.Code = cl.CountryCode\nGROUP BY c.Name\nHAVING COUNT(cl.Language) > 2", "SELECT c.Name, COUNT(cl.Language) AS num_languages \nFROM country c \nJOIN countrylanguage cl ON c.Code = cl.CountryCode \nGROUP BY c.Name \nHAVING COUNT(cl.Language) > 2", "SELECT T1.Name, COUNT(T2.Language) AS NumLanguages \nFROM country AS T1 \nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode \nGROUP BY T1.Name \nHAVING COUNT(T2.Language) > 2", "SELECT Name, COUNT(Language) AS NumLanguages\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nGROUP BY Name\nHAVING COUNT(Language) > 2", "SELECT T1.Name, COUNT(T2.Language) AS num_languages \nFROM country AS T1 \nJOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode \nGROUP BY T1.Name \nHAVING COUNT(T2.Language) > 2"], "9534aa9717c79608171868e1": ["SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)", "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)"], "102be75180606dc23ea52f6f": ["SELECT * FROM TV_Channel WHERE series_name = \"Music Box Italia\"", "SELECT * FROM TV_channel WHERE series_name = \"Music Box Italia\"", "SELECT * FROM TV_Channel WHERE series_name = 'Music Box Italia' ORDER BY Air_Date DESC LIMIT 1", "SELECT * FROM TV_Channel WHERE series_name = \"Music Box Italia\"", "SELECT * FROM TV_Channel WHERE series_name = \"Music Box Italia\""], "cc7bdf3e0ee402bdef5e8fd9": ["SELECT min(age) FROM conductor", "SELECT min(age) FROM conductor", "SELECT min(age) FROM conductor", "SELECT min(age) FROM conductor", "SELECT min(age) FROM conductor"], "5856cbcf19cd211924f14f4e": ["SELECT count(*) FROM countrylanguage WHERE Language IN ('English','Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2", "SELECT COUNT(DISTINCT cl1.CountryCode) \nFROM countrylanguage cl1 JOIN countrylanguage cl2 \nON cl1.CountryCode = cl2.CountryCode \nWHERE cl1.Language = 'English' AND cl2.Language = 'Dutch'", "SELECT count(*) FROM countrylanguage WHERE Language = 'English' AND CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch')", "SELECT count(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING count(DISTINCT Language) = 2", "SELECT COUNT(*) FROM countrylanguage WHERE Language IN ('English', 'Dutch') GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = 2"], "8364ad0470b853d6d13b1f86": ["SELECT T1.breed_name ,  T2.treatment_type_description FROM breeds AS T1 JOIN dogs AS T2 ON T1.breed_code = T2.breed_code JOIN treatments AS T3 ON T2.dog_id = T3.dog_id JOIN treatment_types AS T4 ON T3.treatment_type_code = T4.treatment_type_code", "SELECT T2.breed_name ,  T4.treatment_type_description FROM dogs AS T1 JOIN breeds AS T2 ON T1.breed_code = T2.breed_code JOIN treatments AS T3 ON T1.dog_id = T3.dog_id JOIN treatment_types AS T4 ON T3.treatment_type_code = T4.treatment_type_code", "SELECT T2.breed_name ,  T4.treatment_type_description FROM dogs AS T1 JOIN breeds AS T2 ON T1.breed_code = T2.breed_code JOIN treatments AS T3 ON T1.dog_id = T3.dog_id JOIN treatment_types AS T4 ON T3.treatment_type_code = T4.treatment_type_code GROUP BY T2.breed_name ,  T4.treatment_type_description", "SELECT T1.breed_name, T2.treatment_type_description \nFROM Breeds AS T1 \nJOIN Dogs AS T3 ON T1.breed_code = T3.breed_code \nJOIN Treatments AS T4 ON T3.dog_id = T4.dog_id \nJOIN Treatment_Types AS T2 ON T4.treatment_type_code = T2.treatment_type_code", "SELECT T1.breed_name ,  T2.treatment_type_description FROM breeds AS T1 JOIN dogs AS T2 ON T1.breed_code = T2.breed_code JOIN treatments AS T3 ON T2.dog_id = T3.dog_id JOIN treatment_types AS T4 ON T3.treatment_type_code = T4.treatment_type_code"], "e57eacd4c3e35519245a560d": ["SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship\n\n", "SELECT citizenship, max(Net_Worth_Millions) FROM singer GROUP BY citizenship\n\n", "SELECT citizenship, max(Net_Worth_Millions) FROM singer GROUP BY citizenship\n\n", "SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship\n\n", "SELECT citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY citizenship\n\n"], "311abc48d783288d7c0163b7": ["SELECT * FROM Dogs WHERE breed_code = 'Husky'", "SELECT * FROM Dogs WHERE breed_code = \"Husky\"", "SELECT * FROM Dogs WHERE breed_code = \"HUS\"", "SELECT * FROM dogs WHERE breed_code = 'Husky'", "SELECT * FROM Dogs WHERE breed_code = 'Husky'"], "824395c6307733eafe6bacbe": ["SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\""], "077b03447dff1649705f6deb": ["SELECT count(*) FROM orchestra WHERE Major_Record_Format = 'Pets Allowed'", "SELECT count(*) FROM orchestra WHERE Major_Record_Format = 'pets_allowed_yn'", "SELECT count(*) FROM orchestra WHERE Major_Record_Format = 'Pets allowed'", "SELECT count(*) FROM orchestra WHERE Major_Record_Format = 'pets_allowed_yn'", "SELECT count(*) FROM orchestra WHERE Major_Record_Format = \"Pets Allowed\""], "dd20b917df8ff00e603de98c": ["SELECT avg(Net_Worth_Millions) FROM singer", "SELECT avg(Net_Worth_Millions) FROM singer", "SELECT AVG(Net_Worth_Millions) FROM singer", "SELECT avg(Net_Worth_Millions) FROM singer", "SELECT avg(Net_Worth_Millions) FROM singer"], "ddba6c83f5f2018696c89819": ["This question cannot be answered with the provided tables as there is no information related to datetime payment in the tables.", "SELECT avg(date_first_registered) FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id JOIN departments AS T4 ON T3.department_id = T4.department_id GROUP BY T4.department_id", "SELECT avg(date_first_registered) FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY departments.department_name", "This question cannot be answered with the given tables.", "This question is not relevant to the tables provided."], "2ad12efaf82dd5f4ae454fb2": ["SELECT T1.owner_id, T2.zip_code \nFROM Owners AS T2 \nJOIN Dogs AS T1 ON T1.owner_id = T2.owner_id\nJOIN Treatments AS T3 ON T1.dog_id = T3.dog_id\nGROUP BY T1.owner_id \nORDER BY SUM(cost_of_treatment) DESC \nLIMIT 1", "SELECT T1.owner_id, T2.zip_code \nFROM owners AS T2 \nJOIN dogs AS T1 ON T1.owner_id = T2.owner_id\nJOIN treatments AS T3 ON T1.dog_id = T3.dog_id\nGROUP BY T1.owner_id\nORDER BY SUM(cost_of_treatment) DESC\nLIMIT 1", "SELECT T1.owner_id, T2.zip_code \nFROM Owners AS T2 \nJOIN Dogs AS T1 ON T1.owner_id = T2.owner_id \nJOIN Treatments AS T3 ON T1.dog_id = T3.dog_id \nGROUP BY T1.owner_id \nORDER BY SUM(cost_of_treatment) DESC \nLIMIT 1", "SELECT T1.owner_id, T2.zip_code \nFROM Owners AS T2 \nJOIN Dogs AS T1 ON T1.owner_id = T2.owner_id\nJOIN Treatments AS T3 ON T1.dog_id = T3.dog_id\nGROUP BY T1.owner_id\nORDER BY SUM(T3.cost_of_treatment) DESC\nLIMIT 1\n\n", "SELECT T1.owner_id, T2.zip_code \nFROM Owners AS T1 \nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id \nJOIN Treatments AS T3 ON T2.dog_id = T3.dog_id \nGROUP BY T1.owner_id \nORDER BY SUM(T3.cost_of_treatment) DESC \nLIMIT 1"], "f2f3f9d3ceaebcc0b4260524": ["SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)\n\n", "SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1) \n\n", "SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)", "SELECT Birth_Date FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)", "SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)\n\n"], "5c46a9a5124109d4d3724366": ["SELECT agreed_selling_price FROM Properties WHERE date_sold IS NULL", "SELECT agreed_selling_price FROM Properties WHERE date_sold IS NULL\n\n", "SELECT agreed_selling_price FROM Properties WHERE date_sold IS NULL", "SELECT agreed_selling_price FROM properties WHERE date_sold IS NULL\n\n", "SELECT date_sold, agreed_selling_price FROM Properties WHERE date_sold > CURRENT_DATE ORDER BY date_sold, agreed_selling_price"], "3efed486748a52f56891f73c": ["SELECT property_id, property_address FROM Properties WHERE property_address NOT LIKE '%,%' OR property_address NOT LIKE '% %' OR property_address NOT LIKE '%-%' OR property_address NOT LIKE '%/", "SELECT property_id, property_address\nFROM Properties\nWHERE property_address NOT LIKE '% %' \n\n", "SELECT property_id, property_address FROM properties WHERE property_address NOT LIKE '%, %' OR property_address NOT LIKE '% % %' OR property_address LIKE '%, %, %'\n\n", "SELECT property_id, property_address FROM Properties WHERE property_address NOT LIKE '%,%' OR property_address NOT LIKE '% %' OR property_address NOT LIKE '%-%' OR property_address NOT LIKE '%", "SELECT property_id, property_address FROM Properties WHERE property_address NOT LIKE '%[0-9]%' OR property_address IS NULL\n\n"], "5defb8a1d272e984ebf4bda1": ["SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1", "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1", "SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1", "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1", "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1"], "f4543c26765a32ed682aa65b": ["SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player"], "042ea2bccddee382e1f31261": ["SELECT last_name, count(*) FROM departments AS d JOIN degree_programs AS dp ON d.department_id = dp.department_id JOIN students AS s ON dp.degree_program_id = s.degree_program_id GROUP BY last_name ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT T2.last_name, COUNT(T2.last_name) \nFROM Degree_Programs AS T1 \nJOIN Departments AS T2 ON T1.department_id = T2.department_id \nGROUP BY T2.last_name \nORDER BY COUNT(T2.last_name) DESC \nLIMIT 1\n\n", "SELECT last_name, COUNT(*) \nFROM Departments \nJOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id \nJOIN Students ON Degree_Programs.degree_program_id = Students.degree_program_id \nGROUP BY last_name \nORDER BY COUNT(*) DESC \nLIMIT 1\n\n", "SELECT T2.last_name, COUNT(*) AS cnt\nFROM Departments AS T1\nJOIN People AS T2 ON T1.dean_id = T2.person_id\nGROUP BY T2.last_name\nORDER BY cnt DESC\nLIMIT 1", "SELECT T2.last_name, COUNT(*) \nFROM Degree_Programs AS T1 \nJOIN Departments AS T2 ON T1.department_id = T2.department_id \nGROUP BY T2.last_name \nORDER BY COUNT(*) DESC \nLIMIT 1\n\n"], "33dd210813cfc20791ae5d2d": ["SELECT series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE Episode = \"A Love of a Lifetime\"", "SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Episode = \"A Love of a Lifetime\")\n\n", "SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Episode = \"A Love of a Lifetime\")\n\n", "SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Episode = \"A Love of a Lifetime\") \n\n", "SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series WHERE Episode = \"A Love of a Lifetime\") \n\n"], "8e71f908921ab437942e6f80": ["This question cannot be answered with the provided tables. The tables do not contain information about poker players' achievements or career timelines.", "This question cannot be answered using the provided tables as there is no information about the specific achievements or events in the poker player's career.", "This question cannot be answered with the given tables as there is no information about the achievements or career timeline of the poker players.", "This question cannot be answered with the given tables as there is no information about the achievements or career timeline of the poker players available in the provided tables.", "This question cannot be answered using the given tables. Additional tables related to poker player achievements and tournaments would be needed to generate the career timeline of the top-earning poker player."], "c97d5daf29cbd24633cf0774": ["SELECT AVG(GNP) ,  SUM(Population) FROM country WHERE GovernmentForm  =  'US territory' \n\n", "SELECT avg(GNP) ,  sum(Population) FROM country WHERE GovernmentForm  =  'US territory'", "SELECT avg(GNP) ,  sum(Population) FROM country WHERE GovernmentForm  =  'US territory'\n\n", "SELECT avg(GNP), sum(Population) FROM country WHERE GovernmentForm = 'US territory'", "SELECT avg(GNP) ,  sum(Population) FROM country WHERE GovernmentForm  =  'US territory' \n\n"], "8d6b7eb7cf361fd825f84b07": ["SELECT VOTES.created ,  CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number", "SELECT c.contestant_name, v.created FROM VOTES AS v JOIN CONTESTANTS AS c ON v.contestant_number = c.contestant_number", "SELECT T3.contestant_name ,  T2.state FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state  =  T2.state JOIN CONTESTANTS AS T3 ON T1.contestant_number  =  T3.contestant_number", "SELECT contestant_name, state, COUNT(*) AS total_votes FROM CONTESTANTS \nJOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number \nGROUP BY contestant_name, state", "SELECT V1.created ,  V1.phone_number ,  V1.state ,  C1.contestant_name FROM VOTES AS V1 JOIN CONTESTANTS AS C1 ON V1.contestant_number  =  C1.contestant_number"], "8fb28041577d276f2e549599": ["SELECT Title FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)\n\n", "SELECT Title FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)", "SELECT Title FROM Cartoon WHERE Original_air_date = (SELECT max(Original_air_date) FROM Cartoon)", "SELECT Title FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon) AND Production_code <> NULL\n\n", "SELECT Title FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)\n\n"], "cf56a43c723a5c3ce7cd849b": ["This question cannot be answered with the provided tables.", "This question cannot be answered with the given tables.", "SELECT Height FROM people WHERE Name = 'Roman Bragin' AND Birth_Date = 'birthday'", "This question cannot be answered with the given tables.", "SELECT T2.Name ,  T2.Birth_Date ,  T2.Nationality FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Name  =  \"Roman Bragin\""], "c3261448c4255cff2ad7c90a": ["SELECT count(*) FROM treatments", "SELECT count(*) FROM Treatments", "SELECT count(*) FROM Treatments", "SELECT count(DISTINCT dog_id) FROM Treatments", "SELECT count(DISTINCT dog_id) FROM Treatments"], "b70b5e558f1be74067699dbc": ["SELECT Type, Official_ratings_(millions), Weekly_rank FROM performance ORDER BY Attendance DESC LIMIT 3\n\n", "SELECT Type, Date, Official_ratings_(millions) FROM performance ORDER BY Attendance DESC LIMIT 3\n\n", "SELECT Type, Date, Official_ratings_(millions), Weekly_rank, Share FROM performance ORDER BY Attendance DESC LIMIT 3\n\n", "SELECT Type, Date, Official_ratings_(millions), Weekly_rank, Share FROM performance ORDER BY Attendance DESC LIMIT 3\n\n", "SELECT Type, Official_ratings_(millions), Weekly_rank FROM performance ORDER BY Attendance DESC LIMIT 3\n\n"], "ed635794d5df2083a95328c6": ["SELECT Name FROM singer WHERE Birth_Year > 2011\n\n", "SELECT Name FROM singer WHERE Birth_Year > 2011", "SELECT Name FROM singer WHERE Birth_Year > 2011", "SELECT Name FROM singer WHERE Birth_Year > 2011", "SELECT Name FROM singer WHERE Birth_Year > 2011"], "79d9f5f89b618ce5ab98501d": ["SELECT line_1, line_2 FROM Addresses\n\n", "SELECT line_1, line_2 FROM addresses\n\n", "SELECT line_1, line_2 FROM Addresses\n\n", "SELECT line_1, line_2 FROM addresses\n\n", "SELECT line_1, line_2 FROM Addresses\n\n"], "4aa646b740adb55e7020b89b": ["SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\n", "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000", "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\n", "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\n", "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000\n\n"], "99a260fa3680ef224e4299cb": ["SELECT Directed_by FROM Cartoon WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = \"Rock TV\") \n\n", "SELECT T1.Directed_by FROM cartoon AS T1 JOIN tv_channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = \"Rock TV\"", "SELECT Directed_by FROM Cartoon WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = \"Rock TV\") \n\n", "SELECT Directed_by FROM Cartoon WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = \"Rock TV\") \n\n", "SELECT Directed_by FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = \"Rock TV\") \n\n"], "3c85935b87d33f0ec39feb23": ["SELECT property_name FROM Properties ORDER BY room_count DESC LIMIT 1\n\n", "SELECT property_name FROM Properties ORDER BY room_count DESC LIMIT 1\n\n", "SELECT property_name FROM Properties ORDER BY room_count DESC LIMIT 1\n\n", "SELECT property_name FROM Properties ORDER BY room_count DESC LIMIT 1\n\n", "SELECT property_name FROM Properties ORDER BY room_count DESC LIMIT 1\n\n"], "3294fed9206da1351ec671b5": ["SELECT count(*) FROM singer\n\n", "SELECT count(*) FROM singer\n\n", "SELECT count(*) FROM singer\n\n", "SELECT count(*) FROM singer\n\n", "SELECT count(*) FROM singer\n\n"], "73b7db55cae53f3750df46bf": ["SELECT country, count(*) FROM TV_Channel GROUP BY country ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT Country, COUNT(id) AS Number_of_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_Channels DESC LIMIT 1\n\n", "SELECT Country, COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1\n\n", "SELECT T2.Country, COUNT(*) FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel GROUP BY T2.Country ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT Country, COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1\n\n"], "f96b9a81c12f4cf02cc3f074": ["SELECT line_1, line_2, line_3 FROM Addresses WHERE line_1 = '2294 Grant Square' AND line_2 = 'Apt. 235'", "SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Addresses WHERE line_1 = \"2294 Grant Square\" AND line_2 = \"Apt. 235\"", "SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM addresses WHERE line_1 = \"2294 Grant Square\" AND line_2 = \"Apt. 235\"", "SELECT card_number FROM addresses WHERE line_1 = \"2294 Grant Square\" AND line_2 = \"Apt. 235\"\n\n", "SELECT line_1,line_2,line_3,city,zip_postcode,state_province_county,country FROM addresses WHERE line_1 = \"2294 Grant Square\" AND line_2 = \"Apt. 235\""], "9df059ddd786e5b18a72a2b2": ["SELECT name ,  net_worth_millions ,  birth_year FROM singer WHERE net_worth_millions  >  (SELECT avg(net_worth_millions) + 2 * stddev(net_worth_millions) FROM singer) OR net_worth_millions  <  (SELECT avg(net_worth_millions) - 2 * stddev(net_worth_millions) FROM singer)", "SELECT Name, Birth_Year, Net_Worth_Millions FROM singer WHERE Net_Worth_Millions > (SELECT AVG(Net_Worth_Millions) + 3 * (SELECT STDDEV(Net_Worth_Millions) FROM singer) FROM singer)\n\n", "SELECT Name, Birth_Year, Net_Worth_Millions FROM singer \nWHERE Net_Worth_Millions > (SELECT AVG(Net_Worth_Millions) + 3 * STDDEV(Net_Worth_Millions) FROM singer)\nOR Net_Worth_Millions < (SELECT AVG(Net_Worth_Millions) - 3 * STDDEV(Net_Worth_Millions) FROM singer) \n\n", "SELECT Name, Birth_Year, Net_Worth_Millions\nFROM singer\nWHERE Net_Worth_Millions > (SELECT AVG(Net_Worth_Millions) + 2 * STDDEV(Net_Worth_Millions) FROM singer)\nOR Net_Worth_Millions < (SELECT AVG(Net_Worth_Millions) - 2 * STDDEV(Net_Worth_Millions) FROM singer) \n\n", "SELECT Name, Birth_Year, Net_Worth_Millions FROM singer WHERE Net_Worth_Millions < (SELECT AVG(Net_Worth_Millions) - (2 * STDDEV(Net_Worth_Millions)) FROM singer GROUP BY Birth_Year)\n\n"], "ecbb5f58b01e2122d1a6e683": ["SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT DISTINCT owner_id FROM dogs WHERE abandoned_yn = 'N')", "SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_departed IS NOT NULL)", "SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'N')", "SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NOT NULL)", "SELECT count(*) FROM owners WHERE owner_id NOT IN (SELECT DISTINCT owner_id FROM dogs WHERE date_adopted IS NULL)"], "65098eb912e04ec6660e5cb7": ["There is no table provided with pet information.", "There is no information provided related to pets in the tables provided.", "There seems to be a mistake in the question, as there is no table related to pets in the provided tables.", "There is no information in the provided tables about pets, so this question cannot be answered with the given tables.", "This question cannot be answered with the provided tables as there is no table for pets or height in the tables provided."], "e66f824ed2ace6c209f96dbc": ["SELECT T1.email_address \nFROM students AS T1 \nJOIN departments AS T2 ON T1.department_id = T2.department_id \nWHERE T2.department_name = 'Advisor'", "SELECT T2.email_address\nFROM students AS T1\nJOIN advisors AS T2 ON T1.advisor_id = T2.advisor_id", "SELECT T4.email_address \nFROM students AS T1 \nJOIN student_enrolment AS T2 ON T1.student_id = T2.student_id \nJOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id \nJOIN departments AS T4 ON T3.department_id = T4.department_id", "SELECT T2.email_address \nFROM students AS T1 \nJOIN advisors AS T2 ON T1.advisor_id = T2.advisor_id", "SELECT T1.email_address FROM students AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id"], "34f60bef6182749d92942803": ["SELECT GovernmentForm FROM country WHERE LifeExpectancy = (SELECT max(LifeExpectancy) FROM country)\n\n", "SELECT GovernmentForm FROM country WHERE LifeExpectancy = (SELECT max(LifeExpectancy) FROM country)", "SELECT currency FROM country WHERE LifeExpectancy = (SELECT MAX(LifeExpectancy) FROM country)", "SELECT GovernmentForm FROM country WHERE LifeExpectancy = (SELECT MAX(LifeExpectancy) FROM country)", "SELECT T1.LocalName FROM country AS T1 WHERE LifeExpectancy = (SELECT max(LifeExpectancy) FROM country)"], "529c40f0a12eeb43b05f312e": ["SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance) \n\n", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance) \n\n", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance) \n\n", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance) \n\n"], "70d167a93cdcdf2032380c9e": ["SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = 'eco-friendly' ORDER BY feature_id DESC LIMIT 1\n\n", "SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = \"ECO\" ORDER BY feature_id DESC LIMIT 3\n\n", "SELECT feature_name FROM other_available_features WHERE feature_type_code = 'Eco-friendly' ORDER BY feature_id DESC LIMIT 3\n\n", "SELECT feature_name FROM other_available_features WHERE feature_type_code = 'Eco-friendly' ORDER BY feature_id DESC LIMIT 3\n\n", "SELECT feature_name FROM Other_Available_Features WHERE feature_type_name = 'Eco-friendly building materials' ORDER BY feature_id DESC LIMIT 1\n\n"], "bbf729cb98f17cc9c09440ab": ["SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1\n\n", "SELECT city.Name \nFROM city \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' \nORDER BY city.Population DESC \nLIMIT 1\n\n", "SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\" ORDER BY city.Population DESC LIMIT 1\n\n", "SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1\n\n", "SELECT city.Name \nFROM city \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' \nORDER BY city.Population DESC \nLIMIT 1\n\n"], "c593c9f3c37b49b902480139": ["SELECT count(DISTINCT Nationality) FROM people\n\n", "SELECT COUNT(DISTINCT Nationality) FROM people\n\n", "SELECT count(DISTINCT Nationality) FROM people\n\n", "SELECT count(DISTINCT Nationality) FROM people\n\n", "SELECT count(DISTINCT Nationality) FROM people\n\n"], "537c56318aa585f7a8528791": ["SELECT T1.cost_of_treatment, T2.treatment_type_description \nFROM Treatments AS T1 \nJOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code", "SELECT T1.cost_of_treatment, T2.treatment_type_description \nFROM Treatments AS T1 \nJOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code", "SELECT T1.cost_of_treatment, T2.treatment_type_description\nFROM treatments AS T1\nJOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code", "SELECT T1.cost_of_treatment, T2.treatment_type_description \nFROM treatments AS T1 \nJOIN treatment_types AS T2 \nON T1.treatment_type_code = T2.treatment_type_code", "SELECT T1.cost_of_treatment, T2.treatment_type_description \nFROM Treatments AS T1 \nJOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code"], "9e7308f5026af62352698be0": ["SELECT T1.treatment_type_description FROM treatment_types AS T1 JOIN treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1\n\n", "SELECT treatment_type_description FROM treatment_types AS T1 JOIN treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY sum(cost_of_treatment) ASC LIMIT 1\n\n", "SELECT treatment_type_description FROM treatment_types AS T1 JOIN treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T2.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1\n\n", "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1)", "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1)"], "b4f4051cb8c96389af968729": ["SELECT * FROM song WHERE Sales > 1000000 AND Highest_Position < 10 OR Sales < 10000 AND Highest_Position > 50\n\n", "SELECT * FROM song WHERE Sales > 1000000 AND Highest_Position < 10\n\n", "SELECT * FROM song WHERE Sales > 1000000 AND Highest_Position > 10 OR Sales < 1000000 AND Highest_Position < 10\n\n", "SELECT Title, Sales, Highest_Position FROM song WHERE Sales > 1000000 AND Highest_Position > 10", "SELECT Title, Sales, Highest_Position FROM song WHERE Sales > 1000000 AND Highest_Position > 10\n\n"], "ac7167276f30acd484d1f255": ["SELECT orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance WHERE Type = 'pets_allowed')", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance WHERE Type = 'pets') \n\n", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance WHERE Type = \"Pets Allowed\") \n\n", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance WHERE Type = 'pets allowed') \n\n", "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance WHERE Type = \"Pets Allowed\") \n\n"], "092c3e133899849ddde05b40": ["SELECT avg(grade) FROM highschooler WHERE ID IN (SELECT student_id FROM friend) OR ID IN (SELECT friend_id FROM friend)", "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)", "SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)", "SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) OR ID IN (SELECT friend_id FROM Friend)", "SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)"], "adf535d8041730b8da378f0a": ["SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'\n\n", "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'\n\n", "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'"], "95bf5edeae417b9b54f03fbf": ["SELECT property_address FROM properties WHERE date_on_market = '2022' AND date_sold IS NULL ORDER BY room_count DESC, agreed_selling_price DESC", "SELECT property_address FROM properties WHERE date_on_market = YEAR(GETDATE()) ORDER BY room_count DESC, agreed_selling_price DESC", "SELECT property_address FROM properties WHERE date_on_market >= '2022-01-01' AND date_sold IS NULL ORDER BY vendor_requested_price DESC", "SELECT property_address FROM Properties WHERE date_on_market BETWEEN '01-01-2022' AND '12-31-2022' ORDER BY agreed_selling_price DESC LIMIT 5", "SELECT property_address FROM Properties WHERE date_on_market = YEAR(NOW()) OR date_sold = YEAR(NOW())"], "db7e4ebb5584cde0ab1d3512": ["This question cannot be answered using the provided tables.", "SELECT GovernmentForm FROM country WHERE GNP > GNPOld\n\n", "This question does not pertain to the given tables.", "SELECT GovernmentForm FROM country WHERE GNP > GNPOld", "This question cannot be answered using the given tables."], "e6885ad3f706569898f787d9": ["SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC\n\n", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC"], "1912196c94bc95fcf3262d47": ["SELECT agency_id, AVG(agreed_selling_price) FROM Properties GROUP BY agency_id ORDER BY AVG(agreed_selling_price) DESC LIMIT 1\n\n", "SELECT agency_id, avg(agreed_selling_price) FROM Properties GROUP BY agency_id ORDER BY avg(agreed_selling_price) DESC LIMIT 1\n\n", "SELECT T1.agency_id FROM Properties AS T1 GROUP BY T1.agency_id ORDER BY avg(T1.agreed_selling_price) DESC LIMIT 1\n\n", "SELECT agency_id, AVG(agreed_selling_price) FROM Properties GROUP BY agency_id ORDER BY AVG(agreed_selling_price) DESC LIMIT 1\n\n", "SELECT agency_id, AVG(agreed_selling_price) FROM Properties GROUP BY agency_id ORDER BY AVG(agreed_selling_price) DESC LIMIT 1\n\n"], "47c183f50c929ae80c9ff8c9": ["SELECT avg(Population) FROM country\n\n", "SELECT avg(Population) FROM country", "SELECT avg(Population) FROM country\n\n", "SELECT AVG(Population) FROM country\n\n", "SELECT AVG(Population) FROM country\n\n"], "536a8ce0b6878458fae23356": ["SELECT Title, Directed_by FROM Cartoon WHERE id IN (SELECT id FROM TV_series WHERE Share = (SELECT MAX(Share) FROM TV_series))", "SELECT Title, Directed_by FROM Cartoon WHERE id = (SELECT id FROM TV_series ORDER BY Share DESC LIMIT 1)\n\n", "SELECT Title, Directed_by FROM Cartoon WHERE id = (SELECT id FROM TV_series ORDER BY Share DESC LIMIT 1)\n\n", "SELECT Title, Directed_by FROM Cartoon WHERE id = (SELECT id FROM TV_series ORDER BY Share DESC LIMIT 1)\n\n", "SELECT Title, Directed_by FROM Cartoon WHERE id IN (SELECT id FROM TV_series ORDER BY Share DESC LIMIT 1)\n\n"], "e96bc3de898f01962d88df9d": ["SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n", "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n", "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\""], "3bd780716eb8078933071a67": ["SELECT c.Population, c.Name, c.HeadOfState\nFROM country AS c\nORDER BY c.SurfaceArea DESC\nLIMIT 1", "SELECT c.Population, c.Name, c.HeadOfState\nFROM country c\nWHERE c.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)", "SELECT c.Population, c.Name, c.HeadOfState\nFROM country c\nWHERE c.SurfaceArea = (SELECT max(SurfaceArea) FROM country)", "SELECT c.Population, c.Name, c.HeadOfState \nFROM country c \nWHERE c.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)", "SELECT c.Population, c.Name, c.HeadOfState \nFROM country AS c \nWHERE c.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)"], "47d44315d3665525ccc75a48": ["SELECT max(Share), min(Share) FROM TV_series\n\n", "SELECT max(Share), min(Share) FROM TV_series\n\n", "SELECT max(Share), min(Share) FROM TV_series\n\n", "SELECT max(Share), min(Share) FROM TV_series\n\n", "SELECT max(Share) ,  min(Share) FROM TV_series\n\n"], "1a27c9e972f35c6578d1f8cc": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be answered with the provided tables.", "This question cannot be answered with the given tables."], "1b8858333e0a74d9926d25ba": ["SELECT count(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'", "SELECT count(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'", "SELECT count(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'", "SELECT count(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'", "SELECT count(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'"], "4edb360e87d67bc7c5fd0d8b": ["SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'", "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'", "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'"], "7fb5ba3a2fbf77272aad38f0": ["SELECT max(age) FROM dogs", "SELECT max(age) FROM dogs", "SELECT max(age) FROM dogs", "SELECT max(age) FROM Dogs", "SELECT max(age) FROM dogs"], "d1076cc4d3fa4500f83c860c": ["SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia' AND HeadOfState != 'Female'", "SELECT LifeExpectancy FROM country WHERE Continent = 'Asia' AND HeadOfState LIKE '%male%'", "SELECT LifeExpectancy FROM country WHERE Continent = 'Asia' AND HeadOfState = 'male'", "SELECT LifeExpectancy FROM country WHERE Continent = 'Asia' AND HeadOfState IS NULL", "SELECT LifeExpectancy FROM country WHERE Continent = 'Asia' AND HeadOfState LIKE '%Mr.%'"], "5f134c244887bcbd6677c9bf": ["SELECT name \nFROM Highschooler \nWHERE ID IN (\n    SELECT student_id \n    FROM Friend \n    GROUP BY student_id \n    ORDER BY COUNT(friend_id) DESC \n    LIMIT 1\n)", "SELECT T1.name \nFROM Highschooler AS T1 \nJOIN Friend AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.ID \nORDER BY COUNT(T2.friend_id) DESC \nLIMIT 1", "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY COUNT(friend_id) DESC LIMIT 1)", "SELECT T2.name \nFROM Highschooler AS T1 \nJOIN (SELECT student_id, COUNT(*) AS num_friends \n      FROM Friend \n      GROUP BY student_id \n      ORDER BY num_friends DESC \n      LIMIT 1) AS Most_Friends \nON T1.ID = Most_Friends.student_id", "SELECT name \nFROM Highschooler \nWHERE ID IN \n    (SELECT student_id \n     FROM Friend \n     GROUP BY student_id \n     ORDER BY count(friend_id) DESC \n     LIMIT 1)"], "12cceab9180fa1e4ddb756a8": ["SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil' \n\n", "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'", "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil' \n\n", "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil' \n\n", "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil' \n\n"], "146d098a5072b4f681b58740": ["SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)", "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments) \n\n", "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments) \n\n", "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)"], "749f745b5beb9ef8ed432a7b": ["SELECT COUNT(DISTINCT Nationality) FROM conductor\n\n", "SELECT count(DISTINCT Nationality) FROM conductor\n\n", "SELECT count(DISTINCT Nationality) FROM conductor\n\n", "SELECT COUNT(DISTINCT Nationality) FROM conductor\n\n", "SELECT COUNT(DISTINCT Nationality) FROM conductor\n\n"], "849c2a4774a906538cb15da9": ["SELECT Content FROM TV_Channel WHERE series_name = 'Educational Cartoons'", "SELECT Content FROM TV_Channel WHERE series_name = \"Educational Cartoons\"", "SELECT Content FROM TV_Channel WHERE series_name = \"Educational Cartoons\"", "SELECT Content FROM TV_Channel WHERE series_name = \"Educational Cartoons\"", "SELECT Content FROM TV_Channel WHERE series_name = \"Educational Cartoons\""], "e3fb86cb00776a605037684a": ["SELECT breed_name FROM breeds WHERE breed_code IN (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY count(*) DESC LIMIT 1)", "SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)"], "e0c3cdc3dd210ffd06b67e74": ["SELECT T2.department_name, T2.department_id \nFROM degree_programs AS T1 \nJOIN departments AS T2 ON T1.department_id = T2.department_id \nGROUP BY T2.department_id \nORDER BY count(*) DESC \nLIMIT 1", "SELECT department_name, department_id FROM Departments \nJOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id \nGROUP BY department_id \nORDER BY COUNT(degree_program_id) DESC \nLIMIT 1", "SELECT T2.department_name, T2.department_id \nFROM Degree_Programs AS T1 \nJOIN Departments AS T2 ON T1.department_id = T2.department_id \nGROUP BY T2.department_id \nORDER BY COUNT(*) DESC \nLIMIT 1\n\n", "SELECT T2.department_name, T2.department_id \nFROM Degree_Programs AS T1 \nJOIN Departments AS T2 ON T1.department_id = T2.department_id \nGROUP BY T2.department_id \nORDER BY COUNT(*) DESC \nLIMIT 1", "SELECT T2.department_name, T2.department_id \nFROM Degree_Programs AS T1 \nJOIN Departments AS T2 ON T1.department_id = T2.department_id \nGROUP BY T2.department_id \nORDER BY COUNT(*) DESC \nLIMIT 1"], "0ea1cb2d61c5cf7d2b826259": ["SELECT D.name FROM Dogs AS D JOIN Owners AS O ON D.owner_id = O.owner_id JOIN Treatments AS T ON D.dog_id = T.dog_id WHERE T.cost_of_treatment <= 1000", "SELECT T1.name FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.cost_of_treatment <= 1000", "SELECT D.name \nFROM Dogs AS D \nJOIN Owners AS O ON D.owner_id = O.owner_id \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE T.cost_of_treatment <= 1000", "SELECT D.name \nFROM Dogs AS D \nJOIN Owners AS O ON D.owner_id = O.owner_id\nJOIN Treatments AS T ON D.dog_id = T.dog_id\nWHERE O.owner_id = T.dog_id\nGROUP BY D.dog_id \nHAVING sum(T.cost_of_treatment) <= 1000", "SELECT D.name \nFROM Dogs AS D \nJOIN Owners AS O ON D.owner_id = O.owner_id \nJOIN Treatments AS T ON D.dog_id = T.dog_id \nWHERE T.cost_of_treatment <= 1000"], "878e5107787b954163fa1644": ["SELECT gender FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) ASC LIMIT 1)", "SELECT gender FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY COUNT(*) ASC LIMIT 1)", "SELECT gender FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY COUNT(friend_id) ASC LIMIT 1)", "SELECT gender FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) ASC LIMIT 1)", "SELECT gender FROM Highschooler WHERE ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) ASC LIMIT 1)"], "f282ca30df9aec18fa82ad9f": ["SELECT min(transcript_date) ,  other_details FROM transcripts", "SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date ASC LIMIT 1\n\n", "SELECT min(transcript_date), other_details FROM transcripts", "SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date LIMIT 1\n\n", "SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1\n\n"], "097c3a6b9913a7fa88213957": ["SELECT DISTINCT content FROM TV_Channel WHERE series_name IN (SELECT title FROM Cartoon)", "SELECT DISTINCT Content FROM TV_Channel WHERE series_name = 'Cartoon'", "SELECT Content FROM TV_Channel WHERE series_name = \"Cartoon\" ORDER BY Viewers_m DESC LIMIT 3\n\n", "SELECT DISTINCT Content FROM TV_Channel WHERE Content = \"Cartoons\"", "SELECT DISTINCT Content FROM TV_Channel WHERE Content = 'Cartoons'"], "03d49b20a8e13fe436129582": ["SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Title = \"Imagine\")", "SELECT Singer_ID FROM song WHERE Title = \"Imagine\"", "SELECT Name \nFROM singer\nWHERE Name = \"John Lennon\" AND Title = \"Imagine\"", "SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Title = \"Imagine\")", "SELECT Name FROM singer WHERE singer_id IN (SELECT singer_id FROM song WHERE Title = \"Imagine\")"], "678960e03e810609d798eec6": ["SELECT T1.name, COUNT(T2.friend_id) AS num_friends \nFROM Highschooler AS T1 \nLEFT JOIN Friend AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.name", "SELECT T1.name, COUNT(T2.friend_id) AS num_friends\nFROM Highschooler AS T1\nLEFT JOIN Friend AS T2 ON T1.ID = T2.student_id\nGROUP BY T1.name", "SELECT T1.name, COUNT(T2.friend_id) AS num_friends \nFROM Highschooler AS T1 \nLEFT JOIN Friend AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.name", "SELECT T1.name, COUNT(T2.friend_id) AS num_friends \nFROM Highschooler AS T1 \nJOIN Friend AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.ID, T1.name", "SELECT T1.name, COUNT(T2.friend_id) AS num_friends\nFROM Highschooler AS T1\nLEFT JOIN Friend AS T2 ON T1.ID = T2.student_id\nGROUP BY T1.name"], "ba361cc1b20066ddeac3617d": ["SELECT T2.contact FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings ASC LIMIT 1\n\n", "SELECT * FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)", "SELECT T1.Name ,  T1.People_ID FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1\n\n", "SELECT * FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)", "SELECT * FROM poker_player ORDER BY Earnings ASC LIMIT 1\n\n"], "6046b513f23546c250ffd30e": ["SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'", "SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'"], "eb604fa828f4528e3b5ba28d": ["SELECT city.Name FROM city \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' \nORDER BY city.Population DESC \nLIMIT 1", "SELECT c.Name\nFROM city AS c\nJOIN country AS co ON c.CountryCode = co.Code\nJOIN countrylanguage AS cl ON co.Code = cl.CountryCode\nWHERE cl.Language = 'English'\nORDER BY c.Population DESC\nLIMIT 1", "SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = \"English\" ORDER BY city.Population DESC LIMIT 1\n\n", "SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1\n\n", "SELECT c.Name FROM city AS c\nJOIN countrylanguage AS cl ON c.CountryCode = cl.CountryCode\nWHERE cl.Language = 'English'\nORDER BY c.Population DESC\nLIMIT 1"], "4b48ed020389c70c8cd3ed4d": ["SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\" \n\n", "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\" \n\n", "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\"\n\n", "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' \n\n", "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\" \n\n"], "bb7bd4c22d338cd4c32e1d84": ["SELECT name FROM highschooler WHERE grade = 10\n\n", "SELECT name FROM Highschooler WHERE grade = 10\n\n", "SELECT name FROM Highschooler WHERE grade = 10\n\n", "SELECT name FROM Highschooler WHERE grade = 10\n\n", "SELECT name FROM Highschooler WHERE grade = 10\n\n"], "a7f8f5910569298410303f36": ["SELECT home_city, COUNT(home_city) as count FROM driver GROUP BY home_city ORDER BY count DESC LIMIT 1", "SELECT hometown FROM highschooler GROUP BY hometown ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1", "SELECT home_city, COUNT(home_city) as count FROM driver GROUP BY home_city ORDER BY count DESC LIMIT 1", "SELECT hometown, COUNT(*) AS frequency FROM Highschooler GROUP BY hometown ORDER BY frequency DESC LIMIT 1\n\n"], "ec71f4942a28a4c6def9f336": ["SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000\n\n", "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000\n\n", "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000\n\n", "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000", "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000"], "aecc4139af9821ba9ad26389": ["SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code IN (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1)", "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1)", "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1)", "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1)", "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = (SELECT treatment_type_code FROM treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1)"], "744499da54346dc92e4dbbe9": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "SELECT avg(Height) FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player)", "This question cannot be answered with the given tables.", "This question cannot be answered with the provided tables."], "a20b5c0f4d4f4fc1e73aa0db": ["SELECT city.Name, city.Population, countrylanguage.Language \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.IsOfficial = 'T' \nORDER BY city.Population DESC", "SELECT c.Name, c.Population, cl.Language, cl.Percentage\nFROM city AS c\nJOIN country AS co ON c.CountryCode = co.Code\nJOIN countrylanguage AS cl ON co.Code = cl.CountryCode\nWHERE cl.IsOfficial = 'T'", "SELECT Region, sum(Population) FROM country GROUP BY Region", "SELECT city.Name, city.Population, country.Language, countrylanguage.Percentage \nFROM city \nJOIN country ON city.CountryCode = country.Code \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.IsOfficial = 'T'", "SELECT c.Name, c.Population, l.Language, l.Percentage\nFROM country c\nJOIN countrylanguage l ON c.Code = l.CountryCode\nWHERE l.IsOfficial = 'T' and c.Population > 100000000\nORDER BY c.Population DESC, l.Percentage DESC"], "216b78da6d88a0e62d017a93": ["SELECT count(*) FROM CONTESTANTS WHERE state = 'CA'", "SELECT count(*) FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES WHERE state = 'CA')", "SELECT count(*) FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES WHERE state = 'CA')", "SELECT count(*) FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES WHERE state = 'CA')", "SELECT count(*) FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes WHERE state = 'CA')"], "b7e51710618d51f0fd6d584a": ["SELECT T1.professional_id, T1.first_name, T1.role_code \nFROM professionals AS T1 \nJOIN treatments AS T2 ON T1.professional_id = T2.professional_id \nGROUP BY T1.professional_id \nHAVING COUNT(*) >= 2", "SELECT T1.professional_id, T1.role_code, T1.first_name \nFROM professionals AS T1 \nJOIN treatments AS T2 ON T1.professional_id = T2.professional_id \nGROUP BY T1.professional_id \nHAVING COUNT(*) >= 2", "SELECT professional_id, role_code, first_name FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2", "SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 \nJOIN Treatments AS T2 ON T1.professional_id = T2.professional_id \nGROUP BY T1.professional_id \nHAVING COUNT(*) >= 2", "SELECT T1.professional_id, T1.role_code, T1.first_name\nFROM professionals AS T1\nJOIN treatments AS T2 ON T1.professional_id = T2.professional_id\nGROUP BY T1.professional_id\nHAVING count(*) >= 2"], "1fe00cdfe51c550d564fc178": ["SELECT Performance_ID, Average(Attendance) FROM show GROUP BY Performance_ID", "SELECT Performance_ID, Attendance FROM show ORDER BY Attendance", "SELECT Attendance, Official_ratings_(millions) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID", "SELECT Type, Share FROM performance WHERE Share  >  Official_ratings_(millions)", "SELECT Attendance, Share FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID\n\n"], "fc4e367560be0889d43c8720": ["SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000\n\n", "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000", "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000\n\n", "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000\n\n", "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000\n\n"], "e1a93f4bb1f01b5833790cf2": ["SELECT T1.owner_id, T2.last_name \nFROM owners AS T1 \nJOIN dogs AS T2 ON T1.owner_id = T2.owner_id \nJOIN treatments AS T3 ON T2.dog_id = T3.dog_id \nGROUP BY T1.owner_id \nORDER BY SUM(cost_of_treatment) DESC \nLIMIT 1", "SELECT T1.owner_id ,  T2.last_name FROM owners AS T1 JOIN dogs AS T3 ON T1.owner_id = T3.owner_id JOIN treatments AS T4 ON T3.dog_id = T4.dog_id GROUP BY T1.owner_id ORDER BY sum(cost_of_treatment) DESC LIMIT 1\n\n", "SELECT T1.owner_id, T1.last_name \nFROM Owners AS T1 \nJOIN Dogs AS T2 ON T1.owner_id = T2.owner_id \nJOIN Treatments AS T3 ON T2.dog_id = T3.dog_id \nGROUP BY T1.owner_id \nORDER BY SUM(cost_of_treatment) DESC \nLIMIT 1", "SELECT T1.owner_id, T2.last_name \nFROM owners AS T1 \nJOIN dogs AS T2 ON T1.owner_id = T2.owner_id \nJOIN treatments AS T3 ON T2.dog_id = T3.dog_id \nGROUP BY T1.owner_id \nORDER BY SUM(cost_of_treatment) DESC \nLIMIT 1", "SELECT T1.owner_id, T2.last_name \nFROM treatments AS T1 \nJOIN dogs AS T2 ON T1.dog_id = T2.dog_id \nJOIN owners AS T3 ON T2.owner_id = T3.owner_id \nGROUP BY T2.owner_id \nORDER BY SUM(cost_of_treatment) DESC \nLIMIT 1"], "ada4fad3b9c0d8dae2a49b0b": ["SELECT T1.breed_name FROM breeds AS T1 JOIN dogs AS T2 ON T1.breed_code = T2.breed_code JOIN owners AS T3 ON T2.owner_id = T3.owner_id WHERE T3.state = \"US\" GROUP BY T1.breed_name ORDER BY COUNT(*) DESC LIMIT 1", "SELECT breed_name, count(*) as breed_count\nFROM breeds\nJOIN dogs ON breeds.breed_code = dogs.breed_code\nJOIN owners ON dogs.owner_id = owners.owner_id\nWHERE owners.state = 'US'\nGROUP BY breed_name\nORDER BY breed_count DESC\nLIMIT 1", "SELECT breed_name, count(*) FROM dogs AS d JOIN breeds AS b ON d.breed_code = b.breed_code JOIN owners AS o ON d.owner_id = o.owner_id WHERE o.state = 'US' GROUP BY breed_name ORDER BY count(*) DESC LIMIT 1", "SELECT breed_name, COUNT(*) as breed_count\nFROM Dogs\nJOIN Breeds ON Dogs.breed_code = Breeds.breed_code\nJOIN Owners ON Dogs.owner_id = Owners.owner_id\nWHERE Owners.state = 'US'\nGROUP BY breed_name\nORDER BY breed_count DESC\nLIMIT 1", "SELECT breed_name, count(*) FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code GROUP BY breed_name ORDER BY count(*) DESC LIMIT 1\n\n"], "1a6af648ff64599ad8cbc0a1": ["SELECT section_description FROM sections WHERE section_name = 'h'\n\n", "SELECT * FROM sections WHERE section_name = 'h' \n\n", "SELECT section_description FROM Sections WHERE section_name = 'h'", "SELECT section_description FROM sections WHERE section_name = 'h'\n\n", "SELECT section_description FROM Sections WHERE section_name = 'h'"], "629dbb17e02095c82998f81d": ["SELECT count(*) FROM dogs WHERE breed_code = 'allergic to proteins'", "SELECT count(*) FROM Dogs WHERE breed_code = 'protein_allergy'", "SELECT count(*) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments WHERE treatment_type_code = 'allergy_protein')", "SELECT count(*) FROM Dogs WHERE breed_code = 'Proteins'", "SELECT count(*) FROM Dogs WHERE breed_code = 'protein_allergy'"], "43cd5c6881b69e90a540d39a": ["SELECT Title FROM Cartoon ORDER BY Title ASC\n\n", "SELECT Title FROM Cartoon ORDER BY Title ASC\n\n", "SELECT Title FROM Cartoon ORDER BY Title ASC\n\n", "SELECT Title FROM Cartoon ORDER BY Title ASC\n\n", "SELECT Title FROM Cartoon ORDER BY Title ASC\n\n"], "24247889318a84fb8eafe6b6": ["SELECT name \nFROM Highschooler \nWHERE grade > 5 \nAND ID IN (SELECT student_id \n           FROM Friend \n           GROUP BY student_id \n           HAVING count(*) >= 2)", "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(friend_id) >= 2)", "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 2)", "SELECT name \nFROM Highschooler \nWHERE grade > 5 \nAND ID IN (SELECT student_id \n           FROM Friend \n           GROUP BY student_id \n           HAVING count(*) >= 2)", "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 2)"], "cecabe2bbed29f9f80ba4f6c": ["SELECT section_name FROM sections ORDER BY section_name DESC\n\n", "SELECT section_name FROM sections ORDER BY section_name DESC\n\n", "SELECT section_name FROM sections ORDER BY section_name DESC\n\n", "SELECT section_name FROM Sections ORDER BY section_name DESC\n\n", "SELECT section_name FROM sections ORDER BY section_name DESC\n\n"], "7e30a2ccadda16fba18d1552": ["SELECT Name, \nCASE \n    WHEN Population < 100000 THEN 'Small City'\n    WHEN Population >= 100000 AND Population < 500000 THEN 'Medium City'\n    WHEN Population >= 500000 THEN 'Large City'\nEND AS City_Cluster\nFROM city WHERE ID = (SELECT capital FROM country WHERE Code = city.CountryCode)", "This question cannot be answered with the provided tables as there is no information about the proximity of cities to the capital in the given tables.", "SELECT c.Name AS City, cc.Name AS Country, \nCASE\n    WHEN c.Name = co.Capital THEN 'Capital City'\n    WHEN c.District = co.Capital THEN 'Same District as Capital'\n    WHEN c.CountryCode = co.Code THEN 'Same Country as Capital'\n    ELSE 'Other'\nEND AS Proximity\nFROM city AS c\nJOIN country AS co ON c.CountryCode = co.Code\nJOIN city AS cc ON co.Capital = cc.Name", "SELECT c.Name AS City, co.Name AS Country, \nCASE \n    WHEN c.District = co.Capital THEN 'Capital'\n    WHEN c.Population > 500000 THEN 'Major City'\n    ELSE 'Small City'\nEND AS City_Cluster\nFROM city AS c \nJOIN country AS co ON c.CountryCode = co.Code", "SELECT Name AS City, \nCASE \n    WHEN Name = (SELECT Name FROM City WHERE ID = Capital) THEN 'Capital City' \n    WHEN Population > (SELECT Population FROM City WHERE ID = Capital) * 0.5 THEN 'Large City' \n    ELSE 'Small City' \nEND AS City_Cluster \nFROM City"], "186bed2785357a17bfb96546": ["SELECT id FROM TV_Channel WHERE Content = \"TV series\" GROUP BY id HAVING count(*) > 2\n\n", "SELECT id FROM TV_Channel WHERE Content = \"TV series\" HAVING count(id) > 2\n\n", "SELECT id FROM TV_Channel WHERE Content > 2\n\n", "SELECT id FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon GROUP BY Channel HAVING COUNT(Channel) > 2) UNION SELECT id FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series GROUP BY Channel HAVING COUNT(Channel) > 2)", "SELECT id FROM TV_Channel WHERE Content > 2\n\n"], "4e0e56fcb5ed566430405dc6": ["SELECT count(*) FROM TV_Channel WHERE series_name = \"Sky Radio\"", "SELECT count(*) FROM Cartoon WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')", "SELECT count(*) FROM cartoon WHERE channel = (SELECT id FROM tv_channel WHERE series_name = 'Sky Radio')", "SELECT count(*) FROM cartoon WHERE channel = (SELECT id FROM tv_channel WHERE series_name = 'Sky Radio')", "SELECT count(*) FROM TV_Channel WHERE series_name = \"Sky Radio\" AND Content = \"Horses\""], "36004de0a3297a46a5e6f418": ["SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward' \n\n", "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'", "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'", "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'", "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'"], "744fd32d32a7e119f12ee89e": ["This question cannot be answered with the given tables.", "There is no information provided in the tables given about datetime payment or the medical department.", "This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "Sorry, the provided tables do not have any columns related to datetime payment."], "8c86a03ac9923659a52ae9df": ["SELECT T1.owner_id, T1.last_name \nFROM owners AS T1 \nJOIN dogs AS T2 ON T1.owner_id = T2.owner_id \nJOIN treatments AS T3 ON T2.dog_id = T3.dog_id \nGROUP BY T1.owner_id \nORDER BY SUM(cost_of_treatment) DESC \nLIMIT 1", "SELECT T1.owner_id, T1.last_name \nFROM owners AS T1 \nJOIN dogs AS T2 ON T1.owner_id = T2.owner_id \nJOIN treatments AS T3 ON T2.dog_id = T3.dog_id \nGROUP BY T1.owner_id \nORDER BY SUM(cost_of_treatment) DESC \nLIMIT 1", "SELECT T1.owner_id, T1.last_name\nFROM owners AS T1\nJOIN dogs AS T2 ON T1.owner_id = T2.owner_id\nJOIN treatments AS T3 ON T2.dog_id = T3.dog_id\nGROUP BY T1.owner_id\nORDER BY SUM(cost_of_treatment) DESC\nLIMIT 1", "SELECT T1.owner_id, T1.last_name \nFROM owners AS T1 \nJOIN dogs AS T2 ON T1.owner_id = T2.owner_id \nJOIN treatments AS T3 ON T2.dog_id = T3.dog_id \nGROUP BY T1.owner_id \nORDER BY SUM(cost_of_treatment) DESC \nLIMIT 1", "SELECT T1.owner_id ,  T2.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id JOIN treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(cost_of_treatment) DESC LIMIT 1\n\n"], "a205470ab2fd010ff2c40e31": ["SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T2.student_id HAVING count(*) >= 3", "SELECT name \nFROM Highschooler \nWHERE ID IN (\n    SELECT student_id \n    FROM Friend \n    GROUP BY student_id \n    HAVING count(*) >= 3\n)", "SELECT name \nFROM Highschooler \nWHERE ID IN (\n    SELECT student_id \n    FROM Friend \n    GROUP BY student_id \n    HAVING COUNT(friend_id) >= 3\n)", "SELECT T1.name \nFROM Highschooler AS T1 \nJOIN Friend AS T2 ON T1.ID = T2.student_id \nGROUP BY T2.student_id \nHAVING COUNT(*) >= 3", "SELECT T1.name \nFROM Highschooler AS T1 \nJOIN Friend AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.ID \nHAVING count(T2.friend_id) >= 3"], "55f8f9e89873e461af1fcf32": ["SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n", "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\n\n"], "10149b902e045def530f3b67": ["SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Christy Walton') \n\n", "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Christy Walton')", "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Christy Walton')", "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Christy Walton')", "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Christy Walton')"], "5b7d6174e45ee2778ff0bda2": ["SELECT avg(Year_of_Work) FROM conductor", "SELECT avg(Year_of_Work) FROM conductor", "SELECT avg(Year_of_Work) FROM conductor", "SELECT avg(Year_of_Work) FROM conductor", "SELECT avg(Year_of_Work) FROM conductor"], "e1e647c140dbfacb4d987e0d": ["SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')", "SELECT T2.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T2.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T'", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')", "SELECT DISTINCT Name \nFROM country \nWHERE Code IN (SELECT CountryCode \n               FROM countrylanguage \n               WHERE Language = 'English' AND IsOfficial = 'T'\n              INTERSECT \n              SELECT CountryCode \n              FROM countrylanguage \n              WHERE Language = 'French' AND IsOfficial = 'T')"], "efa184eb05634f967a1e0fa3": ["SELECT DISTINCT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE (Language = 'English' OR Language = 'Dutch') AND IsOfficial = 'T')", "SELECT DISTINCT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE (Language = \"English\" OR Language = \"Dutch\") AND IsOfficial = \"T\")", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch') AND IsOfficial = 'T')", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = \"T\" AND Language IN (\"English\", \"Dutch\"))", "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch' AND IsOfficial = 'T')"], "5cb067e3fad0bf34dfa52bf3": ["SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)"], "b07f57d8dacc3e12a014851f": ["SELECT avg(Attendance) FROM show\n\n", "SELECT avg(Attendance) FROM show\n\n", "SELECT avg(Attendance) FROM show\n\n", "SELECT avg(Attendance) FROM show\n\n", "SELECT avg(Attendance) FROM show\n\n"], "dc2c8baad8e77ac72458be23": ["SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'", "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'"], "b3cf4d52678702a3d7725a15": ["SELECT T1.size_description ,  T2.dietary_requirements FROM sizes AS T1 JOIN dogs AS T2 ON T1.size_code = T2.size_code", "SELECT T1.size_description, T2.breed_name FROM sizes AS T1 JOIN breeds AS T2 ON T1.size_code = T2.size_code", "SELECT T1.size_description ,  T2.breed_name ,  T2.dog_id ,  T2.name FROM sizes AS T1 JOIN dogs AS T2 ON T1.size_code  =  T2.size_code", "SELECT T1.size_description, T1.breed_name, T1.breed_code \nFROM sizes AS T1 \nJOIN breeds AS T2 ON T1.size_code = T2.size_code", "SELECT T1.size_description ,  T2.dietary_requirements FROM sizes AS T1 JOIN breeds AS T2 ON T1.size_code = T2.size_code"], "88ced034f0fbe7affe590dfe": ["SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey') \n\n", "SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')", "SELECT DISTINCT Country \nFROM TV_Channel \nWHERE id NOT IN (SELECT Channel \n                 FROM Cartoon \n                 WHERE Written_by = 'Todd Casey')", "SELECT DISTINCT country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')", "SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey') \n\n"], "2e47ef62ff1d4606767b05a3": ["SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\n\n", "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\n\n", "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\n\n", "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000", "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000\n\n"], "a8318e6c6ef73129eddd0058": ["SELECT max(Original_air_date) FROM Cartoon WHERE Title = 'Evil Under the Sea' \n\n", "SELECT MAX(Original_air_date) FROM Cartoon WHERE Title = \"Evil Under the Sea\"", "SELECT MAX(Original_air_date) FROM Cartoon WHERE Title = \"Evil Under the Sea\" \n\n", "SELECT max(Original_air_date) FROM Cartoon WHERE Title = \"Evil Under the Sea\"", "SELECT MAX(Original_air_date) FROM cartoon WHERE Title = \"Evil Under the Sea\""], "8077b3bcba2c2c36ff526a00": ["SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')", "SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n", "SELECT count(*) FROM friend WHERE student_id = (SELECT ID FROM highschooler WHERE name = 'Kyle') \n\n", "SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n", "SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle') \n\n"], "cd076fe8494949f88fba54fa": ["SELECT Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Height DESC LIMIT 1\n\n", "SELECT MAX(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY Height DESC LIMIT 1\n\n", "SELECT Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Height DESC LIMIT 1\n\n", "SELECT Money_Rank FROM poker_player WHERE People_ID = (SELECT People_ID FROM people ORDER BY Height DESC LIMIT 1)", "SELECT money_rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY height DESC LIMIT 1\n\n"], "eaacb676c263b587f61baf9b": ["SELECT count(*) FROM conductor", "SELECT count(*) FROM conductor\n\n", "SELECT count(*) FROM conductor\n\n", "SELECT count(*) FROM conductor\n\n", "SELECT count(*) FROM conductor\n\n"], "b558707edbad15e608784157": ["SELECT role_code FROM owners WHERE first_name = \"Nora\" AND last_name = \"Haley\"", "SELECT role_code FROM professionals WHERE first_name = 'Nora' AND last_name = 'Haley'", "SELECT T2.role_code FROM Owners AS T1 JOIN Professionals AS T2 ON T1.owner_id = T2.professional_id WHERE first_name = 'Nora' AND last_name = 'Haley'", "SELECT T2.role_code FROM owners AS T1 JOIN professionals AS T2 ON T1.owner_id = T2.professional_id WHERE T1.first_name = \"Nora\" AND T1.last_name = \"Haley\"", "SELECT role_code FROM professionals WHERE first_name = 'Nora' AND last_name = 'Haley'"], "38cce00aff3cea5990b19205": ["SELECT T1.first_name ,  T1.last_name ,  T3.company_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN treatments AS T3 ON T2.dog_id  =  T3.dog_id", "SELECT T1.first_name ,  T1.last_name ,  T2.breed_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id", "SELECT T1.first_name ,  T1.last_name ,  T2.breed_name  FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id", "SELECT T2.first_name ,  T2.last_name ,  T1.breed_name FROM dogs AS T1 JOIN owners AS T2 ON T1.owner_id = T2.owner_id", "SELECT first_name ,  last_name FROM owners WHERE owner_id IN (SELECT owner_id FROM dogs WHERE owner_id IN (SELECT owner_id FROM owners))"], "27e1eb8f0f70e63aa0ab4034": ["SELECT c.Title FROM Cartoon c\nJOIN TV_Channel tc ON c.Channel = tc.id\nWHERE tc.series_name = \"Sky Radio\"", "SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = \"Sky Radio\") \n\n", "SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = \"Sky Radio\")", "SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = \"Sky Radio\")", "SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')"], "cac1ba32f6c0a08bec5526f7": ["SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\"", "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\" \n\n", "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\" \n\n", "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\" \n\n", "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\""], "9a3542494f64063701453d28": ["SELECT max(Share), min(Share) FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id", "SELECT max(Share) ,  min(Share) FROM Cartoon\n\n", "SELECT max(Share), min(Share) FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id", "SELECT max(Share), min(Share) FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN TV_series AS T3 ON T2.id = T3.Channel", "SELECT max(Share), min(Share) FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id"], "82dbe618440a5289a31a6a5d": ["SELECT T2.contestant_number, T2.contestant_name FROM votes AS T1 JOIN contestants AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_number, T2.contestant_name ORDER BY COUNT(*) ASC LIMIT 1\n\n", "SELECT T1.contestant_number, T1.contestant_name \nFROM contestants AS T1 \nJOIN votes AS T2 ON T1.contestant_number = T2.contestant_number \nGROUP BY T1.contestant_number, T1.contestant_name \nORDER BY COUNT(*) ASC \nLIMIT 1", "SELECT T2.contestant_number ,  T2.contestant_name \nFROM votes AS T1 \nJOIN contestants AS T2 ON T1.contestant_number = T2.contestant_number \nGROUP BY T2.contestant_number, T2.contestant_name \nORDER BY count(*) ASC \nLIMIT 1", "SELECT T1.contestant_number, T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1\n\n", "SELECT contestant_number, contestant_name \nFROM contestants \nWHERE contestant_number IN (\n    SELECT contestant_number \n    FROM votes \n    GROUP BY contestant_number \n    ORDER BY COUNT(*) ASC \n    LIMIT 1\n)"], "fab9100ba1060f3c94f23186": ["SELECT T1.Name, T2.Orchestra\nFROM conductor AS T1\nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID", "SELECT T1.Name, T2.Orchestra \nFROM conductor AS T1 \nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID", "SELECT T1.Name, T2.Orchestra \nFROM conductor AS T1 \nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID", "SELECT T1.Name, T2.Orchestra \nFROM conductor AS T1 \nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID", "SELECT T1.Name, T2.Orchestra \nFROM conductor AS T1 \nJOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID"], "091ff884276e6b641bc37aaa": ["SELECT department_name FROM departments ORDER BY other_details LIMIT 1\n\n", "SELECT department_name FROM Departments ORDER BY other_details ASC LIMIT 1\n\n", "SELECT department_name FROM departments ORDER BY other_details ASC LIMIT 1\n\n", "SELECT department_name FROM departments ORDER BY other_details LIMIT 1\n\n", "SELECT department_name FROM departments ORDER BY other_details ASC LIMIT 1\n\n"], "30092b72a8d61be427bdc9cd": ["SELECT name FROM Highschooler WHERE name = 'Jordan'", "SELECT name FROM Highschooler WHERE name = 'Jordan'", "SELECT name FROM Highschooler WHERE name = 'Jordan'", "SELECT name FROM Highschooler WHERE name = 'Jordan' \n\n", "SELECT name FROM Highschooler WHERE name = 'Jordan'"], "1516de4b19181df071c1c95a": ["SELECT contestant_name, state FROM CONTESTANTS", "SELECT contestant_name, state FROM CONTESTANTS", "SELECT contestant_name, state FROM CONTESTANTS", "SELECT contestant_name, state FROM CONTESTANTS", "SELECT contestant_name, state FROM CONTESTANTS"], "ab874a26cb99f833fd02d4b7": ["SELECT * FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID AND Friend.friend_id = Highschooler.ID", "SELECT * FROM Friend JOIN Highschooler ON Friend.friend_id = Highschooler.ID AND Friend.student_id = Highschooler.ID\n\n", "SELECT T1.name ,  T2.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id", "SELECT F1.name AS student_name, F2.name AS friend_name, L1.name AS liked_name \nFROM Highschooler AS F1 \nJOIN Friend ON F1.ID = Friend.student_id \nJOIN Highschooler AS F2 ON Friend.friend_id = F2.ID \nJOIN Likes ON F1.ID = Likes.student_id \nJOIN Highschooler AS L1 ON Likes.liked_id = L1.ID", "SELECT F1.name AS student_name, F2.name AS friend_name, F3.name AS liked_name \nFROM Highschooler AS F1 \nJOIN Friend ON F1.ID = Friend.student_id \nJOIN Highschooler AS F2 ON Friend.friend_id = F2.ID \nJOIN Likes ON F1.ID = Likes.student_id \nJOIN Highschooler AS F3 ON Likes.liked_id = F3.ID"], "dc9dfe67e53c0154ebe08ddf": ["SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000", "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE continent  =  'North America' AND SurfaceArea  >  3000\n\n", "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000", "SELECT sum(Population), avg(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000", "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent = \"North America\" AND SurfaceArea > 3000"], "de4fc5e4e1825e2254b78f29": ["SELECT count(*) FROM country WHERE Continent = 'Asia'", "SELECT count(*) FROM country WHERE Continent = 'Asia'", "SELECT count(*) FROM country WHERE Continent = 'Asia'", "SELECT count(*) FROM country WHERE region = 'Asia'", "SELECT count(*) FROM country WHERE Continent = 'Asia'"], "cca07b3afb75562ae46d6124": ["SELECT charge_type, charge_amount FROM Charges\n\n", "SELECT charge_type, charge_amount FROM Charges\n\n", "SELECT charge_type, charge_amount FROM Charges\n\n", "SELECT charge_type, charge_amount FROM charges\n\n", "SELECT charge_type, charge_amount FROM charges\n\n"], "0612dd57df6d0fa44facb205": ["SELECT Major_Record_Format, COUNT(*) \nFROM orchestra \nGROUP BY Major_Record_Format \nORDER BY COUNT(*) ASC\n\n", "SELECT Major_Record_Format, COUNT(*) AS Record_Count \nFROM orchestra \nGROUP BY Major_Record_Format \nORDER BY Record_Count ASC", "SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC\n\n", "SELECT Major_Record_Format, COUNT(*) FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC\n\n", "SELECT Major_Record_Format, COUNT(Orchestra_ID) AS Count FROM orchestra GROUP BY Major_Record_Format ORDER BY Count ASC\n\n"], "015d917e8e3ca31a843ebb44": ["SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade", "SELECT grade, count(*) FROM Highschooler GROUP BY grade\n\n", "SELECT grade, count(*) FROM Highschooler GROUP BY grade\n\n", "SELECT grade, count(*) FROM Highschooler GROUP BY grade\n\n", "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade\n\n"], "474fe619fae762fe3bb2167c": ["SELECT Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')", "SELECT Name FROM country WHERE Continent = \"Asia\" ORDER BY LifeExpectancy ASC LIMIT 1\n\n", "SELECT Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')", "SELECT Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia')\n\n", "SELECT Name FROM country WHERE Region = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1\n\n"], "e5168c7a69eebb4b5923e27a": ["SELECT first_name, middle_name, last_name \nFROM students \nWHERE student_id IN (SELECT student_id \n                     FROM student_enrolment \n                     WHERE degree_program_id IN (SELECT degree_program_id \n                                                 FROM degree_programs \n                                                 WHERE degree_summary_name = 'Bachelor'))", "SELECT first_name, middle_name, last_name \nFROM students \nWHERE student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id IN \n(SELECT degree_program_id FROM degree_programs WHERE degree_summary_name LIKE '%Bachelor%'))", "SELECT first_name, middle_name, last_name \nFROM students \nWHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelor')", "SELECT first_name, middle_name, last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id JOIN degree_programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'", "SELECT first_name, middle_name, last_name \nFROM students \nWHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelor')"], "43e70683241fb9dd694f3bc8": ["SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language != \"English\" \n\n", "SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language != 'English'\n\n", "SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language <> 'English'\n\n", "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English' \n\n", "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'\n\n"], "a414ae419e0148d45fa7b038": ["SELECT COUNT(DISTINCT CL.Language) \nFROM country C \nJOIN countrylanguage CL ON C.Code = CL.CountryCode \nWHERE C.IndepYear < 1930 AND CL.IsOfficial = 'T'", "SELECT count(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) AND IsOfficial = 'T'", "SELECT count(DISTINCT Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'", "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) AND IsOfficial = 'T'", "SELECT COUNT(DISTINCT Language) FROM countrylanguage AS cl JOIN country AS c ON cl.CountryCode = c.Code WHERE c.IndepYear < 1930 AND cl.IsOfficial = 'T'"], "d9d530b1e1aaed276d79cd57": ["SELECT avg(episode) FROM TV_series\n\n", "SELECT avg(episode) FROM TV_series\n\n", "SELECT avg(episode) FROM TV_series\n\n", "SELECT avg(episode) FROM TV_series\n\n", "SELECT avg(Episode) FROM TV_series\n\n"], "e3471190a15b126d8d38fcc5": ["SELECT created FROM votes ORDER BY created", "There is no specific question that directly relates to the significance of vote timing in the provided tables.", "SELECT created FROM VOTES ORDER BY created", "SELECT created FROM VOTES ORDER BY created", "SELECT created FROM VOTES ORDER BY created"], "64c3f5dd2f3d59fb266ad35b": ["SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD','DVD')\n\n", "SELECT count(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD' \n\n", "SELECT count(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD') \n\n", "SELECT count(*) FROM orchestra WHERE Major_Record_Format IN ('CD','DVD')\n\n", "SELECT count(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'\n\n"], "017cec628701d1beaddf9363": ["SELECT email_address, cell_number, home_phone FROM Professionals\n\n", "SELECT email_address, cell_number, home_phone FROM Professionals\n\n", "SELECT email_address, cell_number, home_phone FROM Professionals\n\n", "SELECT email_address, cell_number, home_phone FROM Professionals\n\n", "SELECT email_address, cell_number, home_phone FROM professionals"], "7da2af4fb8e92b0483e9fd8c": ["SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n", "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\" \n\n", "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\"", "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\""], "982080ecbe083e41b2a02aea": ["SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'", "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%' \n\n", "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'", "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%' \n\n", "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'"], "d16bdd4e231d1fd5a8b8d7cf": ["SELECT area_code FROM area_code_state WHERE state IN (SELECT state FROM votes GROUP BY state ORDER BY count(*) DESC LIMIT 1)", "SELECT area_code FROM area_code_state WHERE state = (SELECT state FROM votes GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT area_code FROM AREA_CODE_STATE WHERE state IN (SELECT state FROM VOTES GROUP BY state ORDER BY count(*) DESC LIMIT 1)", "SELECT area_code FROM AREA_CODE_STATE WHERE state IN (SELECT state FROM VOTES GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1)", "SELECT area_code FROM AREA_CODE_STATE WHERE state IN (SELECT state FROM VOTES GROUP BY state ORDER BY count(*) DESC LIMIT 1)"], "af801834bfc72b79c062fa2b": ["SELECT Final_Table_Made, Best_Finish FROM poker_player\n\n", "SELECT Final_Table_Made, Best_Finish FROM poker_player\n\n", "SELECT Final_Table_Made, Best_Finish FROM poker_player\n\n", "SELECT Final_Table_Made, Best_Finish FROM poker_player\n\n", "SELECT Final_Table_Made ,  Best_Finish FROM poker_player\n\n"], "0f6a48de4d63287dc8c8f725": ["SELECT T1.Name, T2.Title, T2.Sales, T2.Highest_Position FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Name = 'Liliane Bettencourt'", "SELECT Name, Net_Worth_Millions FROM singer WHERE Name = 'Liliane Bettencourt'", "SELECT Name, SUM(Sales) AS Total_Sales FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE Name = 'Liliane Bettencourt' GROUP BY Name", "SELECT Name, Net_Worth_Millions FROM singer WHERE Name = 'Liliane Bettencourt'", "SELECT Name, AVG(Sales) as Average_Sales, MAX(Highest_Position) as Highest_Position FROM singer AS s JOIN song AS so ON s.Singer_ID = so.Singer_ID WHERE s.Name = 'Liliane Bettencourt'"], "b361133f97c72ce7c0a23d8a": ["SELECT count(*) FROM countrylanguage WHERE Language IN ('English', 'Dutch')", "SELECT count(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch'", "SELECT count(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English','Dutch')", "SELECT count(*) FROM countrylanguage WHERE Language IN ('English', 'Dutch')", "SELECT count(*) FROM countrylanguage WHERE Language IN ('English','Dutch')"], "fad4803d8b796c73d6763884": ["SELECT T1.series_name, T2.Viewers_m * T2.Rating AS Revenue\nFROM TV_Channel AS T1\nJOIN TV_series AS T2 ON T1.id = T2.Channel", "SELECT T1.series_name, T2.Viewers_m * T3.Pay_per_view_PPV AS Revenue\nFROM TV_Channel AS T1\nJOIN TV_series AS T2 ON T1.id = T2.Channel\nJOIN TV_Channel AS T3 ON T2.Channel = T3.id", "SELECT series_name, Pay_per_view_PPV FROM TV_Channel", "SELECT T1.series_name, T2.Viewers_m * T1.Package_Option AS revenue \nFROM TV_Channel AS T1 \nJOIN TV_series AS T2 ON T1.id = T2.Channel", "SELECT T1.series_name, T2.Viewers_m * T2.Rating AS Revenue \nFROM TV_Channel AS T1 \nJOIN TV_series AS T2 \nON T1.id = T2.Channel"], "748770af0c4badee8150b1af": ["SELECT DATEDIFF(NOW(), date_of_birth) FROM Professionals WHERE first_name = \"Vernice\" AND last_name = \"Veterinarian\"", "SELECT DATEDIFF(CURDATE(), MIN(date_of_treatment)) / 365 AS years_of_experience\nFROM treatments\nWHERE professional_id = (SELECT professional_id FROM professionals WHERE first_name = 'Vernice' AND last_name = 'Veterinarian')", "SELECT DATEDIFF(CURDATE(), MIN(date_of_treatment)) / 365 AS years_of_experience FROM treatments WHERE professional_id = (SELECT professional_id FROM professionals WHERE first_name = 'Vernice')", "SELECT datediff(year, min(date_of_treatment), getdate()) FROM treatments WHERE professional_id = (SELECT professional_id FROM professionals WHERE first_name = 'Vernice' AND last_name = 'Veterinarian')", "SELECT DATEDIFF(CURDATE(), MIN(date_of_treatment)) AS years_of_experience FROM treatments WHERE professional_id = (SELECT professional_id FROM professionals WHERE first_name = 'Vernice')"], "fa303a873527970ed6b34ad5": ["SELECT department_description FROM departments WHERE department_name LIKE '%computer%'", "SELECT department_description FROM departments WHERE department_name LIKE '%computer%' \n\n", "SELECT department_description FROM departments WHERE department_name LIKE '%computer%' \n\n", "SELECT department_description FROM departments WHERE department_name LIKE '%computer%'", "SELECT department_description FROM departments WHERE department_name LIKE '%computer%'"], "b146c99f2e434347ace2a04d": ["This question cannot be answered with the given tables.", "SELECT title FROM song", "SELECT password FROM songs", "SELECT Title FROM song", "This question cannot be answered with the given tables as there are no columns related to passwords in the tables provided."], "465a043eba42abe75ffbf0a7": ["SELECT T1.name, COUNT(T2.friend_id) AS num_friends\nFROM Highschooler AS T1\nLEFT JOIN Friend AS T2 ON T1.ID = T2.student_id\nGROUP BY T1.name", "SELECT T1.name, COUNT(T2.friend_id) AS num_friends\nFROM Highschooler AS T1\nJOIN Friend AS T2 ON T1.ID = T2.student_id\nGROUP BY T1.name", "SELECT T1.name, COUNT(T2.friend_id) \nFROM Highschooler AS T1 \nLEFT JOIN Friend AS T2 ON T1.ID = T2.student_id \nGROUP BY T1.name", "SELECT T1.name, COUNT(T2.friend_id) AS num_friends\nFROM Highschooler AS T1\nJOIN Friend AS T2 ON T1.ID = T2.student_id\nGROUP BY T1.ID, T1.name", "SELECT T1.name, COUNT(T2.friend_id) AS num_friends\nFROM Highschooler AS T1\nLEFT JOIN Friend AS T2 ON T1.ID = T2.student_id\nGROUP BY T1.name"], "16c62ec738d38861692b6551": ["SELECT count(*) FROM country WHERE continent = 'Asia'", "SELECT count(*) FROM country WHERE Continent = 'Asia'", "SELECT count(*) FROM country WHERE Continent = 'Asia'", "SELECT count(*) FROM country WHERE Continent = 'Asia'", "SELECT count(*) FROM country WHERE Continent = 'Asia'"], "a337b30452aa09bd49f1e8b1": ["SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'", "SELECT zip_postcode FROM addresses WHERE city = \"Port Chelsea\"", "SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'", "SELECT zip_postcode FROM Addresses WHERE city = \"Port Chelsea\"", "SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'"], "2b5dc7f8320128d41b2c4b2a": ["SELECT T3.treatment_type_description FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id JOIN professionals AS T3 ON T1.professional_id = T3.professional_id WHERE T3.state = 'Europe' GROUP BY T1.treatment_type_code ORDER BY count(*) DESC LIMIT 1", "SELECT T3.treatment_type_description FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id JOIN professionals AS T3 ON T1.professional_id = T3.professional_id WHERE T3.state = 'Europe' GROUP BY T1.treatment_type_code ORDER BY count(*) DESC LIMIT 1", "SELECT T3.treatment_type_description\nFROM treatments AS T1\nJOIN dogs AS T2 ON T1.dog_id = T2.dog_id\nJOIN professionals AS T3 ON T1.professional_id = T3.professional_id\nWHERE T3.state = 'Europe'\nGROUP BY T3.treatment_type_description\nORDER BY COUNT(*) DESC\nLIMIT 1", "SELECT T3.treatment_type_description FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id JOIN professionals AS T3 ON T1.professional_id = T3.professional_id WHERE T3.state = 'Europe' GROUP BY T1.treatment_type_code ORDER BY COUNT(*) DESC LIMIT 1", "SELECT T3.treatment_type_description FROM treatments AS T1 JOIN professionals AS T2 ON T1.professional_id = T2.professional_id JOIN dogs AS T3 ON T1.dog_id = T3.dog_id WHERE T2.state = 'Europe' GROUP BY T1.treatment_type_code ORDER BY count(*) DESC LIMIT 1"], "0c1d5619dc4a0c6350bb17a7": ["SELECT DISTINCT Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Written_by = 'Todd Casey'", "SELECT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'", "SELECT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'", "SELECT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'", "SELECT T2.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Written_by = 'Todd Casey'"], "c64e212d0e9c942534e1095b": ["SELECT DISTINCT contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number", "SELECT DISTINCT created FROM votes", "SELECT DISTINCT state FROM VOTES", "SELECT DISTINCT contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number", "SELECT DISTINCT created FROM VOTES"], "5250f2d00eb8c48f2830c10a": ["SELECT count(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia')", "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia')", "SELECT count(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia')", "SELECT count(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia')", "SELECT count(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia')"], "43904193302d47e992b86aa2": ["This question cannot be answered with the given tables.", "SELECT avg(grade) FROM Highschooler", "This question cannot be answered with the given tables as there is no salary information available.", "This question cannot be answered with the provided tables.", "This question cannot be answered with the provided tables as there is no salary information available."], "2213c48f8676218e880b0a59": ["SELECT C.contestant_name, C.contestant_number FROM CONTESTANTS C JOIN VOTES V ON C.contestant_number = V.contestant_number WHERE V.state = 'NY' GROUP BY C.contestant_name, C.contestant_number ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT T2.contestant_name ,  T2.contestant_number FROM votes AS T1 JOIN contestants AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.state = 'NY' GROUP BY T2.contestant_number ORDER BY count(*) DESC LIMIT 1\n\n", "SELECT C.contestant_name, C.contestant_number FROM CONTESTANTS C JOIN VOTES V ON C.contestant_number = V.contestant_number WHERE V.state = 'NY' GROUP BY C.contestant_name, C.contestant_number ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT T2.contestant_name, T2.contestant_nickname FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.state = 'NY' GROUP BY T1.contestant_number ORDER BY COUNT(*) DESC LIMIT 1\n\n", "SELECT T2.contestant_name ,  T2.contestant_nickname FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.state = 'NY' GROUP BY T1.contestant_number ORDER BY count(*) DESC LIMIT 1\n\n"], "011778457202e278facc2cab": ["SELECT name FROM singer ORDER BY birth_year ASC LIMIT 1", "SELECT T1.Name FROM singer AS T1 ORDER BY Birth_Year ASC LIMIT 1", "SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer)", "SELECT name FROM singer WHERE birth_year = (SELECT max(birth_year) FROM singer)", "SELECT name FROM singer WHERE birth_year = (SELECT max(birth_year) FROM singer)"], "3358c87e2c3c8deebafeb86a": ["SELECT Region ,  Population FROM country WHERE Name = 'Angola'\n\n", "SELECT Region, Population FROM country WHERE Name = 'Angola'", "SELECT Region, Population FROM country WHERE Name = 'Angola'", "SELECT Region, Population FROM country WHERE Name = 'Angola'", "SELECT Region, Population FROM country WHERE Name = 'Angola'"], "2a5a12e8b638ee57ecc6c845": ["SELECT count(*) FROM Courses", "SELECT count(*) FROM courses\n\n", "SELECT count(*) FROM Courses", "SELECT count(*) FROM Courses", "SELECT count(*) FROM Courses"], "382b8569ccbb8220fdd8c318": ["SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'", "SELECT avg(LifeExpectancy) FROM country WHERE Region = 'Central Africa'"], "5ee2246a67bd98f1a3835341": ["SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player", "SELECT avg(Earnings) FROM poker_player"], "335d3b2b12905003696d80a1": ["This question cannot be answered with the provided tables.", "SELECT state, contestant_number, count(*) as total_votes FROM VOTES GROUP BY state, contestant_number ORDER BY total_votes DESC", "This question cannot be answered with the provided tables.", "This question cannot be answered with the provided tables as there is no table that includes information about local events.", "SELECT state, contestant_number, count(*) \nFROM VOTES \nGROUP BY state, contestant_number"], "8f7270e72443b21ef4d2dab5": ["SELECT T1.dog_id, T2.breed_name FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code\n\n", "SELECT breed_name FROM breeds WHERE breed_code IN (SELECT breed_code FROM dogs)", "SELECT breed_name FROM breeds WHERE breed_code IN (SELECT breed_code FROM dogs)", "SELECT breed_name FROM breeds WHERE breed_code IN (SELECT breed_code FROM dogs)", "SELECT breed_name FROM Breeds WHERE breed_code IN (SELECT breed_code FROM Dogs)"], "a042ff3fc6efec393dbf302a": ["SELECT * FROM Students ORDER BY last_name DESC, first_name DESC", "SELECT * FROM Students ORDER BY last_name DESC, first_name DESC", "SELECT * FROM students ORDER BY last_name DESC, first_name DESC", "SELECT * FROM students ORDER BY last_name DESC, first_name DESC, middle_name DESC", "SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC"], "4136f104e624476dbaa9cf7b": ["SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4\n\n", "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4\n\n", "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4\n\n", "SELECT grade FROM highschooler GROUP BY grade HAVING count(*) >= 4\n\n", "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4\n\n"], "2707a0d9bbf73fcfdf4b9ab1": ["SELECT AVG(staff) FROM staff_locations", "SELECT AVG(staff_number) FROM states", "SELECT avg(contestant_number) FROM CONTESTANTS", "SELECT AVG(contestant_number) FROM CONTESTANTS", "SELECT AVG(contestant_number) FROM CONTESTANTS"], "ee4045a9c50f6872ce935628": ["SELECT continent, COUNT(DISTINCT language) AS language_count\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nGROUP BY continent\nORDER BY language_count DESC\nLIMIT 1", "SELECT continent, COUNT(DISTINCT language) AS num_languages\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nGROUP BY continent\nORDER BY num_languages DESC\nLIMIT 1", "SELECT continent, COUNT(DISTINCT language) AS num_languages FROM countrylanguage AS cl JOIN country AS c ON cl.CountryCode = c.Code GROUP BY continent ORDER BY num_languages DESC LIMIT 1\n\n", "SELECT continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1\n\n", "SELECT continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1"], "01657018a1aaf00a9f2b639e": ["SELECT T2.Orchestra, T2.Major_Record_Format FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID\n\n", "SELECT T1.Orchestra_ID, T2.Type FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID", "SELECT T2.Orchestra_ID ,  T2.Major_Record_Format FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID", "SELECT orchestra_id, major_record_format FROM orchestra\n\n", "SELECT T2.Orchestra, T2.Major_Record_Format FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra, T2.Major_Record_Format\n\n"], "6ed3cdbedd1fac5acea939ec": ["SELECT cell_mobile_number FROM students WHERE date_first_registered IS NULL\n\n", "SELECT cell_mobile_number FROM students WHERE date_first_registered IS NULL\n\n", "SELECT cell_mobile_number FROM students WHERE date_first_registered IS NULL\n\n", "SELECT cell_mobile_number FROM students WHERE date_first_registered IS NULL\n\n", "SELECT cell_mobile_number FROM Students WHERE date_first_registered IS NULL\n\n"], "a0a902abe4888ff325731ce5": ["SELECT section_name FROM sections ORDER BY section_name DESC\n\n", "SELECT section_name FROM sections ORDER BY section_name DESC\n\n", "SELECT section_name FROM sections ORDER BY section_name DESC\n\n", "SELECT section_name FROM Sections ORDER BY section_name DESC\n\n", "SELECT section_name FROM sections ORDER BY section_name DESC\n\n"], "e68dd2cbebbb17b49c3073d6": ["SELECT name FROM Highschooler WHERE grade = 10\n\n", "SELECT name FROM Highschooler WHERE grade = 10\n\n", "SELECT name FROM Highschooler WHERE grade = 10", "SELECT name FROM Highschooler WHERE grade = 10\n\n", "SELECT name FROM Highschooler WHERE grade = 10"], "b419b8a64676844972c5a9bb": ["This question cannot be answered directly with the given tables.", "This question cannot be directly translated into SQL as it is too broad and not related to the provided tables.", "This question cannot be answered using the given tables.", "This question cannot be answered based on the provided tables as there are no columns related to education or language diversity.", "This question cannot be answered directly with the given tables. Additional tables related to education and language diversity would be needed to answer this question."], "4d80a8fe52d74b3682d0c9e8": ["SELECT treatment_type_description FROM treatment_types ORDER BY duration DESC LIMIT 1", "SELECT treatment_type_description FROM treatment_types ORDER BY date_of_treatment DESC LIMIT 1\n\n", "SELECT treatment_type_description FROM treatment_types WHERE treatment_id = (SELECT treatment_id FROM treatments ORDER BY date_of_treatment DESC LIMIT 1)", "SELECT treatment_type_description, max(date_of_treatment) - min(date_of_treatment) AS duration FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY duration DESC LIMIT 1\n\n", "SELECT treatment_type_description FROM treatment_types ORDER BY date_of_treatment DESC LIMIT 1\n\n"], "30db6e3c9b3d7c213efe386c": ["There is no specific question related to the tables provided.", "SELECT * FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player)", "SELECT * FROM poker_player WHERE Final_Table_Made = 'Yes' AND Best_Finish = '1st'", "SELECT * FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Name = 'Poker Face'", "SELECT * FROM poker_player WHERE Best_Finish = \"Final Table Made\""], "4ed82a42ac12b8ae7e75fd14": ["SELECT hse_feature_1, hse_feature_2, hse_feature_3 FROM Properties WHERE property_type_code = 'HSE' AND hse_feature_1 IS NOT NULL AND hse_feature_2 IS NOT NULL AND hse_feature_3 IS NOT NULL", "SELECT hse_feature_1, hse_feature_2, hse_feature_3 FROM Properties WHERE property_type_code = 'HSE'", "SELECT hse_feature_1, hse_feature_2, hse_feature_3 FROM Properties WHERE property_type_code = 'hse'", "SELECT hse_feature_1, hse_feature_2, hse_feature_3 FROM Properties WHERE property_type_code = 'HSE'", "SELECT hse_feature_1,hse_feature_2,hse_feature_3 FROM Properties WHERE property_type_code = \"hse\""], "522d50d6d63b22ec42b16b1b": ["SELECT liked_id FROM Likes\n\n", "SELECT liked_id FROM Likes\n\n", "SELECT * FROM Likes\n\n", "SELECT liked_id FROM likes", "SELECT * FROM Likes\n\n"], "56c506df7e8f0749cc5d7ca1": ["SELECT Directed_by ,  Written_by ,  Original_air_date FROM Cartoon WHERE Directed_by LIKE '%music%' OR Written_by LIKE '%music%'", "SELECT T1.Title, T2.Content FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Content = 'Music'", "SELECT Title, Directed_by, Written_by, Channel FROM Cartoon WHERE Title LIKE '%music%' OR Directed_by LIKE '%music%' OR Written_by LIKE '%music%'", "SELECT Title, Directed_by, Written_by FROM Cartoon WHERE Written_by = 'Music' OR Directed_by = 'Music'", "This question cannot be answered directly from the provided tables as there is no column related to music in the Cartoon table."], "020f3e2c842235fd914928ed": ["SELECT c.Name, (c.Population - cl.Population) AS Population_Difference\nFROM country AS c\nJOIN countrylanguage AS cl ON c.Code = cl.CountryCode\nWHERE cl.IsOfficial = 'T'", "This question cannot be answered with the provided tables.", "SELECT c.Name, c.Population, c.GNP, c.GNPOld, (c.GNP - c.GNPOld) AS Economic_Effect FROM country AS c", "This question cannot be answered with the provided tables as they do not contain information on economic strategies.", "This question cannot be answered directly with the given tables. More information on economic strategies and their impact on population would be needed in order to write a query to analyze this."], "3e3c059b4c9f36d440bad709": ["SELECT T1.Age ,  T1.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID ORDER BY T1.Year_of_Work - T2.Year_of_Founded", "SELECT T1.Name ,  T2.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID ORDER BY T2.Year_of_Founded - T1.Year_of_Work DESC\n\n", "SELECT T1.Name ,  T2.Year_of_Work FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID ORDER BY T2.Year_of_Founded - T1.Year_of_Work", "SELECT T1.Name ,  T2.Year_of_Work FROM conductor AS T1 JOIN performance AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID ORDER BY T2.Date", "SELECT T1.Conductor_ID ,  T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID, T1.Name\n\n"], "b7a3ed5dbf85f007ac3f539b": ["SELECT T1.breed_name, T2.temperament FROM Breeds AS T1 JOIN Temperaments AS T2 ON T1.breed_code = T2.breed_code", "SELECT T1.breed_name, T2.temperament FROM Breeds AS T1 JOIN Temperaments AS T2 ON T1.breed_code = T2.breed_code", "SELECT T1.breed_name, T2.temperament FROM Breeds AS T1 JOIN Temperaments AS T2 ON T1.breed_code = T2.breed_code", "SELECT T1.breed_name, T2.temperament FROM Breeds AS T1 JOIN Temperaments AS T2 ON T1.breed_code = T2.breed_code", "SELECT T1.breed_name, T2.temperament FROM Breeds AS T1 JOIN Temperaments AS T2 ON T1.breed_code = T2.breed_code"], "884ff6caa49b872713582ca8": ["This question cannot be answered with the given tables.", "SELECT * FROM singer WHERE Name = 'Ella Fitzgerald'", "SELECT * FROM singer WHERE Name = 'Ella Fitzgerald'", "This question cannot be answered with the given tables.", "SELECT * FROM singer WHERE Name = 'Ella Fitzgerald'"], "b18a2618f641427f71f19f6a": ["SELECT state, contestant_number, count(vote_id) as total_votes\nFROM VOTES\nGROUP BY state, contestant_number\nORDER BY total_votes DESC", "SELECT state, contestant_number, count(*) as vote_count\nFROM VOTES\nGROUP BY state, contestant_number\nORDER BY state, vote_count DESC", "SELECT state, contestant_number, count(*) as votes_count FROM VOTES GROUP BY state, contestant_number ORDER BY votes_count DESC", "SELECT state, contestant_name, count(*) as total_votes\nFROM VOTES v\nJOIN CONTESTANTS c ON v.contestant_number = c.contestant_number\nJOIN AREA_CODE_STATE a ON v.state = a.state\nGROUP BY state, contestant_name", "SELECT state, contestant_number, count(*) as votes_received\nFROM VOTES\nGROUP BY state, contestant_number\nORDER BY votes_received DESC"], "41a5fc7dcb51b55a6f7f011e": ["SELECT count(*) FROM students WHERE current_address_id = permanent_address_id", "SELECT count(*) FROM students WHERE current_address_id = permanent_address_id", "SELECT count(*) FROM students WHERE current_address_id = permanent_address_id", "SELECT count(*) FROM students WHERE current_address_id = permanent_address_id", "SELECT count(*) FROM students WHERE current_address_id = permanent_address_id"], "8d98a23bbb004adeb89f006d": ["SELECT name FROM people WHERE people_id IN (SELECT people_id FROM poker_player ORDER BY earnings DESC)", "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Money_Rank ASC", "SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE money_rank = 1", "SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Money_Rank = 1", "SELECT T1.Name FROM poker_player AS T2 JOIN people AS T1 ON T2.People_ID = T1.People_ID ORDER BY T2.Earnings DESC"], "0b8ebb70a6229f8ed48b646f": ["This question cannot be answered with the given tables as there is no data related to interest rates or their impact on home prices.", "This question cannot be answered with the given tables.", "This question cannot be answered directly with the given tables. It would require additional data on interest rates and their impact on home prices.", "This question cannot be answered directly with the given tables. Additional information such as interest rates and historical home prices would be needed to analyze the impact of interest rates on home prices.", "This question cannot be answered directly with the given tables. Additional data related to interest rates and home prices would be needed in order to analyze the impact of interest rates on home prices."], "ad60ef79ece5559ef3b68731": ["SELECT T1.name ,  \"Peer pressure\" FROM highschooler AS T1 JOIN friend AS T2 ON T1.ID = T2.student_id JOIN friend AS T3 ON T1.ID = T3.friend_id WHERE T2.friend_id = T3.student_id", "SELECT COUNT(DISTINCT L1.student_id) / COUNT(DISTINCT L2.student_id) * 100 AS Peer_Pressure_Percentage\nFROM Likes L1\nJOIN Likes L2 ON L1.liked_id = L2.student_id\nWHERE L1.student_id <> L2.student_id", "There is no specific question in the data provided to directly answer this question.", "SELECT DISTINCT T1.name ,  T2.grade FROM highschooler AS T1 JOIN friend AS T2 ON T1.ID = T2.student_id JOIN likes AS T3 ON T1.ID = T3.student_id WHERE T2.friend_id = T3.liked_id", "SELECT T1.name ,  T3.grade ,  T2.name ,  T4.grade FROM friend AS T5 JOIN highschooler AS T1 ON T5.student_id  =  T1.ID JOIN highschooler AS T2 ON T5.friend_id  =  T2.ID JOIN likes AS T6 ON T1.ID  =  T6.student_id JOIN likes AS T7 ON T2.ID  =  T7.student_id JOIN highschooler AS T3 ON T6.liked_id  =  T3.ID JOIN highschooler AS T4 ON T7.liked_id  =  T4.ID WHERE T3.grade  =  T4.grade - 1 OR T3.grade  =  T4.grade + 1"], "1cd57cdb9dbef4c85bbe7273": ["SELECT Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by, Cartoon.Original_air_date, Cartoon.Channel, TV_Channel.Language FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.Content = 'Animated series' AND TV_Channel.Language <> 'English'", "SELECT Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by, Cartoon.Original_air_date, Cartoon.Production_code, TV_Channel.Language \nFROM Cartoon \nJOIN TV_Channel ON Cartoon.Channel = TV_Channel.id \nWHERE TV_Channel.Language <> 'Original'\n\n", "SELECT Cartoon.Title, TV_Channel.Language FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = \"Directed by\"", "SELECT T1.Title, T1.Language, T2.series_name, T2.Language FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Language != T2.Language\n\n", "SELECT Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by, Cartoon.Original_air_date, Cartoon.Production_code, TV_Channel.Language\nFROM Cartoon\nJOIN TV_Channel ON Cartoon.Channel = TV_Channel.id\nWHERE TV_Channel.Language != 'English'"], "59d10538dbadb8467fc6e532": ["SELECT Region, SUM(Population) FROM country GROUP BY Region", "SELECT Region, SUM(Population) AS Total_Population, AVG(LifeExpectancy) AS Average_Life_Expectancy\nFROM country\nGROUP BY Region", "SELECT region, SUM(population) FROM country GROUP BY region", "SELECT Region, sum(Population) FROM country GROUP BY Region", "SELECT c1.Name AS Country, c1.Region AS Region, c2.Name AS Neighbor_Country, c2.Region AS Neighbor_Region\nFROM country AS c1\nJOIN country AS c2 ON c1.Region = c2.Region AND c1.Code <> c2.Code"], "0eb92ba628ed8905bc16b629": ["This question cannot be directly translated into SQL as it requires a subjective analysis of the relationship between culture and music.", "This question cannot be answered directly with the given tables. Additional tables or data related to culture and music would be needed to answer this question.", "This question cannot be answered directly using the provided tables.", "This question cannot be answered directly with the given tables.", "This question cannot be directly answered using the provided tables."], "4a3d69a36a8c73a00ea139f7": ["SELECT treatment_type_description FROM treatment_types ORDER BY date_of_treatment DESC LIMIT 5", "This question cannot be answered with the given tables as they do not contain information about recent advancements in veterinary medicine.", "SELECT treatment_type_description FROM treatment_types", "This question cannot be answered using the provided tables.", "This question cannot be answered using the provided tables."], "144498c7fa70758ff448699b": ["There is no direct SQL query to answer this question as the tables provided do not contain information about Frank Sinatra's contributions to jazz.", "SELECT * FROM singer WHERE Name = 'Frank Sinatra' AND Citizenship = 'USA'", "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Frank Sinatra')", "SELECT Title FROM song WHERE Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = \"Frank Sinatra\")", "SELECT * FROM singer WHERE Name = 'Frank Sinatra' AND Citizenship = 'USA'"], "d80e4cc9ed73cd2a4d5b9e43": ["SELECT count(*) FROM VOTES\n\n", "SELECT count(*) FROM VOTES\n\n", "SELECT count(*) FROM VOTES\n\n", "SELECT count(*) FROM VOTES\n\n", "SELECT count(*) FROM VOTES\n\n"], "6caa438c7473939874084786": ["This question cannot be answered with the given tables.", "SELECT T2.course_name \nFROM degree_programs AS T1 \nJOIN courses AS T2 ON T1.degree_summary_name = \"Sports Teams\" \nJOIN sections AS T3 ON T2.course_id = T3.course_id", "This question cannot be answered with the given tables.", "SELECT T2.course_name \nFROM degree_programs AS T1 \nJOIN courses AS T2 ON T1.degree_summary_name = T2.course_name \nWHERE T1.degree_summary_description LIKE '%sports%'", "This question cannot be answered with the given tables."], "b28795b8b018126e972b6ec1": ["SELECT max(DATEDIFF(end_date, start_date)) FROM poker_game", "SELECT max(Best_Finish) FROM poker_player", "SELECT max(Height) FROM people", "SELECT max(Money_Rank) FROM poker_player", "SELECT max(Best_Finish) FROM poker_player"], "968acd61988fecf20834a95b": ["SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = 'financing' AND feature_description LIKE '%first-time homebuyers%'", "SELECT feature_name FROM Other_Available_Features WHERE feature_type_code = 'financing' AND feature_description = 'first-time homebuyers'", "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'financing' AND feature_name = 'first-time homebuyers'", "SELECT feature_name, feature_description FROM Other_Available_Features WHERE feature_type_code = 'financing' AND feature_description = 'first-time homebuyers'", "SELECT feature_name FROM other_available_features WHERE feature_type_code = 'financing_option' AND feature_description = 'first-time homebuyers'"], "5ed8c9be25f97f0544df5531": ["SELECT DISTINCT T1.name ,  T2.name FROM friend AS T1 JOIN friend AS T2 ON T1.student_id  =  T2.friend_id AND T1.friend_id  =  T2.student_id\n\n", "SELECT T1.ID ,  T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.ID = T2.student_id JOIN friend AS T3 ON T1.ID = T3.friend_id WHERE T2.friend_id = T1.ID AND T3.student_id = T1.ID\n\n", "SELECT T1.name AS student_name, T2.name AS friend_name \nFROM Highschooler AS T1 \nJOIN Friend ON T1.ID = Friend.student_id \nJOIN Highschooler AS T2 ON Friend.friend_id = T2.ID \nWHERE T1.grade = T2.grade\n\n", "SELECT T1.name ,  T2.name FROM friend AS T1 JOIN friend AS T2 ON T1.friend_id  =  T2.student_id AND T1.student_id  =  T2.friend_id\n\n", "SELECT T1.name ,  T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.ID JOIN Highschooler AS T3 ON T1.friend_id  =  T3.ID WHERE T1.student_id  =  T3.friend_id AND T1.friend_id  =  T2.friend_id\n\n"], "f9dae39e1fe8557f43ce114d": ["Not enough information provided in the tables to answer this question.", "SELECT Cartoon.Title, Cartoon.Channel, TV_Channel.Content FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.Content = 'animated series'", "SELECT T2.series_name ,  T2.Content FROM cartoon AS T1 JOIN tv_channel AS T2 ON T1.channel  =  T2.id WHERE T2.Content  =  \"animated series\" \n\n", "SELECT Content FROM TV_Channel WHERE series_name = \"animated series\"", "SELECT T1.series_name ,  T2.Content FROM TV_channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Content  =  'animated' \n\n"], "fc330f8ee8ef0726d421b87b": ["SELECT GovernmentForm, AVG(LifeExpectancy) FROM country GROUP BY GovernmentForm", "SELECT governmentform, AVG(lifeexpectancy) FROM country GROUP BY governmentform", "SELECT GovernmentForm, AVG(LifeExpectancy) FROM country GROUP BY GovernmentForm", "SELECT governmentform, AVG(lifeexpectancy) FROM country GROUP BY governmentform", "SELECT governmentform, AVG(lifeexpectancy) AS avg_life_expectancy FROM country GROUP BY governmentform"], "78ef374e00e504f0019949f0": ["This question cannot be answered directly with the given tables. The tables provided do not contain specific qualities or criteria for defining a great conductor.", "This question requires a more subjective answer and cannot be directly translated into SQL as it involves personal opinions and interpretations of what makes a great conductor.", "SELECT Name ,  Age ,  Nationality ,  Year_of_Work FROM conductor WHERE Year_of_Work  >  10\n\n", "SELECT Name, Age, Nationality, Year_of_Work FROM conductor WHERE Year_of_Work > 10", "This question cannot be answered directly with the given tables. The tables provided do not contain specific attributes or qualities that define a great conductor."], "b12e1fab675391c545f93ef3": ["This question cannot be answered with the given tables.", "This question cannot be answered with the given tables.", "This question cannot be directly answered with the given tables as they do not contain information about social networks or their impact on voting.", "This question cannot be answered with the provided tables.", "This question cannot be answered with the provided tables as there is no information about social networks in the tables."]}